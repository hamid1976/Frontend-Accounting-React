{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Logic-Unit\\\\my-account\\\\src\\\\modals\\\\InvoiceDetailModal.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { XCircle, CheckCircle, FileText, Download } from 'lucide-react';\n// import { formatCurrency, formatDate } from '../components/AccountsReceivable/AccountsReceivableUtils/formatters';\n// const RecordPaymentModal = React.lazy(() =>\n//   import('../components/AccountsReceivable/RecordPaymentModal')\n// );\n\n// const InvoiceDetailModal = ({ invoice, onClose, getCustomerName }) => {\n//   const [isPaymentModalOpen, setPaymentModalOpen] = useState(false);\n\n//   return (\n//     <>\n//       <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//         <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n//           <div className=\"px-6 py-4 border-b border-gray-200\">\n//             <div className=\"flex items-center justify-between\">\n//               <h3 className=\"text-lg font-semibold text-gray-900\">\n//                 Order Details - #{invoice.orderId}\n//               </h3>\n//               <button\n//                 onClick={onClose}\n//                 className=\"text-gray-400 hover:text-gray-600\"\n//               >\n//                 <XCircle size={20} />\n//               </button>\n//             </div>\n//           </div>\n\n//           <div className=\"px-6 py-4\">\n//             {/* Order Info */}\n//             <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n//               <div className=\"space-y-4\">\n//                 <div>\n//                   <label className=\"text-sm font-medium text-gray-500\">Order ID</label>\n//                   <p className=\"text-sm text-gray-900\">{invoice.orderId}</p>\n//                 </div>\n//                 <div>\n//                   <label className=\"text-sm font-medium text-gray-500\">Customer</label>\n//                   <p className=\"text-sm text-gray-900\">{getCustomerName(invoice.customerId)}</p>\n//                 </div>\n//                 <div>\n//                   <label className=\"text-sm font-medium text-gray-500\">Created Date</label>\n//                   <p className=\"text-sm text-gray-900\">{formatDate(invoice.createdAt)}</p>\n//                 </div>\n//                 <div>\n//                   <label className=\"text-sm font-medium text-gray-500\">Status</label>\n//                   <p className=\"text-sm text-gray-900\">{invoice.status}</p>\n//                 </div>\n//               </div>\n\n//               <div className=\"space-y-4\">\n//                 <div>\n//                   <label className=\"text-sm font-medium text-gray-500\">Payment Status</label>\n//                   <div>\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                       invoice.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n//                     }`}>\n//                       {invoice.paid ? 'Paid' : 'Unpaid'}\n//                     </span>\n//                   </div>\n//                 </div>\n//                 <div>\n//                   <label className=\"text-sm font-medium text-gray-500\">Fulfillment Status</label>\n//                   <div>\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                       invoice.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n//                     }`}>\n//                       {invoice.fulfilled ? 'Fulfilled' : 'Pending'}\n//                     </span>\n//                   </div>\n//                 </div>\n//                 <div>\n//                   <label className=\"text-sm font-medium text-gray-500\">Total Amount</label>\n//                   <p className=\"text-lg font-bold text-gray-900\">{formatCurrency(invoice.total)}</p>\n//                 </div>\n//                 <div>\n//                   <label className=\"text-sm font-medium text-gray-500\">Payable Amount</label>\n//                   <p className=\"text-sm text-gray-900\">{formatCurrency(invoice.payableAmount)}</p>\n//                 </div>\n//               </div>\n//             </div>\n\n//             {/* Line Items */}\n//             <div className=\"mb-6\">\n//               <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Order Items</h4>\n//               <div className=\"overflow-x-auto\">\n//                 <table className=\"w-full border border-gray-200 rounded\">\n//                   <thead className=\"bg-gray-50\">\n//                     <tr>\n//                       <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Product</th>\n//                       <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Quantity</th>\n//                       <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Unit Price</th>\n//                       <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Total</th>\n//                       <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Status</th>\n//                     </tr>\n//                   </thead>\n//                   <tbody className=\"divide-y divide-gray-200\">\n//                     {invoice.lineItems.map((item, index) => (\n//                       <tr key={index}>\n//                         <td className=\"px-4 py-2 text-sm text-gray-900\">{item.productName}</td>\n//                         <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{item.quantity}</td>\n//                         <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{formatCurrency(item.price)}</td>\n//                         <td className=\"px-4 py-2 text-sm font-medium text-gray-900 text-right\">{formatCurrency(item.total)}</td>\n//                         <td className=\"px-4 py-2\">\n//                           <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                             item.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n//                           }`}>\n//                             {item.status}\n//                           </span>\n//                         </td>\n//                       </tr>\n//                     ))}\n//                   </tbody>\n//                 </table>\n//               </div>\n//             </div>\n\n//             {/* Totals */}\n//             <div className=\"bg-gray-50 p-4 rounded-lg\">\n//               <div className=\"space-y-2\">\n//                 <div className=\"flex justify-between\">\n//                   <span className=\"text-sm text-gray-600\">Subtotal:</span>\n//                   <span className=\"text-sm text-gray-900\">{formatCurrency(invoice.subTotal)}</span>\n//                 </div>\n//                 <div className=\"flex justify-between\">\n//                   <span className=\"text-sm text-gray-600\">Tax ({invoice.taxRate}%):</span>\n//                   <span className=\"text-sm text-gray-900\">{formatCurrency(invoice.taxAmount)}</span>\n//                 </div>\n//                 {invoice.discountAmount > 0 && (\n//                   <div className=\"flex justify-between\">\n//                     <span className=\"text-sm text-gray-600\">Discount:</span>\n//                     <span className=\"text-sm text-red-600\">-{formatCurrency(invoice.discountAmount)}</span>\n//                   </div>\n//                 )}\n//                 <div className=\"flex justify-between font-bold text-lg border-t pt-2\">\n//                   <span>Total:</span>\n//                   <span>{formatCurrency(invoice.total)}</span>\n//                 </div>\n//               </div>\n//             </div>\n\n//             {/* Action Buttons */}\n//             <div className=\"flex space-x-3 mt-6\">\n//               <button\n//                 className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\"\n//                 onClick={() => setPaymentModalOpen(true)}\n//               >\n//                 <CheckCircle size={16} />\n//                 <span>Record Payment</span>\n//               </button>\n\n//               {!invoice.paid && (\n//                 <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\n//                   <CheckCircle size={16} />\n//                   <span>Mark as Paid</span>\n//                 </button>\n//               )}\n//               {!invoice.fulfilled && (\n//                 <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\n//                   <FileText size={16} />\n//                   <span>Mark as Fulfilled</span>\n//                 </button>\n//               )}\n//               <button className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\">\n//                 <Download size={16} />\n//                 <span>Download Invoice</span>\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//    {isPaymentModalOpen && (\n//   <React.Suspense fallback={<div>Loading Payment Modal...</div>}>\n//     <RecordPaymentModal\n//       invoiceId={invoice.orderId}\n//       amount={invoice.total}\n//       onClose={() => setPaymentModalOpen(false)}\n//       onSubmit={(date, enteredAmount, method, account, memo, paymentData, isFullPayment) => {\n//         console.log('Payment Submitted:', { \n//           date, \n//           enteredAmount, \n//           method, \n//           account, \n//           memo, \n//           paymentData, \n//           isFullPayment \n//         });\n\n//         if (isFullPayment) {\n//           // Update the local state to reflect the paid status\n//           // This will trigger a re-render with the updated status\n//           invoice.paid = true;\n//           invoice.paymentStatus = 'paid';\n//         }\n\n//         setPaymentModalOpen(false);\n\n//         // You might want to refresh the data or show a success message\n//        // message.success(isFullPayment ? 'Invoice marked as paid!' : 'Partial payment recorded!');\n//       }}\n//     />\n//   </React.Suspense>\n// )}\n\n//     </>\n//   );\n// };\n\n// export default InvoiceDetailModal;\n\nimport React, { useState, useEffect } from 'react';\nimport { XCircle, CheckCircle, FileText, Download, Clock, Calendar, DollarSign } from 'lucide-react';\nimport { formatCurrency, formatDate } from '../components/AccountsReceivable/AccountsReceivableUtils/formatters';\nimport RecordPaymentModal from '../components/AccountsReceivable/RecordPaymentModal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst InvoiceDetailModal = ({\n  invoice,\n  onClose,\n  getCustomerName,\n  onRefresh\n}) => {\n  _s();\n  const [isPaymentModalOpen, setPaymentModalOpen] = useState(false);\n  const [localInvoice, setLocalInvoice] = useState(invoice);\n  const [paymentHistory, setPaymentHistory] = useState([]);\n\n  // Load payment history when invoice changes\n  useEffect(() => {\n    if (invoice) {\n      setLocalInvoice(invoice);\n      loadPaymentHistory();\n    }\n  }, [invoice]);\n  const loadPaymentHistory = () => {\n    const storedPayments = JSON.parse(localStorage.getItem('payments') || '[]');\n    const invoicePayments = storedPayments.filter(payment => payment.invoiceId === invoice.orderId || payment.orderId === invoice.orderId);\n    setPaymentHistory(invoicePayments);\n  };\n\n  // const handlePaymentComplete = (paymentData, isFullPayment) => {\n  //   // Update local invoice state to reflect the payment\n  //   if (isFullPayment) {\n  //     setLocalInvoice(prev => ({\n  //       ...prev,\n  //       paid: true,\n  //       paymentStatus: 'paid',\n  //       remainingAmount: 0\n  //     }));\n  //   } else {\n  //     setLocalInvoice(prev => ({\n  //       ...prev,\n  //       paid: false,\n  //       paymentStatus: 'partial',\n  //       remainingAmount: paymentData.remainingAmount\n  //     }));\n  //   }\n\n  //   // Reload payment history\n  //   loadPaymentHistory();\n\n  //   // Trigger parent refresh if available\n  //   if (onRefresh) {\n  //     onRefresh();\n  //   }\n\n  //   setPaymentModalOpen(false);\n  // };\n\n  const handlePaymentComplete = (paymentData, isFullPayment) => {\n    const updatedInvoice = {\n      ...localInvoice\n    };\n    if (isFullPayment || paymentData.amount >= localInvoice.remainingAmount) {\n      updatedInvoice.paid = true;\n      updatedInvoice.paymentStatus = 'paid';\n      updatedInvoice.remainingAmount = 0;\n    } else {\n      updatedInvoice.paid = false;\n      updatedInvoice.paymentStatus = 'partial';\n      updatedInvoice.remainingAmount = paymentData.remainingAmount;\n    }\n\n    // Save to localStorage (simulate API update)\n    const existingOrders = JSON.parse(localStorage.getItem('orders') || '[]');\n    const orderIndex = existingOrders.findIndex(o => o.orderId === updatedInvoice.orderId);\n    if (orderIndex !== -1) {\n      existingOrders[orderIndex] = updatedInvoice;\n      localStorage.setItem('orders', JSON.stringify(existingOrders));\n    }\n    setLocalInvoice(updatedInvoice);\n    if (onRefresh) {\n      onRefresh(); // 🔥 tell parent to reload sales\n    }\n    setPaymentModalOpen(false);\n  };\n\n  //GOOD\n\n  //     const handlePaymentComplete = (paymentData, isFullPayment) => {\n  //   if (isFullPayment || paymentData.amount >= localInvoice.remainingAmount) {\n  //     // Full payment case\n  //     const updatedInvoice = {\n  //       ...localInvoice,\n  //       paid: true,\n  //       paymentStatus: 'paid',\n  //       remainingAmount: 0,\n  //       paymentDate: new Date().toISOString(),\n  //     };\n\n  //     // Update in localStorage\n  //     const existingOrders = JSON.parse(localStorage.getItem('orders') || '[]');\n  //     const orderIndex = existingOrders.findIndex(\n  //       (order) => order.orderId === updatedInvoice.orderId || order.id === updatedInvoice.orderId\n  //     );\n  //     if (orderIndex !== -1) {\n  //       existingOrders[orderIndex] = updatedInvoice;\n  //       localStorage.setItem('orders', JSON.stringify(existingOrders));\n  //     }\n\n  //     setLocalInvoice(updatedInvoice);\n  //   } else {\n  //     // Partial payment\n  //     const updatedInvoice = {\n  //       ...localInvoice,\n  //       paid: false,\n  //       paymentStatus: 'partial',\n  //       remainingAmount: paymentData.remainingAmount,\n  //     };\n\n  //     // Update in localStorage\n  //     const existingOrders = JSON.parse(localStorage.getItem('orders') || '[]');\n  //     const orderIndex = existingOrders.findIndex(\n  //       (order) => order.orderId === updatedInvoice.orderId || order.id === updatedInvoice.orderId\n  //     );\n  //     if (orderIndex !== -1) {\n  //       existingOrders[orderIndex] = updatedInvoice;\n  //       localStorage.setItem('orders', JSON.stringify(existingOrders));\n  //     }\n\n  //     setLocalInvoice(updatedInvoice);\n  //   }\n\n  //   loadPaymentHistory();\n\n  //   if (onRefresh) {\n  //     onRefresh();\n  //   }\n\n  //   setPaymentModalOpen(false);\n  // };\n\n  // const handleMarkAsPaid = async () => {\n  //   try {\n  //     // Update order status in localStorage\n  //     const existingOrders = JSON.parse(localStorage.getItem('orders') || '[]');\n  //     const orderIndex = existingOrders.findIndex(order => \n  //       order.orderId === localInvoice.orderId || order.id === localInvoice.orderId\n  //     );\n\n  //     if (orderIndex !== -1) {\n  //       existingOrders[orderIndex] = {\n  //         ...existingOrders[orderIndex],\n  //         paid: true,\n  //         paymentStatus: 'paid',\n  //         paymentDate: new Date().toISOString().split('T')[0],\n  //         remainingAmount: 0\n  //       };\n\n  //       localStorage.setItem('orders', JSON.stringify(existingOrders));\n  //     }\n\n  //     // Update local state\n  //     setLocalInvoice(prev => ({\n  //       ...prev,\n  //       paid: true,\n  //       paymentStatus: 'paid'\n  //     }));\n\n  //     // Trigger refresh\n  //     if (onRefresh) {\n  //       onRefresh();\n  //     }\n  //   } catch (error) {\n  //     console.error('Error marking as paid:', error);\n  //   }\n  // };\n\n  const handleMarkAsPaid = async () => {\n    try {\n      const existingOrders = JSON.parse(localStorage.getItem('orders') || '[]');\n      const orderIndex = existingOrders.findIndex(order => order.orderId === localInvoice.orderId || order.id === localInvoice.orderId);\n      if (orderIndex !== -1) {\n        existingOrders[orderIndex] = {\n          ...existingOrders[orderIndex],\n          paid: true,\n          // ✅ API-style flag\n          paymentStatus: 'paid',\n          // ✅ UI-friendly flag\n          paymentDate: new Date().toISOString().split('T')[0],\n          remainingAmount: 0\n        };\n        localStorage.setItem('orders', JSON.stringify(existingOrders));\n      }\n\n      // Update local state\n      setLocalInvoice(prev => ({\n        ...prev,\n        paid: true,\n        paymentStatus: 'paid',\n        remainingAmount: 0\n      }));\n      if (onRefresh) {\n        onRefresh();\n      }\n    } catch (error) {\n      console.error('Error marking as paid:', error);\n    }\n  };\n  const handleMarkAsFulfilled = async () => {\n    try {\n      // Update order status in localStorage\n      const existingOrders = JSON.parse(localStorage.getItem('orders') || '[]');\n      const orderIndex = existingOrders.findIndex(order => order.orderId === localInvoice.orderId || order.id === localInvoice.orderId);\n      if (orderIndex !== -1) {\n        existingOrders[orderIndex] = {\n          ...existingOrders[orderIndex],\n          fulfilled: true,\n          fulfillmentDate: new Date().toISOString()\n        };\n        localStorage.setItem('orders', JSON.stringify(existingOrders));\n      }\n\n      // Update local state\n      setLocalInvoice(prev => ({\n        ...prev,\n        fulfilled: true\n      }));\n\n      // Trigger refresh\n      if (onRefresh) {\n        onRefresh();\n      }\n    } catch (error) {\n      console.error('Error marking as fulfilled:', error);\n    }\n  };\n  const getStatusBadge = invoice => {\n    let statusClass = '';\n    let statusText = '';\n    if (invoice.paid) {\n      statusClass = 'bg-green-100 text-green-800';\n      statusText = 'Paid';\n    } else if (invoice.paymentStatus === 'partial') {\n      statusClass = 'bg-orange-100 text-orange-800';\n      statusText = 'Partial Payment';\n    } else {\n      statusClass = 'bg-red-100 text-red-800';\n      statusText = 'Unpaid';\n    }\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `px-2 py-1 text-xs font-medium rounded-full ${statusClass}`,\n      children: statusText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 7\n    }, this);\n  };\n  const getFulfillmentBadge = invoice => {\n    if (invoice.fulfilled) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"px-2 py-1 text-xs font-medium rounded-full bg-blue-100 text-blue-800\",\n        children: \"Fulfilled\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"px-2 py-1 text-xs font-medium rounded-full bg-yellow-100 text-yellow-800\",\n        children: \"Pending Fulfillment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-6 py-4 border-b border-gray-200\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold text-gray-900\",\n              children: [\"Order Details - #\", localInvoice.orderId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: onClose,\n              className: \"text-gray-400 hover:text-gray-600\",\n              children: /*#__PURE__*/_jsxDEV(XCircle, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-6 py-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-sm font-medium text-gray-500\",\n                  children: \"Order ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 520,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-900\",\n                  children: localInvoice.orderId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 521,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-sm font-medium text-gray-500\",\n                  children: \"Customer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 524,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-900\",\n                  children: getCustomerName(localInvoice.customerId)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 525,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-sm font-medium text-gray-500\",\n                  children: \"Created Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 528,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-900\",\n                  children: formatDate(localInvoice.createdAt)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-sm font-medium text-gray-500\",\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 532,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-900\",\n                  children: localInvoice.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 533,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-sm font-medium text-gray-500\",\n                  children: \"Payment Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 539,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center gap-2 mt-1\",\n                  children: [getStatusBadge(localInvoice), localInvoice.paymentStatus === 'partial' && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-xs text-gray-500\",\n                    children: [\"(\", formatCurrency(localInvoice.remainingAmount || 0), \" remaining)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 543,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 540,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-sm font-medium text-gray-500\",\n                  children: \"Fulfillment Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 550,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-1\",\n                  children: getFulfillmentBadge(localInvoice)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 551,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-sm font-medium text-gray-500\",\n                  children: \"Total Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 556,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm font-medium text-gray-900\",\n                  children: formatCurrency(localInvoice.total)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 557,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-sm font-medium text-gray-500\",\n                  children: \"Last Updated\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 560,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-900\",\n                  children: formatDate(localInvoice.updatedAt || localInvoice.createdAt)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 561,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-md font-medium text-gray-900 mb-3\",\n              children: \"Order Items\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border border-gray-200 rounded-lg overflow-hidden\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"w-full border border-gray-200 rounded\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  className: \"bg-gray-50\",\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-4 py-2 text-left text-xs font-medium text-gray-500\",\n                      children: \"Product\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 573,\n                      columnNumber: 24\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-4 py-2 text-right text-xs font-medium text-gray-500\",\n                      children: \"Quantity\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 574,\n                      columnNumber: 24\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-4 py-2 text-right text-xs font-medium text-gray-500\",\n                      children: \"Unit Price\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 575,\n                      columnNumber: 24\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-4 py-2 text-right text-xs font-medium text-gray-500\",\n                      children: \"Total\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 576,\n                      columnNumber: 24\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-4 py-2 text-left text-xs font-medium text-gray-500\",\n                      children: \"Status\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 577,\n                      columnNumber: 24\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 572,\n                    columnNumber: 22\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 571,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  className: \"divide-y divide-gray-200\",\n                  children: invoice.lineItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 text-sm text-gray-900\",\n                      children: item.productName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 583,\n                      columnNumber: 26\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 text-sm text-gray-900 text-right\",\n                      children: item.quantity\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 584,\n                      columnNumber: 26\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 text-sm text-gray-900 text-right\",\n                      children: formatCurrency(item.price)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 585,\n                      columnNumber: 26\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 text-sm font-medium text-gray-900 text-right\",\n                      children: formatCurrency(item.total)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 586,\n                      columnNumber: 26\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: `px-2 py-1 text-xs font-medium rounded-full ${item.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'}`,\n                        children: item.status\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 588,\n                        columnNumber: 28\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 587,\n                      columnNumber: 26\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 582,\n                    columnNumber: 24\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 580,\n                  columnNumber: 20\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 18\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 13\n          }, this), paymentHistory.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-md font-medium text-gray-900 mb-3\",\n              children: \"Payment History\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border border-gray-200 rounded-lg overflow-hidden\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"min-w-full divide-y divide-gray-200\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  className: \"bg-gray-50\",\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\",\n                      children: \"Date\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 609,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\",\n                      children: \"Amount\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 610,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\",\n                      children: \"Method\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 611,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\",\n                      children: \"Memo\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 612,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 608,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 607,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  className: \"bg-white divide-y divide-gray-200\",\n                  children: paymentHistory.map((payment, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-3 text-sm text-gray-900\",\n                      children: formatDate(payment.date)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 618,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-3 text-sm text-gray-900\",\n                      children: formatCurrency(payment.amount)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 619,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-3 text-sm text-gray-900\",\n                      children: payment.paymentMethod\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 620,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-3 text-sm text-gray-600\",\n                      children: payment.memo || '-'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 621,\n                      columnNumber: 27\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 617,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 615,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 606,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-wrap gap-3 pt-4 border-t border-gray-200\",\n            children: [!localInvoice.paid && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setPaymentModalOpen(true),\n              className: \"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\",\n              children: [/*#__PURE__*/_jsxDEV(DollarSign, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 637,\n                columnNumber: 19\n              }, this), \"Record Payment\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 17\n            }, this), !localInvoice.paid && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleMarkAsPaid,\n              className: \"flex items-center gap-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\",\n              children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 647,\n                columnNumber: 19\n              }, this), \"Mark as Paid\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 17\n            }, this), !localInvoice.fulfilled && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleMarkAsFulfilled,\n              className: \"flex items-center gap-2 px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors\",\n              children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 657,\n                columnNumber: 19\n              }, this), \"Mark as Fulfilled\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 653,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"flex items-center gap-2 px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\",\n              children: [/*#__PURE__*/_jsxDEV(Download, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 663,\n                columnNumber: 17\n              }, this), \"Download Invoice\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 7\n    }, this), isPaymentModalOpen && /*#__PURE__*/_jsxDEV(RecordPaymentModal, {\n      invoiceId: localInvoice.orderId,\n      amount: localInvoice.remainingAmount || localInvoice.total,\n      onClose: () => setPaymentModalOpen(false),\n      onPaymentComplete: handlePaymentComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(InvoiceDetailModal, \"ZXYBPKhxZLfKhCElVNPJVFLzDLA=\");\n_c = InvoiceDetailModal;\nexport default InvoiceDetailModal;\nvar _c;\n$RefreshReg$(_c, \"InvoiceDetailModal\");","map":{"version":3,"names":["React","useState","useEffect","XCircle","CheckCircle","FileText","Download","Clock","Calendar","DollarSign","formatCurrency","formatDate","RecordPaymentModal","jsxDEV","_jsxDEV","Fragment","_Fragment","InvoiceDetailModal","invoice","onClose","getCustomerName","onRefresh","_s","isPaymentModalOpen","setPaymentModalOpen","localInvoice","setLocalInvoice","paymentHistory","setPaymentHistory","loadPaymentHistory","storedPayments","JSON","parse","localStorage","getItem","invoicePayments","filter","payment","invoiceId","orderId","handlePaymentComplete","paymentData","isFullPayment","updatedInvoice","amount","remainingAmount","paid","paymentStatus","existingOrders","orderIndex","findIndex","o","setItem","stringify","handleMarkAsPaid","order","id","paymentDate","Date","toISOString","split","prev","error","console","handleMarkAsFulfilled","fulfilled","fulfillmentDate","getStatusBadge","statusClass","statusText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","getFulfillmentBadge","onClick","size","customerId","createdAt","status","total","updatedAt","lineItems","map","item","index","productName","quantity","price","length","date","paymentMethod","memo","onPaymentComplete","_c","$RefreshReg$"],"sources":["C:/Users/Logic-Unit/my-account/src/modals/InvoiceDetailModal.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { XCircle, CheckCircle, FileText, Download } from 'lucide-react';\r\n// import { formatCurrency, formatDate } from '../components/AccountsReceivable/AccountsReceivableUtils/formatters';\r\n// const RecordPaymentModal = React.lazy(() =>\r\n//   import('../components/AccountsReceivable/RecordPaymentModal')\r\n// );\r\n\r\n// const InvoiceDetailModal = ({ invoice, onClose, getCustomerName }) => {\r\n//   const [isPaymentModalOpen, setPaymentModalOpen] = useState(false);\r\n\r\n//   return (\r\n//     <>\r\n//       <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//         <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n//           <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//             <div className=\"flex items-center justify-between\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-900\">\r\n//                 Order Details - #{invoice.orderId}\r\n//               </h3>\r\n//               <button\r\n//                 onClick={onClose}\r\n//                 className=\"text-gray-400 hover:text-gray-600\"\r\n//               >\r\n//                 <XCircle size={20} />\r\n//               </button>\r\n//             </div>\r\n//           </div>\r\n\r\n//           <div className=\"px-6 py-4\">\r\n//             {/* Order Info */}\r\n//             <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n//               <div className=\"space-y-4\">\r\n//                 <div>\r\n//                   <label className=\"text-sm font-medium text-gray-500\">Order ID</label>\r\n//                   <p className=\"text-sm text-gray-900\">{invoice.orderId}</p>\r\n//                 </div>\r\n//                 <div>\r\n//                   <label className=\"text-sm font-medium text-gray-500\">Customer</label>\r\n//                   <p className=\"text-sm text-gray-900\">{getCustomerName(invoice.customerId)}</p>\r\n//                 </div>\r\n//                 <div>\r\n//                   <label className=\"text-sm font-medium text-gray-500\">Created Date</label>\r\n//                   <p className=\"text-sm text-gray-900\">{formatDate(invoice.createdAt)}</p>\r\n//                 </div>\r\n//                 <div>\r\n//                   <label className=\"text-sm font-medium text-gray-500\">Status</label>\r\n//                   <p className=\"text-sm text-gray-900\">{invoice.status}</p>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               <div className=\"space-y-4\">\r\n//                 <div>\r\n//                   <label className=\"text-sm font-medium text-gray-500\">Payment Status</label>\r\n//                   <div>\r\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                       invoice.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\r\n//                     }`}>\r\n//                       {invoice.paid ? 'Paid' : 'Unpaid'}\r\n//                     </span>\r\n//                   </div>\r\n//                 </div>\r\n//                 <div>\r\n//                   <label className=\"text-sm font-medium text-gray-500\">Fulfillment Status</label>\r\n//                   <div>\r\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                       invoice.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n//                     }`}>\r\n//                       {invoice.fulfilled ? 'Fulfilled' : 'Pending'}\r\n//                     </span>\r\n//                   </div>\r\n//                 </div>\r\n//                 <div>\r\n//                   <label className=\"text-sm font-medium text-gray-500\">Total Amount</label>\r\n//                   <p className=\"text-lg font-bold text-gray-900\">{formatCurrency(invoice.total)}</p>\r\n//                 </div>\r\n//                 <div>\r\n//                   <label className=\"text-sm font-medium text-gray-500\">Payable Amount</label>\r\n//                   <p className=\"text-sm text-gray-900\">{formatCurrency(invoice.payableAmount)}</p>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n\r\n//             {/* Line Items */}\r\n//             <div className=\"mb-6\">\r\n//               <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Order Items</h4>\r\n//               <div className=\"overflow-x-auto\">\r\n//                 <table className=\"w-full border border-gray-200 rounded\">\r\n//                   <thead className=\"bg-gray-50\">\r\n//                     <tr>\r\n//                       <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Product</th>\r\n//                       <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Quantity</th>\r\n//                       <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Unit Price</th>\r\n//                       <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Total</th>\r\n//                       <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Status</th>\r\n//                     </tr>\r\n//                   </thead>\r\n//                   <tbody className=\"divide-y divide-gray-200\">\r\n//                     {invoice.lineItems.map((item, index) => (\r\n//                       <tr key={index}>\r\n//                         <td className=\"px-4 py-2 text-sm text-gray-900\">{item.productName}</td>\r\n//                         <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{item.quantity}</td>\r\n//                         <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{formatCurrency(item.price)}</td>\r\n//                         <td className=\"px-4 py-2 text-sm font-medium text-gray-900 text-right\">{formatCurrency(item.total)}</td>\r\n//                         <td className=\"px-4 py-2\">\r\n//                           <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                             item.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n//                           }`}>\r\n//                             {item.status}\r\n//                           </span>\r\n//                         </td>\r\n//                       </tr>\r\n//                     ))}\r\n//                   </tbody>\r\n//                 </table>\r\n//               </div>\r\n//             </div>\r\n\r\n//             {/* Totals */}\r\n//             <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n//               <div className=\"space-y-2\">\r\n//                 <div className=\"flex justify-between\">\r\n//                   <span className=\"text-sm text-gray-600\">Subtotal:</span>\r\n//                   <span className=\"text-sm text-gray-900\">{formatCurrency(invoice.subTotal)}</span>\r\n//                 </div>\r\n//                 <div className=\"flex justify-between\">\r\n//                   <span className=\"text-sm text-gray-600\">Tax ({invoice.taxRate}%):</span>\r\n//                   <span className=\"text-sm text-gray-900\">{formatCurrency(invoice.taxAmount)}</span>\r\n//                 </div>\r\n//                 {invoice.discountAmount > 0 && (\r\n//                   <div className=\"flex justify-between\">\r\n//                     <span className=\"text-sm text-gray-600\">Discount:</span>\r\n//                     <span className=\"text-sm text-red-600\">-{formatCurrency(invoice.discountAmount)}</span>\r\n//                   </div>\r\n//                 )}\r\n//                 <div className=\"flex justify-between font-bold text-lg border-t pt-2\">\r\n//                   <span>Total:</span>\r\n//                   <span>{formatCurrency(invoice.total)}</span>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n\r\n//             {/* Action Buttons */}\r\n//             <div className=\"flex space-x-3 mt-6\">\r\n//               <button\r\n//                 className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\"\r\n//                 onClick={() => setPaymentModalOpen(true)}\r\n//               >\r\n//                 <CheckCircle size={16} />\r\n//                 <span>Record Payment</span>\r\n//               </button>\r\n\r\n//               {!invoice.paid && (\r\n//                 <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\r\n//                   <CheckCircle size={16} />\r\n//                   <span>Mark as Paid</span>\r\n//                 </button>\r\n//               )}\r\n//               {!invoice.fulfilled && (\r\n//                 <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\r\n//                   <FileText size={16} />\r\n//                   <span>Mark as Fulfilled</span>\r\n//                 </button>\r\n//               )}\r\n//               <button className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\">\r\n//                 <Download size={16} />\r\n//                 <span>Download Invoice</span>\r\n//               </button>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//    {isPaymentModalOpen && (\r\n//   <React.Suspense fallback={<div>Loading Payment Modal...</div>}>\r\n//     <RecordPaymentModal\r\n//       invoiceId={invoice.orderId}\r\n//       amount={invoice.total}\r\n//       onClose={() => setPaymentModalOpen(false)}\r\n//       onSubmit={(date, enteredAmount, method, account, memo, paymentData, isFullPayment) => {\r\n//         console.log('Payment Submitted:', { \r\n//           date, \r\n//           enteredAmount, \r\n//           method, \r\n//           account, \r\n//           memo, \r\n//           paymentData, \r\n//           isFullPayment \r\n//         });\r\n        \r\n//         if (isFullPayment) {\r\n//           // Update the local state to reflect the paid status\r\n//           // This will trigger a re-render with the updated status\r\n//           invoice.paid = true;\r\n//           invoice.paymentStatus = 'paid';\r\n//         }\r\n        \r\n//         setPaymentModalOpen(false);\r\n        \r\n//         // You might want to refresh the data or show a success message\r\n//        // message.success(isFullPayment ? 'Invoice marked as paid!' : 'Partial payment recorded!');\r\n//       }}\r\n//     />\r\n//   </React.Suspense>\r\n// )}\r\n\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default InvoiceDetailModal;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { XCircle, CheckCircle, FileText, Download, Clock, Calendar, DollarSign } from 'lucide-react';\r\nimport { formatCurrency, formatDate } from '../components/AccountsReceivable/AccountsReceivableUtils/formatters';\r\nimport RecordPaymentModal from '../components/AccountsReceivable/RecordPaymentModal';\r\n\r\nconst InvoiceDetailModal = ({ invoice, onClose, getCustomerName, onRefresh }) => {\r\n  const [isPaymentModalOpen, setPaymentModalOpen] = useState(false);\r\n  const [localInvoice, setLocalInvoice] = useState(invoice);\r\n  const [paymentHistory, setPaymentHistory] = useState([]);\r\n\r\n  // Load payment history when invoice changes\r\n  useEffect(() => {\r\n    if (invoice) {\r\n      setLocalInvoice(invoice);\r\n      loadPaymentHistory();\r\n    }\r\n  }, [invoice]);\r\n\r\n  const loadPaymentHistory = () => {\r\n    const storedPayments = JSON.parse(localStorage.getItem('payments') || '[]');\r\n    const invoicePayments = storedPayments.filter(\r\n      payment => payment.invoiceId === invoice.orderId || payment.orderId === invoice.orderId\r\n    );\r\n    setPaymentHistory(invoicePayments);\r\n  };\r\n\r\n  // const handlePaymentComplete = (paymentData, isFullPayment) => {\r\n  //   // Update local invoice state to reflect the payment\r\n  //   if (isFullPayment) {\r\n  //     setLocalInvoice(prev => ({\r\n  //       ...prev,\r\n  //       paid: true,\r\n  //       paymentStatus: 'paid',\r\n  //       remainingAmount: 0\r\n  //     }));\r\n  //   } else {\r\n  //     setLocalInvoice(prev => ({\r\n  //       ...prev,\r\n  //       paid: false,\r\n  //       paymentStatus: 'partial',\r\n  //       remainingAmount: paymentData.remainingAmount\r\n  //     }));\r\n  //   }\r\n\r\n  //   // Reload payment history\r\n  //   loadPaymentHistory();\r\n\r\n  //   // Trigger parent refresh if available\r\n  //   if (onRefresh) {\r\n  //     onRefresh();\r\n  //   }\r\n\r\n  //   setPaymentModalOpen(false);\r\n  // };\r\n\r\nconst handlePaymentComplete = (paymentData, isFullPayment) => {\r\n  const updatedInvoice = { ...localInvoice };\r\n\r\n  if (isFullPayment || paymentData.amount >= localInvoice.remainingAmount) {\r\n  updatedInvoice.paid = true;\r\n  updatedInvoice.paymentStatus = 'paid';\r\n  updatedInvoice.remainingAmount = 0;\r\n} else {\r\n  updatedInvoice.paid = false;\r\n  updatedInvoice.paymentStatus = 'partial';\r\n  updatedInvoice.remainingAmount = paymentData.remainingAmount;\r\n}\r\n\r\n\r\n  // Save to localStorage (simulate API update)\r\n  const existingOrders = JSON.parse(localStorage.getItem('orders') || '[]');\r\n  const orderIndex = existingOrders.findIndex(o => o.orderId === updatedInvoice.orderId);\r\n  if (orderIndex !== -1) {\r\n    existingOrders[orderIndex] = updatedInvoice;\r\n    localStorage.setItem('orders', JSON.stringify(existingOrders));\r\n  }\r\n\r\n  setLocalInvoice(updatedInvoice);\r\n\r\n  if (onRefresh) {\r\n    onRefresh();   // 🔥 tell parent to reload sales\r\n  }\r\n\r\n  setPaymentModalOpen(false);\r\n};\r\n\r\n\r\n  //GOOD\r\n\r\n//     const handlePaymentComplete = (paymentData, isFullPayment) => {\r\n//   if (isFullPayment || paymentData.amount >= localInvoice.remainingAmount) {\r\n//     // Full payment case\r\n//     const updatedInvoice = {\r\n//       ...localInvoice,\r\n//       paid: true,\r\n//       paymentStatus: 'paid',\r\n//       remainingAmount: 0,\r\n//       paymentDate: new Date().toISOString(),\r\n//     };\r\n\r\n//     // Update in localStorage\r\n//     const existingOrders = JSON.parse(localStorage.getItem('orders') || '[]');\r\n//     const orderIndex = existingOrders.findIndex(\r\n//       (order) => order.orderId === updatedInvoice.orderId || order.id === updatedInvoice.orderId\r\n//     );\r\n//     if (orderIndex !== -1) {\r\n//       existingOrders[orderIndex] = updatedInvoice;\r\n//       localStorage.setItem('orders', JSON.stringify(existingOrders));\r\n//     }\r\n\r\n//     setLocalInvoice(updatedInvoice);\r\n//   } else {\r\n//     // Partial payment\r\n//     const updatedInvoice = {\r\n//       ...localInvoice,\r\n//       paid: false,\r\n//       paymentStatus: 'partial',\r\n//       remainingAmount: paymentData.remainingAmount,\r\n//     };\r\n\r\n//     // Update in localStorage\r\n//     const existingOrders = JSON.parse(localStorage.getItem('orders') || '[]');\r\n//     const orderIndex = existingOrders.findIndex(\r\n//       (order) => order.orderId === updatedInvoice.orderId || order.id === updatedInvoice.orderId\r\n//     );\r\n//     if (orderIndex !== -1) {\r\n//       existingOrders[orderIndex] = updatedInvoice;\r\n//       localStorage.setItem('orders', JSON.stringify(existingOrders));\r\n//     }\r\n\r\n//     setLocalInvoice(updatedInvoice);\r\n//   }\r\n\r\n//   loadPaymentHistory();\r\n\r\n//   if (onRefresh) {\r\n//     onRefresh();\r\n//   }\r\n\r\n//   setPaymentModalOpen(false);\r\n// };\r\n\r\n  // const handleMarkAsPaid = async () => {\r\n  //   try {\r\n  //     // Update order status in localStorage\r\n  //     const existingOrders = JSON.parse(localStorage.getItem('orders') || '[]');\r\n  //     const orderIndex = existingOrders.findIndex(order => \r\n  //       order.orderId === localInvoice.orderId || order.id === localInvoice.orderId\r\n  //     );\r\n      \r\n  //     if (orderIndex !== -1) {\r\n  //       existingOrders[orderIndex] = {\r\n  //         ...existingOrders[orderIndex],\r\n  //         paid: true,\r\n  //         paymentStatus: 'paid',\r\n  //         paymentDate: new Date().toISOString().split('T')[0],\r\n  //         remainingAmount: 0\r\n  //       };\r\n        \r\n  //       localStorage.setItem('orders', JSON.stringify(existingOrders));\r\n  //     }\r\n\r\n  //     // Update local state\r\n  //     setLocalInvoice(prev => ({\r\n  //       ...prev,\r\n  //       paid: true,\r\n  //       paymentStatus: 'paid'\r\n  //     }));\r\n\r\n  //     // Trigger refresh\r\n  //     if (onRefresh) {\r\n  //       onRefresh();\r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.error('Error marking as paid:', error);\r\n  //   }\r\n  // };\r\n\r\n  const handleMarkAsPaid = async () => {\r\n  try {\r\n    const existingOrders = JSON.parse(localStorage.getItem('orders') || '[]');\r\n    const orderIndex = existingOrders.findIndex(order => \r\n      order.orderId === localInvoice.orderId || order.id === localInvoice.orderId\r\n    );\r\n\r\n    if (orderIndex !== -1) {\r\n      existingOrders[orderIndex] = {\r\n        ...existingOrders[orderIndex],\r\n        paid: true,                               // ✅ API-style flag\r\n        paymentStatus: 'paid',                    // ✅ UI-friendly flag\r\n        paymentDate: new Date().toISOString().split('T')[0],\r\n        remainingAmount: 0\r\n      };\r\n\r\n      localStorage.setItem('orders', JSON.stringify(existingOrders));\r\n    }\r\n\r\n    // Update local state\r\n    setLocalInvoice(prev => ({\r\n      ...prev,\r\n      paid: true,\r\n      paymentStatus: 'paid',\r\n      remainingAmount: 0\r\n    }));\r\n\r\n    if (onRefresh) {\r\n      onRefresh();\r\n    }\r\n  } catch (error) {\r\n    console.error('Error marking as paid:', error);\r\n  }\r\n};\r\n\r\n\r\n  const handleMarkAsFulfilled = async () => {\r\n    try {\r\n      // Update order status in localStorage\r\n      const existingOrders = JSON.parse(localStorage.getItem('orders') || '[]');\r\n      const orderIndex = existingOrders.findIndex(order => \r\n        order.orderId === localInvoice.orderId || order.id === localInvoice.orderId\r\n      );\r\n      \r\n      if (orderIndex !== -1) {\r\n        existingOrders[orderIndex] = {\r\n          ...existingOrders[orderIndex],\r\n          fulfilled: true,\r\n          fulfillmentDate: new Date().toISOString()\r\n        };\r\n        \r\n        localStorage.setItem('orders', JSON.stringify(existingOrders));\r\n      }\r\n\r\n      // Update local state\r\n      setLocalInvoice(prev => ({\r\n        ...prev,\r\n        fulfilled: true\r\n      }));\r\n\r\n      // Trigger refresh\r\n      if (onRefresh) {\r\n        onRefresh();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error marking as fulfilled:', error);\r\n    }\r\n  };\r\n\r\n  const getStatusBadge = (invoice) => {\r\n    let statusClass = '';\r\n    let statusText = '';\r\n    \r\n    if (invoice.paid) {\r\n      statusClass = 'bg-green-100 text-green-800';\r\n      statusText = 'Paid';\r\n    } else if (invoice.paymentStatus === 'partial') {\r\n      statusClass = 'bg-orange-100 text-orange-800';\r\n      statusText = 'Partial Payment';\r\n    } else {\r\n      statusClass = 'bg-red-100 text-red-800';\r\n      statusText = 'Unpaid';\r\n    }\r\n    \r\n    return (\r\n      <span className={`px-2 py-1 text-xs font-medium rounded-full ${statusClass}`}>\r\n        {statusText}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  const getFulfillmentBadge = (invoice) => {\r\n    if (invoice.fulfilled) {\r\n      return (\r\n        <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-blue-100 text-blue-800\">\r\n          Fulfilled\r\n        </span>\r\n      );\r\n    } else {\r\n      return (\r\n        <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-yellow-100 text-yellow-800\">\r\n          Pending Fulfillment\r\n        </span>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n        <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n          <div className=\"px-6 py-4 border-b border-gray-200\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">\r\n                Order Details - #{localInvoice.orderId}\r\n              </h3>\r\n              <button\r\n                onClick={onClose}\r\n                className=\"text-gray-400 hover:text-gray-600\"\r\n              >\r\n                <XCircle size={20} />\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"px-6 py-4\">\r\n            {/* Order Info */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <label className=\"text-sm font-medium text-gray-500\">Order ID</label>\r\n                  <p className=\"text-sm text-gray-900\">{localInvoice.orderId}</p>\r\n                </div>\r\n                <div>\r\n                  <label className=\"text-sm font-medium text-gray-500\">Customer</label>\r\n                  <p className=\"text-sm text-gray-900\">{getCustomerName(localInvoice.customerId)}</p>\r\n                </div>\r\n                <div>\r\n                  <label className=\"text-sm font-medium text-gray-500\">Created Date</label>\r\n                  <p className=\"text-sm text-gray-900\">{formatDate(localInvoice.createdAt)}</p>\r\n                </div>\r\n                <div>\r\n                  <label className=\"text-sm font-medium text-gray-500\">Status</label>\r\n                  <p className=\"text-sm text-gray-900\">{localInvoice.status}</p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <label className=\"text-sm font-medium text-gray-500\">Payment Status</label>\r\n                  <div className=\"flex items-center gap-2 mt-1\">\r\n                    {getStatusBadge(localInvoice)}\r\n                    {localInvoice.paymentStatus === 'partial' && (\r\n                      <span className=\"text-xs text-gray-500\">\r\n                        ({formatCurrency(localInvoice.remainingAmount || 0)} remaining)\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <label className=\"text-sm font-medium text-gray-500\">Fulfillment Status</label>\r\n                  <div className=\"mt-1\">\r\n                    {getFulfillmentBadge(localInvoice)}\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <label className=\"text-sm font-medium text-gray-500\">Total Amount</label>\r\n                  <p className=\"text-sm font-medium text-gray-900\">{formatCurrency(localInvoice.total)}</p>\r\n                </div>\r\n                <div>\r\n                  <label className=\"text-sm font-medium text-gray-500\">Last Updated</label>\r\n                  <p className=\"text-sm text-gray-900\">{formatDate(localInvoice.updatedAt || localInvoice.createdAt)}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Order Items */}\r\n            <div className=\"mb-6\">\r\n              <h4 className=\"text-md font-medium text-gray-900 mb-3\">Order Items</h4>\r\n              <div className=\"border border-gray-200 rounded-lg overflow-hidden\">\r\n                 <table className=\"w-full border border-gray-200 rounded\">\r\n                   <thead className=\"bg-gray-50\">\r\n                     <tr>\r\n                       <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Product</th>\r\n                       <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Quantity</th>\r\n                       <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Unit Price</th>\r\n                       <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Total</th>\r\n                       <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Status</th>\r\n                     </tr>\r\n                   </thead>\r\n                   <tbody className=\"divide-y divide-gray-200\">\r\n                     {invoice.lineItems.map((item, index) => (\r\n                       <tr key={index}>\r\n                         <td className=\"px-4 py-2 text-sm text-gray-900\">{item.productName}</td>\r\n                         <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{item.quantity}</td>\r\n                         <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{formatCurrency(item.price)}</td>\r\n                         <td className=\"px-4 py-2 text-sm font-medium text-gray-900 text-right\">{formatCurrency(item.total)}</td>\r\n                         <td className=\"px-4 py-2\">\r\n                           <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n                             item.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n                           }`}>\r\n                            {item.status}\r\n                           </span>\r\n                         </td>\r\n                       </tr>\r\n                     ))}\r\n                   </tbody>\r\n                 </table>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Payment History */}\r\n            {paymentHistory.length > 0 && (\r\n              <div className=\"mb-6\">\r\n                <h4 className=\"text-md font-medium text-gray-900 mb-3\">Payment History</h4>\r\n                <div className=\"border border-gray-200 rounded-lg overflow-hidden\">\r\n                  <table className=\"min-w-full divide-y divide-gray-200\">\r\n                    <thead className=\"bg-gray-50\">\r\n                      <tr>\r\n                        <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">Date</th>\r\n                        <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">Amount</th>\r\n                        <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">Method</th>\r\n                        <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">Memo</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                      {paymentHistory.map((payment, index) => (\r\n                        <tr key={index}>\r\n                          <td className=\"px-4 py-3 text-sm text-gray-900\">{formatDate(payment.date)}</td>\r\n                          <td className=\"px-4 py-3 text-sm text-gray-900\">{formatCurrency(payment.amount)}</td>\r\n                          <td className=\"px-4 py-3 text-sm text-gray-900\">{payment.paymentMethod}</td>\r\n                          <td className=\"px-4 py-3 text-sm text-gray-600\">{payment.memo || '-'}</td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Action Buttons */}\r\n            <div className=\"flex flex-wrap gap-3 pt-4 border-t border-gray-200\">\r\n              {!localInvoice.paid && (\r\n                <button\r\n                  onClick={() => setPaymentModalOpen(true)}\r\n                  className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\r\n                >\r\n                  <DollarSign size={16} />\r\n                  Record Payment\r\n                </button>\r\n              )}\r\n              \r\n              {!localInvoice.paid && (\r\n                <button\r\n                  onClick={handleMarkAsPaid}\r\n                  className=\"flex items-center gap-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\r\n                >\r\n                  <CheckCircle size={16} />\r\n                  Mark as Paid\r\n                </button>\r\n              )}\r\n              \r\n              {!localInvoice.fulfilled && (\r\n                <button\r\n                  onClick={handleMarkAsFulfilled}\r\n                  className=\"flex items-center gap-2 px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors\"\r\n                >\r\n                  <CheckCircle size={16} />\r\n                  Mark as Fulfilled\r\n                </button>\r\n              )}\r\n              \r\n              <button className=\"flex items-center gap-2 px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\">\r\n                <Download size={16} />\r\n                Download Invoice\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Payment Modal */}\r\n      {isPaymentModalOpen && (\r\n        <RecordPaymentModal\r\n          invoiceId={localInvoice.orderId}\r\n          amount={localInvoice.remainingAmount || localInvoice.total}\r\n          onClose={() => setPaymentModalOpen(false)}\r\n          onPaymentComplete={handlePaymentComplete}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InvoiceDetailModal;\r\n\r\n"],"mappingslD,SAASC,OAAO,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,cAAc;AACpG,SAASC,cAAc,EAAEC,UAAU,QAAQ,qEAAqE;AAChH,OAAOC,kBAAkB,MAAM,qDAAqD;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErF,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC,OAAO;EAAEC,OAAO;EAAEC,eAAe;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAC/E,MAAM,CAACC,kBAAkB,EAAEC,mBAAmB,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACwB,YAAY,EAAEC,eAAe,CAAC,GAAGzB,QAAQ,CAACiB,OAAO,CAAC;EACzD,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACAC,SAAS,CAAC,MAAM;IACd,IAAIgB,OAAO,EAAE;MACXQ,eAAe,CAACR,OAAO,CAAC;MACxBW,kBAAkB,CAAC,CAAC;IACtB;EACF,CAAC,EAAE,CAACX,OAAO,CAAC,CAAC;EAEb,MAAMW,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,MAAMC,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC;IAC3E,MAAMC,eAAe,GAAGL,cAAc,CAACM,MAAM,CAC3CC,OAAO,IAAIA,OAAO,CAACC,SAAS,KAAKpB,OAAO,CAACqB,OAAO,IAAIF,OAAO,CAACE,OAAO,KAAKrB,OAAO,CAACqB,OAClF,CAAC;IACDX,iBAAiB,CAACO,eAAe,CAAC;EACpC,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;;EAEF,MAAMK,qBAAqB,GAAGA,CAACC,WAAW,EAAEC,aAAa,KAAK;IAC5D,MAAMC,cAAc,GAAG;MAAE,GAAGlB;IAAa,CAAC;IAE1C,IAAIiB,aAAa,IAAID,WAAW,CAACG,MAAM,IAAInB,YAAY,CAACoB,eAAe,EAAE;MACzEF,cAAc,CAACG,IAAI,GAAG,IAAI;MAC1BH,cAAc,CAACI,aAAa,GAAG,MAAM;MACrCJ,cAAc,CAACE,eAAe,GAAG,CAAC;IACpC,CAAC,MAAM;MACLF,cAAc,CAACG,IAAI,GAAG,KAAK;MAC3BH,cAAc,CAACI,aAAa,GAAG,SAAS;MACxCJ,cAAc,CAACE,eAAe,GAAGJ,WAAW,CAACI,eAAe;IAC9D;;IAGE;IACA,MAAMG,cAAc,GAAGjB,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC;IACzE,MAAMe,UAAU,GAAGD,cAAc,CAACE,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACZ,OAAO,KAAKI,cAAc,CAACJ,OAAO,CAAC;IACtF,IAAIU,UAAU,KAAK,CAAC,CAAC,EAAE;MACrBD,cAAc,CAACC,UAAU,CAAC,GAAGN,cAAc;MAC3CV,YAAY,CAACmB,OAAO,CAAC,QAAQ,EAAErB,IAAI,CAACsB,SAAS,CAACL,cAAc,CAAC,CAAC;IAChE;IAEAtB,eAAe,CAACiB,cAAc,CAAC;IAE/B,IAAItB,SAAS,EAAE;MACbA,SAAS,CAAC,CAAC,CAAC,CAAG;IACjB;IAEAG,mBAAmB,CAAC,KAAK,CAAC;EAC5B,CAAC;;EAGC;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;;EAEA;EACA;EACA;;EAEA;EACA;;EAEE;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAM8B,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAMN,cAAc,GAAGjB,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC;MACzE,MAAMe,UAAU,GAAGD,cAAc,CAACE,SAAS,CAACK,KAAK,IAC/CA,KAAK,CAAChB,OAAO,KAAKd,YAAY,CAACc,OAAO,IAAIgB,KAAK,CAACC,EAAE,KAAK/B,YAAY,CAACc,OACtE,CAAC;MAED,IAAIU,UAAU,KAAK,CAAC,CAAC,EAAE;QACrBD,cAAc,CAACC,UAAU,CAAC,GAAG;UAC3B,GAAGD,cAAc,CAACC,UAAU,CAAC;UAC7BH,IAAI,EAAE,IAAI;UAAgC;UAC1CC,aAAa,EAAE,MAAM;UAAqB;UAC1CU,WAAW,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UACnDf,eAAe,EAAE;QACnB,CAAC;QAEDZ,YAAY,CAACmB,OAAO,CAAC,QAAQ,EAAErB,IAAI,CAACsB,SAAS,CAACL,cAAc,CAAC,CAAC;MAChE;;MAEA;MACAtB,eAAe,CAACmC,IAAI,KAAK;QACvB,GAAGA,IAAI;QACPf,IAAI,EAAE,IAAI;QACVC,aAAa,EAAE,MAAM;QACrBF,eAAe,EAAE;MACnB,CAAC,CAAC,CAAC;MAEH,IAAIxB,SAAS,EAAE;QACbA,SAAS,CAAC,CAAC;MACb;IACF,CAAC,CAAC,OAAOyC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAGC,MAAME,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxC,IAAI;MACF;MACA,MAAMhB,cAAc,GAAGjB,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC;MACzE,MAAMe,UAAU,GAAGD,cAAc,CAACE,SAAS,CAACK,KAAK,IAC/CA,KAAK,CAAChB,OAAO,KAAKd,YAAY,CAACc,OAAO,IAAIgB,KAAK,CAACC,EAAE,KAAK/B,YAAY,CAACc,OACtE,CAAC;MAED,IAAIU,UAAU,KAAK,CAAC,CAAC,EAAE;QACrBD,cAAc,CAACC,UAAU,CAAC,GAAG;UAC3B,GAAGD,cAAc,CAACC,UAAU,CAAC;UAC7BgB,SAAS,EAAE,IAAI;UACfC,eAAe,EAAE,IAAIR,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;QAC1C,CAAC;QAED1B,YAAY,CAACmB,OAAO,CAAC,QAAQ,EAAErB,IAAI,CAACsB,SAAS,CAACL,cAAc,CAAC,CAAC;MAChE;;MAEA;MACAtB,eAAe,CAACmC,IAAI,KAAK;QACvB,GAAGA,IAAI;QACPI,SAAS,EAAE;MACb,CAAC,CAAC,CAAC;;MAEH;MACA,IAAI5C,SAAS,EAAE;QACbA,SAAS,CAAC,CAAC;MACb;IACF,CAAC,CAAC,OAAOyC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;EAED,MAAMK,cAAc,GAAIjD,OAAO,IAAK;IAClC,IAAIkD,WAAW,GAAG,EAAE;IACpB,IAAIC,UAAU,GAAG,EAAE;IAEnB,IAAInD,OAAO,CAAC4B,IAAI,EAAE;MAChBsB,WAAW,GAAG,6BAA6B;MAC3CC,UAAU,GAAG,MAAM;IACrB,CAAC,MAAM,IAAInD,OAAO,CAAC6B,aAAa,KAAK,SAAS,EAAE;MAC9CqB,WAAW,GAAG,+BAA+B;MAC7CC,UAAU,GAAG,iBAAiB;IAChC,CAAC,MAAM;MACLD,WAAW,GAAG,yBAAyB;MACvCC,UAAU,GAAG,QAAQ;IACvB;IAEA,oBACEvD,OAAA;MAAMwD,SAAS,EAAE,8CAA8CF,WAAW,EAAG;MAAAG,QAAA,EAC1EF;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAEX,CAAC;EAED,MAAMC,mBAAmB,GAAI1D,OAAO,IAAK;IACvC,IAAIA,OAAO,CAAC+C,SAAS,EAAE;MACrB,oBACEnD,OAAA;QAAMwD,SAAS,EAAC,sEAAsE;QAAAC,QAAA,EAAC;MAEvF;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAEX,CAAC,MAAM;MACL,oBACE7D,OAAA;QAAMwD,SAAS,EAAC,0EAA0E;QAAAC,QAAA,EAAC;MAE3F;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAEX;EACF,CAAC;EAED,oBACE7D,OAAA,CAAAE,SAAA;IAAAuD,QAAA,gBACEzD,OAAA;MAAKwD,SAAS,EAAC,mFAAmF;MAAAC,QAAA,eAChGzD,OAAA;QAAKwD,SAAS,EAAC,mEAAmE;QAAAC,QAAA,gBAChFzD,OAAA;UAAKwD,SAAS,EAAC,oCAAoC;UAAAC,QAAA,eACjDzD,OAAA;YAAKwD,SAAS,EAAC,mCAAmC;YAAAC,QAAA,gBAChDzD,OAAA;cAAIwD,SAAS,EAAC,qCAAqC;cAAAC,QAAA,GAAC,mBACjC,EAAC9C,YAAY,CAACc,OAAO;YAAA;cAAAiC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpC,CAAC,eACL7D,OAAA;cACE+D,OAAO,EAAE1D,OAAQ;cACjBmD,SAAS,EAAC,mCAAmC;cAAAC,QAAA,eAE7CzD,OAAA,CAACX,OAAO;gBAAC2E,IAAI,EAAE;cAAG;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACf,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAEN7D,OAAA;UAAKwD,SAAS,EAAC,WAAW;UAAAC,QAAA,gBAExBzD,OAAA;YAAKwD,SAAS,EAAC,4CAA4C;YAAAC,QAAA,gBACzDzD,OAAA;cAAKwD,SAAS,EAAC,WAAW;cAAAC,QAAA,gBACxBzD,OAAA;gBAAAyD,QAAA,gBACEzD,OAAA;kBAAOwD,SAAS,EAAC,mCAAmC;kBAAAC,QAAA,EAAC;gBAAQ;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACrE7D,OAAA;kBAAGwD,SAAS,EAAC,uBAAuB;kBAAAC,QAAA,EAAE9C,YAAY,CAACc;gBAAO;kBAAAiC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5D,CAAC,eACN7D,OAAA;gBAAAyD,QAAA,gBACEzD,OAAA;kBAAOwD,SAAS,EAAC,mCAAmC;kBAAAC,QAAA,EAAC;gBAAQ;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACrE7D,OAAA;kBAAGwD,SAAS,EAAC,uBAAuB;kBAAAC,QAAA,EAAEnD,eAAe,CAACK,YAAY,CAACsD,UAAU;gBAAC;kBAAAP,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChF,CAAC,eACN7D,OAAA;gBAAAyD,QAAA,gBACEzD,OAAA;kBAAOwD,SAAS,EAAC,mCAAmC;kBAAAC,QAAA,EAAC;gBAAY;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACzE7D,OAAA;kBAAGwD,SAAS,EAAC,uBAAuB;kBAAAC,QAAA,EAAE5D,UAAU,CAACc,YAAY,CAACuD,SAAS;gBAAC;kBAAAR,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1E,CAAC,eACN7D,OAAA;gBAAAyD,QAAA,gBACEzD,OAAA;kBAAOwD,SAAS,EAAC,mCAAmC;kBAAAC,QAAA,EAAC;gBAAM;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACnE7D,OAAA;kBAAGwD,SAAS,EAAC,uBAAuB;kBAAAC,QAAA,EAAE9C,YAAY,CAACwD;gBAAM;kBAAAT,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3D,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eAEN7D,OAAA;cAAKwD,SAAS,EAAC,WAAW;cAAAC,QAAA,gBACxBzD,OAAA;gBAAAyD,QAAA,gBACEzD,OAAA;kBAAOwD,SAAS,EAAC,mCAAmC;kBAAAC,QAAA,EAAC;gBAAc;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAC3E7D,OAAA;kBAAKwD,SAAS,EAAC,8BAA8B;kBAAAC,QAAA,GAC1CJ,cAAc,CAAC1C,YAAY,CAAC,EAC5BA,YAAY,CAACsB,aAAa,KAAK,SAAS,iBACvCjC,OAAA;oBAAMwD,SAAS,EAAC,uBAAuB;oBAAAC,QAAA,GAAC,GACrC,EAAC7D,cAAc,CAACe,YAAY,CAACoB,eAAe,IAAI,CAAC,CAAC,EAAC,aACtD;kBAAA;oBAAA2B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CACP;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,eACN7D,OAAA;gBAAAyD,QAAA,gBACEzD,OAAA;kBAAOwD,SAAS,EAAC,mCAAmC;kBAAAC,QAAA,EAAC;gBAAkB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAC/E7D,OAAA;kBAAKwD,SAAS,EAAC,MAAM;kBAAAC,QAAA,EAClBK,mBAAmB,CAACnD,YAAY;gBAAC;kBAAA+C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC/B,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,eACN7D,OAAA;gBAAAyD,QAAA,gBACEzD,OAAA;kBAAOwD,SAAS,EAAC,mCAAmC;kBAAAC,QAAA,EAAC;gBAAY;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACzE7D,OAAA;kBAAGwD,SAAS,EAAC,mCAAmC;kBAAAC,QAAA,EAAE7D,cAAc,CAACe,YAAY,CAACyD,KAAK;gBAAC;kBAAAV,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtF,CAAC,eACN7D,OAAA;gBAAAyD,QAAA,gBACEzD,OAAA;kBAAOwD,SAAS,EAAC,mCAAmC;kBAAAC,QAAA,EAAC;gBAAY;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACzE7D,OAAA;kBAAGwD,SAAS,EAAC,uBAAuB;kBAAAC,QAAA,EAAE5D,UAAU,CAACc,YAAY,CAAC0D,SAAS,IAAI1D,YAAY,CAACuD,SAAS;gBAAC;kBAAAR,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAGN7D,OAAA;YAAKwD,SAAS,EAAC,MAAM;YAAAC,QAAA,gBACnBzD,OAAA;cAAIwD,SAAS,EAAC,wCAAwC;cAAAC,QAAA,EAAC;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACvE7D,OAAA;cAAKwD,SAAS,EAAC,mDAAmD;cAAAC,QAAA,eAC/DzD,OAAA;gBAAOwD,SAAS,EAAC,uCAAuC;gBAAAC,QAAA,gBACtDzD,OAAA;kBAAOwD,SAAS,EAAC,YAAY;kBAAAC,QAAA,eAC3BzD,OAAA;oBAAAyD,QAAA,gBACEzD,OAAA;sBAAIwD,SAAS,EAAC,uDAAuD;sBAAAC,QAAA,EAAC;oBAAO;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eAClF7D,OAAA;sBAAIwD,SAAS,EAAC,wDAAwD;sBAAAC,QAAA,EAAC;oBAAQ;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eACpF7D,OAAA;sBAAIwD,SAAS,EAAC,wDAAwD;sBAAAC,QAAA,EAAC;oBAAU;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eACtF7D,OAAA;sBAAIwD,SAAS,EAAC,wDAAwD;sBAAAC,QAAA,EAAC;oBAAK;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eACjF7D,OAAA;sBAAIwD,SAAS,EAAC,uDAAuD;sBAAAC,QAAA,EAAC;oBAAM;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC/E;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACA,CAAC,eACR7D,OAAA;kBAAOwD,SAAS,EAAC,0BAA0B;kBAAAC,QAAA,EACxCrD,OAAO,CAACkE,SAAS,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACjCzE,OAAA;oBAAAyD,QAAA,gBACEzD,OAAA;sBAAIwD,SAAS,EAAC,iCAAiC;sBAAAC,QAAA,EAAEe,IAAI,CAACE;oBAAW;sBAAAhB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eACvE7D,OAAA;sBAAIwD,SAAS,EAAC,4CAA4C;sBAAAC,QAAA,EAAEe,IAAI,CAACG;oBAAQ;sBAAAjB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eAC/E7D,OAAA;sBAAIwD,SAAS,EAAC,4CAA4C;sBAAAC,QAAA,EAAE7D,cAAc,CAAC4E,IAAI,CAACI,KAAK;oBAAC;sBAAAlB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eAC5F7D,OAAA;sBAAIwD,SAAS,EAAC,wDAAwD;sBAAAC,QAAA,EAAE7D,cAAc,CAAC4E,IAAI,CAACJ,KAAK;oBAAC;sBAAAV,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eACxG7D,OAAA;sBAAIwD,SAAS,EAAC,WAAW;sBAAAC,QAAA,eACvBzD,OAAA;wBAAMwD,SAAS,EAAE,8CACfgB,IAAI,CAACrB,SAAS,GAAG,6BAA6B,GAAG,+BAA+B,EAC/E;wBAAAM,QAAA,EACDe,IAAI,CAACL;sBAAM;wBAAAT,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACP;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACL,CAAC;kBAAA,GAXEY,KAAK;oBAAAf,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAYV,CACL;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACG,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,EAGLhD,cAAc,CAACgE,MAAM,GAAG,CAAC,iBACxB7E,OAAA;YAAKwD,SAAS,EAAC,MAAM;YAAAC,QAAA,gBACnBzD,OAAA;cAAIwD,SAAS,EAAC,wCAAwC;cAAAC,QAAA,EAAC;YAAe;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC3E7D,OAAA;cAAKwD,SAAS,EAAC,mDAAmD;cAAAC,QAAA,eAChEzD,OAAA;gBAAOwD,SAAS,EAAC,qCAAqC;gBAAAC,QAAA,gBACpDzD,OAAA;kBAAOwD,SAAS,EAAC,YAAY;kBAAAC,QAAA,eAC3BzD,OAAA;oBAAAyD,QAAA,gBACEzD,OAAA;sBAAIwD,SAAS,EAAC,iEAAiE;sBAAAC,QAAA,EAAC;oBAAI;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eACzF7D,OAAA;sBAAIwD,SAAS,EAAC,iEAAiE;sBAAAC,QAAA,EAAC;oBAAM;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eAC3F7D,OAAA;sBAAIwD,SAAS,EAAC,iEAAiE;sBAAAC,QAAA,EAAC;oBAAM;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eAC3F7D,OAAA;sBAAIwD,SAAS,EAAC,iEAAiE;sBAAAC,QAAA,EAAC;oBAAI;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACvF;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACA,CAAC,eACR7D,OAAA;kBAAOwD,SAAS,EAAC,mCAAmC;kBAAAC,QAAA,EACjD5C,cAAc,CAAC0D,GAAG,CAAC,CAAChD,OAAO,EAAEkD,KAAK,kBACjCzE,OAAA;oBAAAyD,QAAA,gBACEzD,OAAA;sBAAIwD,SAAS,EAAC,iCAAiC;sBAAAC,QAAA,EAAE5D,UAAU,CAAC0B,OAAO,CAACuD,IAAI;oBAAC;sBAAApB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eAC/E7D,OAAA;sBAAIwD,SAAS,EAAC,iCAAiC;sBAAAC,QAAA,EAAE7D,cAAc,CAAC2B,OAAO,CAACO,MAAM;oBAAC;sBAAA4B,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eACrF7D,OAAA;sBAAIwD,SAAS,EAAC,iCAAiC;sBAAAC,QAAA,EAAElC,OAAO,CAACwD;oBAAa;sBAAArB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eAC5E7D,OAAA;sBAAIwD,SAAS,EAAC,iCAAiC;sBAAAC,QAAA,EAAElC,OAAO,CAACyD,IAAI,IAAI;oBAAG;sBAAAtB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC;kBAAA,GAJnEY,KAAK;oBAAAf,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAKV,CACL;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACG,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CACN,eAGD7D,OAAA;YAAKwD,SAAS,EAAC,oDAAoD;YAAAC,QAAA,GAChE,CAAC9C,YAAY,CAACqB,IAAI,iBACjBhC,OAAA;cACE+D,OAAO,EAAEA,CAAA,KAAMrD,mBAAmB,CAAC,IAAI,CAAE;cACzC8C,SAAS,EAAC,yGAAyG;cAAAC,QAAA,gBAEnHzD,OAAA,CAACL,UAAU;gBAACqE,IAAI,EAAE;cAAG;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,kBAE1B;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CACT,EAEA,CAAClD,YAAY,CAACqB,IAAI,iBACjBhC,OAAA;cACE+D,OAAO,EAAEvB,gBAAiB;cAC1BgB,SAAS,EAAC,2GAA2G;cAAAC,QAAA,gBAErHzD,OAAA,CAACV,WAAW;gBAAC0E,IAAI,EAAE;cAAG;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,gBAE3B;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CACT,EAEA,CAAClD,YAAY,CAACwC,SAAS,iBACtBnD,OAAA;cACE+D,OAAO,EAAEb,qBAAsB;cAC/BM,SAAS,EAAC,6GAA6G;cAAAC,QAAA,gBAEvHzD,OAAA,CAACV,WAAW;gBAAC0E,IAAI,EAAE;cAAG;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,qBAE3B;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CACT,eAED7D,OAAA;cAAQwD,SAAS,EAAC,sHAAsH;cAAAC,QAAA,gBACtIzD,OAAA,CAACR,QAAQ;gBAACwE,IAAI,EAAE;cAAG;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,oBAExB;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGLpD,kBAAkB,iBACjBT,OAAA,CAACF,kBAAkB;MACjB0B,SAAS,EAAEb,YAAY,CAACc,OAAQ;MAChCK,MAAM,EAAEnB,YAAY,CAACoB,eAAe,IAAIpB,YAAY,CAACyD,KAAM;MAC3D/D,OAAO,EAAEA,CAAA,KAAMK,mBAAmB,CAAC,KAAK,CAAE;MAC1CuE,iBAAiB,EAAEvD;IAAsB;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CACF;EAAA,eACD,CAAC;AAEP,CAAC;AAACrD,EAAA,CAjdIL,kBAAkB;AAAA+E,EAAA,GAAlB/E,kBAAkB;AAmdxB,eAAeA,kBAAkB;AAAC,IAAA+E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}