{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Logic-Unit\\\\my-account\\\\src\\\\components\\\\AccountsReceivable\\\\RecordPaymentModal.jsx\",\n  _s = $RefreshSig$();\n// import { useState, useEffect } from 'react';\n// import { Modal, DatePicker, Input, Select, Button } from 'antd';\n// import { formatCurrency } from '../../Utility/formatters';\n\n// const { Option } = Select;\n\n// const RecordPaymentModal = ({ invoiceId, amount, onClose, onSubmit }) => {\n//   const [date, setDate] = useState(null);  \n//   const [enteredAmount, setEnteredAmount] = useState(amount.toString());\n//   const [method, setMethod] = useState('');\n//   const [account, setAccount] = useState('');\n//   const [memo, setMemo] = useState('');\n//   const [accounts, setAccounts] = useState([]);\n\n// useEffect(() => {\n//   const fetchAccounts = async () => {\n//     try {\n//       const response = await fetch('http://localhost:8080/api/accounts');\n//       const data = await response.json();\n\n//       // Only asset accounts\n//       const assetAccounts = data.filter(acct => acct.type === 'assets');\n\n//       // Build parent-child map\n//       const accountMap = {};\n//       assetAccounts.forEach(acct => accountMap[acct.id] = { ...acct, children: [] });\n\n//       assetAccounts.forEach(acct => {\n//         if (acct.parentId && accountMap[acct.parentId]) {\n//           accountMap[acct.parentId].children.push(accountMap[acct.id]);\n//         }\n//       });\n\n//       // Top-level accounts\n//       const tree = assetAccounts.filter(acct => !acct.parentId || !accountMap[acct.parentId]);\n//       setAccounts(tree);\n//     } catch (err) {\n//       console.error('Failed to fetch accounts:', err);\n//     }\n//   };\n\n//   fetchAccounts();\n// }, []);\n\n//   const handleSubmit = () => {\n//     if (!date || !enteredAmount || !method || !account) return;\n//     onSubmit(date, parseFloat(enteredAmount), method, account, memo);\n//     onClose();\n//   };\n\n//   return (\n//     <Modal\n//       title={`Record Payment for Invoice ${invoiceId}`}\n//       open={true}\n//       onCancel={onClose}\n//       footer={[\n//         <Button key=\"cancel\" onClick={onClose}>\n//           Close\n//         </Button>\n//       ]}\n//     >\n//       <div className=\"space-y-4\">\n//         <div>\n//           <label className=\"text-gray-700\">Date</label>\n//           <DatePicker \n//             className=\"w-full\"\n//             value={date}\n//             onChange={(val) => setDate(val)}\n//           />\n//         </div>\n//        <div>\n//   <label className=\"text-gray-700\">Amount</label>\n//   <Input\n//     value={enteredAmount} \n//     onChange={(e) => setEnteredAmount(e.target.value)}\n//     prefix={<span className=\"text-gray-500\">Rs</span>}\n//   />\n//   <div className=\"text-sm text-gray-500\">\n//     Invoice amount: {formatCurrency(amount)} <br />\n//     Remaining amount: {formatCurrency(amount - (parseFloat(enteredAmount) || 0))}\n//   </div>\n// </div>\n\n//         <div>\n//           <label className=\"text-gray-700\">Payment Method</label>\n//           <Select value={method} onChange={setMethod} className=\"w-full\">\n//             <Option value=\"cash\">Cash</Option>\n//             <Option value=\"check\">Check</Option>\n//             <Option value=\"eft\">Bank/Electronic Funds</Option>\n//             <Option value=\"credit\">Credit Card</Option> \n//           </Select>\n//         </div>\n//         <div>\n//           <label className=\"text-gray-700\">Deposit Account</label>\n\n//          <Select\n//                value={account}\n//                onChange={setAccount}\n//                showSearch\n//                filterOption={(input, option) =>\n//                   (option?.children ?? '').toLowerCase().includes(input.toLowerCase())\n//                }\n//                className=\"w-full\"\n//                >\n//                {accounts.map(parent =>\n//                   parent.children.length > 0 ? (\n//                      <Select.OptGroup key={parent.id} label={`${parent.code} - ${parent.name}`}>\n//                      {parent.children.map(child => (\n//                         <Option key={child.id} value={child.id}>\n//                            {child.code} - {child.name}\n//                         </Option>\n//                      ))}\n//                      </Select.OptGroup>\n//                   ) : (\n//                      <Option key={parent.id} value={parent.id}>\n//                      {parent.code} - {parent.name}\n//                      </Option>\n//                   )\n//                )}\n//          </Select>\n\n//         </div>\n//         <div>\n//           <label className=\"text-gray-700\">Memo</label>\n//           <Input.TextArea value={memo} onChange={(e) => setMemo(e.target.value)} />\n//         </div>\n\n//         <Button \n//           type=\"primary\"\n//           className=\"mt-6\"\n//           disabled={!date || !enteredAmount || !method || !account}\n//           onClick={handleSubmit}\n//         >\n//           Submit Payment\n//         </Button>\n//       </div>\n//     </Modal>\n//   );\n// };\n\n// export default RecordPaymentModal;\n\nimport { useState, useEffect } from 'react';\nimport { Modal, DatePicker, Input, Select, Button, Spin } from 'antd';\nimport { formatCurrency } from '../../Utility/formatters';\n\n// Properly destructure all needed components from Select\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option,\n  OptGroup\n} = Select;\nconst RecordPaymentModal = ({\n  invoiceId,\n  amount,\n  onClose,\n  onSubmit\n}) => {\n  _s();\n  console.log('RecordPaymentModal props:', {\n    invoiceId,\n    amount,\n    onClose,\n    onSubmit\n  });\n  const [date, setDate] = useState(null);\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [method, setMethod] = useState('');\n  const [account, setAccount] = useState('');\n  const [memo, setMemo] = useState('');\n  const [accounts, setAccounts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setEnteredAmount(amount.toString());\n  }, [amount]);\n  // Use the amount prop directly instead of fetching from API\n  useEffect(() => {\n    if (amount) {\n      setEnteredAmount(amount.toString());\n    }\n  }, [amount]);\n\n  // Fetch accounts as before\n  useEffect(() => {\n    const fetchAccounts = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/api/accounts');\n        const data = await response.json();\n\n        // Only asset accounts\n        const assetAccounts = data.filter(acct => acct.type === 'assets');\n\n        // Build parent-child map\n        const accountMap = {};\n        assetAccounts.forEach(acct => accountMap[acct.id] = {\n          ...acct,\n          children: []\n        });\n        assetAccounts.forEach(acct => {\n          if (acct.parentId && accountMap[acct.parentId]) {\n            accountMap[acct.parentId].children.push(accountMap[acct.id]);\n          }\n        });\n\n        // Top-level accounts\n        const tree = assetAccounts.filter(acct => !acct.parentId || !accountMap[acct.parentId]);\n        setAccounts(tree);\n      } catch (err) {\n        console.error('Failed to fetch accounts:', err);\n      }\n    };\n    fetchAccounts();\n  }, []);\n  const handleSubmit = () => {\n    if (!date || !enteredAmount || !method || !account) return;\n    onSubmit(date, parseFloat(enteredAmount), method, account, memo);\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: `Record Payment for Invoice ${invoiceId}`,\n    open: true,\n    onCancel: onClose,\n    footer: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: onClose,\n      children: \"Close\"\n    }, \"cancel\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this)],\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-gray-700\",\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          className: \"w-full\",\n          value: date,\n          onChange: val => setDate(val)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-gray-700\",\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: enteredAmount,\n          onChange: e => setEnteredAmount(e.target.value),\n          prefix: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-500\",\n            children: \"Rs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-500\",\n          children: [\"Invoice amount: \", formatCurrency(amount), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 54\n          }, this), \"Remaining amount: \", formatCurrency(amount - (parseFloat(enteredAmount) || 0))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-gray-700\",\n          children: \"Payment Method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: method,\n          onChange: setMethod,\n          className: \"w-full\",\n          children: [/*#__PURE__*/_jsxDEV(Option, {\n            value: \"cash\",\n            children: \"Cash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"check\",\n            children: \"Check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"eft\",\n            children: \"Bank/Electronic Funds\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"credit\",\n            children: \"Credit Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-gray-700\",\n          children: \"Deposit Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: account,\n          onChange: setAccount,\n          showSearch: true,\n          filterOption: (input, option) => {\n            var _option$children;\n            return ((_option$children = option === null || option === void 0 ? void 0 : option.children) !== null && _option$children !== void 0 ? _option$children : '').toLowerCase().includes(input.toLowerCase());\n          },\n          className: \"w-full\",\n          children: accounts.map(parent => parent.children.length > 0 ? /*#__PURE__*/_jsxDEV(OptGroup, {\n            label: `${parent.code} - ${parent.name}`,\n            children: parent.children.map(child => /*#__PURE__*/_jsxDEV(Option, {\n              value: child.id,\n              children: [child.code, \" - \", child.name]\n            }, child.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 21\n            }, this))\n          }, parent.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Option, {\n            value: parent.id,\n            children: [parent.code, \" - \", parent.name]\n          }, parent.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-gray-700\",\n          children: \"Memo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input.TextArea, {\n          value: memo,\n          onChange: e => setMemo(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        className: \"mt-6\",\n        disabled: !date || !enteredAmount || !method || !account,\n        onClick: handleSubmit,\n        children: \"Submit Payment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n};\n_s(RecordPaymentModal, \"gj3cmofy29CV+ZU4v9W+n72mL3w=\");\n_c = RecordPaymentModal;\nexport default RecordPaymentModal;\nvar _c;\n$RefreshReg$(_c, \"RecordPaymentModal\");","map":{"version":3,"names":["useState","useEffect","Modal","DatePicker","Input","Select","Button","Spin","formatCurrency","jsxDEV","_jsxDEV","Option","OptGroup","RecordPaymentModal","invoiceId","amount","onClose","onSubmit","_s","console","log","date","setDate","enteredAmount","setEnteredAmount","method","setMethod","account","setAccount","memo","setMemo","accounts","setAccounts","loading","setLoading","toString","fetchAccounts","response","fetch","data","json","assetAccounts","filter","acct","type","accountMap","forEach","id","children","parentId","push","tree","err","error","handleSubmit","parseFloat","title","open","onCancel","footer","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","value","onChange","val","e","target","prefix","showSearch","filterOption","input","option","_option$children","toLowerCase","includes","map","parent","length","label","code","name","child","TextArea","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Logic-Unit/my-account/src/components/AccountsReceivable/RecordPaymentModal.jsx"],"sourcesContent":["// import { useState, useEffect } from 'react';\r\n// import { Modal, DatePicker, Input, Select, Button } from 'antd';\r\n// import { formatCurrency } from '../../Utility/formatters';\r\n\r\n// const { Option } = Select;\r\n\r\n// const RecordPaymentModal = ({ invoiceId, amount, onClose, onSubmit }) => {\r\n//   const [date, setDate] = useState(null);  \r\n//   const [enteredAmount, setEnteredAmount] = useState(amount.toString());\r\n//   const [method, setMethod] = useState('');\r\n//   const [account, setAccount] = useState('');\r\n//   const [memo, setMemo] = useState('');\r\n//   const [accounts, setAccounts] = useState([]);\r\n\r\n// useEffect(() => {\r\n//   const fetchAccounts = async () => {\r\n//     try {\r\n//       const response = await fetch('http://localhost:8080/api/accounts');\r\n//       const data = await response.json();\r\n\r\n//       // Only asset accounts\r\n//       const assetAccounts = data.filter(acct => acct.type === 'assets');\r\n\r\n//       // Build parent-child map\r\n//       const accountMap = {};\r\n//       assetAccounts.forEach(acct => accountMap[acct.id] = { ...acct, children: [] });\r\n\r\n//       assetAccounts.forEach(acct => {\r\n//         if (acct.parentId && accountMap[acct.parentId]) {\r\n//           accountMap[acct.parentId].children.push(accountMap[acct.id]);\r\n//         }\r\n//       });\r\n\r\n//       // Top-level accounts\r\n//       const tree = assetAccounts.filter(acct => !acct.parentId || !accountMap[acct.parentId]);\r\n//       setAccounts(tree);\r\n//     } catch (err) {\r\n//       console.error('Failed to fetch accounts:', err);\r\n//     }\r\n//   };\r\n\r\n//   fetchAccounts();\r\n// }, []);\r\n\r\n\r\n//   const handleSubmit = () => {\r\n//     if (!date || !enteredAmount || !method || !account) return;\r\n//     onSubmit(date, parseFloat(enteredAmount), method, account, memo);\r\n//     onClose();\r\n//   };\r\n\r\n//   return (\r\n//     <Modal\r\n//       title={`Record Payment for Invoice ${invoiceId}`}\r\n//       open={true}\r\n//       onCancel={onClose}\r\n//       footer={[\r\n//         <Button key=\"cancel\" onClick={onClose}>\r\n//           Close\r\n//         </Button>\r\n//       ]}\r\n//     >\r\n//       <div className=\"space-y-4\">\r\n//         <div>\r\n//           <label className=\"text-gray-700\">Date</label>\r\n//           <DatePicker \r\n//             className=\"w-full\"\r\n//             value={date}\r\n//             onChange={(val) => setDate(val)}\r\n//           />\r\n//         </div>\r\n//        <div>\r\n//   <label className=\"text-gray-700\">Amount</label>\r\n//   <Input\r\n//     value={enteredAmount} \r\n//     onChange={(e) => setEnteredAmount(e.target.value)}\r\n//     prefix={<span className=\"text-gray-500\">Rs</span>}\r\n//   />\r\n//   <div className=\"text-sm text-gray-500\">\r\n//     Invoice amount: {formatCurrency(amount)} <br />\r\n//     Remaining amount: {formatCurrency(amount - (parseFloat(enteredAmount) || 0))}\r\n//   </div>\r\n// </div>\r\n\r\n//         <div>\r\n//           <label className=\"text-gray-700\">Payment Method</label>\r\n//           <Select value={method} onChange={setMethod} className=\"w-full\">\r\n//             <Option value=\"cash\">Cash</Option>\r\n//             <Option value=\"check\">Check</Option>\r\n//             <Option value=\"eft\">Bank/Electronic Funds</Option>\r\n//             <Option value=\"credit\">Credit Card</Option> \r\n//           </Select>\r\n//         </div>\r\n//         <div>\r\n//           <label className=\"text-gray-700\">Deposit Account</label>\r\n\r\n\r\n//          <Select\r\n//                value={account}\r\n//                onChange={setAccount}\r\n//                showSearch\r\n//                filterOption={(input, option) =>\r\n//                   (option?.children ?? '').toLowerCase().includes(input.toLowerCase())\r\n//                }\r\n//                className=\"w-full\"\r\n//                >\r\n//                {accounts.map(parent =>\r\n//                   parent.children.length > 0 ? (\r\n//                      <Select.OptGroup key={parent.id} label={`${parent.code} - ${parent.name}`}>\r\n//                      {parent.children.map(child => (\r\n//                         <Option key={child.id} value={child.id}>\r\n//                            {child.code} - {child.name}\r\n//                         </Option>\r\n//                      ))}\r\n//                      </Select.OptGroup>\r\n//                   ) : (\r\n//                      <Option key={parent.id} value={parent.id}>\r\n//                      {parent.code} - {parent.name}\r\n//                      </Option>\r\n//                   )\r\n//                )}\r\n//          </Select>\r\n\r\n\r\n//         </div>\r\n//         <div>\r\n//           <label className=\"text-gray-700\">Memo</label>\r\n//           <Input.TextArea value={memo} onChange={(e) => setMemo(e.target.value)} />\r\n//         </div>\r\n        \r\n//         <Button \r\n//           type=\"primary\"\r\n//           className=\"mt-6\"\r\n//           disabled={!date || !enteredAmount || !method || !account}\r\n//           onClick={handleSubmit}\r\n//         >\r\n//           Submit Payment\r\n//         </Button>\r\n//       </div>\r\n//     </Modal>\r\n//   );\r\n// };\r\n\r\n// export default RecordPaymentModal;\r\n\r\n\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { Modal, DatePicker, Input, Select, Button, Spin } from 'antd';\r\nimport { formatCurrency } from '../../Utility/formatters';\r\n\r\n// Properly destructure all needed components from Select\r\nconst { Option, OptGroup } = Select;\r\n\r\nconst RecordPaymentModal = ({ invoiceId, amount, onClose, onSubmit }) => {\r\n   console.log('RecordPaymentModal props:', { invoiceId, amount, onClose, onSubmit });\r\n  const [date, setDate] = useState(null);  \r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  const [method, setMethod] = useState('');\r\n  const [account, setAccount] = useState('');\r\n  const [memo, setMemo] = useState('');\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(()=>{\r\n   setEnteredAmount(amount.toString());\r\n  },[amount])\r\n  // Use the amount prop directly instead of fetching from API\r\n  useEffect(() => {\r\n    if (amount) {\r\n      setEnteredAmount(amount.toString());\r\n    }\r\n  }, [amount]);\r\n\r\n  // Fetch accounts as before\r\n  useEffect(() => {\r\n    const fetchAccounts = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8080/api/accounts');\r\n        const data = await response.json();\r\n\r\n        // Only asset accounts\r\n        const assetAccounts = data.filter(acct => acct.type === 'assets');\r\n\r\n        // Build parent-child map\r\n        const accountMap = {};\r\n        assetAccounts.forEach(acct => accountMap[acct.id] = { ...acct, children: [] });\r\n\r\n        assetAccounts.forEach(acct => {\r\n          if (acct.parentId && accountMap[acct.parentId]) {\r\n            accountMap[acct.parentId].children.push(accountMap[acct.id]);\r\n          }\r\n        });\r\n\r\n        // Top-level accounts\r\n        const tree = assetAccounts.filter(acct => !acct.parentId || !accountMap[acct.parentId]);\r\n        setAccounts(tree);\r\n      } catch (err) {\r\n        console.error('Failed to fetch accounts:', err);\r\n      }\r\n    };\r\n\r\n    fetchAccounts();\r\n  }, []);\r\n\r\n  const handleSubmit = () => {\r\n    if (!date || !enteredAmount || !method || !account) return;\r\n    onSubmit(date, parseFloat(enteredAmount), method, account, memo);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title={`Record Payment for Invoice ${invoiceId}`}\r\n      open={true}\r\n      onCancel={onClose}\r\n      footer={[\r\n        <Button key=\"cancel\" onClick={onClose}>\r\n          Close\r\n        </Button>\r\n      ]}\r\n    >\r\n      <div className=\"space-y-4\">\r\n        <div>\r\n          <label className=\"text-gray-700\">Date</label>\r\n          <DatePicker \r\n            className=\"w-full\"\r\n            value={date}\r\n            onChange={(val) => setDate(val)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label className=\"text-gray-700\">Amount</label>\r\n          <Input\r\n            value={enteredAmount} \r\n            onChange={(e) => setEnteredAmount(e.target.value)}\r\n            prefix={<span className=\"text-gray-500\">Rs</span>}\r\n          />\r\n          <div className=\"text-sm text-gray-500\">\r\n            Invoice amount: {formatCurrency(amount)} <br />\r\n            Remaining amount: {formatCurrency(amount - (parseFloat(enteredAmount) || 0))}\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"text-gray-700\">Payment Method</label>\r\n          <Select value={method} onChange={setMethod} className=\"w-full\">\r\n            <Option value=\"cash\">Cash</Option>\r\n            <Option value=\"check\">Check</Option>\r\n            <Option value=\"eft\">Bank/Electronic Funds</Option>\r\n            <Option value=\"credit\">Credit Card</Option> \r\n          </Select>\r\n        </div>\r\n        <div>\r\n          <label className=\"text-gray-700\">Deposit Account</label>\r\n          <Select\r\n            value={account}\r\n            onChange={setAccount}\r\n            showSearch\r\n            filterOption={(input, option) =>\r\n              (option?.children ?? '').toLowerCase().includes(input.toLowerCase())\r\n            }\r\n            className=\"w-full\"\r\n          >\r\n            {accounts.map(parent =>\r\n              parent.children.length > 0 ? (\r\n                <OptGroup key={parent.id} label={`${parent.code} - ${parent.name}`}>\r\n                  {parent.children.map(child => (\r\n                    <Option key={child.id} value={child.id}>\r\n                      {child.code} - {child.name}\r\n                    </Option>\r\n                  ))}\r\n                </OptGroup>\r\n              ) : (\r\n                <Option key={parent.id} value={parent.id}>\r\n                  {parent.code} - {parent.name}\r\n                </Option>\r\n              )\r\n            )}\r\n          </Select>\r\n        </div>\r\n        <div>\r\n          <label className=\"text-gray-700\">Memo</label>\r\n          <Input.TextArea value={memo} onChange={(e) => setMemo(e.target.value)} />\r\n        </div>\r\n        \r\n        <Button \r\n          type=\"primary\"\r\n          className=\"mt-6\"\r\n          disabled={!date || !enteredAmount || !method || !account}\r\n          onClick={handleSubmit}\r\n        >\r\n          Submit Payment\r\n        </Button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default RecordPaymentModal;"],"mappings":";;AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,KAAK,EAAEC,UAAU,EAAEC,KAAK,EAAEC,MAAM,EAAEC,MAAM,EAAEC,IAAI,QAAQ,MAAM;AACrE,SAASC,cAAc,QAAQ,0BAA0B;;AAEzD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAM;EAAEC,MAAM;EAAEC;AAAS,CAAC,GAAGP,MAAM;AAEnC,MAAMQ,kBAAkB,GAAGA,CAAC;EAAEC,SAAS;EAAEC,MAAM;EAAEC,OAAO;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtEC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAE;IAAEN,SAAS;IAAEC,MAAM;IAAEC,OAAO;IAAEC;EAAS,CAAC,CAAC;EACnF,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACuB,aAAa,EAAEC,gBAAgB,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}