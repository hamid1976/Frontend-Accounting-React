{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { arService } from '../services/arService';\nexport const useARData = () => {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  const [invoices, setInvoices] = useState([]);\n  const [payments, setPayments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    loadData();\n  }, []);\n  const loadData = async () => {\n    try {\n      setLoading(true);\n      const [customersData, invoicesData, paymentsData] = await Promise.all([arService.getCustomers(), arService.getInvoices(), arService.getPayments()]);\n      setCustomers(customersData);\n      setInvoices(invoicesData);\n      setPayments(paymentsData);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const calculateARSummary = () => {\n    const totalAR = customers.reduce((sum, customer) => sum + customer.totalOwed, 0);\n    const totalOverdue = customers.reduce((sum, customer) => sum + customer.overdueAmount, 0);\n    const customersWithBalance = customers.filter(customer => customer.totalOwed > 0).length;\n    const avgDaysOutstanding = customers.reduce((sum, customer) => sum + customer.avgPaymentDays, 0) / customers.length;\n    return {\n      totalAR,\n      totalOverdue,\n      customersWithBalance,\n      avgDaysOutstanding: Math.round(avgDaysOutstanding)\n    };\n  };\n  const getAgingData = () => {\n    const aging = {\n      current: 0,\n      days30: 0,\n      days60: 0,\n      days90: 0,\n      over90: 0\n    };\n    invoices.forEach(invoice => {\n      if (invoice.status === 'paid') return;\n      const daysPastDue = invoice.daysOverdue || 0;\n      if (daysPastDue <= 0) {\n        aging.current += invoice.balance;\n      } else if (daysPastDue <= 30) {\n        aging.days30 += invoice.balance;\n      } else if (daysPastDue <= 60) {\n        aging.days60 += invoice.balance;\n      } else if (daysPastDue <= 90) {\n        aging.days90 += invoice.balance;\n      } else {\n        aging.over90 += invoice.balance;\n      }\n    });\n    return aging;\n  };\n  return {\n    customers,\n    invoices,\n    payments,\n    loading,\n    error,\n    calculateARSummary,\n    getAgingData,\n    refreshData: loadData\n  };\n};\n_s(useARData, \"ZXq1d6BFupsTWvdpadZYXn9dwtM=\");","map":{"version":3,"names":["useState","useEffect","arService","useARData","_s","customers","setCustomers","invoices","setInvoices","payments","setPayments","loading","setLoading","error","setError","loadData","customersData","invoicesData","paymentsData","Promise","all","getCustomers","getInvoices","getPayments","err","message","calculateARSummary","totalAR","reduce","sum","customer","totalOwed","totalOverdue","overdueAmount","customersWithBalance","filter","length","avgDaysOutstanding","avgPaymentDays","Math","round","getAgingData","aging","current","days30","days60","days90","over90","forEach","invoice","status","daysPastDue","daysOverdue","balance","refreshData"],"sources":["C:/Users/Logic-Unit/my-account/src/hooks/useARData.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { arService } from '../services/arService';\r\n\r\nexport const useARData = () => {\r\n  const [customers, setCustomers] = useState([]);\r\n  const [invoices, setInvoices] = useState([]);\r\n  const [payments, setPayments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n\r\n  const loadData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const [customersData, invoicesData, paymentsData] = await Promise.all([\r\n        arService.getCustomers(),\r\n        arService.getInvoices(),\r\n        arService.getPayments()\r\n      ]);\r\n      \r\n      setCustomers(customersData);\r\n      setInvoices(invoicesData);\r\n      setPayments(paymentsData);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const calculateARSummary = () => {\r\n    const totalAR = customers.reduce((sum, customer) => sum + customer.totalOwed, 0);\r\n    const totalOverdue = customers.reduce((sum, customer) => sum + customer.overdueAmount, 0);\r\n    const customersWithBalance = customers.filter(customer => customer.totalOwed > 0).length;\r\n    const avgDaysOutstanding = customers.reduce((sum, customer) => sum + customer.avgPaymentDays, 0) / customers.length;\r\n\r\n    return {\r\n      totalAR,\r\n      totalOverdue,\r\n      customersWithBalance,\r\n      avgDaysOutstanding: Math.round(avgDaysOutstanding)\r\n    };\r\n  };\r\n\r\n  const getAgingData = () => {\r\n    const aging = {\r\n      current: 0,\r\n      days30: 0,\r\n      days60: 0,\r\n      days90: 0,\r\n      over90: 0\r\n    };\r\n\r\n    invoices.forEach(invoice => {\r\n      if (invoice.status === 'paid') return;\r\n      \r\n      const daysPastDue = invoice.daysOverdue || 0;\r\n      \r\n      if (daysPastDue <= 0) {\r\n        aging.current += invoice.balance;\r\n      } else if (daysPastDue <= 30) {\r\n        aging.days30 += invoice.balance;\r\n      } else if (daysPastDue <= 60) {\r\n        aging.days60 += invoice.balance;\r\n      } else if (daysPastDue <= 90) {\r\n        aging.days90 += invoice.balance;\r\n      } else {\r\n        aging.over90 += invoice.balance;\r\n      }\r\n    });\r\n\r\n    return aging;\r\n  };\r\n\r\n  return {\r\n    customers,\r\n    invoices,\r\n    payments,\r\n    loading,\r\n    error,\r\n    calculateARSummary,\r\n    getAgingData,\r\n    refreshData: loadData\r\n  };\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}