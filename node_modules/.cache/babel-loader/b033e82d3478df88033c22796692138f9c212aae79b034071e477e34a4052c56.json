{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Logic-Unit\\\\my-account\\\\src\\\\modals\\\\TrialBalanceModal.jsx\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import { X, Download } from 'lucide-react';\n\n// const TrialBalanceModal = ({ trialBalance, filters, setFilters, onClose }) => {\n//   const filteredTrialBalance = trialBalance.filter((item) => {\n//     if (!filters.dateFrom && !filters.dateTo) return true;\n//     const txDate = new Date(item.date);\n//     const from = filters.dateFrom ? new Date(filters.dateFrom) : null;\n//     const to = filters.dateTo ? new Date(filters.dateTo) : null;\n//     if (from && txDate < from) return false;\n//     if (to && txDate > to) return false;\n//     return true;\n//   });\n\n//   const handleExport = () => {\n//     alert('Export functionality would be implemented here');\n//   };\n\n//   return (\n//     <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//       <div className=\"bg-white rounded-lg max-w-5xl w-full max-h-[90vh] overflow-y-auto\">\n//         <div className=\"px-6 py-4 border-b border-gray-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <h3 className=\"text-lg font-semibold text-gray-900\">\n//               Trial Balance\n//               {filters.dateFrom && filters.dateTo\n//                 ? ` (${new Date(filters.dateFrom).toLocaleDateString()} â†’ ${new Date(filters.dateTo).toLocaleDateString()})`\n//                 : ` - As of ${new Date().toLocaleDateString()}`}\n//             </h3>\n//             <div className=\"flex items-center space-x-2\">\n//               <button\n//                 onClick={handleExport}\n//                 className=\"px-3 py-1 bg-emerald-600 text-white rounded text-sm hover:bg-emerald-700 flex items-center space-x-1\"\n//               >\n//                 <Download size={14} />\n//                 <span>Export</span>\n//               </button>\n//               <button\n//                 onClick={onClose}\n//                 className=\"text-gray-400 hover:text-gray-600\"\n//               >\n//                 <X size={20} />\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n\n//         {/* Date Filters */}\n//         <div className=\"px-6 py-4 border-b border-gray-200 flex items-center space-x-3\">\n//           <input\n//             type=\"date\"\n//             value={filters.dateFrom || ''}\n//             onChange={(e) => setFilters({ ...filters, dateFrom: e.target.value })}\n//             className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-rose-500\"\n//           />\n//           <span className=\"text-gray-500\">to</span>\n//           <input\n//             type=\"date\"\n//             value={filters.dateTo || ''}\n//             onChange={(e) => setFilters({ ...filters, dateTo: e.target.value })}\n//             className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-rose-500\"\n//           />\n//           {(filters.dateFrom || filters.dateTo) && (\n//             <button\n//               onClick={() => setFilters({ ...filters, dateFrom: '', dateTo: '' })}\n//               className=\"ml-2 px-3 py-1 bg-gray-200 rounded hover:bg-gray-300 text-sm\"\n//             >\n//               Clear\n//             </button>\n//           )}\n//         </div>\n\n//         <div className=\"px-6 py-4\">\n//           <div className=\"overflow-x-auto\">\n//             <table className=\"w-full\">\n//               <thead className=\"bg-gray-50\">\n//                 <tr>\n//                   <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                     Date\n//                   </th>\n//                   <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                     Account Code\n//                   </th>\n//                   <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                     Account Name\n//                   </th>\n//                   <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                     Type\n//                   </th>\n//                   <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                     Debit Total\n//                   </th>\n//                   <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                     Credit Total\n//                   </th>\n//                   <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                     Balance\n//                   </th>\n//                 </tr>\n//               </thead>\n//               <tbody className=\"bg-white divide-y divide-gray-200\">\n//                 {filteredTrialBalance.map((item) => (\n//                   <tr key={item.accountId}>\n//                     <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                       {item.date ? new Date(item.date).toLocaleDateString() : 'N/A'}\n//                     </td>\n//                     <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n//                       {item.accountCode}\n//                     </td>\n//                     <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                       {item.accountName}\n//                     </td>\n//                     <td className=\"px-4 py-4 whitespace-nowrap\">\n//                       <span\n//                         className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                           item.accountType === 'assets'\n//                             ? 'bg-green-100 text-green-800'\n//                             : item.accountType === 'liabilities'\n//                             ? 'bg-red-100 text-red-800'\n//                             : item.accountType === 'equity'\n//                             ? 'bg-blue-100 text-blue-800'\n//                             : item.accountType === 'revenue'\n//                             ? 'bg-purple-100 text-purple-800'\n//                             : item.accountType === 'expenses'\n//                             ? 'bg-orange-100 text-orange-800'\n//                             : 'bg-gray-100 text-gray-800'\n//                         }`}\n//                       >\n//                         {item.accountType?.charAt(0).toUpperCase() +\n//                           item.accountType?.slice(1) || 'Unknown'}\n//                       </span>\n//                     </td>\n//                     <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n//                       PKR{' '}\n//                       {item.debit.toLocaleString('en-PK', {\n//                         minimumFractionDigits: 2,\n//                         maximumFractionDigits: 2,\n//                       })}\n//                     </td>\n//                     <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n//                       PKR{' '}\n//                       {item.credit.toLocaleString('en-PK', {\n//                         minimumFractionDigits: 2,\n//                         maximumFractionDigits: 2,\n//                       })}\n//                     </td>\n//                     <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-right\">\n//                       <span\n//                         className={\n//                           item.balance >= 0 ? 'text-green-600' : 'text-red-600'\n//                         }\n//                       >\n//                         PKR{' '}\n//                         {Math.abs(item.balance).toLocaleString('en-PK', {\n//                           minimumFractionDigits: 2,\n//                           maximumFractionDigits: 2,\n//                         })}\n//                         {item.balance < 0 && ' (CR)'}\n//                       </span>\n//                     </td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n\n//               <tfoot className=\"bg-gray-50\">\n//                 <tr>\n//                   <td\n//                     colSpan=\"4\"\n//                     className=\"px-4 py-3 text-sm font-bold text-gray-900\"\n//                   >\n//                     TOTALS:\n//                   </td>\n//                   <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\n//                     PKR{' '}\n//                     {filteredTrialBalance\n//                       .reduce((sum, acc) => sum + acc.debit, 0)\n//                       .toLocaleString('en-PK', {\n//                         minimumFractionDigits: 2,\n//                         maximumFractionDigits: 2,\n//                       })}\n//                   </td>\n//                   <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\n//                     PKR{' '}\n//                     {filteredTrialBalance\n//                       .reduce((sum, acc) => sum + acc.credit, 0)\n//                       .toLocaleString('en-PK', {\n//                         minimumFractionDigits: 2,\n//                         maximumFractionDigits: 2,\n//                       })}\n//                   </td>\n//                   <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\n//                     PKR{' '}\n//                     {Math.abs(\n//                       filteredTrialBalance.reduce(\n//                         (sum, acc) => sum + acc.balance,\n//                         0\n//                       )\n//                     ).toLocaleString('en-PK', {\n//                       minimumFractionDigits: 2,\n//                       maximumFractionDigits: 2,\n//                     })}\n//                   </td>\n//                 </tr>\n//               </tfoot>\n//             </table>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default TrialBalanceModal;\n\n// import React from 'react';\n// import { X, Download } from 'lucide-react';\n\n// const TrialBalanceModal = ({ trialBalance, filters, setFilters, onClose }) => {\n//   const filteredTrialBalance = trialBalance.filter((item) => {\n//     if (!filters.dateFrom && !filters.dateTo) return true;\n//     // If you want to filter based on journal entry transactions, \n//     // youâ€™d need to aggregate trial balance from those, not accounts summary.\n//     return true;\n//   });\n\n//   const handleExport = () => {\n//     alert('Export functionality would be implemented here');\n//   };\n\n//   return (\n//     <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//       <div className=\"bg-white rounded-lg max-w-5xl w-full max-h-[90vh] overflow-y-auto\">\n//         {/* Header */}\n//         <div className=\"px-6 py-4 border-b border-gray-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <h3 className=\"text-lg font-semibold text-gray-900\">\n//               Trial Balance\n//               {filters.dateFrom && filters.dateTo\n//                 ? ` (${new Date(filters.dateFrom).toLocaleDateString()} â†’ ${new Date(filters.dateTo).toLocaleDateString()})`\n//                 : ` - As of ${new Date().toLocaleDateString()}`}\n//             </h3>\n//             <div className=\"flex items-center space-x-2\">\n//               <button\n//                 onClick={handleExport}\n//                 className=\"px-3 py-1 bg-emerald-600 text-white rounded text-sm hover:bg-emerald-700 flex items-center space-x-1\"\n//               >\n//                 <Download size={14} />\n//                 <span>Export</span>\n//               </button>\n//               <button\n//                 onClick={onClose}\n//                 className=\"text-gray-400 hover:text-gray-600\"\n//               >\n//                 <X size={20} />\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n\n//         {/* Date Filters */}\n//         <div className=\"px-6 py-4 border-b border-gray-200 flex items-center space-x-3\">\n//           <input\n//             type=\"date\"\n//             value={filters.dateFrom || ''}\n//             onChange={(e) => setFilters({ ...filters, dateFrom: e.target.value })}\n//             className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-rose-500\"\n//           />\n//           <span className=\"text-gray-500\">to</span>\n//           <input\n//             type=\"date\"\n//             value={filters.dateTo || ''}\n//             onChange={(e) => setFilters({ ...filters, dateTo: e.target.value })}\n//             className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-rose-500\"\n//           />\n//           {(filters.dateFrom || filters.dateTo) && (\n//             <button\n//               onClick={() => setFilters({ ...filters, dateFrom: '', dateTo: '' })}\n//               className=\"ml-2 px-3 py-1 bg-gray-200 rounded hover:bg-gray-300 text-sm\"\n//             >\n//               Clear\n//             </button>\n//           )}\n//         </div>\n\n//         {/* Table */}\n//         <div className=\"px-6 py-4\">\n//           <div className=\"overflow-x-auto\">\n//             <table className=\"w-full\">\n//               <thead className=\"bg-gray-50\">\n//                 <tr>\n//                   <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                     Account Code\n//                   </th>\n//                   <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                     Account Name\n//                   </th>\n//                   <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                     Type\n//                   </th>\n//                   <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                     Debit Total\n//                   </th>\n//                   <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                     Credit Total\n//                   </th>\n//                   <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                     Balance\n//                   </th>\n//                 </tr>\n//               </thead>\n//               <tbody className=\"bg-white divide-y divide-gray-200\">\n//                 {filteredTrialBalance.map((item) => (\n//                   <tr key={item.accountId}>\n//                     <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n//                       {item.accountCode}\n//                     </td>\n//                     <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                       {item.accountName}\n//                     </td>\n//                     <td className=\"px-4 py-4 whitespace-nowrap\">\n//                       <span\n//                         className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                           item.accountType === 'assets'\n//                             ? 'bg-green-100 text-green-800'\n//                             : item.accountType === 'liabilities'\n//                             ? 'bg-red-100 text-red-800'\n//                             : item.accountType === 'equity'\n//                             ? 'bg-blue-100 text-blue-800'\n//                             : item.accountType === 'revenue'\n//                             ? 'bg-purple-100 text-purple-800'\n//                             : item.accountType === 'expenses'\n//                             ? 'bg-orange-100 text-orange-800'\n//                             : 'bg-gray-100 text-gray-800'\n//                         }`}\n//                       >\n//                         {item.accountType?.charAt(0).toUpperCase() +\n//                           item.accountType?.slice(1) || 'Unknown'}\n//                       </span>\n//                     </td>\n//                     <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n//                       PKR{' '}\n//                       {item.debit.toLocaleString('en-PK', {\n//                         minimumFractionDigits: 2,\n//                         maximumFractionDigits: 2,\n//                       })}\n//                     </td>\n//                     <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n//                       PKR{' '}\n//                       {item.credit.toLocaleString('en-PK', {\n//                         minimumFractionDigits: 2,\n//                         maximumFractionDigits: 2,\n//                       })}\n//                     </td>\n//                     <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-right\">\n//                       <span\n//                         className={\n//                           item.balance >= 0 ? 'text-green-600' : 'text-red-600'\n//                         }\n//                       >\n//                         PKR{' '}\n//                         {Math.abs(item.balance).toLocaleString('en-PK', {\n//                           minimumFractionDigits: 2,\n//                           maximumFractionDigits: 2,\n//                         })}\n//                         {item.balance < 0 && ' (CR)'}\n//                       </span>\n//                     </td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n\n//               {/* Totals */}\n//               <tfoot className=\"bg-gray-50\">\n//                 <tr>\n//                   <td\n//                     colSpan=\"3\"\n//                     className=\"px-4 py-3 text-sm font-bold text-gray-900\"\n//                   >\n//                     TOTALS:\n//                   </td>\n//                   <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\n//                     PKR{' '}\n//                     {filteredTrialBalance\n//                       .reduce((sum, acc) => sum + acc.debit, 0)\n//                       .toLocaleString('en-PK', {\n//                         minimumFractionDigits: 2,\n//                         maximumFractionDigits: 2,\n//                       })}\n//                   </td>\n//                   <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\n//                     PKR{' '}\n//                     {filteredTrialBalance\n//                       .reduce((sum, acc) => sum + acc.credit, 0)\n//                       .toLocaleString('en-PK', {\n//                         minimumFractionDigits: 2,\n//                         maximumFractionDigits: 2,\n//                       })}\n//                   </td>\n//                   <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\n//                     PKR{' '}\n//                     {Math.abs(\n//                       filteredTrialBalance.reduce(\n//                         (sum, acc) => sum + acc.balance,\n//                         0\n//                       )\n//                     ).toLocaleString('en-PK', {\n//                       minimumFractionDigits: 2,\n//                       maximumFractionDigits: 2,\n//                     })}\n//                   </td>\n//                 </tr>\n//               </tfoot>\n//             </table>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default TrialBalanceModal;\n\nimport React, { useState } from 'react';\nimport { X, Download } from 'lucide-react';\n\n// Helper function for grouping\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst groupByDate = (data, groupBy) => {\n  const grouped = {};\n  data.forEach(item => {\n    const d = new Date(item.date || new Date()); // ðŸ”¹ ensure each trial balance row has a \"date\"\n    let key = '';\n    switch (groupBy) {\n      case 'day':\n        key = d.toLocaleDateString();\n        break;\n      case 'week':\n        {\n          const weekStart = new Date(d);\n          weekStart.setDate(d.getDate() - d.getDay());\n          key = `Week of ${weekStart.toLocaleDateString()}`;\n          break;\n        }\n      case 'month':\n        key = d.toLocaleString('default', {\n          month: 'long',\n          year: 'numeric'\n        });\n        break;\n      case 'year':\n        key = d.getFullYear();\n        break;\n      default:\n        key = 'All';\n    }\n    if (!grouped[key]) {\n      grouped[key] = [];\n    }\n    grouped[key].push(item);\n  });\n  return grouped;\n};\nconst TrialBalanceModal = ({\n  trialBalance,\n  filters,\n  setFilters,\n  onClose\n}) => {\n  _s();\n  const [groupBy, setGroupBy] = useState('all'); // ðŸ”¹ new state for grouping\n\n  const filteredTrialBalance = trialBalance.filter(item => {\n    if (!filters.dateFrom && !filters.dateTo) return true;\n    // If you want to filter based on journal entry transactions, \n    // youâ€™d need to aggregate trial balance from those, not accounts summary.\n    return true;\n  });\n\n  // ðŸ”¹ Apply grouping\n  const groupedData = groupByDate(filteredTrialBalance, groupBy);\n  const handleExport = () => {\n    alert('Export functionality would be implemented here');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg max-w-5xl w-full max-h-[90vh] overflow-y-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-6 py-4 border-b border-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-gray-900\",\n            children: [\"Trial Balance\", filters.dateFrom && filters.dateTo ? ` (${new Date(filters.dateFrom).toLocaleDateString()} â†’ ${new Date(filters.dateTo).toLocaleDateString()})` : ` - As of ${new Date().toLocaleDateString()}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleExport,\n              className: \"px-3 py-1 bg-emerald-600 text-white rounded text-sm hover:bg-emerald-700 flex items-center space-x-1\",\n              children: [/*#__PURE__*/_jsxDEV(Download, {\n                size: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Export\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: onClose,\n              className: \"text-gray-400 hover:text-gray-600\",\n              children: /*#__PURE__*/_jsxDEV(X, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-6 py-4 border-b border-gray-200 flex items-center space-x-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: filters.dateFrom || '',\n          onChange: e => setFilters({\n            ...filters,\n            dateFrom: e.target.value\n          }),\n          className: \"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-rose-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-500\",\n          children: \"to\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: filters.dateTo || '',\n          onChange: e => setFilters({\n            ...filters,\n            dateTo: e.target.value\n          }),\n          className: \"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-rose-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 11\n        }, this), (filters.dateFrom || filters.dateTo) && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setFilters({\n            ...filters,\n            dateFrom: '',\n            dateTo: ''\n          }),\n          className: \"ml-2 px-3 py-1 bg-gray-200 rounded hover:bg-gray-300 text-sm\",\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: groupBy,\n          onChange: e => setGroupBy(e.target.value),\n          className: \"ml-auto px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"day\",\n            children: \"Day-wise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"week\",\n            children: \"Week-wise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"month\",\n            children: \"Month-wise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"year\",\n            children: \"Year-wise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-6 py-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overflow-x-auto\",\n          children: Object.keys(groupedData).map(groupKey => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: [groupBy !== 'all' && /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-md font-semibold text-gray-700 mb-2\",\n              children: groupKey\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"w-full mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                className: \"bg-gray-50\",\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                    children: \"Account Code\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 564,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                    children: \"Account Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 567,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                    children: \"Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 570,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                    children: \"Debit Total\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 573,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                    children: \"Credit Total\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 576,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                    children: \"Balance\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 579,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 563,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 562,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                className: \"bg-white divide-y divide-gray-200\",\n                children: groupedData[groupKey].map(item => {\n                  var _item$accountType, _item$accountType2;\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-4 text-sm font-medium text-gray-900\",\n                      children: item.accountCode\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 587,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-4 text-sm text-gray-900\",\n                      children: item.accountName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 590,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-4 whitespace-nowrap\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: `px-2 py-1 text-xs font-medium rounded-full ${item.accountType === 'assets' ? 'bg-green-100 text-green-800' : item.accountType === 'liabilities' ? 'bg-red-100 text-red-800' : item.accountType === 'equity' ? 'bg-blue-100 text-blue-800' : item.accountType === 'revenue' ? 'bg-purple-100 text-purple-800' : item.accountType === 'expenses' ? 'bg-orange-100 text-orange-800' : 'bg-gray-100 text-gray-800'}`,\n                        children: ((_item$accountType = item.accountType) === null || _item$accountType === void 0 ? void 0 : _item$accountType.charAt(0).toUpperCase()) + ((_item$accountType2 = item.accountType) === null || _item$accountType2 === void 0 ? void 0 : _item$accountType2.slice(1)) || 'Unknown'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 594,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 593,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-4 text-sm text-gray-900 text-right\",\n                      children: [\"PKR\", ' ', item.debit.toLocaleString('en-PK', {\n                        minimumFractionDigits: 2,\n                        maximumFractionDigits: 2\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 613,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-4 text-sm text-gray-900 text-right\",\n                      children: [\"PKR\", ' ', item.credit.toLocaleString('en-PK', {\n                        minimumFractionDigits: 2,\n                        maximumFractionDigits: 2\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 620,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-4 text-sm font-medium text-right\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: item.balance >= 0 ? 'text-green-600' : 'text-red-600',\n                        children: [\"PKR\", ' ', Math.abs(item.balance).toLocaleString('en-PK', {\n                          minimumFractionDigits: 2,\n                          maximumFractionDigits: 2\n                        }), item.balance < 0 && ' (CR)']\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 628,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 627,\n                      columnNumber: 25\n                    }, this)]\n                  }, item.accountId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 586,\n                    columnNumber: 23\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 17\n            }, this)]\n          }, groupKey, true, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 484,\n    columnNumber: 5\n  }, this);\n};\n_s(TrialBalanceModal, \"wi4FHbNUVBRhXwpkCnjH+8FbqfE=\");\n_c = TrialBalanceModal;\nexport default TrialBalanceModal;\nvar _c;\n$RefreshReg$(_c, \"TrialBalanceModal\");","map":{"version":3,"names":["React","useState","X","Download","jsxDEV","_jsxDEV","groupByDate","data","groupBy","grouped","forEach","item","d","Date","date","key","toLocaleDateString","weekStart","setDate","getDate","getDay","toLocaleString","month","year","getFullYear","push","TrialBalanceModal","trialBalance","filters","setFilters","onClose","_s","setGroupBy","filteredTrialBalance","filter","dateFrom","dateTo","groupedData","handleExport","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","type","value","onChange","e","target","Object","keys","map","groupKey","_item$accountType","_item$accountType2","accountCode","accountName","accountType","charAt","toUpperCase","slice","debit","minimumFractionDigits","maximumFractionDigits","credit","balance","Math","abs","accountId","_c","$RefreshReg$"],"sources":["C:/Users/Logic-Unit/my-account/src/modals/TrialBalanceModal.jsx"],"sourcesContent":["// import React from 'react';\r\n// import { X, Download } from 'lucide-react';\r\n\r\n// const TrialBalanceModal = ({ trialBalance, filters, setFilters, onClose }) => {\r\n//   const filteredTrialBalance = trialBalance.filter((item) => {\r\n//     if (!filters.dateFrom && !filters.dateTo) return true;\r\n//     const txDate = new Date(item.date);\r\n//     const from = filters.dateFrom ? new Date(filters.dateFrom) : null;\r\n//     const to = filters.dateTo ? new Date(filters.dateTo) : null;\r\n//     if (from && txDate < from) return false;\r\n//     if (to && txDate > to) return false;\r\n//     return true;\r\n//   });\r\n\r\n//   const handleExport = () => {\r\n//     alert('Export functionality would be implemented here');\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//       <div className=\"bg-white rounded-lg max-w-5xl w-full max-h-[90vh] overflow-y-auto\">\r\n//         <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <h3 className=\"text-lg font-semibold text-gray-900\">\r\n//               Trial Balance\r\n//               {filters.dateFrom && filters.dateTo\r\n//                 ? ` (${new Date(filters.dateFrom).toLocaleDateString()} â†’ ${new Date(filters.dateTo).toLocaleDateString()})`\r\n//                 : ` - As of ${new Date().toLocaleDateString()}`}\r\n//             </h3>\r\n//             <div className=\"flex items-center space-x-2\">\r\n//               <button\r\n//                 onClick={handleExport}\r\n//                 className=\"px-3 py-1 bg-emerald-600 text-white rounded text-sm hover:bg-emerald-700 flex items-center space-x-1\"\r\n//               >\r\n//                 <Download size={14} />\r\n//                 <span>Export</span>\r\n//               </button>\r\n//               <button\r\n//                 onClick={onClose}\r\n//                 className=\"text-gray-400 hover:text-gray-600\"\r\n//               >\r\n//                 <X size={20} />\r\n//               </button>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Date Filters */}\r\n//         <div className=\"px-6 py-4 border-b border-gray-200 flex items-center space-x-3\">\r\n//           <input\r\n//             type=\"date\"\r\n//             value={filters.dateFrom || ''}\r\n//             onChange={(e) => setFilters({ ...filters, dateFrom: e.target.value })}\r\n//             className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-rose-500\"\r\n//           />\r\n//           <span className=\"text-gray-500\">to</span>\r\n//           <input\r\n//             type=\"date\"\r\n//             value={filters.dateTo || ''}\r\n//             onChange={(e) => setFilters({ ...filters, dateTo: e.target.value })}\r\n//             className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-rose-500\"\r\n//           />\r\n//           {(filters.dateFrom || filters.dateTo) && (\r\n//             <button\r\n//               onClick={() => setFilters({ ...filters, dateFrom: '', dateTo: '' })}\r\n//               className=\"ml-2 px-3 py-1 bg-gray-200 rounded hover:bg-gray-300 text-sm\"\r\n//             >\r\n//               Clear\r\n//             </button>\r\n//           )}\r\n//         </div>\r\n\r\n//         <div className=\"px-6 py-4\">\r\n//           <div className=\"overflow-x-auto\">\r\n//             <table className=\"w-full\">\r\n//               <thead className=\"bg-gray-50\">\r\n//                 <tr>\r\n//                   <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                     Date\r\n//                   </th>\r\n//                   <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                     Account Code\r\n//                   </th>\r\n//                   <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                     Account Name\r\n//                   </th>\r\n//                   <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                     Type\r\n//                   </th>\r\n//                   <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                     Debit Total\r\n//                   </th>\r\n//                   <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                     Credit Total\r\n//                   </th>\r\n//                   <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                     Balance\r\n//                   </th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//                 {filteredTrialBalance.map((item) => (\r\n//                   <tr key={item.accountId}>\r\n//                     <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                       {item.date ? new Date(item.date).toLocaleDateString() : 'N/A'}\r\n//                     </td>\r\n//                     <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n//                       {item.accountCode}\r\n//                     </td>\r\n//                     <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                       {item.accountName}\r\n//                     </td>\r\n//                     <td className=\"px-4 py-4 whitespace-nowrap\">\r\n//                       <span\r\n//                         className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                           item.accountType === 'assets'\r\n//                             ? 'bg-green-100 text-green-800'\r\n//                             : item.accountType === 'liabilities'\r\n//                             ? 'bg-red-100 text-red-800'\r\n//                             : item.accountType === 'equity'\r\n//                             ? 'bg-blue-100 text-blue-800'\r\n//                             : item.accountType === 'revenue'\r\n//                             ? 'bg-purple-100 text-purple-800'\r\n//                             : item.accountType === 'expenses'\r\n//                             ? 'bg-orange-100 text-orange-800'\r\n//                             : 'bg-gray-100 text-gray-800'\r\n//                         }`}\r\n//                       >\r\n//                         {item.accountType?.charAt(0).toUpperCase() +\r\n//                           item.accountType?.slice(1) || 'Unknown'}\r\n//                       </span>\r\n//                     </td>\r\n//                     <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\r\n//                       PKR{' '}\r\n//                       {item.debit.toLocaleString('en-PK', {\r\n//                         minimumFractionDigits: 2,\r\n//                         maximumFractionDigits: 2,\r\n//                       })}\r\n//                     </td>\r\n//                     <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\r\n//                       PKR{' '}\r\n//                       {item.credit.toLocaleString('en-PK', {\r\n//                         minimumFractionDigits: 2,\r\n//                         maximumFractionDigits: 2,\r\n//                       })}\r\n//                     </td>\r\n//                     <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-right\">\r\n//                       <span\r\n//                         className={\r\n//                           item.balance >= 0 ? 'text-green-600' : 'text-red-600'\r\n//                         }\r\n//                       >\r\n//                         PKR{' '}\r\n//                         {Math.abs(item.balance).toLocaleString('en-PK', {\r\n//                           minimumFractionDigits: 2,\r\n//                           maximumFractionDigits: 2,\r\n//                         })}\r\n//                         {item.balance < 0 && ' (CR)'}\r\n//                       </span>\r\n//                     </td>\r\n//                   </tr>\r\n//                 ))}\r\n//               </tbody>\r\n\r\n//               <tfoot className=\"bg-gray-50\">\r\n//                 <tr>\r\n//                   <td\r\n//                     colSpan=\"4\"\r\n//                     className=\"px-4 py-3 text-sm font-bold text-gray-900\"\r\n//                   >\r\n//                     TOTALS:\r\n//                   </td>\r\n//                   <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\r\n//                     PKR{' '}\r\n//                     {filteredTrialBalance\r\n//                       .reduce((sum, acc) => sum + acc.debit, 0)\r\n//                       .toLocaleString('en-PK', {\r\n//                         minimumFractionDigits: 2,\r\n//                         maximumFractionDigits: 2,\r\n//                       })}\r\n//                   </td>\r\n//                   <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\r\n//                     PKR{' '}\r\n//                     {filteredTrialBalance\r\n//                       .reduce((sum, acc) => sum + acc.credit, 0)\r\n//                       .toLocaleString('en-PK', {\r\n//                         minimumFractionDigits: 2,\r\n//                         maximumFractionDigits: 2,\r\n//                       })}\r\n//                   </td>\r\n//                   <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\r\n//                     PKR{' '}\r\n//                     {Math.abs(\r\n//                       filteredTrialBalance.reduce(\r\n//                         (sum, acc) => sum + acc.balance,\r\n//                         0\r\n//                       )\r\n//                     ).toLocaleString('en-PK', {\r\n//                       minimumFractionDigits: 2,\r\n//                       maximumFractionDigits: 2,\r\n//                     })}\r\n//                   </td>\r\n//                 </tr>\r\n//               </tfoot>\r\n//             </table>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default TrialBalanceModal;\r\n\r\n// import React from 'react';\r\n// import { X, Download } from 'lucide-react';\r\n\r\n// const TrialBalanceModal = ({ trialBalance, filters, setFilters, onClose }) => {\r\n//   const filteredTrialBalance = trialBalance.filter((item) => {\r\n//     if (!filters.dateFrom && !filters.dateTo) return true;\r\n//     // If you want to filter based on journal entry transactions, \r\n//     // youâ€™d need to aggregate trial balance from those, not accounts summary.\r\n//     return true;\r\n//   });\r\n\r\n//   const handleExport = () => {\r\n//     alert('Export functionality would be implemented here');\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//       <div className=\"bg-white rounded-lg max-w-5xl w-full max-h-[90vh] overflow-y-auto\">\r\n//         {/* Header */}\r\n//         <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <h3 className=\"text-lg font-semibold text-gray-900\">\r\n//               Trial Balance\r\n//               {filters.dateFrom && filters.dateTo\r\n//                 ? ` (${new Date(filters.dateFrom).toLocaleDateString()} â†’ ${new Date(filters.dateTo).toLocaleDateString()})`\r\n//                 : ` - As of ${new Date().toLocaleDateString()}`}\r\n//             </h3>\r\n//             <div className=\"flex items-center space-x-2\">\r\n//               <button\r\n//                 onClick={handleExport}\r\n//                 className=\"px-3 py-1 bg-emerald-600 text-white rounded text-sm hover:bg-emerald-700 flex items-center space-x-1\"\r\n//               >\r\n//                 <Download size={14} />\r\n//                 <span>Export</span>\r\n//               </button>\r\n//               <button\r\n//                 onClick={onClose}\r\n//                 className=\"text-gray-400 hover:text-gray-600\"\r\n//               >\r\n//                 <X size={20} />\r\n//               </button>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Date Filters */}\r\n//         <div className=\"px-6 py-4 border-b border-gray-200 flex items-center space-x-3\">\r\n//           <input\r\n//             type=\"date\"\r\n//             value={filters.dateFrom || ''}\r\n//             onChange={(e) => setFilters({ ...filters, dateFrom: e.target.value })}\r\n//             className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-rose-500\"\r\n//           />\r\n//           <span className=\"text-gray-500\">to</span>\r\n//           <input\r\n//             type=\"date\"\r\n//             value={filters.dateTo || ''}\r\n//             onChange={(e) => setFilters({ ...filters, dateTo: e.target.value })}\r\n//             className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-rose-500\"\r\n//           />\r\n//           {(filters.dateFrom || filters.dateTo) && (\r\n//             <button\r\n//               onClick={() => setFilters({ ...filters, dateFrom: '', dateTo: '' })}\r\n//               className=\"ml-2 px-3 py-1 bg-gray-200 rounded hover:bg-gray-300 text-sm\"\r\n//             >\r\n//               Clear\r\n//             </button>\r\n//           )}\r\n//         </div>\r\n\r\n//         {/* Table */}\r\n//         <div className=\"px-6 py-4\">\r\n//           <div className=\"overflow-x-auto\">\r\n//             <table className=\"w-full\">\r\n//               <thead className=\"bg-gray-50\">\r\n//                 <tr>\r\n//                   <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                     Account Code\r\n//                   </th>\r\n//                   <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                     Account Name\r\n//                   </th>\r\n//                   <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                     Type\r\n//                   </th>\r\n//                   <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                     Debit Total\r\n//                   </th>\r\n//                   <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                     Credit Total\r\n//                   </th>\r\n//                   <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                     Balance\r\n//                   </th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//                 {filteredTrialBalance.map((item) => (\r\n//                   <tr key={item.accountId}>\r\n//                     <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n//                       {item.accountCode}\r\n//                     </td>\r\n//                     <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                       {item.accountName}\r\n//                     </td>\r\n//                     <td className=\"px-4 py-4 whitespace-nowrap\">\r\n//                       <span\r\n//                         className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                           item.accountType === 'assets'\r\n//                             ? 'bg-green-100 text-green-800'\r\n//                             : item.accountType === 'liabilities'\r\n//                             ? 'bg-red-100 text-red-800'\r\n//                             : item.accountType === 'equity'\r\n//                             ? 'bg-blue-100 text-blue-800'\r\n//                             : item.accountType === 'revenue'\r\n//                             ? 'bg-purple-100 text-purple-800'\r\n//                             : item.accountType === 'expenses'\r\n//                             ? 'bg-orange-100 text-orange-800'\r\n//                             : 'bg-gray-100 text-gray-800'\r\n//                         }`}\r\n//                       >\r\n//                         {item.accountType?.charAt(0).toUpperCase() +\r\n//                           item.accountType?.slice(1) || 'Unknown'}\r\n//                       </span>\r\n//                     </td>\r\n//                     <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\r\n//                       PKR{' '}\r\n//                       {item.debit.toLocaleString('en-PK', {\r\n//                         minimumFractionDigits: 2,\r\n//                         maximumFractionDigits: 2,\r\n//                       })}\r\n//                     </td>\r\n//                     <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\r\n//                       PKR{' '}\r\n//                       {item.credit.toLocaleString('en-PK', {\r\n//                         minimumFractionDigits: 2,\r\n//                         maximumFractionDigits: 2,\r\n//                       })}\r\n//                     </td>\r\n//                     <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-right\">\r\n//                       <span\r\n//                         className={\r\n//                           item.balance >= 0 ? 'text-green-600' : 'text-red-600'\r\n//                         }\r\n//                       >\r\n//                         PKR{' '}\r\n//                         {Math.abs(item.balance).toLocaleString('en-PK', {\r\n//                           minimumFractionDigits: 2,\r\n//                           maximumFractionDigits: 2,\r\n//                         })}\r\n//                         {item.balance < 0 && ' (CR)'}\r\n//                       </span>\r\n//                     </td>\r\n//                   </tr>\r\n//                 ))}\r\n//               </tbody>\r\n\r\n//               {/* Totals */}\r\n//               <tfoot className=\"bg-gray-50\">\r\n//                 <tr>\r\n//                   <td\r\n//                     colSpan=\"3\"\r\n//                     className=\"px-4 py-3 text-sm font-bold text-gray-900\"\r\n//                   >\r\n//                     TOTALS:\r\n//                   </td>\r\n//                   <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\r\n//                     PKR{' '}\r\n//                     {filteredTrialBalance\r\n//                       .reduce((sum, acc) => sum + acc.debit, 0)\r\n//                       .toLocaleString('en-PK', {\r\n//                         minimumFractionDigits: 2,\r\n//                         maximumFractionDigits: 2,\r\n//                       })}\r\n//                   </td>\r\n//                   <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\r\n//                     PKR{' '}\r\n//                     {filteredTrialBalance\r\n//                       .reduce((sum, acc) => sum + acc.credit, 0)\r\n//                       .toLocaleString('en-PK', {\r\n//                         minimumFractionDigits: 2,\r\n//                         maximumFractionDigits: 2,\r\n//                       })}\r\n//                   </td>\r\n//                   <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\r\n//                     PKR{' '}\r\n//                     {Math.abs(\r\n//                       filteredTrialBalance.reduce(\r\n//                         (sum, acc) => sum + acc.balance,\r\n//                         0\r\n//                       )\r\n//                     ).toLocaleString('en-PK', {\r\n//                       minimumFractionDigits: 2,\r\n//                       maximumFractionDigits: 2,\r\n//                     })}\r\n//                   </td>\r\n//                 </tr>\r\n//               </tfoot>\r\n//             </table>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default TrialBalanceModal;\r\n\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { X, Download } from 'lucide-react';\r\n\r\n// Helper function for grouping\r\nconst groupByDate = (data, groupBy) => {\r\n  const grouped = {};\r\n\r\n  data.forEach((item) => {\r\n    const d = new Date(item.date || new Date()); // ðŸ”¹ ensure each trial balance row has a \"date\"\r\n    let key = '';\r\n\r\n    switch (groupBy) {\r\n      case 'day':\r\n        key = d.toLocaleDateString();\r\n        break;\r\n      case 'week': {\r\n        const weekStart = new Date(d);\r\n        weekStart.setDate(d.getDate() - d.getDay());\r\n        key = `Week of ${weekStart.toLocaleDateString()}`;\r\n        break;\r\n      }\r\n      case 'month':\r\n        key = d.toLocaleString('default', { month: 'long', year: 'numeric' });\r\n        break;\r\n      case 'year':\r\n        key = d.getFullYear();\r\n        break;\r\n      default:\r\n        key = 'All';\r\n    }\r\n\r\n    if (!grouped[key]) {\r\n      grouped[key] = [];\r\n    }\r\n    grouped[key].push(item);\r\n  });\r\n\r\n  return grouped;\r\n};\r\n\r\nconst TrialBalanceModal = ({ trialBalance, filters, setFilters, onClose }) => {\r\n  const [groupBy, setGroupBy] = useState('all'); // ðŸ”¹ new state for grouping\r\n\r\n  const filteredTrialBalance = trialBalance.filter((item) => {\r\n    if (!filters.dateFrom && !filters.dateTo) return true;\r\n    // If you want to filter based on journal entry transactions, \r\n    // youâ€™d need to aggregate trial balance from those, not accounts summary.\r\n    return true;\r\n  });\r\n\r\n  // ðŸ”¹ Apply grouping\r\n  const groupedData = groupByDate(filteredTrialBalance, groupBy);\r\n\r\n  const handleExport = () => {\r\n    alert('Export functionality would be implemented here');\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n      <div className=\"bg-white rounded-lg max-w-5xl w-full max-h-[90vh] overflow-y-auto\">\r\n        {/* Header */}\r\n        <div className=\"px-6 py-4 border-b border-gray-200\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900\">\r\n              Trial Balance\r\n              {filters.dateFrom && filters.dateTo\r\n                ? ` (${new Date(filters.dateFrom).toLocaleDateString()} â†’ ${new Date(filters.dateTo).toLocaleDateString()})`\r\n                : ` - As of ${new Date().toLocaleDateString()}`}\r\n            </h3>\r\n            <div className=\"flex items-center space-x-2\">\r\n              <button\r\n                onClick={handleExport}\r\n                className=\"px-3 py-1 bg-emerald-600 text-white rounded text-sm hover:bg-emerald-700 flex items-center space-x-1\"\r\n              >\r\n                <Download size={14} />\r\n                <span>Export</span>\r\n              </button>\r\n              <button\r\n                onClick={onClose}\r\n                className=\"text-gray-400 hover:text-gray-600\"\r\n              >\r\n                <X size={20} />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Date + Group Filters */}\r\n        <div className=\"px-6 py-4 border-b border-gray-200 flex items-center space-x-3\">\r\n          <input\r\n            type=\"date\"\r\n            value={filters.dateFrom || ''}\r\n            onChange={(e) => setFilters({ ...filters, dateFrom: e.target.value })}\r\n            className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-rose-500\"\r\n          />\r\n          <span className=\"text-gray-500\">to</span>\r\n          <input\r\n            type=\"date\"\r\n            value={filters.dateTo || ''}\r\n            onChange={(e) => setFilters({ ...filters, dateTo: e.target.value })}\r\n            className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-rose-500\"\r\n          />\r\n          {(filters.dateFrom || filters.dateTo) && (\r\n            <button\r\n              onClick={() => setFilters({ ...filters, dateFrom: '', dateTo: '' })}\r\n              className=\"ml-2 px-3 py-1 bg-gray-200 rounded hover:bg-gray-300 text-sm\"\r\n            >\r\n              Clear\r\n            </button>\r\n          )}\r\n\r\n          {/* ðŸ”¹ Grouping Dropdown */}\r\n          <select\r\n            value={groupBy}\r\n            onChange={(e) => setGroupBy(e.target.value)}\r\n            className=\"ml-auto px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\r\n          >\r\n            <option value=\"all\">All</option>\r\n            <option value=\"day\">Day-wise</option>\r\n            <option value=\"week\">Week-wise</option>\r\n            <option value=\"month\">Month-wise</option>\r\n            <option value=\"year\">Year-wise</option>\r\n          </select>\r\n        </div>\r\n\r\n        {/* Table */}\r\n        <div className=\"px-6 py-4\">\r\n          <div className=\"overflow-x-auto\">\r\n            {Object.keys(groupedData).map((groupKey) => (\r\n              <div key={groupKey} className=\"mb-6\">\r\n                {groupBy !== 'all' && (\r\n                  <h4 className=\"text-md font-semibold text-gray-700 mb-2\">\r\n                    {groupKey}\r\n                  </h4>\r\n                )}\r\n                <table className=\"w-full mb-2\">\r\n                  <thead className=\"bg-gray-50\">\r\n                    <tr>\r\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Account Code\r\n                      </th>\r\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Account Name\r\n                      </th>\r\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Type\r\n                      </th>\r\n                      <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Debit Total\r\n                      </th>\r\n                      <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Credit Total\r\n                      </th>\r\n                      <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Balance\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                    {groupedData[groupKey].map((item) => (\r\n                      <tr key={item.accountId}>\r\n                        <td className=\"px-4 py-4 text-sm font-medium text-gray-900\">\r\n                          {item.accountCode}\r\n                        </td>\r\n                        <td className=\"px-4 py-4 text-sm text-gray-900\">\r\n                          {item.accountName}\r\n                        </td>\r\n                        <td className=\"px-4 py-4 whitespace-nowrap\">\r\n                          <span\r\n                            className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n                              item.accountType === 'assets'\r\n                                ? 'bg-green-100 text-green-800'\r\n                                : item.accountType === 'liabilities'\r\n                                ? 'bg-red-100 text-red-800'\r\n                                : item.accountType === 'equity'\r\n                                ? 'bg-blue-100 text-blue-800'\r\n                                : item.accountType === 'revenue'\r\n                                ? 'bg-purple-100 text-purple-800'\r\n                                : item.accountType === 'expenses'\r\n                                ? 'bg-orange-100 text-orange-800'\r\n                                : 'bg-gray-100 text-gray-800'\r\n                            }`}\r\n                          >\r\n                            {item.accountType?.charAt(0).toUpperCase() +\r\n                              item.accountType?.slice(1) || 'Unknown'}\r\n                          </span>\r\n                        </td>\r\n                        <td className=\"px-4 py-4 text-sm text-gray-900 text-right\">\r\n                          PKR{' '}\r\n                          {item.debit.toLocaleString('en-PK', {\r\n                            minimumFractionDigits: 2,\r\n                            maximumFractionDigits: 2,\r\n                          })}\r\n                        </td>\r\n                        <td className=\"px-4 py-4 text-sm text-gray-900 text-right\">\r\n                          PKR{' '}\r\n                          {item.credit.toLocaleString('en-PK', {\r\n                            minimumFractionDigits: 2,\r\n                            maximumFractionDigits: 2,\r\n                          })}\r\n                        </td>\r\n                        <td className=\"px-4 py-4 text-sm font-medium text-right\">\r\n                          <span\r\n                            className={\r\n                              item.balance >= 0\r\n                                ? 'text-green-600'\r\n                                : 'text-red-600'\r\n                            }\r\n                          >\r\n                            PKR{' '}\r\n                            {Math.abs(item.balance).toLocaleString('en-PK', {\r\n                              minimumFractionDigits: 2,\r\n                              maximumFractionDigits: 2,\r\n                            })}\r\n                            {item.balance < 0 && ' (CR)'}\r\n                          </span>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrialBalanceModal;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}