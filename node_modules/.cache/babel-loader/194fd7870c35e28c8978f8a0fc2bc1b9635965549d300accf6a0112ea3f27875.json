{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Logic-Unit\\\\my-account\\\\src\\\\components\\\\AccountsReceivable\\\\RecordPaymentModal.jsx\",\n  _s = $RefreshSig$();\n// import { useState, useEffect } from 'react';\n// import { Modal, DatePicker, Input, Select, Button } from 'antd';\n// import { formatCurrency } from '../../Utility/formatters';\n\n// const { Option } = Select;\n\n// const RecordPaymentModal = ({ invoiceId, amount, onClose, onSubmit }) => {\n//   const [date, setDate] = useState(null);  \n//   const [enteredAmount, setEnteredAmount] = useState(amount.toString());\n//   const [method, setMethod] = useState('');\n//   const [account, setAccount] = useState('');\n//   const [memo, setMemo] = useState('');\n//   const [accounts, setAccounts] = useState([]);\n\n// useEffect(() => {\n//   const fetchAccounts = async () => {\n//     try {\n//       const response = await fetch('http://localhost:8080/api/accounts');\n//       const data = await response.json();\n\n//       // Only asset accounts\n//       const assetAccounts = data.filter(acct => acct.type === 'assets');\n\n//       // Build parent-child map\n//       const accountMap = {};\n//       assetAccounts.forEach(acct => accountMap[acct.id] = { ...acct, children: [] });\n\n//       assetAccounts.forEach(acct => {\n//         if (acct.parentId && accountMap[acct.parentId]) {\n//           accountMap[acct.parentId].children.push(accountMap[acct.id]);\n//         }\n//       });\n\n//       // Top-level accounts\n//       const tree = assetAccounts.filter(acct => !acct.parentId || !accountMap[acct.parentId]);\n//       setAccounts(tree);\n//     } catch (err) {\n//       console.error('Failed to fetch accounts:', err);\n//     }\n//   };\n\n//   fetchAccounts();\n// }, []);\n\n//   const handleSubmit = () => {\n//     if (!date || !enteredAmount || !method || !account) return;\n//     onSubmit(date, parseFloat(enteredAmount), method, account, memo);\n//     onClose();\n//   };\n\n//   return (\n//     <Modal\n//       title={`Record Payment for Invoice ${invoiceId}`}\n//       open={true}\n//       onCancel={onClose}\n//       footer={[\n//         <Button key=\"cancel\" onClick={onClose}>\n//           Close\n//         </Button>\n//       ]}\n//     >\n//       <div className=\"space-y-4\">\n//         <div>\n//           <label className=\"text-gray-700\">Date</label>\n//           <DatePicker \n//             className=\"w-full\"\n//             value={date}\n//             onChange={(val) => setDate(val)}\n//           />\n//         </div>\n//        <div>\n//   <label className=\"text-gray-700\">Amount</label>\n//   <Input\n//     value={enteredAmount} \n//     onChange={(e) => setEnteredAmount(e.target.value)}\n//     prefix={<span className=\"text-gray-500\">Rs</span>}\n//   />\n//   <div className=\"text-sm text-gray-500\">\n//     Invoice amount: {formatCurrency(amount)} <br />\n//     Remaining amount: {formatCurrency(amount - (parseFloat(enteredAmount) || 0))}\n//   </div>\n// </div>\n\n//         <div>\n//           <label className=\"text-gray-700\">Payment Method</label>\n//           <Select value={method} onChange={setMethod} className=\"w-full\">\n//             <Option value=\"cash\">Cash</Option>\n//             <Option value=\"check\">Check</Option>\n//             <Option value=\"eft\">Bank/Electronic Funds</Option>\n//             <Option value=\"credit\">Credit Card</Option> \n//           </Select>\n//         </div>\n//         <div>\n//           <label className=\"text-gray-700\">Deposit Account</label>\n\n//          <Select\n//                value={account}\n//                onChange={setAccount}\n//                showSearch\n//                filterOption={(input, option) =>\n//                   (option?.children ?? '').toLowerCase().includes(input.toLowerCase())\n//                }\n//                className=\"w-full\"\n//                >\n//                {accounts.map(parent =>\n//                   parent.children.length > 0 ? (\n//                      <Select.OptGroup key={parent.id} label={`${parent.code} - ${parent.name}`}>\n//                      {parent.children.map(child => (\n//                         <Option key={child.id} value={child.id}>\n//                            {child.code} - {child.name}\n//                         </Option>\n//                      ))}\n//                      </Select.OptGroup>\n//                   ) : (\n//                      <Option key={parent.id} value={parent.id}>\n//                      {parent.code} - {parent.name}\n//                      </Option>\n//                   )\n//                )}\n//          </Select>\n\n//         </div>\n//         <div>\n//           <label className=\"text-gray-700\">Memo</label>\n//           <Input.TextArea value={memo} onChange={(e) => setMemo(e.target.value)} />\n//         </div>\n\n//         <Button \n//           type=\"primary\"\n//           className=\"mt-6\"\n//           disabled={!date || !enteredAmount || !method || !account}\n//           onClick={handleSubmit}\n//         >\n//           Submit Payment\n//         </Button>\n//       </div>\n//     </Modal>\n//   );\n// };\n\n// export default RecordPaymentModal;\n\nimport { useState, useEffect } from 'react';\nimport { Modal, DatePicker, Input, Select, Button, Spin } from 'antd';\nimport { formatCurrency } from '../../Utility/formatters';\n\n// Properly destructure all needed components from Select\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option,\n  OptGroup\n} = Select;\nconst RecordPaymentModal = ({\n  invoiceId,\n  onClose,\n  onSubmit\n}) => {\n  _s();\n  const [date, setDate] = useState(null);\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [method, setMethod] = useState('');\n  const [account, setAccount] = useState('');\n  const [memo, setMemo] = useState('');\n  const [accounts, setAccounts] = useState([]);\n  const [invoiceTotal, setInvoiceTotal] = useState(0);\n  const [loading, setLoading] = useState(true);\n\n  // Replace with your actual Bearer token\n  const BEARER_TOKEN = 'your-bearer-token-here';\n\n  // Fetch invoice details from your sales API\n  useEffect(() => {\n    const fetchInvoiceDetails = async () => {\n      try {\n        // Use your existing sales API endpoint\n        const response = await fetch('https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/orders?start=0&size=200', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${BEARER_TOKEN}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const allOrders = await response.json();\n\n        // Find the specific order/invoice by ID\n        const invoiceData = allOrders.find(order => order.id === invoiceId || order.orderId === invoiceId);\n        if (invoiceData) {\n          setInvoiceTotal(invoiceData.total || 0);\n          setEnteredAmount((invoiceData.total || 0).toString());\n        } else {\n          console.error('Invoice not found');\n          setInvoiceTotal(0);\n          setEnteredAmount('0');\n        }\n        setLoading(false);\n      } catch (err) {\n        console.error('Failed to fetch invoice details:', err);\n        setLoading(false);\n      }\n    };\n    fetchInvoiceDetails();\n  }, [invoiceId]);\n\n  // Fetch accounts as before\n  useEffect(() => {\n    const fetchAccounts = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/api/accounts');\n        const data = await response.json();\n\n        // Only asset accounts\n        const assetAccounts = data.filter(acct => acct.type === 'assets');\n\n        // Build parent-child map\n        const accountMap = {};\n        assetAccounts.forEach(acct => accountMap[acct.id] = {\n          ...acct,\n          children: []\n        });\n        assetAccounts.forEach(acct => {\n          if (acct.parentId && accountMap[acct.parentId]) {\n            accountMap[acct.parentId].children.push(accountMap[acct.id]);\n          }\n        });\n\n        // Top-level accounts\n        const tree = assetAccounts.filter(acct => !acct.parentId || !accountMap[acct.parentId]);\n        setAccounts(tree);\n      } catch (err) {\n        console.error('Failed to fetch accounts:', err);\n      }\n    };\n    fetchAccounts();\n  }, []);\n  const handleSubmit = () => {\n    if (!date || !enteredAmount || !method || !account) return;\n    onSubmit(date, parseFloat(enteredAmount), method, account, memo);\n    onClose();\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      title: `Record Payment for Invoice ${invoiceId}`,\n      open: true,\n      onCancel: onClose,\n      footer: null,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center h-40\",\n        children: /*#__PURE__*/_jsxDEV(Spin, {\n          size: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: `Record Payment for Invoice ${invoiceId}`,\n    open: true,\n    onCancel: onClose,\n    footer: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: onClose,\n      children: \"Close\"\n    }, \"cancel\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }, this)],\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-gray-700\",\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          className: \"w-full\",\n          value: date,\n          onChange: val => setDate(val)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-gray-700\",\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: enteredAmount,\n          onChange: e => setEnteredAmount(e.target.value),\n          prefix: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-500\",\n            children: \"Rs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-500\",\n          children: [\"Invoice amount: \", formatCurrency(invoiceTotal), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 60\n          }, this), \"Remaining amount: \", formatCurrency(invoiceTotal - (parseFloat(enteredAmount) || 0))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-gray-700\",\n          children: \"Payment Method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: method,\n          onChange: setMethod,\n          className: \"w-full\",\n          children: [/*#__PURE__*/_jsxDEV(Option, {\n            value: \"cash\",\n            children: \"Cash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"check\",\n            children: \"Check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"eft\",\n            children: \"Bank/Electronic Funds\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"credit\",\n            children: \"Credit Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-gray-700\",\n          children: \"Deposit Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: account,\n          onChange: setAccount,\n          showSearch: true,\n          filterOption: (input, option) => {\n            var _option$children;\n            return ((_option$children = option === null || option === void 0 ? void 0 : option.children) !== null && _option$children !== void 0 ? _option$children : '').toLowerCase().includes(input.toLowerCase());\n          },\n          className: \"w-full\",\n          children: accounts.map(parent => parent.children.length > 0 ? /*#__PURE__*/_jsxDEV(OptGroup, {\n            label: `${parent.code} - ${parent.name}`,\n            children: parent.children.map(child => /*#__PURE__*/_jsxDEV(Option, {\n              value: child.id,\n              children: [child.code, \" - \", child.name]\n            }, child.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 21\n            }, this))\n          }, parent.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Option, {\n            value: parent.id,\n            children: [parent.code, \" - \", parent.name]\n          }, parent.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-gray-700\",\n          children: \"Memo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input.TextArea, {\n          value: memo,\n          onChange: e => setMemo(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        className: \"mt-6\",\n        disabled: !date || !enteredAmount || !method || !account,\n        onClick: handleSubmit,\n        children: \"Submit Payment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 5\n  }, this);\n};\n_s(RecordPaymentModal, \"XqGr1cI7FVSGVoqXbMrFTsuSUNc=\");\n_c = RecordPaymentModal;\nexport default RecordPaymentModal;\nvar _c;\n$RefreshReg$(_c, \"RecordPaymentModal\");","map":{"version":3,"names":["useState","useEffect","Modal","DatePicker","Input","Select","Button","Spin","formatCurrency","jsxDEV","_jsxDEV","Option","OptGroup","RecordPaymentModal","invoiceId","onClose","onSubmit","_s","date","setDate","enteredAmount","setEnteredAmount","method","setMethod","account","setAccount","memo","setMemo","accounts","setAccounts","invoiceTotal","setInvoiceTotal","loading","setLoading","BEARER_TOKEN","fetchInvoiceDetails","response","fetch","headers","ok","Error","status","allOrders","json","invoiceData","find","order","id","orderId","total","toString","console","error","err","fetchAccounts","data","assetAccounts","filter","acct","type","accountMap","forEach","children","parentId","push","tree","handleSubmit","parseFloat","title","open","onCancel","footer","className","size","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","val","e","target","prefix","showSearch","filterOption","input","option","_option$children","toLowerCase","includes","map","parent","length","label","code","name","child","TextArea","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Logic-Unit/my-account/src/components/AccountsReceivable/RecordPaymentModal.jsx"],"sourcesContent":["// import { useState, useEffect } from 'react';\r\n// import { Modal, DatePicker, Input, Select, Button } from 'antd';\r\n// import { formatCurrency } from '../../Utility/formatters';\r\n\r\n// const { Option } = Select;\r\n\r\n// const RecordPaymentModal = ({ invoiceId, amount, onClose, onSubmit }) => {\r\n//   const [date, setDate] = useState(null);  \r\n//   const [enteredAmount, setEnteredAmount] = useState(amount.toString());\r\n//   const [method, setMethod] = useState('');\r\n//   const [account, setAccount] = useState('');\r\n//   const [memo, setMemo] = useState('');\r\n//   const [accounts, setAccounts] = useState([]);\r\n\r\n// useEffect(() => {\r\n//   const fetchAccounts = async () => {\r\n//     try {\r\n//       const response = await fetch('http://localhost:8080/api/accounts');\r\n//       const data = await response.json();\r\n\r\n//       // Only asset accounts\r\n//       const assetAccounts = data.filter(acct => acct.type === 'assets');\r\n\r\n//       // Build parent-child map\r\n//       const accountMap = {};\r\n//       assetAccounts.forEach(acct => accountMap[acct.id] = { ...acct, children: [] });\r\n\r\n//       assetAccounts.forEach(acct => {\r\n//         if (acct.parentId && accountMap[acct.parentId]) {\r\n//           accountMap[acct.parentId].children.push(accountMap[acct.id]);\r\n//         }\r\n//       });\r\n\r\n//       // Top-level accounts\r\n//       const tree = assetAccounts.filter(acct => !acct.parentId || !accountMap[acct.parentId]);\r\n//       setAccounts(tree);\r\n//     } catch (err) {\r\n//       console.error('Failed to fetch accounts:', err);\r\n//     }\r\n//   };\r\n\r\n//   fetchAccounts();\r\n// }, []);\r\n\r\n\r\n//   const handleSubmit = () => {\r\n//     if (!date || !enteredAmount || !method || !account) return;\r\n//     onSubmit(date, parseFloat(enteredAmount), method, account, memo);\r\n//     onClose();\r\n//   };\r\n\r\n//   return (\r\n//     <Modal\r\n//       title={`Record Payment for Invoice ${invoiceId}`}\r\n//       open={true}\r\n//       onCancel={onClose}\r\n//       footer={[\r\n//         <Button key=\"cancel\" onClick={onClose}>\r\n//           Close\r\n//         </Button>\r\n//       ]}\r\n//     >\r\n//       <div className=\"space-y-4\">\r\n//         <div>\r\n//           <label className=\"text-gray-700\">Date</label>\r\n//           <DatePicker \r\n//             className=\"w-full\"\r\n//             value={date}\r\n//             onChange={(val) => setDate(val)}\r\n//           />\r\n//         </div>\r\n//        <div>\r\n//   <label className=\"text-gray-700\">Amount</label>\r\n//   <Input\r\n//     value={enteredAmount} \r\n//     onChange={(e) => setEnteredAmount(e.target.value)}\r\n//     prefix={<span className=\"text-gray-500\">Rs</span>}\r\n//   />\r\n//   <div className=\"text-sm text-gray-500\">\r\n//     Invoice amount: {formatCurrency(amount)} <br />\r\n//     Remaining amount: {formatCurrency(amount - (parseFloat(enteredAmount) || 0))}\r\n//   </div>\r\n// </div>\r\n\r\n//         <div>\r\n//           <label className=\"text-gray-700\">Payment Method</label>\r\n//           <Select value={method} onChange={setMethod} className=\"w-full\">\r\n//             <Option value=\"cash\">Cash</Option>\r\n//             <Option value=\"check\">Check</Option>\r\n//             <Option value=\"eft\">Bank/Electronic Funds</Option>\r\n//             <Option value=\"credit\">Credit Card</Option> \r\n//           </Select>\r\n//         </div>\r\n//         <div>\r\n//           <label className=\"text-gray-700\">Deposit Account</label>\r\n\r\n\r\n//          <Select\r\n//                value={account}\r\n//                onChange={setAccount}\r\n//                showSearch\r\n//                filterOption={(input, option) =>\r\n//                   (option?.children ?? '').toLowerCase().includes(input.toLowerCase())\r\n//                }\r\n//                className=\"w-full\"\r\n//                >\r\n//                {accounts.map(parent =>\r\n//                   parent.children.length > 0 ? (\r\n//                      <Select.OptGroup key={parent.id} label={`${parent.code} - ${parent.name}`}>\r\n//                      {parent.children.map(child => (\r\n//                         <Option key={child.id} value={child.id}>\r\n//                            {child.code} - {child.name}\r\n//                         </Option>\r\n//                      ))}\r\n//                      </Select.OptGroup>\r\n//                   ) : (\r\n//                      <Option key={parent.id} value={parent.id}>\r\n//                      {parent.code} - {parent.name}\r\n//                      </Option>\r\n//                   )\r\n//                )}\r\n//          </Select>\r\n\r\n\r\n//         </div>\r\n//         <div>\r\n//           <label className=\"text-gray-700\">Memo</label>\r\n//           <Input.TextArea value={memo} onChange={(e) => setMemo(e.target.value)} />\r\n//         </div>\r\n        \r\n//         <Button \r\n//           type=\"primary\"\r\n//           className=\"mt-6\"\r\n//           disabled={!date || !enteredAmount || !method || !account}\r\n//           onClick={handleSubmit}\r\n//         >\r\n//           Submit Payment\r\n//         </Button>\r\n//       </div>\r\n//     </Modal>\r\n//   );\r\n// };\r\n\r\n// export default RecordPaymentModal;\r\n\r\n\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { Modal, DatePicker, Input, Select, Button, Spin } from 'antd';\r\nimport { formatCurrency } from '../../Utility/formatters';\r\n\r\n// Properly destructure all needed components from Select\r\nconst { Option, OptGroup } = Select;\r\n\r\nconst RecordPaymentModal = ({ invoiceId, onClose, onSubmit }) => {\r\n  const [date, setDate] = useState(null);  \r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  const [method, setMethod] = useState('');\r\n  const [account, setAccount] = useState('');\r\n  const [memo, setMemo] = useState('');\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [invoiceTotal, setInvoiceTotal] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n  \r\n  // Replace with your actual Bearer token\r\n  const BEARER_TOKEN = 'your-bearer-token-here';\r\n\r\n  // Fetch invoice details from your sales API\r\n  useEffect(() => {\r\n    const fetchInvoiceDetails = async () => {\r\n      try {\r\n        // Use your existing sales API endpoint\r\n        const response = await fetch('https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/orders?start=0&size=200', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${BEARER_TOKEN}`,\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n        \r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        \r\n        const allOrders = await response.json();\r\n        \r\n        // Find the specific order/invoice by ID\r\n        const invoiceData = allOrders.find(order => order.id === invoiceId || order.orderId === invoiceId);\r\n        \r\n        if (invoiceData) {\r\n          setInvoiceTotal(invoiceData.total || 0);\r\n          setEnteredAmount((invoiceData.total || 0).toString());\r\n        } else {\r\n          console.error('Invoice not found');\r\n          setInvoiceTotal(0);\r\n          setEnteredAmount('0');\r\n        }\r\n        \r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Failed to fetch invoice details:', err);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchInvoiceDetails();\r\n  }, [invoiceId]);\r\n\r\n  // Fetch accounts as before\r\n  useEffect(() => {\r\n    const fetchAccounts = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8080/api/accounts');\r\n        const data = await response.json();\r\n\r\n        // Only asset accounts\r\n        const assetAccounts = data.filter(acct => acct.type === 'assets');\r\n\r\n        // Build parent-child map\r\n        const accountMap = {};\r\n        assetAccounts.forEach(acct => accountMap[acct.id] = { ...acct, children: [] });\r\n\r\n        assetAccounts.forEach(acct => {\r\n          if (acct.parentId && accountMap[acct.parentId]) {\r\n            accountMap[acct.parentId].children.push(accountMap[acct.id]);\r\n          }\r\n        });\r\n\r\n        // Top-level accounts\r\n        const tree = assetAccounts.filter(acct => !acct.parentId || !accountMap[acct.parentId]);\r\n        setAccounts(tree);\r\n      } catch (err) {\r\n        console.error('Failed to fetch accounts:', err);\r\n      }\r\n    };\r\n\r\n    fetchAccounts();\r\n  }, []);\r\n\r\n  const handleSubmit = () => {\r\n    if (!date || !enteredAmount || !method || !account) return;\r\n    onSubmit(date, parseFloat(enteredAmount), method, account, memo);\r\n    onClose();\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Modal\r\n        title={`Record Payment for Invoice ${invoiceId}`}\r\n        open={true}\r\n        onCancel={onClose}\r\n        footer={null}\r\n      >\r\n        <div className=\"flex justify-center items-center h-40\">\r\n          <Spin size=\"large\" />\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={`Record Payment for Invoice ${invoiceId}`}\r\n      open={true}\r\n      onCancel={onClose}\r\n      footer={[\r\n        <Button key=\"cancel\" onClick={onClose}>\r\n          Close\r\n        </Button>\r\n      ]}\r\n    >\r\n      <div className=\"space-y-4\">\r\n        <div>\r\n          <label className=\"text-gray-700\">Date</label>\r\n          <DatePicker \r\n            className=\"w-full\"\r\n            value={date}\r\n            onChange={(val) => setDate(val)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label className=\"text-gray-700\">Amount</label>\r\n          <Input\r\n            value={enteredAmount} \r\n            onChange={(e) => setEnteredAmount(e.target.value)}\r\n            prefix={<span className=\"text-gray-500\">Rs</span>}\r\n          />\r\n          <div className=\"text-sm text-gray-500\">\r\n            Invoice amount: {formatCurrency(invoiceTotal)} <br />\r\n            Remaining amount: {formatCurrency(invoiceTotal - (parseFloat(enteredAmount) || 0))}\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"text-gray-700\">Payment Method</label>\r\n          <Select value={method} onChange={setMethod} className=\"w-full\">\r\n            <Option value=\"cash\">Cash</Option>\r\n            <Option value=\"check\">Check</Option>\r\n            <Option value=\"eft\">Bank/Electronic Funds</Option>\r\n            <Option value=\"credit\">Credit Card</Option> \r\n          </Select>\r\n        </div>\r\n        <div>\r\n          <label className=\"text-gray-700\">Deposit Account</label>\r\n          <Select\r\n            value={account}\r\n            onChange={setAccount}\r\n            showSearch\r\n            filterOption={(input, option) =>\r\n              (option?.children ?? '').toLowerCase().includes(input.toLowerCase())\r\n            }\r\n            className=\"w-full\"\r\n          >\r\n            {accounts.map(parent =>\r\n              parent.children.length > 0 ? (\r\n                <OptGroup key={parent.id} label={`${parent.code} - ${parent.name}`}>\r\n                  {parent.children.map(child => (\r\n                    <Option key={child.id} value={child.id}>\r\n                      {child.code} - {child.name}\r\n                    </Option>\r\n                  ))}\r\n                </OptGroup>\r\n              ) : (\r\n                <Option key={parent.id} value={parent.id}>\r\n                  {parent.code} - {parent.name}\r\n                </Option>\r\n              )\r\n            )}\r\n          </Select>\r\n        </div>\r\n        <div>\r\n          <label className=\"text-gray-700\">Memo</label>\r\n          <Input.TextArea value={memo} onChange={(e) => setMemo(e.target.value)} />\r\n        </div>\r\n        \r\n        <Button \r\n          type=\"primary\"\r\n          className=\"mt-6\"\r\n          disabled={!date || !enteredAmount || !method || !account}\r\n          onClick={handleSubmit}\r\n        >\r\n          Submit Payment\r\n        </Button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default RecordPaymentModal;"],"mappings":";;AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,KAAK,EAAEC,UAAU,EAAEC,KAAK,EAAEC,MAAM,EAAEC,MAAM,EAAEC,IAAI,QAAQ,MAAM;AACrE,SAASC,cAAc,QAAQ,0BAA0B;;AAEzD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAM;EAAEC,MAAM;EAAEC;AAAS,CAAC,GAAGP,MAAM;AAEnC,MAAMQ,kBAAkB,GAAGA,CAAC;EAAEC,SAAS;EAAEC,OAAO;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACoB,aAAa,EAAEC,gBAAgB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACsB,MAAM,EAAEC,SAAS,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}