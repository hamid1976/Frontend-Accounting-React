{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Logic-Unit\\\\my-account\\\\src\\\\pages\\\\AccountsReceivable.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { \n//   Users, \n//   DollarSign, \n//   CreditCard, \n//   AlertTriangle, \n//   Clock, \n//   Plus, \n//   Search, \n//   Filter, \n//   Eye, \n//   Edit, \n//   Download,\n//   CheckCircle,\n//   XCircle,\n//   Calendar,\n//   FileText,\n//   TrendingUp,\n//   Mail,\n//   Phone\n// } from 'lucide-react';\n// import CreateInvoiceModal from '../components/CreateInvoiceModal';\n// import InvoiceModal from '../components/InvoiceModal';\n\n// const AccountsReceivable = () => {\n//   const [customers, setCustomers] = useState([]);\n//   const [invoices, setInvoices] = useState([]);\n//   const [payments, setPayments] = useState([]);\n//   const [selectedCustomer, setSelectedCustomer] = useState(null);\n//   const [activeTab, setActiveTab] = useState('overview');\n//   const [viewInvoice, setViewInvoice] = useState(null);\n\n//   const [filters, setFilters] = useState({\n//     customerType: 'all',\n//     status: 'all',\n//     dateRange: '30',\n//     searchTerm: ''\n//   });\n//   const handleCreateInvoice = () => {\n//   // Find the customer name for the invoice\n//   const customer = customers.find(c => c.id === newInvoice.customerId);\n//   if (!customer) {\n//     alert('Please select a customer');\n//     return;\n//   }\n//   // Generate a new invoice ID (simple example)\n//   const nextId = `INV-${new Date().getFullYear()}-${String(invoices.length + 1).padStart(3, '0')}`;\n//   const invoiceTotal = calculateInvoiceTotal();\n\n//   const newInvoiceData = {\n//     id: nextId,\n//     customerId: customer.id,\n//     customerName: customer.name,\n//     date: new Date().toISOString().slice(0, 10),\n//     dueDate: newInvoice.dueDate,\n//     amount: invoiceTotal,\n//     paid: 0,\n//     balance: invoiceTotal,\n//     status: 'outstanding',\n//     daysOverdue: 0,\n//     paymentTerms: customer.paymentTerms,\n//     items: newInvoice.items,\n//     notes: newInvoice.notes,\n//     source: 'manual'\n//   };\n\n//   // Append to invoices\n//   setInvoices(prev => [...prev, newInvoiceData]);\n\n//   // Optionally update customer AR data (totalOwed, invoiceCount, etc.)\n//   setCustomers(prev =>\n//     prev.map(c =>\n//       c.id === customer.id\n//         ? {\n//             ...c,\n//             totalOwed: c.totalOwed + invoiceTotal,\n//             invoiceCount: c.invoiceCount + 1\n//           }\n//         : c\n//     )\n//   );\n\n//   // Reset the form\n//   setNewInvoice({\n//     customerId: '',\n//     dueDate: '',\n//     items: [{ description: '', quantity: 1, price: 0, total: 0 }],\n//     notes: ''\n//   });\n\n//   setShowInvoiceForm(false);\n//   alert('Invoice created successfully!');\n// };\n\n//   // const handleCreateInvoice = (invoice) => {\n//   //   setInvoices(prev => [\n//   //     {\n//   //       ...invoice,\n//   //       id: `INV-${new Date().getFullYear()}-${String(prev.length + 1).padStart(3, '0')}`\n//   //     },\n//   //     ...prev\n//   //   ]);\n//   // };\n\n//   const [showInvoiceForm, setShowInvoiceForm] = useState(false);\n//   const [newInvoice, setNewInvoice] = useState({\n//     customerId: '',\n//     dueDate: '',\n//     items: [{ description: '', quantity: 1, price: 0, total: 0 }],\n//     notes: ''\n//   });\n\n//   useEffect(() => {\n//     loadSampleData();\n//   }, []);\n\n//   const loadSampleData = () => {\n//     // Sample Customers with AR data\n//     const sampleCustomers = [\n//       {\n//         id: 'CUST001',\n//         name: 'Al Noor Medical Center',\n//         email: 'finance@alnoor.com',\n//         phone: '+966-11-123-4567',\n//         address: 'King Fahd Road, Riyadh',\n//         customerType: 'corporate',\n//         creditLimit: 50000,\n//         paymentTerms: 30,\n//         totalOwed: 15750.00,\n//         overdueAmount: 5250.00,\n//         lastPayment: '2025-01-10',\n//         creditStatus: 'good',\n//         accountBalance: -15750.00,\n//         invoiceCount: 8,\n//         avgPaymentDays: 25\n//       },\n//       {\n//         id: 'CUST002',\n//         name: 'Dr. Ahmed Clinic',\n//         email: 'dr.ahmed@clinic.com',\n//         phone: '+966-12-987-6543',\n//         address: 'Prince Sultan Street, Jeddah',\n//         customerType: 'small_business',\n//         creditLimit: 20000,\n//         paymentTerms: 15,\n//         totalOwed: 8900.00,\n//         overdueAmount: 2100.00,\n//         lastPayment: '2025-01-12',\n//         creditStatus: 'watch',\n//         accountBalance: -8900.00,\n//         invoiceCount: 5,\n//         avgPaymentDays: 18\n//       },\n//       {\n//         id: 'CUST003',\n//         name: 'Pharmacy Plus Chain',\n//         email: 'accounts@pharmacyplus.sa',\n//         phone: '+966-13-555-0123',\n//         address: 'Al Khobar, Eastern Province',\n//         customerType: 'corporate',\n//         creditLimit: 75000,\n//         paymentTerms: 45,\n//         totalOwed: 32100.00,\n//         overdueAmount: 0,\n//         lastPayment: '2025-01-14',\n//         creditStatus: 'excellent',\n//         accountBalance: -32100.00,\n//         invoiceCount: 12,\n//         avgPaymentDays: 35\n//       },\n//       {\n//         id: 'CUST004',\n//         name: 'Walk-in Customer',\n//         email: 'cash@pos.system',\n//         phone: '+966-50-000-0000',\n//         address: 'Point of Sale',\n//         customerType: 'cash',\n//         creditLimit: 0,\n//         paymentTerms: 0,\n//         totalOwed: 0,\n//         overdueAmount: 0,\n//         lastPayment: '2025-01-15',\n//         creditStatus: 'cash_only',\n//         accountBalance: 0,\n//         invoiceCount: 0,\n//         avgPaymentDays: 0\n//       }\n//     ];\n\n//     // Sample Invoices\n//     const sampleInvoices = [\n//       {\n//         id: 'INV-2025-001',\n//         customerId: 'CUST001',\n//         customerName: 'Al Noor Medical Center',\n//         date: '2025-01-15',\n//         dueDate: '2025-02-14',\n//         amount: 5250.00,\n//         paid: 0,\n//         balance: 5250.00,\n//         status: 'outstanding',\n//         daysOverdue: 0,\n//         paymentTerms: 30,\n//         items: [\n//           { description: 'A2A 25MG TAB', quantity: 100, price: 15.00, total: 1500.00 },\n//           { description: 'AALBUMIN 50ML', quantity: 150, price: 25.00, total: 3750.00 }\n//         ],\n//         notes: 'Monthly medical supplies order',\n//         source: 'manual'\n//       },\n//       {\n//         id: 'INV-2025-002',\n//         customerId: 'CUST002',\n//         customerName: 'Dr. Ahmed Clinic',\n//         date: '2025-01-10',\n//         dueDate: '2025-01-25',\n//         amount: 2100.00,\n//         paid: 0,\n//         balance: 2100.00,\n//         status: 'overdue',\n//         daysOverdue: 5,\n//         paymentTerms: 15,\n//         items: [\n//           { description: 'ABAKTAL INJ', quantity: 50, price: 30.00, total: 1500.00 },\n//           { description: 'AARAM PLUS', quantity: 20, price: 30.00, total: 600.00 }\n//         ],\n//         notes: 'Urgent medical supplies',\n//         source: 'pos'\n//       },\n//       {\n//         id: 'POS-2025-003',\n//         customerId: 'CUST001',\n//         customerName: 'Al Noor Medical Center',\n//         date: '2025-01-12',\n//         dueDate: '2025-02-11',\n//         amount: 1850.00,\n//         paid: 1850.00,\n//         balance: 0,\n//         status: 'paid',\n//         daysOverdue: 0,\n//         paymentTerms: 30,\n//         items: [\n//           { description: 'Medical supplies - POS Sale', quantity: 1, price: 1850.00, total: 1850.00 }\n//         ],\n//         notes: 'Direct POS sale - Credit account',\n//         source: 'pos'\n//       }\n//     ];\n\n//     // Sample Payments\n//     const samplePayments = [\n//       {\n//         id: 'PAY001',\n//         customerId: 'CUST001',\n//         customerName: 'Al Noor Medical Center',\n//         invoiceId: 'POS-2025-003',\n//         date: '2025-01-14',\n//         amount: 1850.00,\n//         method: 'bank_transfer',\n//         reference: 'TXN123456789',\n//         status: 'cleared',\n//         notes: 'Payment for POS sale'\n//       },\n//       {\n//         id: 'PAY002',\n//         customerId: 'CUST003',\n//         customerName: 'Pharmacy Plus Chain',\n//         invoiceId: 'INV-2024-045',\n//         date: '2025-01-12',\n//         amount: 15600.00,\n//         method: 'check',\n//         reference: 'CHK-789123',\n//         status: 'cleared',\n//         notes: 'December invoice payment'\n//       }\n//     ];\n\n//     setCustomers(sampleCustomers);\n//     setInvoices(sampleInvoices);\n//     setPayments(samplePayments);\n//   };\n\n//   const calculateARSummary = () => {\n//     const totalAR = customers.reduce((sum, customer) => sum + customer.totalOwed, 0);\n//     const totalOverdue = customers.reduce((sum, customer) => sum + customer.overdueAmount, 0);\n//     const customersWithBalance = customers.filter(customer => customer.totalOwed > 0).length;\n//     const avgDaysOutstanding = customers.reduce((sum, customer) => sum + customer.avgPaymentDays, 0) / customers.length;\n\n//     return {\n//       totalAR,\n//       totalOverdue,\n//       customersWithBalance,\n//       avgDaysOutstanding: Math.round(avgDaysOutstanding)\n//     };\n//   };\n\n//   const getAgingData = () => {\n//     const aging = {\n//       current: 0,\n//       days30: 0,\n//       days60: 0,\n//       days90: 0,\n//       over90: 0\n//     };\n\n//     invoices.forEach(invoice => {\n//       if (invoice.status === 'paid') return;\n\n//       const daysPastDue = invoice.daysOverdue || 0;\n\n//       if (daysPastDue <= 0) {\n//         aging.current += invoice.balance;\n//       } else if (daysPastDue <= 30) {\n//         aging.days30 += invoice.balance;\n//       } else if (daysPastDue <= 60) {\n//         aging.days60 += invoice.balance;\n//       } else if (daysPastDue <= 90) {\n//         aging.days90 += invoice.balance;\n//       } else {\n//         aging.over90 += invoice.balance;\n//       }\n//     });\n\n//     return aging;\n//   };\n\n//   const getFilteredCustomers = () => {\n//     let filtered = [...customers];\n\n//     if (filters.customerType !== 'all') {\n//       filtered = filtered.filter(customer => customer.customerType === filters.customerType);\n//     }\n\n//     if (filters.status !== 'all') {\n//       filtered = filtered.filter(customer => {\n//         if (filters.status === 'overdue') return customer.overdueAmount > 0;\n//         if (filters.status === 'current') return customer.totalOwed > 0 && customer.overdueAmount === 0;\n//         if (filters.status === 'paid_up') return customer.totalOwed === 0;\n//         return true;\n//       });\n//     }\n\n//     if (filters.searchTerm) {\n//       const term = filters.searchTerm.toLowerCase();\n//       filtered = filtered.filter(customer =>\n//         customer.name.toLowerCase().includes(term) ||\n//         customer.email.toLowerCase().includes(term) ||\n//         customer.id.toLowerCase().includes(term)\n//       );\n//     }\n\n//     return filtered;\n//   };\n\n//   const getCreditStatusColor = (status) => {\n//     switch (status) {\n//       case 'excellent': return 'bg-green-100 text-green-800';\n//       case 'good': return 'bg-blue-100 text-blue-800';\n//       case 'watch': return 'bg-yellow-100 text-yellow-800';\n//       case 'hold': return 'bg-red-100 text-red-800';\n//       case 'cash_only': return 'bg-gray-100 text-gray-800';\n//       default: return 'bg-gray-100 text-gray-800';\n//     }\n//   };\n\n//   const getInvoiceStatusColor = (status) => {\n//     switch (status) {\n//       case 'paid': return 'bg-green-100 text-green-800';\n//       case 'outstanding': return 'bg-blue-100 text-blue-800';\n//       case 'overdue': return 'bg-red-100 text-red-800';\n//       case 'partial': return 'bg-yellow-100 text-yellow-800';\n//       default: return 'bg-gray-100 text-gray-800';\n//     }\n//   };\n\n//   const addInvoiceItem = () => {\n//     setNewInvoice({\n//       ...newInvoice,\n//       items: [...newInvoice.items, { description: '', quantity: 1, price: 0, total: 0 }]\n//     });\n//   };\n\n//   const updateInvoiceItem = (index, field, value) => {\n//     const updatedItems = [...newInvoice.items];\n//     updatedItems[index] = { ...updatedItems[index], [field]: value };\n\n//     if (field === 'quantity' || field === 'price') {\n//       updatedItems[index].total = updatedItems[index].quantity * updatedItems[index].price;\n//     }\n\n//     setNewInvoice({ ...newInvoice, items: updatedItems });\n//   };\n\n//   const calculateInvoiceTotal = () => {\n//     return newInvoice.items.reduce((sum, item) => sum + item.total, 0);\n//   };\n\n//   const summary = calculateARSummary();\n//   const aging = getAgingData();\n//   const filteredCustomers = getFilteredCustomers();\n\n//   return (\n//     <div className=\"max-w-7xl mx-auto p-6 bg-white\">\n//       {/* Header */}\n//       <div className=\"mb-8\">\n//         <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\n//           <CreditCard className=\"mr-3 text-emerald-600\" />\n//           Accounts Receivable\n//         </h1>\n//         <p className=\"text-gray-600\">Manage customer invoicing, payments, and credit limits</p>\n//       </div>\n\n//       {/* Summary Cards */}\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n//         <div className=\"bg-blue-50 p-6 rounded-lg border border-blue-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-blue-600 text-sm font-medium\">Total A/R</p>\n//               <p className=\"text-2xl font-bold text-blue-900\">${summary.totalAR.toFixed(2)}</p>\n//             </div>\n//             <DollarSign className=\"text-blue-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-blue-700 mt-2\">{summary.customersWithBalance} customers with balances</p>\n//         </div>\n\n//         <div className=\"bg-red-50 p-6 rounded-lg border border-red-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-red-600 text-sm font-medium\">Overdue Amount</p>\n//               <p className=\"text-2xl font-bold text-red-900\">${summary.totalOverdue.toFixed(2)}</p>\n//             </div>\n//             <AlertTriangle className=\"text-red-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-red-700 mt-2\">\n//             {((summary.totalOverdue / summary.totalAR) * 100).toFixed(1)}% of total A/R\n//           </p>\n//         </div>\n\n//         <div className=\"bg-green-50 p-6 rounded-lg border border-green-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-green-600 text-sm font-medium\">Avg. Days Outstanding</p>\n//               <p className=\"text-2xl font-bold text-green-900\">{summary.avgDaysOutstanding}</p>\n//             </div>\n//             <Clock className=\"text-green-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-green-700 mt-2\">Collection performance</p>\n//         </div>\n\n//         <div className=\"bg-purple-50 p-6 rounded-lg border border-purple-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-purple-600 text-sm font-medium\">Active Customers</p>\n//               <p className=\"text-2xl font-bold text-purple-900\">{customers.length}</p>\n//             </div>\n//             <Users className=\"text-purple-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-purple-700 mt-2\">Total customer accounts</p>\n//         </div>\n//       </div>\n\n//       {/* Tabs */}\n//       <div className=\"mb-6\">\n//         <div className=\"border-b border-gray-200\">\n//           <nav className=\"-mb-px flex space-x-8\">\n//             {[\n//               { id: 'overview', name: 'Customer Overview', icon: Users },\n//               { id: 'invoices', name: 'Invoices', icon: FileText },\n//               { id: 'aging', name: 'Aging Report', icon: Clock },\n//               { id: 'payments', name: 'Payments', icon: CheckCircle }\n//             ].map((tab) => (\n//               <button\n//                 key={tab.id}\n//                 onClick={() => setActiveTab(tab.id)}\n//                 className={`flex items-center py-2 px-1 border-b-2 font-medium text-sm ${\n//                   activeTab === tab.id\n//                     ? 'border-emerald-500 text-emerald-600'\n//                     : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n//                 }`}\n//               >\n//                 <tab.icon className=\"mr-2\" size={16} />\n//                 {tab.name}\n//               </button>\n//             ))}\n//           </nav>\n//         </div>\n//       </div>\n\n//       {/* Tab Content */}\n//       {activeTab === 'overview' && (\n//         <div>\n//           {/* Filters */}\n//           <div className=\"flex flex-wrap items-center gap-4 mb-6\">\n//             <div className=\"relative\">\n//               <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\n//               <input\n//                 type=\"text\"\n//                 placeholder=\"Search customers...\"\n//                 value={filters.searchTerm}\n//                 onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\n//                 className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               />\n//             </div>\n\n//             <select\n//               value={filters.customerType}\n//               onChange={(e) => setFilters({ ...filters, customerType: e.target.value })}\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//             >\n//               <option value=\"all\">All Customer Types</option>\n//               <option value=\"corporate\">Corporate</option>\n//               <option value=\"small_business\">Small Business</option>\n//               <option value=\"individual\">Individual</option>\n//               <option value=\"cash\">Cash Only</option>\n//             </select>\n\n//             <select\n//               value={filters.status}\n//               onChange={(e) => setFilters({ ...filters, status: e.target.value })}\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//             >\n//               <option value=\"all\">All Statuses</option>\n//               <option value=\"current\">Current</option>\n//               <option value=\"overdue\">Overdue</option>\n//               <option value=\"paid_up\">Paid Up</option>\n//             </select>\n\n//             <button\n//               onClick={() => setShowInvoiceForm(true)}\n//               className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\n//             >\n//               <Plus size={16} />\n//               <span>New Invoice</span>\n//             </button>\n//           </div>\n\n//           {/* Customer List */}\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//             <div className=\"overflow-x-auto\">\n//               <table className=\"w-full\">\n//                 <thead className=\"bg-gray-50\">\n//                   <tr>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Customer\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Type\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Credit Limit\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Balance\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Overdue\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Credit Status\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Last Payment\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Actions\n//                     </th>\n//                   </tr>\n//                 </thead>\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\n//                   {filteredCustomers.map((customer) => (\n//                     <tr key={customer.id} className=\"hover:bg-gray-50\">\n//                       <td className=\"px-6 py-4\">\n//                         <div>\n//                           <div className=\"text-sm font-medium text-gray-900\">{customer.name}</div>\n//                           <div className=\"text-sm text-gray-500\">{customer.id}</div>\n//                           <div className=\"text-xs text-gray-400 flex items-center mt-1\">\n//                             <Mail className=\"mr-1\" size={12} />\n//                             {customer.email}\n//                           </div>\n//                         </div>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-gray-100 text-gray-800\">\n//                           {customer.customerType.replace('_', ' ')}\n//                         </span>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         ${customer.creditLimit.toLocaleString()}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <div className=\"text-sm font-medium text-gray-900\">\n//                           ${customer.totalOwed.toFixed(2)}\n//                         </div>\n//                         <div className=\"text-xs text-gray-500\">\n//                           {customer.invoiceCount} invoices\n//                         </div>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         {customer.overdueAmount > 0 ? (\n//                           <span className=\"text-red-600 font-medium\">\n//                             ${customer.overdueAmount.toFixed(2)}\n//                           </span>\n//                         ) : (\n//                           <span className=\"text-green-600\">$0.00</span>\n//                         )}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(customer.creditStatus)}`}>\n//                           {customer.creditStatus.replace('_', ' ')}\n//                         </span>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {customer.lastPayment}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n//                         <button\n//                           onClick={() => setSelectedCustomer(customer)}\n//                           className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\n//                         >\n//                           <Eye size={16} />\n//                         </button>\n//                         <button className=\"text-blue-600 hover:text-blue-900\">\n//                           <Edit size={16} />\n//                         </button>\n//                       </td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {activeTab === 'aging' && (\n//         <div>\n//           <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n//             {/* Aging Summary */}\n//             <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n//               <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Aging Summary</h3>\n//               <div className=\"space-y-4\">\n//                 <div className=\"flex justify-between items-center p-3 bg-green-50 rounded\">\n//                   <span className=\"font-medium text-green-800\">Current (0-30 days)</span>\n//                   <span className=\"font-bold text-green-900\">${aging.current.toFixed(2)}</span>\n//                 </div>\n//                 <div className=\"flex justify-between items-center p-3 bg-yellow-50 rounded\">\n//                   <span className=\"font-medium text-yellow-800\">31-60 days</span>\n//                   <span className=\"font-bold text-yellow-900\">${aging.days30.toFixed(2)}</span>\n//                 </div>\n//                 <div className=\"flex justify-between items-center p-3 bg-orange-50 rounded\">\n//                   <span className=\"font-medium text-orange-800\">61-90 days</span>\n//                   <span className=\"font-bold text-orange-900\">${aging.days60.toFixed(2)}</span>\n//                 </div>\n//                 <div className=\"flex justify-between items-center p-3 bg-red-50 rounded\">\n//                   <span className=\"font-medium text-red-800\">Over 90 days</span>\n//                   <span className=\"font-bold text-red-900\">${aging.over90.toFixed(2)}</span>\n//                 </div>\n//               </div>\n//               <div className=\"mt-4 pt-4 border-t\">\n//                 <div className=\"flex justify-between items-center\">\n//                   <span className=\"text-lg font-semibold text-gray-900\">Total Outstanding</span>\n//                   <span className=\"text-xl font-bold text-gray-900\">\n//                     ${(aging.current + aging.days30 + aging.days60 + aging.days90 + aging.over90).toFixed(2)}\n//                   </span>\n//                 </div>\n//               </div>\n//             </div>\n\n//             {/* Collection Priority */}\n//             <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n//               <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Collection Priority</h3>\n//               <div className=\"space-y-3\">\n//                 {customers\n//                   .filter(customer => customer.overdueAmount > 0)\n//                   .sort((a, b) => b.overdueAmount - a.overdueAmount)\n//                   .slice(0, 5)\n//                   .map((customer, index) => (\n//                     <div key={customer.id} className=\"flex items-center justify-between p-3 bg-red-50 rounded\">\n//                       <div>\n//                         <div className=\"font-medium text-gray-900\">{customer.name}</div>\n//                         <div className=\"text-sm text-gray-500\">\n//                           Last payment: {customer.lastPayment}\n//                         </div>\n//                       </div>\n//                       <div className=\"text-right\">\n//                         <div className=\"font-bold text-red-900\">${customer.overdueAmount.toFixed(2)}</div>\n//                         <div className=\"text-xs text-red-700\">#{index + 1} Priority</div>\n//                       </div>\n//                     </div>\n//                   ))}\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {activeTab === 'invoices' && (\n//         <div>\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <h3 className=\"text-lg font-semibold text-gray-900\">Recent Invoices</h3>\n//             </div>\n//             <div className=\"overflow-x-auto\">\n//               <table className=\"w-full\">\n//                 <thead className=\"bg-gray-50\">\n//                   <tr>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Invoice #\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Customer\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Date\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Due Date\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Amount\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Balance\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Status\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Actions\n//                     </th>\n//                   </tr>\n//                 </thead>\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\n//                   {invoices.map((invoice) => (\n//                     <tr key={invoice.id} className=\"hover:bg-gray-50\">\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <div className=\"text-sm font-medium text-gray-900\">{invoice.id}</div>\n//                         <div className=\"text-xs text-gray-500\">{invoice.source}</div>\n//                       </td>\n//                       <td className=\"px-6 py-4\">\n//                         <div className=\"text-sm font-medium text-gray-900\">{invoice.customerName}</div>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {invoice.date}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {invoice.dueDate}\n//                         {invoice.daysOverdue > 0 && (\n//                           <div className=\"text-xs text-red-600\">\n//                             {invoice.daysOverdue} days overdue\n//                           </div>\n//                         )}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         ${invoice.amount.toFixed(2)}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n//                         {invoice.balance > 0 ? (\n//                           <span className=\"text-red-600\">${invoice.balance.toFixed(2)}</span>\n//                         ) : (\n//                           <span className=\"text-green-600\">$0.00</span>\n//                         )}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${getInvoiceStatusColor(invoice.status)}`}>\n//                           {invoice.status}\n//                         </span>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n//                           <button\n//                               className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\n//                               onClick={() => setViewInvoice(invoice)}\n//                             >\n//                               <Eye size={16} />\n//                             </button>\n//                         <button className=\"text-blue-600 hover:text-blue-900\">\n//                           <Download size={16} />\n//                         </button>\n//                       </td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           </div>\n//           {/* View Invoice Modal */}\n//           <InvoiceModal\n//             invoice={viewInvoice}\n//             onClose={() => setViewInvoice(null)}\n//           />\n//         </div>\n//       )}\n\n//       {/* Create Invoice Modal */}\n//       {showInvoiceForm && (\n//         <CreateInvoiceModal\n//           customers={customers}\n//           onClose={() => setShowInvoiceForm(false)}\n//           onCreate={handleCreateInvoice}\n//         />\n\n//       )}\n\n//       {activeTab === 'payments' && (\n//         <div>\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <h3 className=\"text-lg font-semibold text-gray-900\">Recent Payments</h3>\n//             </div>\n//             <div className=\"overflow-x-auto\">\n//               <table className=\"w-full\">\n//                 <thead className=\"bg-gray-50\">\n//                   <tr>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Payment ID\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Customer\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Invoice\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Date\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Amount\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Method\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Status\n//                     </th>\n//                   </tr>\n//                 </thead>\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\n//                   {payments.map((payment) => (\n//                     <tr key={payment.id} className=\"hover:bg-gray-50\">\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n//                         {payment.id}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {payment.customerName}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {payment.invoiceId}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {payment.date}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         ${payment.amount.toFixed(2)}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-blue-100 text-blue-800\">\n//                           {payment.method.replace('_', ' ')}\n//                         </span>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                           payment.status === 'cleared' ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n//                         }`}>\n//                           {payment.status}\n//                         </span>\n//                       </td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Customer Detail Modal */}\n//       {selectedCustomer && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <div className=\"flex items-center justify-between\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\n//                   Customer Details - {selectedCustomer.name}\n//                 </h3>\n//                 <button\n//                   onClick={() => setSelectedCustomer(null)}\n//                   className=\"text-gray-400 hover:text-gray-600\"\n//                 >\n//                   <XCircle size={20} />\n//                 </button>\n//               </div>\n//             </div>\n\n//             <div className=\"px-6 py-4\">\n//               {/* Customer Info Grid */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n//                 <div className=\"space-y-4\">\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer ID</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.id}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Email</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.email}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Phone</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.phone}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Address</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.address}</p>\n//                   </div>\n//                 </div>\n\n//                 <div className=\"space-y-4\">\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer Type</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.customerType.replace('_', ' ')}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Limit</label>\n//                     <p className=\"text-sm text-gray-900\">${selectedCustomer.creditLimit.toLocaleString()}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Payment Terms</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.paymentTerms} days</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Status</label>\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(selectedCustomer.creditStatus)}`}>\n//                       {selectedCustomer.creditStatus.replace('_', ' ')}\n//                     </span>\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Financial Summary */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n//                 <div className=\"bg-blue-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-blue-600\">Current Balance</div>\n//                   <div className=\"text-xl font-bold text-blue-900\">\n//                     ${selectedCustomer.totalOwed.toFixed(2)}\n//                   </div>\n//                 </div>\n//                 <div className=\"bg-red-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-red-600\">Overdue Amount</div>\n//                   <div className=\"text-xl font-bold text-red-900\">\n//                     ${selectedCustomer.overdueAmount.toFixed(2)}\n//                   </div>\n//                 </div>\n//                 <div className=\"bg-green-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-green-600\">Credit Available</div>\n//                   <div className=\"text-xl font-bold text-green-900\">\n//                     ${(selectedCustomer.creditLimit - selectedCustomer.totalOwed).toFixed(2)}\n//                   </div>\n//                 </div>\n//                 <div className=\"bg-purple-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-purple-600\">Avg Payment Days</div>\n//                   <div className=\"text-xl font-bold text-purple-900\">\n//                     {selectedCustomer.avgPaymentDays}\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Customer Invoices */}\n//               <div className=\"mb-6\">\n//                 <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Customer Invoices</h4>\n//                 <div className=\"overflow-x-auto\">\n//                   <table className=\"w-full border border-gray-200 rounded\">\n//                     <thead className=\"bg-gray-50\">\n//                       <tr>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Invoice</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Date</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Due Date</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Amount</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Balance</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Status</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody className=\"divide-y divide-gray-200\">\n//                       {invoices\n//                         .filter(inv => inv.customerId === selectedCustomer.id)\n//                         .map((invoice) => (\n//                           <tr key={invoice.id}>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{invoice.id}</td>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{invoice.date}</td>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{invoice.dueDate}</td>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">${invoice.amount.toFixed(2)}</td>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">${invoice.balance.toFixed(2)}</td>\n//                             <td className=\"px-4 py-2\">\n//                               <span className={`px-2 py-1 text-xs font-medium rounded-full ${getInvoiceStatusColor(invoice.status)}`}>\n//                                 {invoice.status}\n//                               </span>\n//                             </td>\n//                           </tr>\n//                         ))}\n//                     </tbody>\n//                   </table>\n//                 </div>\n//               </div>\n\n//               {/* Action Buttons */}\n//               <div className=\"flex space-x-3\">\n//                 <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\n//                   <Plus size={16} />\n//                   <span>New Invoice</span>\n//                 </button>\n//                 <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\n//                   <CheckCircle size={16} />\n//                   <span>Record Payment</span>\n//                 </button>\n//                 <button className=\"px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 flex items-center space-x-2\">\n//                   <Mail size={16} />\n//                   <span>Send Statement</span>\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* New Invoice Form */}\n//       {showInvoiceForm && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <div className=\"flex items-center justify-between\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">Create New Invoice</h3>\n//                 <button\n//                   onClick={() => setShowInvoiceForm(false)}\n//                   className=\"text-gray-400 hover:text-gray-600\"\n//                 >\n//                   <XCircle size={20} />\n//                 </button>\n//               </div>\n//             </div>\n\n//             <div className=\"px-6 py-4\">\n//               {/* Invoice Header */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\n//                 <div>\n//                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">Customer *</label>\n//                   <select\n//                     value={newInvoice.customerId}\n//                     onChange={(e) => setNewInvoice({ ...newInvoice, customerId: e.target.value })}\n//                     className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//                   >\n//                     <option value=\"\">Select Customer</option>\n//                     {customers.filter(c => c.customerType !== 'cash').map(customer => (\n//                       <option key={customer.id} value={customer.id}>\n//                         {customer.name} ({customer.id})\n//                       </option>\n//                     ))}\n//                   </select>\n//                 </div>\n//                 <div>\n//                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">Due Date *</label>\n//                   <input\n//                     type=\"date\"\n//                     value={newInvoice.dueDate}\n//                     onChange={(e) => setNewInvoice({ ...newInvoice, dueDate: e.target.value })}\n//                     className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//                   />\n//                 </div>\n//               </div>\n\n//               {/* Invoice Items */}\n//               <div className=\"mb-6\">\n//                 <label className=\"block text-sm font-medium text-gray-700 mb-2\">Invoice Items</label>\n//                 <div className=\"space-y-3\">\n//                   {newInvoice.items.map((item, index) => (\n//                     <div key={index} className=\"grid grid-cols-12 gap-2 items-center bg-gray-50 p-3 rounded\">\n//                       <div className=\"col-span-5\">\n//                         <input\n//                           type=\"text\"\n//                           value={item.description}\n//                           onChange={(e) => updateInvoiceItem(index, 'description', e.target.value)}\n//                           placeholder=\"Item description\"\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                         />\n//                       </div>\n//                       <div className=\"col-span-2\">\n//                         <input\n//                           type=\"number\"\n//                           value={item.quantity}\n//                           onChange={(e) => updateInvoiceItem(index, 'quantity', parseFloat(e.target.value) || 0)}\n//                           placeholder=\"Qty\"\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                         />\n//                       </div>\n//                       <div className=\"col-span-2\">\n//                         <input\n//                           type=\"number\"\n//                           step=\"0.01\"\n//                           value={item.price}\n//                           onChange={(e) => updateInvoiceItem(index, 'price', parseFloat(e.target.value) || 0)}\n//                           placeholder=\"Price\"\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                         />\n//                       </div>\n//                       <div className=\"col-span-2\">\n//                         <input\n//                           type=\"number\"\n//                           step=\"0.01\"\n//                           value={item.total}\n//                           readOnly\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm bg-gray-100\"\n//                         />\n//                       </div>\n//                       <div className=\"col-span-1\">\n//                         {newInvoice.items.length > 1 && (\n//                           <button\n//                             onClick={() => {\n//                               const updatedItems = newInvoice.items.filter((_, i) => i !== index);\n//                               setNewInvoice({ ...newInvoice, items: updatedItems });\n//                             }}\n//                             className=\"p-1 text-red-600 hover:bg-red-100 rounded\"\n//                           >\n//                             <XCircle size={14} />\n//                           </button>\n//                         )}\n//                       </div>\n//                     </div>\n//                   ))}\n//                 </div>\n\n//                 <div className=\"flex justify-between items-center mt-3\">\n//                   <button\n//                     onClick={addInvoiceItem}\n//                     className=\"px-3 py-1 text-sm bg-emerald-100 text-emerald-700 rounded hover:bg-emerald-200 flex items-center space-x-1\"\n//                   >\n//                     <Plus size={14} />\n//                     <span>Add Item</span>\n//                   </button>\n\n//                   <div className=\"text-lg font-semibold\">\n//                     Total: ${calculateInvoiceTotal().toFixed(2)}\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Notes */}\n//               <div className=\"mb-6\">\n//                 <label className=\"block text-sm font-medium text-gray-700 mb-1\">Notes</label>\n//                 <textarea\n//                   value={newInvoice.notes}\n//                   onChange={(e) => setNewInvoice({ ...newInvoice, notes: e.target.value })}\n//                   rows={3}\n//                   placeholder=\"Additional notes...\"\n//                   className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//                 />\n//               </div>\n\n//               {/* Action Buttons */}\n//               <div className=\"flex space-x-3\">\n//                 <button\n//                   onClick={() => {\n//                     handleCreateInvoice()\n\n//                     // Save invoice logic would go here\n//                     alert('Invoice created successfully!');\n//                   //  setShowInvoiceForm(false);\n//                   }}\n//                   className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\n//                 >\n//                   <CheckCircle size={16} />\n//                   <span>Create Invoice</span>\n//                 </button>\n//                 <button\n//                   onClick={() => setShowInvoiceForm(false)}\n//                   className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\"\n//                 >\n//                   <XCircle size={16} />\n//                   <span>Cancel</span>\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Integration Status */}\n//       <div className=\"mt-8 p-6 bg-green-50 border border-green-200 rounded-lg\">\n//         <div className=\"flex items-center mb-4\">\n//           <CheckCircle className=\"text-green-600 mr-2\" size={20} />\n//           <h3 className=\"font-medium text-green-800\">POS Integration Active</h3>\n//         </div>\n//         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm text-green-700\">\n//           <div>\n//             <strong>Credit Sales:</strong> Automatically create AR entries when customers buy on credit in POS\n//           </div>\n//           <div>\n//             <strong>Customer Limits:</strong> POS checks credit limits before allowing credit sales\n//           </div>\n//           <div>\n//             <strong>Real-time Updates:</strong> Customer balances update instantly with each transaction\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AccountsReceivable;\n\n//correct\n// import React, { useState, useEffect } from 'react';\n// import { \n//   Users, \n//   DollarSign, \n//   CreditCard, \n//   AlertTriangle, \n//   Clock, \n//   Plus, \n//   Search, \n//   Filter, \n//   Eye, \n//   Edit, \n//   Download,\n//   CheckCircle,\n//   XCircle,\n//   Calendar,\n//   FileText,\n//   TrendingUp,\n//   Mail,\n//   Phone,\n//   Printer,\n//   Send\n// } from 'lucide-react';\n\n// const AccountsReceivable = () => {\n//   const [customers, setCustomers] = useState([]);\n//   const [invoices, setInvoices] = useState([]);\n//   const [payments, setPayments] = useState([]);\n//   const [selectedCustomer, setSelectedCustomer] = useState(null);\n//   const [activeTab, setActiveTab] = useState('overview');\n//   const [viewInvoice, setViewInvoice] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const [salesOrders, setSalesOrders] = useState([]);\n\n//   const [filters, setFilters] = useState({\n//     customerType: 'all',\n//     status: 'all',\n//     dateRange: '30',\n//     searchTerm: ''\n//   });\n\n//   const [showInvoiceForm, setShowInvoiceForm] = useState(false);\n//   const [newInvoice, setNewInvoice] = useState({\n//     customerId: '',\n//     dueDate: '',\n//     items: [{ description: '', quantity: 1, price: 0, total: 0 }],\n//     notes: ''\n//   });\n\n//   // API Configuration\n//   const API_BASE_URL_SALES = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/orders?start=0&size=200';\n//   const API_CUSTOMERS='https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/customers?status=Active';\n//   // Fetch sales orders from API\n//   const fetchSalesOrders = async () => {\n//     setLoading(true);\n//     try {\n//       const response = await fetch(API_BASE_URL_SALES, {\n//         method: 'GET',\n//         headers: {\n//           'Authorization': 'Bearer Hamid',\n//           'Content-Type': 'application/json',\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`API request failed with status ${response.status}`);\n//       }\n\n//       const data = await response.json();\n//       setSalesOrders(data);\n//       processARData(data);\n//     } catch (error) {\n//       console.error('Error fetching sales orders:', error);\n//       // Load sample data as fallback\n//       loadSampleData();\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   // Fetch both sales orders and customers from API\n// const fetchData = async () => {\n//   setLoading(true);\n//   try {\n//     // Fetch both data sources in parallel\n//     const [ordersResponse, customersResponse] = await Promise.all([\n//       fetch(API_BASE_URL_SALES, {\n//         method: 'GET',\n//         headers: {\n//           'Authorization': 'Bearer Hamid',\n//           'Content-Type': 'application/json',\n//         },\n//       }),\n//       fetch(API_CUSTOMERS, {\n//         method: 'GET',\n//         headers: {\n//           'Authorization': 'Bearer Hamid',\n//           'Content-Type': 'application/json',\n//         },\n//       })\n//     ]);\n\n//     if (!ordersResponse.ok || !customersResponse.ok) {\n//       throw new Error(`API request failed with status ${ordersResponse.status}/${customersResponse.status}`);\n//     }\n\n//     const ordersData = await ordersResponse.json();\n//     const customersData = await customersResponse.json();\n\n//     setSalesOrders(ordersData);\n//     processARData(ordersData, customersData);\n//   } catch (error) {\n//     console.error('Error fetching data:', error);\n//     // Load sample data as fallback\n//     loadSampleData();\n//   } finally {\n//     setLoading(false);\n//   }\n// };\n\n//   // // Process API data to create AR entries\n//   const processARData = (orders) => {\n//     // Group orders by customer and create customer records\n//     const customerMap = new Map();\n//     const invoiceList = [];\n//     const paymentList = [];\n\n//     orders.forEach(order => {\n//       // Skip draft orders\n//       if (order.draft) return;\n\n//       // Extract customer info (using orderId as customer identifier for now)\n//       const customerId = order.customerId || `CUST-${order.orderId}`;\n\n//       if (!customerMap.has(customerId)) {\n//         customerMap.set(customerId, {\n//           id: customerId,\n//           name: order.customerName || `Customer ${customers}`,\n//           email: order.customerEmail || 'customer@example.com',\n//           phone: order.customerPhone || '+966-50-000-0000',\n//           address: order.customerAddress || 'Saudi Arabia',\n//           customerType: order.paymentMethod === 'cash' ? 'cash' : 'credit',\n//           creditLimit: 50000, // Default credit limit\n//           paymentTerms: 30,\n//           totalOwed: 0,\n//           overdueAmount: 0,\n//           lastPayment: null,\n//           creditStatus: 'good',\n//           accountBalance: 0,\n//           invoiceCount: 0,\n//           avgPaymentDays: 0\n//         });\n//       }\n//       console.log('customerMap',customerMap);\n\n//       // Create invoice from order\n//       const invoice = {\n//         id: `INV-${order.orderId}`,\n//         customerId: customerId,\n//         customerName: order.customerName || `Customer ${customerId}`,\n//         date: formatDate(order.createdAt),\n//         dueDate: calculateDueDate(order.createdAt, 30),\n//         amount: parseFloat(order.total) || 0,\n//         paid: order.paid ? parseFloat(order.total) : 0,\n//         balance: order.paid ? 0 : parseFloat(order.total) || 0,\n//         status: order.paid ? 'paid' : (isOverdue(order.createdAt, 30) ? 'overdue' : 'outstanding'),\n//         daysOverdue: calculateDaysOverdue(order.createdAt, 30),\n//         paymentTerms: 30,\n//         items: order.lineItems?.map(item => ({\n//           description: item.productName,\n//           quantity: item.quantity,\n//           price: item.price,\n//           total: item.total\n//         })) || [],\n//         notes: order.notes || '',\n//         source: 'pos'\n//       };\n\n//       invoiceList.push(invoice);\n\n//       // Update customer totals\n//       const customer = customerMap.get(customerId);\n//       if (!order.paid) {\n//         customer.totalOwed += invoice.balance;\n//         if (invoice.status === 'overdue') {\n//           customer.overdueAmount += invoice.balance;\n//         }\n//       }\n//       customer.invoiceCount++;\n\n//       // Create payment record if paid\n//       if (order.unpaid) {\n//         paymentList.push({\n//           id: `PAY-${order.orderId}`,\n//           customerId: customerId,\n//           customerName: order.customerName || `Customer ${customerId}`,\n//           invoiceId: invoice.id,\n//           date: formatDate(order.createdAt),\n//           amount: parseFloat(order.total),\n//           method: order.paymentMethod || 'cash',\n//           reference: `TXN-${order.orderId}`,\n//           status: 'cleared',\n//           notes: 'POS payment'\n//         });\n\n//         customer.lastPayment = formatDate(order.createdAt);\n//       }\n//     });\n\n//     // Update credit status based on outstanding amounts\n//     customerMap.forEach(customer => {\n//       const utilizationRate = customer.totalOwed / customer.creditLimit;\n//       if (customer.overdueAmount > 0) {\n//         customer.creditStatus = 'watch';\n//       } else if (utilizationRate > 0.8) {\n//         customer.creditStatus = 'watch';\n//       } else if (utilizationRate > 0.5) {\n//         customer.creditStatus = 'good';\n//       } else {\n//         customer.creditStatus = 'excellent';\n//       }\n//     });\n\n//     setCustomers(Array.from(customerMap.values()));\n//     setInvoices(invoiceList);\n//     setPayments(paymentList);\n//   };\n\n//   // Helper functions\n//   const formatDate = (dateString) => {\n//     if (!dateString) return new Date().toISOString().split('T')[0];\n\n//     // Handle the format \"2025.08.18.10.08.54.569\"\n//     const parts = dateString.split('.');\n//     if (parts.length >= 3) {\n//       return `${parts[0]}-${parts[1].padStart(2, '0')}-${parts[2].padStart(2, '0')}`;\n//     }\n//     return new Date().toISOString().split('T')[0];\n//   };\n\n//   const calculateDueDate = (createdAt, terms) => {\n//     const date = new Date(formatDate(createdAt));\n//     date.setDate(date.getDate() + terms);\n//     return date.toISOString().split('T')[0];\n//   };\n\n//   const isOverdue = (createdAt, terms) => {\n//     const dueDate = new Date(calculateDueDate(createdAt, terms));\n//     return dueDate < new Date();\n//   };\n\n//   const calculateDaysOverdue = (createdAt, terms) => {\n//     const dueDate = new Date(calculateDueDate(createdAt, terms));\n//     const today = new Date();\n//     if (dueDate >= today) return 0;\n\n//     const diffTime = Math.abs(today - dueDate);\n//     return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n//   };\n\n//   useEffect(() => {\n//     fetchData();\n//   }, []);\n\n//   const loadSampleData = () => {\n//     // Fallback sample data\n//     const sampleCustomers = [\n//       {\n//         id: 'CUST001',\n//         name: 'Al Noor Medical Center',\n//         email: 'finance@alnoor.com',\n//         phone: '+966-11-123-4567',\n//         address: 'King Fahd Road, Riyadh',\n//         customerType: 'corporate',\n//         creditLimit: 50000,\n//         paymentTerms: 30,\n//         totalOwed: 15750.00,\n//         overdueAmount: 5250.00,\n//         lastPayment: '2025-01-10',\n//         creditStatus: 'good',\n//         accountBalance: -15750.00,\n//         invoiceCount: 8,\n//         avgPaymentDays: 25\n//       },\n//       {\n//         id: 'CUST002',\n//         name: 'Dr. Ahmed Clinic',\n//         email: 'dr.ahmed@clinic.com',\n//         phone: '+966-12-987-6543',\n//         address: 'Prince Sultan Street, Jeddah',\n//         customerType: 'small_business',\n//         creditLimit: 20000,\n//         paymentTerms: 15,\n//         totalOwed: 8900.00,\n//         overdueAmount: 2100.00,\n//         lastPayment: '2025-01-12',\n//         creditStatus: 'watch',\n//         accountBalance: -8900.00,\n//         invoiceCount: 5,\n//         avgPaymentDays: 18\n//       },\n//       {\n//         id: 'CUST003',\n//         name: 'Pharmacy Plus Chain',\n//         email: 'accounts@pharmacyplus.sa',\n//         phone: '+966-13-555-0123',\n//         address: 'Al Khobar, Eastern Province',\n//         customerType: 'corporate',\n//         creditLimit: 75000,\n//         paymentTerms: 45,\n//         totalOwed: 32100.00,\n//         overdueAmount: 0,\n//         lastPayment: '2025-01-14',\n//         creditStatus: 'excellent',\n//         accountBalance: -32100.00,\n//         invoiceCount: 12,\n//         avgPaymentDays: 35\n//       },\n//       {\n//         id: 'CUST004',\n//         name: 'Walk-in Customer',\n//         email: 'cash@pos.system',\n//         phone: '+966-50-000-0000',\n//         address: 'Point of Sale',\n//         customerType: 'cash',\n//         creditLimit: 0,\n//         paymentTerms: 0,\n//         totalOwed: 0,\n//         overdueAmount: 0,\n//         lastPayment: '2025-01-15',\n//         creditStatus: 'cash_only',\n//         accountBalance: 0,\n//         invoiceCount: 0,\n//         avgPaymentDays: 0\n//       }\n//     ];\n\n//     const sampleInvoices = [\n//       {\n//         id: 'INV-2025-001',\n//         customerId: 'CUST001',\n//         customerName: 'Al Noor Medical Center',\n//         date: '2025-01-15',\n//         dueDate: '2025-02-14',\n//         amount: 5250.00,\n//         paid: 0,\n//         balance: 5250.00,\n//         status: 'outstanding',\n//         daysOverdue: 0,\n//         paymentTerms: 30,\n//         items: [\n//           { description: 'A2A 25MG TAB', quantity: 100, price: 15.00, total: 1500.00 },\n//           { description: 'AALBUMIN 50ML', quantity: 150, price: 25.00, total: 3750.00 }\n//         ],\n//         notes: 'Monthly medical supplies order',\n//         source: 'manual'\n//       },\n//       {\n//         id: 'INV-2025-002',\n//         customerId: 'CUST002',\n//         customerName: 'Dr. Ahmed Clinic',\n//         date: '2025-01-10',\n//         dueDate: '2025-01-25',\n//         amount: 2100.00,\n//         paid: 0,\n//         balance: 2100.00,\n//         status: 'overdue',\n//         daysOverdue: 5,\n//         paymentTerms: 15,\n//         items: [\n//           { description: 'ABAKTAL INJ', quantity: 50, price: 30.00, total: 1500.00 },\n//           { description: 'AARAM PLUS', quantity: 20, price: 30.00, total: 600.00 }\n//         ],\n//         notes: 'Urgent medical supplies',\n//         source: 'pos'\n//       },\n//       {\n//         id: 'POS-2025-003',\n//         customerId: 'CUST001',\n//         customerName: 'Al Noor Medical Center',\n//         date: '2025-01-12',\n//         dueDate: '2025-02-11',\n//         amount: 1850.00,\n//         paid: 1850.00,\n//         balance: 0,\n//         status: 'paid',\n//         daysOverdue: 0,\n//         paymentTerms: 30,\n//         items: [\n//           { description: 'Medical supplies - POS Sale', quantity: 1, price: 1850.00, total: 1850.00 }\n//         ],\n//         notes: 'Direct POS sale - Credit account',\n//         source: 'pos'\n//       }\n//     ];\n\n//     const samplePayments = [\n//       {\n//         id: 'PAY001',\n//         customerId: 'CUST001',\n//         customerName: 'Al Noor Medical Center',\n//         invoiceId: 'POS-2025-003',\n//         date: '2025-01-14',\n//         amount: 1850.00,\n//         method: 'bank_transfer',\n//         reference: 'TXN123456789',\n//         status: 'cleared',\n//         notes: 'Payment for POS sale'\n//       },\n//       {\n//         id: 'PAY002',\n//         customerId: 'CUST003',\n//         customerName: 'Pharmacy Plus Chain',\n//         invoiceId: 'INV-2024-045',\n//         date: '2025-01-12',\n//         amount: 15600.00,\n//         method: 'check',\n//         reference: 'CHK-789123',\n//         status: 'cleared',\n//         notes: 'December invoice payment'\n//       }\n//     ];\n\n//     setCustomers(sampleCustomers);\n//     setInvoices(sampleInvoices);\n//     setPayments(samplePayments);\n//   };\n\n//   const calculateARSummary = () => {\n//     const totalAR = customers.reduce((sum, customer) => sum + customer.totalOwed, 0);\n//     const totalOverdue = customers.reduce((sum, customer) => sum + customer.overdueAmount, 0);\n//     const customersWithBalance = customers.filter(customer => customer.totalOwed > 0).length;\n//     const avgDaysOutstanding = customers.length > 0 \n//       ? customers.reduce((sum, customer) => sum + customer.avgPaymentDays, 0) / customers.length \n//       : 0;\n\n//     return {\n//       totalAR,\n//       totalOverdue,\n//       customersWithBalance,\n//       avgDaysOutstanding: Math.round(avgDaysOutstanding)\n//     };\n//   };\n\n//   const getAgingData = () => {\n//     const aging = {\n//       current: 0,\n//       days30: 0,\n//       days60: 0,\n//       days90: 0,\n//       over90: 0\n//     };\n\n//     invoices.forEach(invoice => {\n//       if (invoice.status === 'paid') return;\n\n//       const daysPastDue = invoice.daysOverdue || 0;\n\n//       if (daysPastDue <= 0) {\n//         aging.current += invoice.balance;\n//       } else if (daysPastDue <= 30) {\n//         aging.days30 += invoice.balance;\n//       } else if (daysPastDue <= 60) {\n//         aging.days60 += invoice.balance;\n//       } else if (daysPastDue <= 90) {\n//         aging.days90 += invoice.balance;\n//       } else {\n//         aging.over90 += invoice.balance;\n//       }\n//     });\n\n//     return aging;\n//   };\n\n//   const getFilteredCustomers = () => {\n//     let filtered = [...customers];\n\n//     if (filters.customerType !== 'all') {\n//       filtered = filtered.filter(customer => customer.customerType === filters.customerType);\n//     }\n\n//     if (filters.status !== 'all') {\n//       filtered = filtered.filter(customer => {\n//         if (filters.status === 'overdue') return customer.overdueAmount > 0;\n//         if (filters.status === 'current') return customer.totalOwed > 0 && customer.overdueAmount === 0;\n//         if (filters.status === 'paid_up') return customer.totalOwed === 0;\n//         return true;\n//       });\n//     }\n\n//     if (filters.searchTerm) {\n//       const term = filters.searchTerm.toLowerCase();\n//       filtered = filtered.filter(customer =>\n//         customer.name.toLowerCase().includes(term) ||\n//         customer.email.toLowerCase().includes(term) ||\n//         customer.id.toLowerCase().includes(term)\n//       );\n//     }\n\n//     return filtered;\n//   };\n\n//   const getCreditStatusColor = (status) => {\n//     switch (status) {\n//       case 'excellent': return 'bg-green-100 text-green-800';\n//       case 'good': return 'bg-blue-100 text-blue-800';\n//       case 'watch': return 'bg-yellow-100 text-yellow-800';\n//       case 'hold': return 'bg-red-100 text-red-800';\n//       case 'cash_only': return 'bg-gray-100 text-gray-800';\n//       default: return 'bg-gray-100 text-gray-800';\n//     }\n//   };\n\n//   const getInvoiceStatusColor = (status) => {\n//     switch (status) {\n//       case 'paid': return 'bg-green-100 text-green-800';\n//       case 'outstanding': return 'bg-blue-100 text-blue-800';\n//       case 'overdue': return 'bg-red-100 text-red-800';\n//       case 'partial': return 'bg-yellow-100 text-yellow-800';\n//       default: return 'bg-gray-100 text-gray-800';\n//     }\n//   };\n\n//   const handleCreateInvoice = () => {\n//     const customer = customers.find(c => c.id === newInvoice.customerId);\n//     if (!customer) {\n//       alert('Please select a customer');\n//       return;\n//     }\n\n//     const nextId = `INV-${new Date().getFullYear()}-${String(invoices.length + 1).padStart(3, '0')}`;\n//     const invoiceTotal = calculateInvoiceTotal();\n\n//     const newInvoiceData = {\n//       id: nextId,\n//       customerId: customer.id,\n//       customerName: customer.name,\n//       date: new Date().toISOString().slice(0, 10),\n//       dueDate: newInvoice.dueDate,\n//       amount: invoiceTotal,\n//       paid: 0,\n//       balance: invoiceTotal,\n//       status: 'outstanding',\n//       daysOverdue: 0,\n//       paymentTerms: customer.paymentTerms,\n//       items: newInvoice.items,\n//       notes: newInvoice.notes,\n//       source: 'manual'\n//     };\n\n//     setInvoices(prev => [...prev, newInvoiceData]);\n\n//     setCustomers(prev =>\n//       prev.map(c =>\n//         c.id === customer.id\n//           ? {\n//               ...c,\n//               totalOwed: c.totalOwed + invoiceTotal,\n//               invoiceCount: c.invoiceCount + 1\n//             }\n//           : c\n//       )\n//     );\n\n//     setNewInvoice({\n//       customerId: '',\n//       dueDate: '',\n//       items: [{ description: '', quantity: 1, price: 0, total: 0 }],\n//       notes: ''\n//     });\n\n//     setShowInvoiceForm(false);\n//     alert('Invoice created successfully!');\n//   };\n\n//   const addInvoiceItem = () => {\n//     setNewInvoice({\n//       ...newInvoice,\n//       items: [...newInvoice.items, { description: '', quantity: 1, price: 0, total: 0 }]\n//     });\n//   };\n\n//   const updateInvoiceItem = (index, field, value) => {\n//     const updatedItems = [...newInvoice.items];\n//     updatedItems[index] = { ...updatedItems[index], [field]: value };\n\n//     if (field === 'quantity' || field === 'price') {\n//       updatedItems[index].total = updatedItems[index].quantity * updatedItems[index].price;\n//     }\n\n//     setNewInvoice({ ...newInvoice, items: updatedItems });\n//   };\n\n//   const calculateInvoiceTotal = () => {\n//     return newInvoice.items.reduce((sum, item) => sum + item.total, 0);\n//   };\n\n//   const summary = calculateARSummary();\n//   const aging = getAgingData();\n//   const filteredCustomers = getFilteredCustomers();\n\n//   // Render Invoices Tab\n//   const renderInvoicesTab = () => (\n//     <div>\n//       <div className=\"mb-6 flex justify-between items-center\">\n//         <div className=\"flex items-center space-x-4\">\n//           <div className=\"relative\">\n//             <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search invoices...\"\n//               className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//             />\n//           </div>\n//           <select className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\">\n//             <option value=\"all\">All Statuses</option>\n//             <option value=\"outstanding\">Outstanding</option>\n//             <option value=\"overdue\">Overdue</option>\n//             <option value=\"paid\">Paid</option>\n//           </select>\n//         </div>\n//         <button\n//           onClick={() => setShowInvoiceForm(true)}\n//           className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\n//         >\n//           <Plus size={16} />\n//           <span>New Invoice</span>\n//         </button>\n//       </div>\n\n//       <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//         <table className=\"w-full\">\n//           <thead className=\"bg-gray-50\">\n//             <tr>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Invoice</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Customer</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Due Date</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Amount</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Balance</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n//             </tr>\n//           </thead>\n//           <tbody className=\"divide-y divide-gray-200\">\n//             {invoices.map((invoice) => (\n//               <tr key={invoice.id} className=\"hover:bg-gray-50\">\n//                 <td className=\"px-6 py-4\">\n//                   <div className=\"text-sm font-medium text-gray-900\">{invoice.id}</div>\n//                   <div className=\"text-xs text-gray-500\">{invoice.source}</div>\n//                 </td>\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">{invoice.customerName}</td>\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">{invoice.date}</td>\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">\n//                   {invoice.dueDate}\n//                   {invoice.daysOverdue > 0 && (\n//                     <div className=\"text-xs text-red-600\">\n//                       {invoice.daysOverdue} days overdue\n//                     </div>\n//                   )}\n//                 </td>\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">${invoice.amount.toFixed(2)}</td>\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">${invoice.balance.toFixed(2)}</td>\n//                 <td className=\"px-6 py-4\">\n//                   <span className={`px-2 py-1 text-xs font-medium rounded-full ${getInvoiceStatusColor(invoice.status)}`}>\n//                     {invoice.status}\n//                   </span>\n//                 </td>\n//                 <td className=\"px-6 py-4 text-sm font-medium\">\n//                   <button\n//                     onClick={() => setViewInvoice(invoice)}\n//                     className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\n//                   >\n//                     <Eye size={16} />\n//                   </button>\n//                   <button className=\"text-blue-600 hover:text-blue-900\">\n//                     <Edit size={16} />\n//                   </button>\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       </div>\n//     </div>\n//   );\n\n//   // Render Aging Report Tab\n//   const renderAgingTab = () => (\n//     <div>\n//       <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4 mb-8\">\n//         <div className=\"bg-green-50 p-4 rounded-lg border border-green-200\">\n//           <div className=\"text-sm font-medium text-green-600\">Current (0-30)</div>\n//           <div className=\"text-xl font-bold text-green-900\">${aging.current.toFixed(2)}</div>\n//         </div>\n//         <div className=\"bg-yellow-50 p-4 rounded-lg border border-yellow-200\">\n//           <div className=\"text-sm font-medium text-yellow-600\">31-60 Days</div>\n//           <div className=\"text-xl font-bold text-yellow-900\">${aging.days30.toFixed(2)}</div>\n//         </div>\n//         <div className=\"bg-orange-50 p-4 rounded-lg border border-orange-200\">\n//           <div className=\"text-sm font-medium text-orange-600\">61-90 Days</div>\n//           <div className=\"text-xl font-bold text-orange-900\">${aging.days60.toFixed(2)}</div>\n//         </div>\n//         <div className=\"bg-red-50 p-4 rounded-lg border border-red-200\">\n//           <div className=\"text-sm font-medium text-red-600\">91-120 Days</div>\n//           <div className=\"text-xl font-bold text-red-900\">${aging.days90.toFixed(2)}</div>\n//         </div>\n//         <div className=\"bg-gray-50 p-4 rounded-lg border border-gray-200\">\n//           <div className=\"text-sm font-medium text-gray-600\">Over 120 Days</div>\n//           <div className=\"text-xl font-bold text-gray-900\">${aging.over90.toFixed(2)}</div>\n//         </div>\n//       </div>\n\n//       <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//         <table className=\"w-full\">\n//           <thead className=\"bg-gray-50\">\n//             <tr>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Customer</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Current</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">31-60</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">61-90</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">91-120</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">120+</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Total</th>\n//             </tr>\n//           </thead>\n//           <tbody className=\"divide-y divide-gray-200\">\n//             {customers.filter(c => c.totalOwed > 0).map((customer) => {\n//               const customerInvoices = invoices.filter(inv => inv.customerId === customer.id && inv.status !== 'paid');\n//               const customerAging = {current: 0, days30: 0, days60: 0, days90: 0, over90: 0};\n\n//               customerInvoices.forEach(invoice => {\n//                 const days = invoice.daysOverdue || 0;\n//                 if (days <= 0) customerAging.current += invoice.balance;\n//                 else if (days <= 30) customerAging.days30 += invoice.balance;\n//                 else if (days <= 60) customerAging.days60 += invoice.balance;\n//                 else if (days <= 90) customerAging.days90 += invoice.balance;\n//                 else customerAging.over90 += invoice.balance;\n//               });\n\n//               return (\n//                 <tr key={customer.id} className=\"hover:bg-gray-50\">\n//                   <td className=\"px-6 py-4\">\n//                     <div className=\"text-sm font-medium text-gray-900\">{customer.name}</div>\n//                     <div className=\"text-xs text-gray-500\">{customer.id}</div>\n//                   </td>\n//                   <td className=\"px-6 py-4 text-sm text-gray-900\">${customerAging.current.toFixed(2)}</td>\n//                   <td className=\"px-6 py-4 text-sm text-gray-900\">${customerAging.days30.toFixed(2)}</td>\n//                   <td className=\"px-6 py-4 text-sm text-gray-900\">${customerAging.days60.toFixed(2)}</td>\n//                   <td className=\"px-6 py-4 text-sm text-gray-900\">${customerAging.days90.toFixed(2)}</td>\n//                   <td className=\"px-6 py-4 text-sm text-gray-900\">${customerAging.over90.toFixed(2)}</td>\n//                   <td className=\"px-6 py-4 text-sm font-medium text-gray-900\">${customer.totalOwed.toFixed(2)}</td>\n//                 </tr>\n//               );\n//             })}\n//           </tbody>\n//         </table>\n//       </div>\n//     </div>\n//   );\n\n//   // Render Payments Tab\n//   const renderPaymentsTab = () => (\n//     <div>\n//       <div className=\"mb-6 flex justify-between items-center\">\n//         <div className=\"flex items-center space-x-4\">\n//           <div className=\"relative\">\n//             <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search payments...\"\n//               className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//             />\n//           </div>\n//           <select className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\">\n//             <option value=\"all\">All Methods</option>\n//             <option value=\"cash\">Cash</option>\n//             <option value=\"check\">Check</option>\n//             <option value=\"bank_transfer\">Bank Transfer</option>\n//             <option value=\"credit_card\">Credit Card</option>\n//           </select>\n//         </div>\n//         <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\n//           <Plus size={16} />\n//           <span>Record Payment</span>\n//         </button>\n//       </div>\n\n//       <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//         <table className=\"w-full\">\n//           <thead className=\"bg-gray-50\">\n//             <tr>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Payment ID</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Customer</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Invoice</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Amount</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Method</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Reference</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\n//             </tr>\n//           </thead>\n//           <tbody className=\"divide-y divide-gray-200\">\n//             {payments.map((payment) => (\n//               <tr key={payment.id} className=\"hover:bg-gray-50\">\n//                 <td className=\"px-6 py-4 text-sm font-medium text-gray-900\">{payment.id}</td>\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">{payment.customerName}</td>\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">{payment.invoiceId}</td>\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">{payment.date}</td>\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">${payment.amount.toFixed(2)}</td>\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">{payment.method.replace('_', ' ')}</td>\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">{payment.reference}</td>\n//                 <td className=\"px-6 py-4\">\n//                   <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                     payment.status === 'cleared' ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n//                   }`}>\n//                     {payment.status}\n//                   </span>\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       </div>\n//     </div>\n//   );\n\n//   return (\n//     <div className=\"max-w-7xl mx-auto p-6 bg-white\">\n//       {/* Header */}\n//       <div className=\"mb-8\">\n//         <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\n//           <CreditCard className=\"mr-3 text-emerald-600\" />\n//           Accounts Receivable\n//         </h1>\n//         <p className=\"text-gray-600\">Manage customer invoicing, payments, and credit limits</p>\n//       </div>\n\n//       {/* Summary Cards */}\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n//         <div className=\"bg-blue-50 p-6 rounded-lg border border-blue-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-blue-600 text-sm font-medium\">Total A/R</p>\n//               <p className=\"text-2xl font-bold text-blue-900\">${summary.totalAR.toFixed(2)}</p>\n//             </div>\n//             <DollarSign className=\"text-blue-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-blue-700 mt-2\">{summary.customersWithBalance} customers with balances</p>\n//         </div>\n\n//         <div className=\"bg-red-50 p-6 rounded-lg border border-red-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-red-600 text-sm font-medium\">Overdue Amount</p>\n//               <p className=\"text-2xl font-bold text-red-900\">${summary.totalOverdue.toFixed(2)}</p>\n//             </div>\n//             <AlertTriangle className=\"text-red-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-red-700 mt-2\">\n//             {summary.totalAR > 0 ? ((summary.totalOverdue / summary.totalAR) * 100).toFixed(1) : 0}% of total A/R\n//           </p>\n//         </div>\n\n//         <div className=\"bg-green-50 p-6 rounded-lg border border-green-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-green-600 text-sm font-medium\">Avg. Days Outstanding</p>\n//               <p className=\"text-2xl font-bold text-green-900\">{summary.avgDaysOutstanding}</p>\n//             </div>\n//             <Clock className=\"text-green-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-green-700 mt-2\">Collection performance</p>\n//         </div>\n\n//         <div className=\"bg-purple-50 p-6 rounded-lg border border-purple-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-purple-600 text-sm font-medium\">Active Customers</p>\n//               <p className=\"text-2xl font-bold text-purple-900\">{customers.length}</p>\n//             </div>\n//             <Users className=\"text-purple-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-purple-700 mt-2\">Total customer accounts</p>\n//         </div>\n//       </div>\n\n//       {/* Tabs */}\n//       <div className=\"mb-6\">\n//         <div className=\"border-b border-gray-200\">\n//           <nav className=\"-mb-px flex space-x-8\">\n//             {[\n//               { id: 'overview', name: 'Customer Overview', icon: Users },\n//               { id: 'invoices', name: 'Invoices', icon: FileText },\n//               { id: 'aging', name: 'Aging Report', icon: Clock },\n//               { id: 'payments', name: 'Payments', icon: CheckCircle }\n//             ].map((tab) => (\n//               <button\n//                 key={tab.id}\n//                 onClick={() => setActiveTab(tab.id)}\n//                 className={`flex items-center py-2 px-1 border-b-2 font-medium text-sm ${\n//                   activeTab === tab.id\n//                     ? 'border-emerald-500 text-emerald-600'\n//                     : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n//                 }`}\n//               >\n//                 <tab.icon className=\"mr-2\" size={16} />\n//                 {tab.name}\n//               </button>\n//             ))}\n//           </nav>\n//         </div>\n//       </div>\n\n//       {/* Tab Content */}\n//       {activeTab === 'overview' && (\n//         <div>\n//           {/* Filters */}\n//           <div className=\"flex flex-wrap items-center gap-4 mb-6\">\n//             <div className=\"relative\">\n//               <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\n//               <input\n//                 type=\"text\"\n//                 placeholder=\"Search customers...\"\n//                 value={filters.searchTerm}\n//                 onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\n//                 className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               />\n//             </div>\n\n//             <select\n//               value={filters.customerType}\n//               onChange={(e) => setFilters({ ...filters, customerType: e.target.value })}\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//             >\n//               <option value=\"all\">All Customer Types</option>\n//               <option value=\"corporate\">Corporate</option>\n//               <option value=\"small_business\">Small Business</option>\n//               <option value=\"credit\">Credit</option>\n//               <option value=\"cash\">Cash Only</option>\n//             </select>\n\n//             <select\n//               value={filters.status}\n//               onChange={(e) => setFilters({ ...filters, status: e.target.value })}\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//             >\n//               <option value=\"all\">All Statuses</option>\n//               <option value=\"current\">Current</option>\n//               <option value=\"overdue\">Overdue</option>\n//               <option value=\"paid_up\">Paid Up</option>\n//             </select>\n\n//             <button\n//               onClick={() => setShowInvoiceForm(true)}\n//               className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\n//             >\n//               <Plus size={16} />\n//               <span>New Invoice</span>\n//             </button>\n//           </div>\n\n//           {/* Customer List */}\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//             <div className=\"overflow-x-auto\">\n//               <table className=\"w-full\">\n//                 <thead className=\"bg-gray-50\">\n//                   <tr>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Customer\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Type\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Credit Limit\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Balance\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Overdue\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Credit Status\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Last Payment\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Actions\n//                     </th>\n//                   </tr>\n//                 </thead>\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\n//                   {loading ? (\n//                     <tr>\n//                       <td colSpan=\"8\" className=\"px-6 py-4 text-center text-gray-500\">\n//                         Loading data from API...\n//                       </td>\n//                     </tr>\n//                   ) : (\n//                     filteredCustomers.map((customer) => (\n//                       <tr key={customer.id} className=\"hover:bg-gray-50\">\n//                         <td className=\"px-6 py-4\">\n//                           <div>\n//                             <div className=\"text-sm font-medium text-gray-900\">{customer.name}</div>\n//                             <div className=\"text-sm text-gray-500\">{customer.id}</div>\n//                             <div className=\"text-xs text-gray-400 flex items-center mt-1\">\n//                               <Mail className=\"mr-1\" size={12} />\n//                               {customer.email}\n//                             </div>\n//                           </div>\n//                         </td>\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\n//                           <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-gray-100 text-gray-800\">\n//                             {customer.customerType.replace('_', ' ')}\n//                           </span>\n//                         </td>\n//                         <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                           ${customer.creditLimit.toLocaleString()}\n//                         </td>\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\n//                           <div className=\"text-sm font-medium text-gray-900\">\n//                             ${customer.totalOwed.toFixed(2)}\n//                           </div>\n//                           <div className=\"text-xs text-gray-500\">\n//                             {customer.invoiceCount} invoices\n//                           </div>\n//                         </td>\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\n//                           {customer.overdueAmount > 0 ? (\n//                             <span className=\"text-red-600 font-medium\">\n//                               ${customer.overdueAmount.toFixed(2)}\n//                             </span>\n//                           ) : (\n//                             <span className=\"text-green-600\">$0.00</span>\n//                           )}\n//                         </td>\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\n//                           <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(customer.creditStatus)}`}>\n//                             {customer.creditStatus.replace('_', ' ')}\n//                           </span>\n//                         </td>\n//                         <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                           {customer.lastPayment || 'N/A'}\n//                         </td>\n//                         <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n//                           <button\n//                             onClick={() => setSelectedCustomer(customer)}\n//                             className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\n//                           >\n//                             <Eye size={16} />\n//                           </button>\n//                           <button className=\"text-blue-600 hover:text-blue-900\">\n//                             <Edit size={16} />\n//                           </button>\n//                         </td>\n//                       </tr>\n//                     ))\n//                   )}\n//                 </tbody>\n//               </table>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {activeTab === 'invoices' && renderInvoicesTab()}\n//       {activeTab === 'aging' && renderAgingTab()}\n//       {activeTab === 'payments' && renderPaymentsTab()}\n\n//       {/* Customer Detail Modal */}\n//       {selectedCustomer && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <div className=\"flex items-center justify-between\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\n//                   Customer Details - {selectedCustomer.name}\n//                 </h3>\n//                 <button\n//                   onClick={() => setSelectedCustomer(null)}\n//                   className=\"text-gray-400 hover:text-gray-600\"\n//                 >\n//                   <XCircle size={20} />\n//                 </button>\n//               </div>\n//             </div>\n\n//             <div className=\"px-6 py-4\">\n//               {/* Customer Info Grid */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n//                 <div className=\"space-y-4\">\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer ID</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.id}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Email</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.email}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Phone</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.phone}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Address</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.address}</p>\n//                   </div>\n//                 </div>\n\n//                 <div className=\"space-y-4\">\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer Type</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.customerType.replace('_', ' ')}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Limit</label>\n//                     <p className=\"text-sm text-gray-900\">${selectedCustomer.creditLimit.toLocaleString()}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Payment Terms</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.paymentTerms} days</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Status</label>\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(selectedCustomer.creditStatus)}`}>\n//                       {selectedCustomer.creditStatus.replace('_', ' ')}\n//                     </span>\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Financial Summary */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n//                 <div className=\"bg-blue-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-blue-600\">Current Balance</div>\n//                   <div className=\"text-xl font-bold text-blue-900\">\n//                     ${selectedCustomer.totalOwed.toFixed(2)}\n//                   </div>\n//                 </div>\n//                 <div className=\"bg-red-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-red-600\">Overdue Amount</div>\n//                   <div className=\"text-xl font-bold text-red-900\">\n//                     ${selectedCustomer.overdueAmount.toFixed(2)}\n//                   </div>\n//                 </div>\n//                 <div className=\"bg-green-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-green-600\">Credit Available</div>\n//                   <div className=\"text-xl font-bold text-green-900\">\n//                     ${(selectedCustomer.creditLimit - selectedCustomer.totalOwed).toFixed(2)}\n//                   </div>\n//                 </div>\n//                 <div className=\"bg-purple-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-purple-600\">Avg Payment Days</div>\n//                   <div className=\"text-xl font-bold text-purple-900\">\n//                     {selectedCustomer.avgPaymentDays}\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Customer Invoices */}\n//               <div className=\"mb-6\">\n//                 <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Customer Invoices</h4>\n//                 <div className=\"overflow-x-auto\">\n//                   <table className=\"w-full border border-gray-200 rounded\">\n//                     <thead className=\"bg-gray-50\">\n//                       <tr>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Invoice</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Date</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Due Date</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Amount</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Balance</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Status</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody className=\"divide-y divide-gray-200\">\n//                       {invoices\n//                         .filter(inv => inv.customerId === selectedCustomer.id)\n//                         .map((invoice) => (\n//                           <tr key={invoice.id}>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{invoice.id}</td>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{invoice.date}</td>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{invoice.dueDate}</td>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">${invoice.amount.toFixed(2)}</td>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">${invoice.balance.toFixed(2)}</td>\n//                             <td className=\"px-4 py-2\">\n//                               <span className={`px-2 py-1 text-xs font-medium rounded-full ${getInvoiceStatusColor(invoice.status)}`}>\n//                                 {invoice.status}\n//                               </span>\n//                             </td>\n//                           </tr>\n//                         ))}\n//                     </tbody>\n//                   </table>\n//                 </div>\n//               </div>\n\n//               {/* Action Buttons */}\n//               <div className=\"flex space-x-3\">\n//                 <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\n//                   <Plus size={16} />\n//                   <span>New Invoice</span>\n//                 </button>\n//                 <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\n//                   <CheckCircle size={16} />\n//                   <span>Record Payment</span>\n//                 </button>\n//                 <button className=\"px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 flex items-center space-x-2\">\n//                   <Mail size={16} />\n//                   <span>Send Statement</span>\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Invoice Detail Modal */}\n//       {viewInvoice && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-lg max-w-3xl w-full max-h-[90vh] overflow-y-auto\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <div className=\"flex items-center justify-between\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\n//                   Invoice Details - {viewInvoice.id}\n//                 </h3>\n//                 <button\n//                   onClick={() => setViewInvoice(null)}\n//                   className=\"text-gray-400 hover:text-gray-600\"\n//                 >\n//                   <XCircle size={20} />\n//                 </button>\n//               </div>\n//             </div>\n\n//             <div className=\"px-6 py-4\">\n//               {/* Invoice Header */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n//                 <div>\n//                   <h4 className=\"font-semibold text-gray-900 mb-3\">Invoice Information</h4>\n//                   <div className=\"space-y-2\">\n//                     <div><span className=\"text-gray-500\">Invoice ID:</span> {viewInvoice.id}</div>\n//                     <div><span className=\"text-gray-500\">Date:</span> {viewInvoice.date}</div>\n//                     <div><span className=\"text-gray-500\">Due Date:</span> {viewInvoice.dueDate}</div>\n//                     <div><span className=\"text-gray-500\">Payment Terms:</span> {viewInvoice.paymentTerms} days</div>\n//                     <div><span className=\"text-gray-500\">Source:</span> {viewInvoice.source}</div>\n//                   </div>\n//                 </div>\n//                 <div>\n//                   <h4 className=\"font-semibold text-gray-900 mb-3\">Customer Information</h4>\n//                   <div className=\"space-y-2\">\n//                     <div><span className=\"text-gray-500\">Customer:</span> {viewInvoice.customerName}</div>\n//                     <div><span className=\"text-gray-500\">Customer ID:</span> {viewInvoice.customerId}</div>\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Invoice Items */}\n//               <div className=\"mb-6\">\n//                 <h4 className=\"font-semibold text-gray-900 mb-3\">Invoice Items</h4>\n//                 <div className=\"overflow-x-auto\">\n//                   <table className=\"w-full border border-gray-200 rounded\">\n//                     <thead className=\"bg-gray-50\">\n//                       <tr>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Description</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Quantity</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Price</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Total</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody className=\"divide-y divide-gray-200\">\n//                       {viewInvoice.items.map((item, index) => (\n//                         <tr key={index}>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900\">{item.description}</td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{item.quantity}</td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">${item.price.toFixed(2)}</td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">${item.total.toFixed(2)}</td>\n//                         </tr>\n//                       ))}\n//                     </tbody>\n//                   </table>\n//                 </div>\n//               </div>\n\n//           {/* Invoice Summary */}\n// <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n//   <div className=\"bg-blue-50 p-4 rounded-lg\">\n//     <div className=\"text-sm font-medium text-blue-600\">Invoice Amount</div>\n//     <div className=\"text-xl font-bold text-blue-900\">${viewInvoice.amount.toFixed(2)}</div>\n//   </div>\n//   <div className=\"bg-green-50 p-4 rounded-lg\">\n//     <div className=\"text-sm font-medium text-green-600\">Amount Paid</div>\n//     <div className=\"text-xl font-bold text-green-900\">${viewInvoice.paid.toFixed(2)}</div>\n//   </div>\n//   <div className=\"bg-red-50 p-4 rounded-lg\">\n//     <div className=\"text-sm font-medium text-red-600\">Balance Due</div>\n//     <div className=\"text-xl font-bold text-red-900\">${viewInvoice.balance.toFixed(2)}</div>\n//   </div>\n// </div>\n\n// {/* Invoice Status and Days Information */}\n// <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\n//   <div className=\"bg-gray-50 p-4 rounded-lg\">\n//     <div className=\"text-sm font-medium text-gray-600\">Invoice Status</div>\n//     <span className={`inline-block mt-1 px-3 py-1 text-sm font-medium rounded-full ${getInvoiceStatusColor(viewInvoice.status)}`}>\n//       {viewInvoice.status.charAt(0).toUpperCase() + viewInvoice.status.slice(1)}\n//     </span>\n//   </div>\n//   <div className=\"bg-gray-50 p-4 rounded-lg\">\n//     <div className=\"text-sm font-medium text-gray-600\">\n//       {viewInvoice.status === 'overdue' ? 'Days Overdue' : 'Days Until Due'}\n//     </div>\n//     <div className={`text-xl font-bold ${viewInvoice.status === 'overdue' ? 'text-red-900' : 'text-gray-900'}`}>\n//       {viewInvoice.status === 'overdue' ? viewInvoice.daysOverdue : \n//        Math.max(0, Math.ceil((new Date(viewInvoice.dueDate) - new Date()) / (1000 * 60 * 60 * 24)))}\n//     </div>\n//   </div>\n// </div>\n\n// {/* Notes */}\n// {viewInvoice.notes && (\n//   <div className=\"mb-6\">\n//     <h4 className=\"font-semibold text-gray-900 mb-2\">Notes</h4>\n//     <p className=\"text-sm text-gray-700 bg-gray-50 p-3 rounded border\">{viewInvoice.notes}</p>\n//   </div>\n// )}\n\n// {/* Payment History for this Invoice */}\n// <div className=\"mb-6\">\n//   <h4 className=\"font-semibold text-gray-900 mb-3\">Payment History</h4>\n//   {payments.filter(payment => payment.invoiceId === viewInvoice.id).length > 0 ? (\n//     <div className=\"overflow-x-auto\">\n//       <table className=\"w-full border border-gray-200 rounded\">\n//         <thead className=\"bg-gray-50\">\n//           <tr>\n//             <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Date</th>\n//             <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Amount</th>\n//             <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Method</th>\n//             <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Reference</th>\n//             <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Status</th>\n//           </tr>\n//         </thead>\n//         <tbody className=\"divide-y divide-gray-200\">\n//           {payments\n//             .filter(payment => payment.invoiceId === viewInvoice.id)\n//             .map((payment) => (\n//               <tr key={payment.id}>\n//                 <td className=\"px-4 py-2 text-sm text-gray-900\">{payment.date}</td>\n//                 <td className=\"px-4 py-2 text-sm text-gray-900\">${payment.amount.toFixed(2)}</td>\n//                 <td className=\"px-4 py-2 text-sm text-gray-900\">{payment.method.replace('_', ' ')}</td>\n//                 <td className=\"px-4 py-2 text-sm text-gray-900\">{payment.reference}</td>\n//                 <td className=\"px-4 py-2\">\n//                   <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                     payment.status === 'cleared' ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n//                   }`}>\n//                     {payment.status}\n//                   </span>\n//                 </td>\n//               </tr>\n//             ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   ) : (\n//     <div className=\"text-sm text-gray-500 bg-gray-50 p-4 rounded border text-center\">\n//       No payments recorded for this invoice\n//     </div>\n//   )}\n// </div>\n\n// {/* Customer Credit Information */}\n// <div className=\"mb-6 bg-blue-50 p-4 rounded-lg border border-blue-200\">\n//   <h4 className=\"font-semibold text-blue-900 mb-3\">Customer Credit Information</h4>\n//   <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\n//     <div>\n//       <span className=\"text-blue-700 font-medium\">Credit Limit:</span>\n//       <div className=\"text-blue-900 font-bold\">\n//         ${customers.find(c => c.id === viewInvoice.customerId)?.creditLimit.toLocaleString() || 'N/A'}\n//       </div>\n//     </div>\n//     <div>\n//       <span className=\"text-blue-700 font-medium\">Total Outstanding:</span>\n//       <div className=\"text-blue-900 font-bold\">\n//         ${customers.find(c => c.id === viewInvoice.customerId)?.totalOwed.toFixed(2) || '0.00'}\n//       </div>\n//     </div>\n//     <div>\n//       <span className=\"text-blue-700 font-medium\">Credit Available:</span>\n//       <div className=\"text-blue-900 font-bold\">\n//         ${((customers.find(c => c.id === viewInvoice.customerId)?.creditLimit || 0) - \n//             (customers.find(c => c.id === viewInvoice.customerId)?.totalOwed || 0)).toFixed(2)}\n//       </div>\n//     </div>\n//   </div>\n// </div>\n// {/* Action Buttons */}\n// <div className=\"flex flex-wrap gap-3\">\n//   <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2 transition-colors\">\n//     <CheckCircle size={16} />\n//     <span>Record Payment</span>\n//   </button>\n//   <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2 transition-colors\">\n//     <Mail size={16} />\n//     <span>Email Invoice</span>\n//   </button>\n//   <button className=\"px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 flex items-center space-x-2 transition-colors\">\n//     <Printer size={16} />\n//     <span>Print Invoice</span>\n//   </button>\n//   <button className=\"px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 flex items-center space-x-2 transition-colors\">\n//     <Download size={16} />\n//     <span>Download PDF</span>\n//   </button>\n//   <button className=\"px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 flex items-center space-x-2 transition-colors\">\n//     <Send size={16} />\n//     <span>Send Reminder</span>\n//   </button>\n//   {viewInvoice.balance > 0 && (\n//     <button className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 flex items-center space-x-2 transition-colors\">\n//       <AlertTriangle size={16} />\n//       <span>Mark Overdue</span>\n//     </button>\n//   )}\n// </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* New Invoice Form */}\n//       {showInvoiceForm && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <div className=\"flex items-center justify-between\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">Create New Invoice</h3>\n//                 <button\n//                   onClick={() => setShowInvoiceForm(false)}\n//                   className=\"text-gray-400 hover:text-gray-600\"\n//                 >\n//                   <XCircle size={20} />\n//                 </button>\n//               </div>\n//             </div>\n\n//             <div className=\"px-6 py-4\">\n//               {/* Invoice Header */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\n//                 <div>\n//                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">Customer *</label>\n//                   <select\n//                     value={newInvoice.customerId}\n//                     onChange={(e) => setNewInvoice({ ...newInvoice, customerId: e.target.value })}\n//                     className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//                   >\n//                     <option value=\"\">Select Customer</option>\n//                     {customers.filter(c => c.customerType !== 'cash').map(customer => (\n//                       <option key={customer.id} value={customer.id}>\n//                         {customer.name} ({customer.id})\n//                       </option>\n//                     ))}\n//                   </select>\n//                 </div>\n//                 <div>\n//                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">Due Date *</label>\n//                   <input\n//                     type=\"date\"\n//                     value={newInvoice.dueDate}\n//                     onChange={(e) => setNewInvoice({ ...newInvoice, dueDate: e.target.value })}\n//                     className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//                   />\n//                 </div>\n//               </div>\n\n//               {/* Invoice Items */}\n//               <div className=\"mb-6\">\n//                 <label className=\"block text-sm font-medium text-gray-700 mb-2\">Invoice Items</label>\n//                 <div className=\"space-y-3\">\n//                   {newInvoice.items.map((item, index) => (\n//                     <div key={index} className=\"grid grid-cols-12 gap-2 items-center bg-gray-50 p-3 rounded\">\n//                       <div className=\"col-span-5\">\n//                         <input\n//                           type=\"text\"\n//                           value={item.description}\n//                           onChange={(e) => updateInvoiceItem(index, 'description', e.target.value)}\n//                           placeholder=\"Item description\"\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                         />\n//                       </div>\n//                       <div className=\"col-span-2\">\n//                         <input\n//                           type=\"number\"\n//                           value={item.quantity}\n//                           onChange={(e) => updateInvoiceItem(index, 'quantity', parseFloat(e.target.value) || 0)}\n//                           placeholder=\"Qty\"\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                         />\n//                       </div>\n//                       <div className=\"col-span-2\">\n//                         <input\n//                           type=\"number\"\n//                           step=\"0.01\"\n//                           value={item.price}\n//                           onChange={(e) => updateInvoiceItem(index, 'price', parseFloat(e.target.value) || 0)}\n//                           placeholder=\"Price\"\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                         />\n//                       </div>\n//                       <div className=\"col-span-2\">\n//                         <input\n//                           type=\"number\"\n//                           step=\"0.01\"\n//                           value={item.total}\n//                           readOnly\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm bg-gray-100\"\n//                         />\n//                       </div>\n//                       <div className=\"col-span-1\">\n//                         {newInvoice.items.length > 1 && (\n//                           <button\n//                             onClick={() => {\n//                               const updatedItems = newInvoice.items.filter((_, i) => i !== index);\n//                               setNewInvoice({ ...newInvoice, items: updatedItems });\n//                             }}\n//                             className=\"p-1 text-red-600 hover:bg-red-100 rounded\"\n//                           >\n//                             <XCircle size={14} />\n//                           </button>\n//                         )}\n//                       </div>\n//                     </div>\n//                   ))}\n//                 </div>\n\n//                 <div className=\"flex justify-between items-center mt-3\">\n//                   <button\n//                     onClick={addInvoiceItem}\n//                     className=\"px-3 py-1 text-sm bg-emerald-100 text-emerald-700 rounded hover:bg-emerald-200 flex items-center space-x-1\"\n//                   >\n//                     <Plus size={14} />\n//                     <span>Add Item</span>\n//                   </button>\n\n//                   <div className=\"text-lg font-semibold\">\n//                     Total: ${calculateInvoiceTotal().toFixed(2)}\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Notes */}\n//               <div className=\"mb-6\">\n//                 <label className=\"block text-sm font-medium text-gray-700 mb-1\">Notes</label>\n//                 <textarea\n//                   value={newInvoice.notes}\n//                   onChange={(e) => setNewInvoice({ ...newInvoice, notes: e.target.value })}\n//                   rows={3}\n//                   placeholder=\"Additional notes...\"\n//                   className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//                 />\n//               </div>\n\n//               {/* Action Buttons */}\n//               <div className=\"flex space-x-3\">\n//                 <button\n//                   onClick={handleCreateInvoice}\n//                   className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\n//                 >\n//                   <CheckCircle size={16} />\n//                   <span>Create Invoice</span>\n//                 </button>\n//                 <button\n//                   onClick={() => setShowInvoiceForm(false)}\n//                   className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\"\n//                 >\n//                   <XCircle size={16} />\n//                   <span>Cancel</span>\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Integration Status */}\n//       <div className=\"mt-8 p-6 bg-green-50 border border-green-200 rounded-lg\">\n//         <div className=\"flex items-center mb-4\">\n//           <CheckCircle className=\"text-green-600 mr-2\" size={20} />\n//           <h3 className=\"font-medium text-green-800\">POS Integration Active</h3>\n//         </div>\n//         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm text-green-700\">\n//           <div>\n//             <strong>Credit Sales:</strong> Automatically create AR entries when customers buy on credit in POS\n//           </div>\n//           <div>\n//             <strong>Customer Limits:</strong> POS checks credit limits before allowing credit sales\n//           </div>\n//           <div>\n//             <strong>Real-time Updates:</strong> Customer balances update instantly with each transaction\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AccountsReceivable;\n\nimport React, { useState, useEffect } from 'react';\nimport { Users, DollarSign, CreditCard, AlertTriangle, Clock, Plus, Search, Filter, Eye, Edit, Download, CheckCircle, XCircle, Calendar, FileText, TrendingUp, Mail, Phone, Loader, RefreshCw } from 'lucide-react';\n\n// API Configuration\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL_SALES = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/orders?start=0&size=200';\nconst API_CUSTOMERS = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/customers?status=Active';\n\n// Replace with your actual Bearer token\nconst BEARER_TOKEN = 'your-bearer-token-here';\nconst AccountsReceivable = () => {\n  _s();\n  // State management\n  const [sales, setSales] = useState({\n    loading: false,\n    data: [],\n    error: null\n  });\n  const [customers, setCustomers] = useState({\n    loading: false,\n    data: [],\n    error: null\n  });\n  const [activeTab, setActiveTab] = useState('overview');\n  const [selectedOrder, setSelectedOrder] = useState(null);\n  const [filters, setFilters] = useState({\n    customerType: 'all',\n    status: 'all',\n    searchTerm: ''\n  });\n\n  // API Functions\n  const fetchSales = async () => {\n    setSales(prev => ({\n      ...prev,\n      loading: true,\n      error: null\n    }));\n    try {\n      const response = await fetch(API_BASE_URL_SALES, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${BEARER_TOKEN}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n\n      // Filter for unpaid and unfulfilled orders only\n      const filteredOrders = data.filter(order => !order.paid || !order.fulfilled || order.status === 'Active');\n      setSales({\n        loading: false,\n        data: filteredOrders,\n        error: null\n      });\n    } catch (error) {\n      console.error('Error fetching sales:', error);\n      setSales({\n        loading: false,\n        data: [],\n        error: error.message\n      });\n    }\n  };\n  const fetchCustomers = async () => {\n    setCustomers(prev => ({\n      ...prev,\n      loading: true,\n      error: null\n    }));\n    try {\n      const response = await fetch(API_CUSTOMERS, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${BEARER_TOKEN}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setCustomers({\n        loading: false,\n        data: data,\n        error: null\n      });\n    } catch (error) {\n      console.error('Error fetching customers:', error);\n      setCustomers({\n        loading: false,\n        data: [],\n        error: error.message\n      });\n    }\n  };\n\n  // Load data on component mount\n  useEffect(() => {\n    fetchSales();\n    fetchCustomers();\n  }, []);\n\n  // Helper function to get customer name by ID\n  const getCustomerName = customerId => {\n    if (!customerId || customerId === 'null') return 'Walk-in Customer';\n    const customer = customers.data.find(c => c.id === customerId);\n    return customer ? customer.name : 'Unknown Customer';\n  };\n\n  // Helper function to get customer details by ID\n  const getCustomerDetails = customerId => {\n    if (!customerId || customerId === 'null') return null;\n    return customers.data.find(c => c.id === customerId);\n  };\n\n  // Calculate summary data\n  const calculateSummary = () => {\n    const totalAR = sales.data.reduce((sum, order) => sum + order.total, 0);\n    const totalOrders = sales.data.length;\n    const unfulfilledOrders = sales.data.filter(order => !order.fulfilled).length;\n    const unpaidOrders = sales.data.filter(order => !order.paid).length;\n    return {\n      totalAR,\n      totalOrders,\n      unfulfilledOrders,\n      unpaidOrders\n    };\n  };\n\n  // Filter orders based on search and filters\n  const getFilteredOrders = () => {\n    let filtered = [...sales.data];\n    if (filters.status !== 'all') {\n      if (filters.status === 'unpaid') {\n        filtered = filtered.filter(order => !order.paid);\n      } else if (filters.status === 'unfulfilled') {\n        filtered = filtered.filter(order => !order.fulfilled);\n      }\n    }\n    if (filters.searchTerm) {\n      const term = filters.searchTerm.toLowerCase();\n      filtered = filtered.filter(order => order.orderId.toLowerCase().includes(term) || getCustomerName(order.customerId).toLowerCase().includes(term) || order.lineItems.some(item => item.productName.toLowerCase().includes(term)));\n    }\n    return filtered;\n  };\n  const formatDate = dateString => {\n    if (!dateString) return 'N/A';\n    return dateString.split('.').slice(0, 3).join('/');\n  };\n  const formatCurrency = amount => {\n    return new Intl.NumberFormat('en-PK', {\n      style: 'currency',\n      currency: 'PKR',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(amount);\n  };\n  const summary = calculateSummary();\n  const filteredOrders = getFilteredOrders();\n\n  // Loading state\n  if (sales.loading || customers.loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-3\",\n        children: [/*#__PURE__*/_jsxDEV(Loader, {\n          className: \"animate-spin text-emerald-600\",\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2996,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-600\",\n          children: \"Loading data from API...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2997,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2995,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2994,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Error state\n  if (sales.error || customers.error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto p-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-50 border border-red-200 rounded-lg p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n            className: \"text-red-600 mr-2\",\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3009,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-medium text-red-800\",\n            children: \"API Connection Error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3010,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3008,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-700 mb-4\",\n          children: [sales.error && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Sales API Error: \", sales.error]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3013,\n            columnNumber: 29\n          }, this), customers.error && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Customers API Error: \", customers.error]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3014,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3012,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            fetchSales();\n            fetchCustomers();\n          },\n          className: \"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3023,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Retry Connection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3024,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3016,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3007,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3006,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-7xl mx-auto p-6 bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-gray-900 mb-2 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(CreditCard, {\n          className: \"mr-3 text-emerald-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3036,\n          columnNumber: 11\n        }, this), \"Accounts Receivable - Outstanding Orders\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3035,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"Manage unpaid and unfulfilled orders from POS system\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3039,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3034,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-blue-50 p-6 rounded-lg border border-blue-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-blue-600 text-sm font-medium\",\n              children: \"Total Outstanding\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3047,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-2xl font-bold text-blue-900\",\n              children: formatCurrency(summary.totalAR)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3048,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3046,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DollarSign, {\n            className: \"text-blue-600\",\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3050,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3045,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-blue-700 mt-2\",\n          children: [summary.totalOrders, \" orders\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3052,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3044,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-50 p-6 rounded-lg border border-red-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-600 text-sm font-medium\",\n              children: \"Unpaid Orders\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3058,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-2xl font-bold text-red-900\",\n              children: summary.unpaidOrders\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3059,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3057,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AlertTriangle, {\n            className: \"text-red-600\",\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3061,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3056,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-red-700 mt-2\",\n          children: \"Require payment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3063,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3055,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-yellow-50 p-6 rounded-lg border border-yellow-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-yellow-600 text-sm font-medium\",\n              children: \"Unfulfilled Orders\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3069,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-2xl font-bold text-yellow-900\",\n              children: summary.unfulfilledOrders\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3070,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3068,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Clock, {\n            className: \"text-yellow-600\",\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3072,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3067,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-yellow-700 mt-2\",\n          children: \"Pending fulfillment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3074,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3066,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-purple-50 p-6 rounded-lg border border-purple-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-purple-600 text-sm font-medium\",\n              children: \"Active Customers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3080,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-2xl font-bold text-purple-900\",\n              children: customers.data.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3081,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3079,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Users, {\n            className: \"text-purple-600\",\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3083,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3078,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-purple-700 mt-2\",\n          children: \"Total customers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3085,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3077,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3043,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap items-center gap-4 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative\",\n        children: [/*#__PURE__*/_jsxDEV(Search, {\n          className: \"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\",\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3092,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search orders, customers, products...\",\n          value: filters.searchTerm,\n          onChange: e => setFilters({\n            ...filters,\n            searchTerm: e.target.value\n          }),\n          className: \"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3093,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3091,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: filters.status,\n        onChange: e => setFilters({\n          ...filters,\n          status: e.target.value\n        }),\n        className: \"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"unpaid\",\n          children: \"Unpaid Only\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"unfulfilled\",\n          children: \"Unfulfilled Only\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          fetchSales();\n          fetchCustomers();\n        },\n        className: \"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Refresh Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3090,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white border border-gray-200 rounded-lg overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-6 py-4 border-b border-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold text-gray-900\",\n          children: [\"Outstanding Orders (\", filteredOrders.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"bg-gray-50\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Order ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3133,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3136,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3139,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Items\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3142,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Total Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3145,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Payment Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3148,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Fulfillment Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3151,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3154,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3132,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            className: \"bg-white divide-y divide-gray-200\",\n            children: filteredOrders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"hover:bg-gray-50\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm font-medium text-gray-900\",\n                  children: [\"#\", order.orderId]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3163,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-xs text-gray-500\",\n                  children: order.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3164,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3162,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm font-medium text-gray-900\",\n                  children: getCustomerName(order.customerId)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3167,\n                  columnNumber: 21\n                }, this), getCustomerDetails(order.customerId) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-xs text-gray-500 flex items-center mt-1\",\n                  children: [/*#__PURE__*/_jsxDEV(Mail, {\n                    className: \"mr-1\",\n                    size: 10\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3172,\n                    columnNumber: 25\n                  }, this), getCustomerDetails(order.customerId).email]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3171,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3166,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900\",\n                children: formatDate(order.createdAt)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3177,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-900\",\n                  children: order.lineItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-medium\",\n                      children: item.productName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3184,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-gray-500 ml-2\",\n                      children: [\"x\", item.quantity]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3185,\n                      columnNumber: 27\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3183,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3181,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3180,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\",\n                children: formatCurrency(order.total)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3190,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `px-2 py-1 text-xs font-medium rounded-full ${order.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`,\n                  children: order.paid ? 'Paid' : 'Unpaid'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3194,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3193,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `px-2 py-1 text-xs font-medium rounded-full ${order.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'}`,\n                  children: order.fulfilled ? 'Fulfilled' : 'Pending'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3203,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3202,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm font-medium\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setSelectedOrder(order),\n                  className: \"text-emerald-600 hover:text-emerald-900 mr-3\",\n                  title: \"View Details\",\n                  children: /*#__PURE__*/_jsxDEV(Eye, {\n                    size: 16\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3217,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3212,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"text-blue-600 hover:text-blue-900\",\n                  title: \"Edit Order\",\n                  children: /*#__PURE__*/_jsxDEV(Edit, {\n                    size: 16\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3223,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3219,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3211,\n                columnNumber: 19\n              }, this)]\n            }, order.orderId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3161,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3159,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3130,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3129,\n        columnNumber: 9\n      }, this), filteredOrders.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-500 text-lg\",\n          children: \"No outstanding orders found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400 mt-2\",\n          children: \"All orders are either paid and fulfilled, or try adjusting your filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3235,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3233,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3125,\n      columnNumber: 7\n    }, this), selectedOrder && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-6 py-4 border-b border-gray-200\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold text-gray-900\",\n              children: [\"Order Details - #\", selectedOrder.orderId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3246,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setSelectedOrder(null),\n              className: \"text-gray-400 hover:text-gray-600\",\n              children: /*#__PURE__*/_jsxDEV(XCircle, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3253,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3249,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3245,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-6 py-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-sm font-medium text-gray-500\",\n                  children: \"Order ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3263,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-900\",\n                  children: selectedOrder.orderId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3264,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3262,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-sm font-medium text-gray-500\",\n                  children: \"Customer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3267,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-900\",\n                  children: getCustomerName(selectedOrder.customerId)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3268,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3266,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-sm font-medium text-gray-500\",\n                  children: \"Created Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3271,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-900\",\n                  children: formatDate(selectedOrder.createdAt)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3272,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3270,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-sm font-medium text-gray-500\",\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3275,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-900\",\n                  children: selectedOrder.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3276,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3274,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3261,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-sm font-medium text-gray-500\",\n                  children: \"Payment Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3282,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `px-2 py-1 text-xs font-medium rounded-full ${selectedOrder.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`,\n                    children: selectedOrder.paid ? 'Paid' : 'Unpaid'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3284,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3283,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3281,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-sm font-medium text-gray-500\",\n                  children: \"Fulfillment Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3292,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `px-2 py-1 text-xs font-medium rounded-full ${selectedOrder.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'}`,\n                    children: selectedOrder.fulfilled ? 'Fulfilled' : 'Pending'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3294,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3293,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3291,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-sm font-medium text-gray-500\",\n                  children: \"Total Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3302,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-lg font-bold text-gray-900\",\n                  children: formatCurrency(selectedOrder.total)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3303,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3301,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-sm font-medium text-gray-500\",\n                  children: \"Payable Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3306,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-900\",\n                  children: formatCurrency(selectedOrder.payableAmount)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3307,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3305,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3280,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3260,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-md font-semibold text-gray-900 mb-3\",\n              children: \"Order Items\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3314,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"overflow-x-auto\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"w-full border border-gray-200 rounded\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  className: \"bg-gray-50\",\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-4 py-2 text-left text-xs font-medium text-gray-500\",\n                      children: \"Product\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3319,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-4 py-2 text-right text-xs font-medium text-gray-500\",\n                      children: \"Quantity\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3320,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-4 py-2 text-right text-xs font-medium text-gray-500\",\n                      children: \"Unit Price\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3321,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-4 py-2 text-right text-xs font-medium text-gray-500\",\n                      children: \"Total\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3322,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-4 py-2 text-left text-xs font-medium text-gray-500\",\n                      children: \"Status\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3323,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3318,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3317,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  className: \"divide-y divide-gray-200\",\n                  children: selectedOrder.lineItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 text-sm text-gray-900\",\n                      children: item.productName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3329,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 text-sm text-gray-900 text-right\",\n                      children: item.quantity\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3330,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 text-sm text-gray-900 text-right\",\n                      children: formatCurrency(item.price)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3331,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 text-sm font-medium text-gray-900 text-right\",\n                      children: formatCurrency(item.total)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3332,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: `px-2 py-1 text-xs font-medium rounded-full ${item.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'}`,\n                        children: item.status\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 3334,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3333,\n                      columnNumber: 27\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3328,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3326,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3316,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3315,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3313,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-50 p-4 rounded-lg\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm text-gray-600\",\n                  children: \"Subtotal:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3351,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm text-gray-900\",\n                  children: formatCurrency(selectedOrder.subTotal)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3352,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3350,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm text-gray-600\",\n                  children: [\"Tax (\", selectedOrder.taxRate, \"%):\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3355,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm text-gray-900\",\n                  children: formatCurrency(selectedOrder.taxAmount)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3356,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3354,\n                columnNumber: 19\n              }, this), selectedOrder.discountAmount > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm text-gray-600\",\n                  children: \"Discount:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3360,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm text-red-600\",\n                  children: [\"-\", formatCurrency(selectedOrder.discountAmount)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3361,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3359,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between font-bold text-lg border-t pt-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Total:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3365,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: formatCurrency(selectedOrder.total)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3366,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3364,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3349,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3348,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-3 mt-6\",\n            children: [!selectedOrder.paid && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3375,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Mark as Paid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3376,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3374,\n              columnNumber: 19\n            }, this), !selectedOrder.fulfilled && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(FileText, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3381,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Mark as Fulfilled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3382,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3380,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(Download, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3386,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Download Invoice\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3387,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3385,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3372,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3258,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3243,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3242,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8 p-6 bg-green-50 border border-green-200 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n          className: \"text-green-600 mr-2\",\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3398,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-medium text-green-800\",\n          children: \"API Integration Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3399,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3397,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-green-700\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Sales API:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3403,\n            columnNumber: 13\n          }, this), \" Connected - Showing \", sales.data.length, \" outstanding orders\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3402,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Customers API:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3406,\n            columnNumber: 13\n          }, this), \" Connected - \", customers.data.length, \" active customers loaded\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3405,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3401,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 text-xs text-green-600\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Note:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3410,\n          columnNumber: 11\n        }, this), \" Only unpaid or unfulfilled orders are displayed. Update your Bearer token in the code for live data.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3409,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3396,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3032,\n    columnNumber: 5\n  }, this);\n};\n_s(AccountsReceivable, \"BVDycNZl/2bMjy300ZRJ/CWvCa8=\");\n_c = AccountsReceivable;\nexport default AccountsReceivable;\nvar _c;\n$RefreshReg$(_c, \"AccountsReceivable\");","map":{"version":3,"names":["React","useState","useEffect","Users","DollarSign","CreditCard","AlertTriangle","Clock","Plus","Search","Filter","Eye","Edit","Download","CheckCircle","XCircle","Calendar","FileText","TrendingUp","Mail","Phone","Loader","RefreshCw","jsxDEV","_jsxDEV","API_BASE_URL_SALES","API_CUSTOMERS","BEARER_TOKEN","AccountsReceivable","_s","sales","setSales","loading","data","error","customers","setCustomers","activeTab","setActiveTab","selectedOrder","setSelectedOrder","filters","setFilters","customerType","status","searchTerm","fetchSales","prev","response","fetch","method","headers","ok","Error","json","filteredOrders","filter","order","paid","fulfilled","console","message","fetchCustomers","getCustomerName","customerId","customer","find","c","id","name","getCustomerDetails","calculateSummary","totalAR","reduce","sum","total","totalOrders","length","unfulfilledOrders","unpaidOrders","getFilteredOrders","filtered","term","toLowerCase","orderId","includes","lineItems","some","item","productName","formatDate","dateString","split","slice","join","formatCurrency","amount","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","summary","className","children","size","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","map","email","createdAt","index","quantity","title","payableAmount","price","subTotal","taxRate","taxAmount","discountAmount","_c","$RefreshReg$"],"sources":["C:/Users/Logic-Unit/my-account/src/pages/AccountsReceivable.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { \r\n//   Users, \r\n//   DollarSign, \r\n//   CreditCard, \r\n//   AlertTriangle, \r\n//   Clock, \r\n//   Plus, \r\n//   Search, \r\n//   Filter, \r\n//   Eye, \r\n//   Edit, \r\n//   Download,\r\n//   CheckCircle,\r\n//   XCircle,\r\n//   Calendar,\r\n//   FileText,\r\n//   TrendingUp,\r\n//   Mail,\r\n//   Phone\r\n// } from 'lucide-react';\r\n// import CreateInvoiceModal from '../components/CreateInvoiceModal';\r\n// import InvoiceModal from '../components/InvoiceModal';\r\n\r\n// const AccountsReceivable = () => {\r\n//   const [customers, setCustomers] = useState([]);\r\n//   const [invoices, setInvoices] = useState([]);\r\n//   const [payments, setPayments] = useState([]);\r\n//   const [selectedCustomer, setSelectedCustomer] = useState(null);\r\n//   const [activeTab, setActiveTab] = useState('overview');\r\n//   const [viewInvoice, setViewInvoice] = useState(null);\r\n \r\n//   const [filters, setFilters] = useState({\r\n//     customerType: 'all',\r\n//     status: 'all',\r\n//     dateRange: '30',\r\n//     searchTerm: ''\r\n//   });\r\n//   const handleCreateInvoice = () => {\r\n//   // Find the customer name for the invoice\r\n//   const customer = customers.find(c => c.id === newInvoice.customerId);\r\n//   if (!customer) {\r\n//     alert('Please select a customer');\r\n//     return;\r\n//   }\r\n//   // Generate a new invoice ID (simple example)\r\n//   const nextId = `INV-${new Date().getFullYear()}-${String(invoices.length + 1).padStart(3, '0')}`;\r\n//   const invoiceTotal = calculateInvoiceTotal();\r\n \r\n//   const newInvoiceData = {\r\n//     id: nextId,\r\n//     customerId: customer.id,\r\n//     customerName: customer.name,\r\n//     date: new Date().toISOString().slice(0, 10),\r\n//     dueDate: newInvoice.dueDate,\r\n//     amount: invoiceTotal,\r\n//     paid: 0,\r\n//     balance: invoiceTotal,\r\n//     status: 'outstanding',\r\n//     daysOverdue: 0,\r\n//     paymentTerms: customer.paymentTerms,\r\n//     items: newInvoice.items,\r\n//     notes: newInvoice.notes,\r\n//     source: 'manual'\r\n//   };\r\n \r\n//   // Append to invoices\r\n//   setInvoices(prev => [...prev, newInvoiceData]);\r\n \r\n//   // Optionally update customer AR data (totalOwed, invoiceCount, etc.)\r\n//   setCustomers(prev =>\r\n//     prev.map(c =>\r\n//       c.id === customer.id\r\n//         ? {\r\n//             ...c,\r\n//             totalOwed: c.totalOwed + invoiceTotal,\r\n//             invoiceCount: c.invoiceCount + 1\r\n//           }\r\n//         : c\r\n//     )\r\n//   );\r\n \r\n//   // Reset the form\r\n//   setNewInvoice({\r\n//     customerId: '',\r\n//     dueDate: '',\r\n//     items: [{ description: '', quantity: 1, price: 0, total: 0 }],\r\n//     notes: ''\r\n//   });\r\n \r\n//   setShowInvoiceForm(false);\r\n//   alert('Invoice created successfully!');\r\n// };\r\n \r\n//   // const handleCreateInvoice = (invoice) => {\r\n//   //   setInvoices(prev => [\r\n//   //     {\r\n//   //       ...invoice,\r\n//   //       id: `INV-${new Date().getFullYear()}-${String(prev.length + 1).padStart(3, '0')}`\r\n//   //     },\r\n//   //     ...prev\r\n//   //   ]);\r\n//   // };\r\n \r\n//   const [showInvoiceForm, setShowInvoiceForm] = useState(false);\r\n//   const [newInvoice, setNewInvoice] = useState({\r\n//     customerId: '',\r\n//     dueDate: '',\r\n//     items: [{ description: '', quantity: 1, price: 0, total: 0 }],\r\n//     notes: ''\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     loadSampleData();\r\n//   }, []);\r\n\r\n//   const loadSampleData = () => {\r\n//     // Sample Customers with AR data\r\n//     const sampleCustomers = [\r\n//       {\r\n//         id: 'CUST001',\r\n//         name: 'Al Noor Medical Center',\r\n//         email: 'finance@alnoor.com',\r\n//         phone: '+966-11-123-4567',\r\n//         address: 'King Fahd Road, Riyadh',\r\n//         customerType: 'corporate',\r\n//         creditLimit: 50000,\r\n//         paymentTerms: 30,\r\n//         totalOwed: 15750.00,\r\n//         overdueAmount: 5250.00,\r\n//         lastPayment: '2025-01-10',\r\n//         creditStatus: 'good',\r\n//         accountBalance: -15750.00,\r\n//         invoiceCount: 8,\r\n//         avgPaymentDays: 25\r\n//       },\r\n//       {\r\n//         id: 'CUST002',\r\n//         name: 'Dr. Ahmed Clinic',\r\n//         email: 'dr.ahmed@clinic.com',\r\n//         phone: '+966-12-987-6543',\r\n//         address: 'Prince Sultan Street, Jeddah',\r\n//         customerType: 'small_business',\r\n//         creditLimit: 20000,\r\n//         paymentTerms: 15,\r\n//         totalOwed: 8900.00,\r\n//         overdueAmount: 2100.00,\r\n//         lastPayment: '2025-01-12',\r\n//         creditStatus: 'watch',\r\n//         accountBalance: -8900.00,\r\n//         invoiceCount: 5,\r\n//         avgPaymentDays: 18\r\n//       },\r\n//       {\r\n//         id: 'CUST003',\r\n//         name: 'Pharmacy Plus Chain',\r\n//         email: 'accounts@pharmacyplus.sa',\r\n//         phone: '+966-13-555-0123',\r\n//         address: 'Al Khobar, Eastern Province',\r\n//         customerType: 'corporate',\r\n//         creditLimit: 75000,\r\n//         paymentTerms: 45,\r\n//         totalOwed: 32100.00,\r\n//         overdueAmount: 0,\r\n//         lastPayment: '2025-01-14',\r\n//         creditStatus: 'excellent',\r\n//         accountBalance: -32100.00,\r\n//         invoiceCount: 12,\r\n//         avgPaymentDays: 35\r\n//       },\r\n//       {\r\n//         id: 'CUST004',\r\n//         name: 'Walk-in Customer',\r\n//         email: 'cash@pos.system',\r\n//         phone: '+966-50-000-0000',\r\n//         address: 'Point of Sale',\r\n//         customerType: 'cash',\r\n//         creditLimit: 0,\r\n//         paymentTerms: 0,\r\n//         totalOwed: 0,\r\n//         overdueAmount: 0,\r\n//         lastPayment: '2025-01-15',\r\n//         creditStatus: 'cash_only',\r\n//         accountBalance: 0,\r\n//         invoiceCount: 0,\r\n//         avgPaymentDays: 0\r\n//       }\r\n//     ];\r\n\r\n//     // Sample Invoices\r\n//     const sampleInvoices = [\r\n//       {\r\n//         id: 'INV-2025-001',\r\n//         customerId: 'CUST001',\r\n//         customerName: 'Al Noor Medical Center',\r\n//         date: '2025-01-15',\r\n//         dueDate: '2025-02-14',\r\n//         amount: 5250.00,\r\n//         paid: 0,\r\n//         balance: 5250.00,\r\n//         status: 'outstanding',\r\n//         daysOverdue: 0,\r\n//         paymentTerms: 30,\r\n//         items: [\r\n//           { description: 'A2A 25MG TAB', quantity: 100, price: 15.00, total: 1500.00 },\r\n//           { description: 'AALBUMIN 50ML', quantity: 150, price: 25.00, total: 3750.00 }\r\n//         ],\r\n//         notes: 'Monthly medical supplies order',\r\n//         source: 'manual'\r\n//       },\r\n//       {\r\n//         id: 'INV-2025-002',\r\n//         customerId: 'CUST002',\r\n//         customerName: 'Dr. Ahmed Clinic',\r\n//         date: '2025-01-10',\r\n//         dueDate: '2025-01-25',\r\n//         amount: 2100.00,\r\n//         paid: 0,\r\n//         balance: 2100.00,\r\n//         status: 'overdue',\r\n//         daysOverdue: 5,\r\n//         paymentTerms: 15,\r\n//         items: [\r\n//           { description: 'ABAKTAL INJ', quantity: 50, price: 30.00, total: 1500.00 },\r\n//           { description: 'AARAM PLUS', quantity: 20, price: 30.00, total: 600.00 }\r\n//         ],\r\n//         notes: 'Urgent medical supplies',\r\n//         source: 'pos'\r\n//       },\r\n//       {\r\n//         id: 'POS-2025-003',\r\n//         customerId: 'CUST001',\r\n//         customerName: 'Al Noor Medical Center',\r\n//         date: '2025-01-12',\r\n//         dueDate: '2025-02-11',\r\n//         amount: 1850.00,\r\n//         paid: 1850.00,\r\n//         balance: 0,\r\n//         status: 'paid',\r\n//         daysOverdue: 0,\r\n//         paymentTerms: 30,\r\n//         items: [\r\n//           { description: 'Medical supplies - POS Sale', quantity: 1, price: 1850.00, total: 1850.00 }\r\n//         ],\r\n//         notes: 'Direct POS sale - Credit account',\r\n//         source: 'pos'\r\n//       }\r\n//     ];\r\n\r\n//     // Sample Payments\r\n//     const samplePayments = [\r\n//       {\r\n//         id: 'PAY001',\r\n//         customerId: 'CUST001',\r\n//         customerName: 'Al Noor Medical Center',\r\n//         invoiceId: 'POS-2025-003',\r\n//         date: '2025-01-14',\r\n//         amount: 1850.00,\r\n//         method: 'bank_transfer',\r\n//         reference: 'TXN123456789',\r\n//         status: 'cleared',\r\n//         notes: 'Payment for POS sale'\r\n//       },\r\n//       {\r\n//         id: 'PAY002',\r\n//         customerId: 'CUST003',\r\n//         customerName: 'Pharmacy Plus Chain',\r\n//         invoiceId: 'INV-2024-045',\r\n//         date: '2025-01-12',\r\n//         amount: 15600.00,\r\n//         method: 'check',\r\n//         reference: 'CHK-789123',\r\n//         status: 'cleared',\r\n//         notes: 'December invoice payment'\r\n//       }\r\n//     ];\r\n\r\n//     setCustomers(sampleCustomers);\r\n//     setInvoices(sampleInvoices);\r\n//     setPayments(samplePayments);\r\n//   };\r\n\r\n//   const calculateARSummary = () => {\r\n//     const totalAR = customers.reduce((sum, customer) => sum + customer.totalOwed, 0);\r\n//     const totalOverdue = customers.reduce((sum, customer) => sum + customer.overdueAmount, 0);\r\n//     const customersWithBalance = customers.filter(customer => customer.totalOwed > 0).length;\r\n//     const avgDaysOutstanding = customers.reduce((sum, customer) => sum + customer.avgPaymentDays, 0) / customers.length;\r\n\r\n//     return {\r\n//       totalAR,\r\n//       totalOverdue,\r\n//       customersWithBalance,\r\n//       avgDaysOutstanding: Math.round(avgDaysOutstanding)\r\n//     };\r\n//   };\r\n\r\n//   const getAgingData = () => {\r\n//     const aging = {\r\n//       current: 0,\r\n//       days30: 0,\r\n//       days60: 0,\r\n//       days90: 0,\r\n//       over90: 0\r\n//     };\r\n\r\n//     invoices.forEach(invoice => {\r\n//       if (invoice.status === 'paid') return;\r\n      \r\n//       const daysPastDue = invoice.daysOverdue || 0;\r\n      \r\n//       if (daysPastDue <= 0) {\r\n//         aging.current += invoice.balance;\r\n//       } else if (daysPastDue <= 30) {\r\n//         aging.days30 += invoice.balance;\r\n//       } else if (daysPastDue <= 60) {\r\n//         aging.days60 += invoice.balance;\r\n//       } else if (daysPastDue <= 90) {\r\n//         aging.days90 += invoice.balance;\r\n//       } else {\r\n//         aging.over90 += invoice.balance;\r\n//       }\r\n//     });\r\n\r\n//     return aging;\r\n//   };\r\n\r\n//   const getFilteredCustomers = () => {\r\n//     let filtered = [...customers];\r\n\r\n//     if (filters.customerType !== 'all') {\r\n//       filtered = filtered.filter(customer => customer.customerType === filters.customerType);\r\n//     }\r\n\r\n//     if (filters.status !== 'all') {\r\n//       filtered = filtered.filter(customer => {\r\n//         if (filters.status === 'overdue') return customer.overdueAmount > 0;\r\n//         if (filters.status === 'current') return customer.totalOwed > 0 && customer.overdueAmount === 0;\r\n//         if (filters.status === 'paid_up') return customer.totalOwed === 0;\r\n//         return true;\r\n//       });\r\n//     }\r\n\r\n//     if (filters.searchTerm) {\r\n//       const term = filters.searchTerm.toLowerCase();\r\n//       filtered = filtered.filter(customer =>\r\n//         customer.name.toLowerCase().includes(term) ||\r\n//         customer.email.toLowerCase().includes(term) ||\r\n//         customer.id.toLowerCase().includes(term)\r\n//       );\r\n//     }\r\n\r\n//     return filtered;\r\n//   };\r\n\r\n//   const getCreditStatusColor = (status) => {\r\n//     switch (status) {\r\n//       case 'excellent': return 'bg-green-100 text-green-800';\r\n//       case 'good': return 'bg-blue-100 text-blue-800';\r\n//       case 'watch': return 'bg-yellow-100 text-yellow-800';\r\n//       case 'hold': return 'bg-red-100 text-red-800';\r\n//       case 'cash_only': return 'bg-gray-100 text-gray-800';\r\n//       default: return 'bg-gray-100 text-gray-800';\r\n//     }\r\n//   };\r\n\r\n//   const getInvoiceStatusColor = (status) => {\r\n//     switch (status) {\r\n//       case 'paid': return 'bg-green-100 text-green-800';\r\n//       case 'outstanding': return 'bg-blue-100 text-blue-800';\r\n//       case 'overdue': return 'bg-red-100 text-red-800';\r\n//       case 'partial': return 'bg-yellow-100 text-yellow-800';\r\n//       default: return 'bg-gray-100 text-gray-800';\r\n//     }\r\n//   };\r\n\r\n//   const addInvoiceItem = () => {\r\n//     setNewInvoice({\r\n//       ...newInvoice,\r\n//       items: [...newInvoice.items, { description: '', quantity: 1, price: 0, total: 0 }]\r\n//     });\r\n//   };\r\n\r\n//   const updateInvoiceItem = (index, field, value) => {\r\n//     const updatedItems = [...newInvoice.items];\r\n//     updatedItems[index] = { ...updatedItems[index], [field]: value };\r\n    \r\n//     if (field === 'quantity' || field === 'price') {\r\n//       updatedItems[index].total = updatedItems[index].quantity * updatedItems[index].price;\r\n//     }\r\n    \r\n//     setNewInvoice({ ...newInvoice, items: updatedItems });\r\n//   };\r\n\r\n//   const calculateInvoiceTotal = () => {\r\n//     return newInvoice.items.reduce((sum, item) => sum + item.total, 0);\r\n//   };\r\n\r\n//   const summary = calculateARSummary();\r\n//   const aging = getAgingData();\r\n//   const filteredCustomers = getFilteredCustomers();\r\n\r\n//   return (\r\n//     <div className=\"max-w-7xl mx-auto p-6 bg-white\">\r\n//       {/* Header */}\r\n//       <div className=\"mb-8\">\r\n//         <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\r\n//           <CreditCard className=\"mr-3 text-emerald-600\" />\r\n//           Accounts Receivable\r\n//         </h1>\r\n//         <p className=\"text-gray-600\">Manage customer invoicing, payments, and credit limits</p>\r\n//       </div>\r\n\r\n//       {/* Summary Cards */}\r\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\r\n//         <div className=\"bg-blue-50 p-6 rounded-lg border border-blue-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-blue-600 text-sm font-medium\">Total A/R</p>\r\n//               <p className=\"text-2xl font-bold text-blue-900\">${summary.totalAR.toFixed(2)}</p>\r\n//             </div>\r\n//             <DollarSign className=\"text-blue-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-blue-700 mt-2\">{summary.customersWithBalance} customers with balances</p>\r\n//         </div>\r\n\r\n//         <div className=\"bg-red-50 p-6 rounded-lg border border-red-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-red-600 text-sm font-medium\">Overdue Amount</p>\r\n//               <p className=\"text-2xl font-bold text-red-900\">${summary.totalOverdue.toFixed(2)}</p>\r\n//             </div>\r\n//             <AlertTriangle className=\"text-red-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-red-700 mt-2\">\r\n//             {((summary.totalOverdue / summary.totalAR) * 100).toFixed(1)}% of total A/R\r\n//           </p>\r\n//         </div>\r\n\r\n//         <div className=\"bg-green-50 p-6 rounded-lg border border-green-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-green-600 text-sm font-medium\">Avg. Days Outstanding</p>\r\n//               <p className=\"text-2xl font-bold text-green-900\">{summary.avgDaysOutstanding}</p>\r\n//             </div>\r\n//             <Clock className=\"text-green-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-green-700 mt-2\">Collection performance</p>\r\n//         </div>\r\n\r\n//         <div className=\"bg-purple-50 p-6 rounded-lg border border-purple-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-purple-600 text-sm font-medium\">Active Customers</p>\r\n//               <p className=\"text-2xl font-bold text-purple-900\">{customers.length}</p>\r\n//             </div>\r\n//             <Users className=\"text-purple-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-purple-700 mt-2\">Total customer accounts</p>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Tabs */}\r\n//       <div className=\"mb-6\">\r\n//         <div className=\"border-b border-gray-200\">\r\n//           <nav className=\"-mb-px flex space-x-8\">\r\n//             {[\r\n//               { id: 'overview', name: 'Customer Overview', icon: Users },\r\n//               { id: 'invoices', name: 'Invoices', icon: FileText },\r\n//               { id: 'aging', name: 'Aging Report', icon: Clock },\r\n//               { id: 'payments', name: 'Payments', icon: CheckCircle }\r\n//             ].map((tab) => (\r\n//               <button\r\n//                 key={tab.id}\r\n//                 onClick={() => setActiveTab(tab.id)}\r\n//                 className={`flex items-center py-2 px-1 border-b-2 font-medium text-sm ${\r\n//                   activeTab === tab.id\r\n//                     ? 'border-emerald-500 text-emerald-600'\r\n//                     : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n//                 }`}\r\n//               >\r\n//                 <tab.icon className=\"mr-2\" size={16} />\r\n//                 {tab.name}\r\n//               </button>\r\n//             ))}\r\n//           </nav>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Tab Content */}\r\n//       {activeTab === 'overview' && (\r\n//         <div>\r\n//           {/* Filters */}\r\n//           <div className=\"flex flex-wrap items-center gap-4 mb-6\">\r\n//             <div className=\"relative\">\r\n//               <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n//               <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Search customers...\"\r\n//                 value={filters.searchTerm}\r\n//                 onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\r\n//                 className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               />\r\n//             </div>\r\n\r\n//             <select\r\n//               value={filters.customerType}\r\n//               onChange={(e) => setFilters({ ...filters, customerType: e.target.value })}\r\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//             >\r\n//               <option value=\"all\">All Customer Types</option>\r\n//               <option value=\"corporate\">Corporate</option>\r\n//               <option value=\"small_business\">Small Business</option>\r\n//               <option value=\"individual\">Individual</option>\r\n//               <option value=\"cash\">Cash Only</option>\r\n//             </select>\r\n\r\n//             <select\r\n//               value={filters.status}\r\n//               onChange={(e) => setFilters({ ...filters, status: e.target.value })}\r\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//             >\r\n//               <option value=\"all\">All Statuses</option>\r\n//               <option value=\"current\">Current</option>\r\n//               <option value=\"overdue\">Overdue</option>\r\n//               <option value=\"paid_up\">Paid Up</option>\r\n//             </select>\r\n\r\n//             <button\r\n//               onClick={() => setShowInvoiceForm(true)}\r\n//               className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\r\n//             >\r\n//               <Plus size={16} />\r\n//               <span>New Invoice</span>\r\n//             </button>\r\n//           </div>\r\n\r\n//           {/* Customer List */}\r\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//             <div className=\"overflow-x-auto\">\r\n//               <table className=\"w-full\">\r\n//                 <thead className=\"bg-gray-50\">\r\n//                   <tr>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Customer\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Type\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Credit Limit\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Balance\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Overdue\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Credit Status\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Last Payment\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Actions\r\n//                     </th>\r\n//                   </tr>\r\n//                 </thead>\r\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//                   {filteredCustomers.map((customer) => (\r\n//                     <tr key={customer.id} className=\"hover:bg-gray-50\">\r\n//                       <td className=\"px-6 py-4\">\r\n//                         <div>\r\n//                           <div className=\"text-sm font-medium text-gray-900\">{customer.name}</div>\r\n//                           <div className=\"text-sm text-gray-500\">{customer.id}</div>\r\n//                           <div className=\"text-xs text-gray-400 flex items-center mt-1\">\r\n//                             <Mail className=\"mr-1\" size={12} />\r\n//                             {customer.email}\r\n//                           </div>\r\n//                         </div>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-gray-100 text-gray-800\">\r\n//                           {customer.customerType.replace('_', ' ')}\r\n//                         </span>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         ${customer.creditLimit.toLocaleString()}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <div className=\"text-sm font-medium text-gray-900\">\r\n//                           ${customer.totalOwed.toFixed(2)}\r\n//                         </div>\r\n//                         <div className=\"text-xs text-gray-500\">\r\n//                           {customer.invoiceCount} invoices\r\n//                         </div>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         {customer.overdueAmount > 0 ? (\r\n//                           <span className=\"text-red-600 font-medium\">\r\n//                             ${customer.overdueAmount.toFixed(2)}\r\n//                           </span>\r\n//                         ) : (\r\n//                           <span className=\"text-green-600\">$0.00</span>\r\n//                         )}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(customer.creditStatus)}`}>\r\n//                           {customer.creditStatus.replace('_', ' ')}\r\n//                         </span>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {customer.lastPayment}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n//                         <button\r\n//                           onClick={() => setSelectedCustomer(customer)}\r\n//                           className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\r\n//                         >\r\n//                           <Eye size={16} />\r\n//                         </button>\r\n//                         <button className=\"text-blue-600 hover:text-blue-900\">\r\n//                           <Edit size={16} />\r\n//                         </button>\r\n//                       </td>\r\n//                     </tr>\r\n//                   ))}\r\n//                 </tbody>\r\n//               </table>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {activeTab === 'aging' && (\r\n//         <div>\r\n//           <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n//             {/* Aging Summary */}\r\n//             <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Aging Summary</h3>\r\n//               <div className=\"space-y-4\">\r\n//                 <div className=\"flex justify-between items-center p-3 bg-green-50 rounded\">\r\n//                   <span className=\"font-medium text-green-800\">Current (0-30 days)</span>\r\n//                   <span className=\"font-bold text-green-900\">${aging.current.toFixed(2)}</span>\r\n//                 </div>\r\n//                 <div className=\"flex justify-between items-center p-3 bg-yellow-50 rounded\">\r\n//                   <span className=\"font-medium text-yellow-800\">31-60 days</span>\r\n//                   <span className=\"font-bold text-yellow-900\">${aging.days30.toFixed(2)}</span>\r\n//                 </div>\r\n//                 <div className=\"flex justify-between items-center p-3 bg-orange-50 rounded\">\r\n//                   <span className=\"font-medium text-orange-800\">61-90 days</span>\r\n//                   <span className=\"font-bold text-orange-900\">${aging.days60.toFixed(2)}</span>\r\n//                 </div>\r\n//                 <div className=\"flex justify-between items-center p-3 bg-red-50 rounded\">\r\n//                   <span className=\"font-medium text-red-800\">Over 90 days</span>\r\n//                   <span className=\"font-bold text-red-900\">${aging.over90.toFixed(2)}</span>\r\n//                 </div>\r\n//               </div>\r\n//               <div className=\"mt-4 pt-4 border-t\">\r\n//                 <div className=\"flex justify-between items-center\">\r\n//                   <span className=\"text-lg font-semibold text-gray-900\">Total Outstanding</span>\r\n//                   <span className=\"text-xl font-bold text-gray-900\">\r\n//                     ${(aging.current + aging.days30 + aging.days60 + aging.days90 + aging.over90).toFixed(2)}\r\n//                   </span>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n\r\n//             {/* Collection Priority */}\r\n//             <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Collection Priority</h3>\r\n//               <div className=\"space-y-3\">\r\n//                 {customers\r\n//                   .filter(customer => customer.overdueAmount > 0)\r\n//                   .sort((a, b) => b.overdueAmount - a.overdueAmount)\r\n//                   .slice(0, 5)\r\n//                   .map((customer, index) => (\r\n//                     <div key={customer.id} className=\"flex items-center justify-between p-3 bg-red-50 rounded\">\r\n//                       <div>\r\n//                         <div className=\"font-medium text-gray-900\">{customer.name}</div>\r\n//                         <div className=\"text-sm text-gray-500\">\r\n//                           Last payment: {customer.lastPayment}\r\n//                         </div>\r\n//                       </div>\r\n//                       <div className=\"text-right\">\r\n//                         <div className=\"font-bold text-red-900\">${customer.overdueAmount.toFixed(2)}</div>\r\n//                         <div className=\"text-xs text-red-700\">#{index + 1} Priority</div>\r\n//                       </div>\r\n//                     </div>\r\n//                   ))}\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {activeTab === 'invoices' && (\r\n//         <div>\r\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-900\">Recent Invoices</h3>\r\n//             </div>\r\n//             <div className=\"overflow-x-auto\">\r\n//               <table className=\"w-full\">\r\n//                 <thead className=\"bg-gray-50\">\r\n//                   <tr>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Invoice #\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Customer\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Date\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Due Date\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Amount\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Balance\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Status\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Actions\r\n//                     </th>\r\n//                   </tr>\r\n//                 </thead>\r\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//                   {invoices.map((invoice) => (\r\n//                     <tr key={invoice.id} className=\"hover:bg-gray-50\">\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <div className=\"text-sm font-medium text-gray-900\">{invoice.id}</div>\r\n//                         <div className=\"text-xs text-gray-500\">{invoice.source}</div>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4\">\r\n//                         <div className=\"text-sm font-medium text-gray-900\">{invoice.customerName}</div>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {invoice.date}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {invoice.dueDate}\r\n//                         {invoice.daysOverdue > 0 && (\r\n//                           <div className=\"text-xs text-red-600\">\r\n//                             {invoice.daysOverdue} days overdue\r\n//                           </div>\r\n//                         )}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         ${invoice.amount.toFixed(2)}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n//                         {invoice.balance > 0 ? (\r\n//                           <span className=\"text-red-600\">${invoice.balance.toFixed(2)}</span>\r\n//                         ) : (\r\n//                           <span className=\"text-green-600\">$0.00</span>\r\n//                         )}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${getInvoiceStatusColor(invoice.status)}`}>\r\n//                           {invoice.status}\r\n//                         </span>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n//                           <button\r\n//                               className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\r\n//                               onClick={() => setViewInvoice(invoice)}\r\n//                             >\r\n//                               <Eye size={16} />\r\n//                             </button>\r\n//                         <button className=\"text-blue-600 hover:text-blue-900\">\r\n//                           <Download size={16} />\r\n//                         </button>\r\n//                       </td>\r\n//                     </tr>\r\n//                   ))}\r\n//                 </tbody>\r\n//               </table>\r\n//             </div>\r\n//           </div>\r\n//           {/* View Invoice Modal */}\r\n//           <InvoiceModal\r\n//             invoice={viewInvoice}\r\n//             onClose={() => setViewInvoice(null)}\r\n//           />\r\n//         </div>\r\n//       )}\r\n \r\n//       {/* Create Invoice Modal */}\r\n//       {showInvoiceForm && (\r\n//         <CreateInvoiceModal\r\n//           customers={customers}\r\n//           onClose={() => setShowInvoiceForm(false)}\r\n//           onCreate={handleCreateInvoice}\r\n//         />\r\n        \r\n//       )}\r\n\r\n//       {activeTab === 'payments' && (\r\n//         <div>\r\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-900\">Recent Payments</h3>\r\n//             </div>\r\n//             <div className=\"overflow-x-auto\">\r\n//               <table className=\"w-full\">\r\n//                 <thead className=\"bg-gray-50\">\r\n//                   <tr>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Payment ID\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Customer\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Invoice\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Date\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Amount\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Method\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Status\r\n//                     </th>\r\n//                   </tr>\r\n//                 </thead>\r\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//                   {payments.map((payment) => (\r\n//                     <tr key={payment.id} className=\"hover:bg-gray-50\">\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n//                         {payment.id}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {payment.customerName}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {payment.invoiceId}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {payment.date}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         ${payment.amount.toFixed(2)}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-blue-100 text-blue-800\">\r\n//                           {payment.method.replace('_', ' ')}\r\n//                         </span>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                           payment.status === 'cleared' ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n//                         }`}>\r\n//                           {payment.status}\r\n//                         </span>\r\n//                       </td>\r\n//                     </tr>\r\n//                   ))}\r\n//                 </tbody>\r\n//               </table>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Customer Detail Modal */}\r\n//       {selectedCustomer && (\r\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\r\n//                   Customer Details - {selectedCustomer.name}\r\n//                 </h3>\r\n//                 <button\r\n//                   onClick={() => setSelectedCustomer(null)}\r\n//                   className=\"text-gray-400 hover:text-gray-600\"\r\n//                 >\r\n//                   <XCircle size={20} />\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <div className=\"px-6 py-4\">\r\n//               {/* Customer Info Grid */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n//                 <div className=\"space-y-4\">\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer ID</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.id}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Email</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.email}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Phone</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.phone}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Address</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.address}</p>\r\n//                   </div>\r\n//                 </div>\r\n                \r\n//                 <div className=\"space-y-4\">\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer Type</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.customerType.replace('_', ' ')}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Limit</label>\r\n//                     <p className=\"text-sm text-gray-900\">${selectedCustomer.creditLimit.toLocaleString()}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Payment Terms</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.paymentTerms} days</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Status</label>\r\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(selectedCustomer.creditStatus)}`}>\r\n//                       {selectedCustomer.creditStatus.replace('_', ' ')}\r\n//                     </span>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Financial Summary */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\r\n//                 <div className=\"bg-blue-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-blue-600\">Current Balance</div>\r\n//                   <div className=\"text-xl font-bold text-blue-900\">\r\n//                     ${selectedCustomer.totalOwed.toFixed(2)}\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"bg-red-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-red-600\">Overdue Amount</div>\r\n//                   <div className=\"text-xl font-bold text-red-900\">\r\n//                     ${selectedCustomer.overdueAmount.toFixed(2)}\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"bg-green-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-green-600\">Credit Available</div>\r\n//                   <div className=\"text-xl font-bold text-green-900\">\r\n//                     ${(selectedCustomer.creditLimit - selectedCustomer.totalOwed).toFixed(2)}\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"bg-purple-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-purple-600\">Avg Payment Days</div>\r\n//                   <div className=\"text-xl font-bold text-purple-900\">\r\n//                     {selectedCustomer.avgPaymentDays}\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Customer Invoices */}\r\n//               <div className=\"mb-6\">\r\n//                 <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Customer Invoices</h4>\r\n//                 <div className=\"overflow-x-auto\">\r\n//                   <table className=\"w-full border border-gray-200 rounded\">\r\n//                     <thead className=\"bg-gray-50\">\r\n//                       <tr>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Invoice</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Date</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Due Date</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Amount</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Balance</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Status</th>\r\n//                       </tr>\r\n//                     </thead>\r\n//                     <tbody className=\"divide-y divide-gray-200\">\r\n//                       {invoices\r\n//                         .filter(inv => inv.customerId === selectedCustomer.id)\r\n//                         .map((invoice) => (\r\n//                           <tr key={invoice.id}>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{invoice.id}</td>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{invoice.date}</td>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{invoice.dueDate}</td>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">${invoice.amount.toFixed(2)}</td>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">${invoice.balance.toFixed(2)}</td>\r\n//                             <td className=\"px-4 py-2\">\r\n//                               <span className={`px-2 py-1 text-xs font-medium rounded-full ${getInvoiceStatusColor(invoice.status)}`}>\r\n//                                 {invoice.status}\r\n//                               </span>\r\n//                             </td>\r\n//                           </tr>\r\n//                         ))}\r\n//                     </tbody>\r\n//                   </table>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Action Buttons */}\r\n//               <div className=\"flex space-x-3\">\r\n//                 <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\r\n//                   <Plus size={16} />\r\n//                   <span>New Invoice</span>\r\n//                 </button>\r\n//                 <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\r\n//                   <CheckCircle size={16} />\r\n//                   <span>Record Payment</span>\r\n//                 </button>\r\n//                 <button className=\"px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 flex items-center space-x-2\">\r\n//                   <Mail size={16} />\r\n//                   <span>Send Statement</span>\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* New Invoice Form */}\r\n//       {showInvoiceForm && (\r\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">Create New Invoice</h3>\r\n//                 <button\r\n//                   onClick={() => setShowInvoiceForm(false)}\r\n//                   className=\"text-gray-400 hover:text-gray-600\"\r\n//                 >\r\n//                   <XCircle size={20} />\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <div className=\"px-6 py-4\">\r\n//               {/* Invoice Header */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\r\n//                 <div>\r\n//                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">Customer *</label>\r\n//                   <select\r\n//                     value={newInvoice.customerId}\r\n//                     onChange={(e) => setNewInvoice({ ...newInvoice, customerId: e.target.value })}\r\n//                     className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//                   >\r\n//                     <option value=\"\">Select Customer</option>\r\n//                     {customers.filter(c => c.customerType !== 'cash').map(customer => (\r\n//                       <option key={customer.id} value={customer.id}>\r\n//                         {customer.name} ({customer.id})\r\n//                       </option>\r\n//                     ))}\r\n//                   </select>\r\n//                 </div>\r\n//                 <div>\r\n//                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">Due Date *</label>\r\n//                   <input\r\n//                     type=\"date\"\r\n//                     value={newInvoice.dueDate}\r\n//                     onChange={(e) => setNewInvoice({ ...newInvoice, dueDate: e.target.value })}\r\n//                     className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//                   />\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Invoice Items */}\r\n//               <div className=\"mb-6\">\r\n//                 <label className=\"block text-sm font-medium text-gray-700 mb-2\">Invoice Items</label>\r\n//                 <div className=\"space-y-3\">\r\n//                   {newInvoice.items.map((item, index) => (\r\n//                     <div key={index} className=\"grid grid-cols-12 gap-2 items-center bg-gray-50 p-3 rounded\">\r\n//                       <div className=\"col-span-5\">\r\n//                         <input\r\n//                           type=\"text\"\r\n//                           value={item.description}\r\n//                           onChange={(e) => updateInvoiceItem(index, 'description', e.target.value)}\r\n//                           placeholder=\"Item description\"\r\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                         />\r\n//                       </div>\r\n//                       <div className=\"col-span-2\">\r\n//                         <input\r\n//                           type=\"number\"\r\n//                           value={item.quantity}\r\n//                           onChange={(e) => updateInvoiceItem(index, 'quantity', parseFloat(e.target.value) || 0)}\r\n//                           placeholder=\"Qty\"\r\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                         />\r\n//                       </div>\r\n//                       <div className=\"col-span-2\">\r\n//                         <input\r\n//                           type=\"number\"\r\n//                           step=\"0.01\"\r\n//                           value={item.price}\r\n//                           onChange={(e) => updateInvoiceItem(index, 'price', parseFloat(e.target.value) || 0)}\r\n//                           placeholder=\"Price\"\r\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                         />\r\n//                       </div>\r\n//                       <div className=\"col-span-2\">\r\n//                         <input\r\n//                           type=\"number\"\r\n//                           step=\"0.01\"\r\n//                           value={item.total}\r\n//                           readOnly\r\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm bg-gray-100\"\r\n//                         />\r\n//                       </div>\r\n//                       <div className=\"col-span-1\">\r\n//                         {newInvoice.items.length > 1 && (\r\n//                           <button\r\n//                             onClick={() => {\r\n//                               const updatedItems = newInvoice.items.filter((_, i) => i !== index);\r\n//                               setNewInvoice({ ...newInvoice, items: updatedItems });\r\n//                             }}\r\n//                             className=\"p-1 text-red-600 hover:bg-red-100 rounded\"\r\n//                           >\r\n//                             <XCircle size={14} />\r\n//                           </button>\r\n//                         )}\r\n//                       </div>\r\n//                     </div>\r\n//                   ))}\r\n//                 </div>\r\n\r\n//                 <div className=\"flex justify-between items-center mt-3\">\r\n//                   <button\r\n//                     onClick={addInvoiceItem}\r\n//                     className=\"px-3 py-1 text-sm bg-emerald-100 text-emerald-700 rounded hover:bg-emerald-200 flex items-center space-x-1\"\r\n//                   >\r\n//                     <Plus size={14} />\r\n//                     <span>Add Item</span>\r\n//                   </button>\r\n\r\n//                   <div className=\"text-lg font-semibold\">\r\n//                     Total: ${calculateInvoiceTotal().toFixed(2)}\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Notes */}\r\n//               <div className=\"mb-6\">\r\n//                 <label className=\"block text-sm font-medium text-gray-700 mb-1\">Notes</label>\r\n//                 <textarea\r\n//                   value={newInvoice.notes}\r\n//                   onChange={(e) => setNewInvoice({ ...newInvoice, notes: e.target.value })}\r\n//                   rows={3}\r\n//                   placeholder=\"Additional notes...\"\r\n//                   className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//                 />\r\n//               </div>\r\n\r\n//               {/* Action Buttons */}\r\n//               <div className=\"flex space-x-3\">\r\n//                 <button\r\n//                   onClick={() => {\r\n//                     handleCreateInvoice()\r\n \r\n//                     // Save invoice logic would go here\r\n//                     alert('Invoice created successfully!');\r\n//                   //  setShowInvoiceForm(false);\r\n//                   }}\r\n//                   className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\r\n//                 >\r\n//                   <CheckCircle size={16} />\r\n//                   <span>Create Invoice</span>\r\n//                 </button>\r\n//                 <button\r\n//                   onClick={() => setShowInvoiceForm(false)}\r\n//                   className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\"\r\n//                 >\r\n//                   <XCircle size={16} />\r\n//                   <span>Cancel</span>\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Integration Status */}\r\n//       <div className=\"mt-8 p-6 bg-green-50 border border-green-200 rounded-lg\">\r\n//         <div className=\"flex items-center mb-4\">\r\n//           <CheckCircle className=\"text-green-600 mr-2\" size={20} />\r\n//           <h3 className=\"font-medium text-green-800\">POS Integration Active</h3>\r\n//         </div>\r\n//         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm text-green-700\">\r\n//           <div>\r\n//             <strong>Credit Sales:</strong> Automatically create AR entries when customers buy on credit in POS\r\n//           </div>\r\n//           <div>\r\n//             <strong>Customer Limits:</strong> POS checks credit limits before allowing credit sales\r\n//           </div>\r\n//           <div>\r\n//             <strong>Real-time Updates:</strong> Customer balances update instantly with each transaction\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AccountsReceivable;\r\n\r\n\r\n//correct\r\n// import React, { useState, useEffect } from 'react';\r\n// import { \r\n//   Users, \r\n//   DollarSign, \r\n//   CreditCard, \r\n//   AlertTriangle, \r\n//   Clock, \r\n//   Plus, \r\n//   Search, \r\n//   Filter, \r\n//   Eye, \r\n//   Edit, \r\n//   Download,\r\n//   CheckCircle,\r\n//   XCircle,\r\n//   Calendar,\r\n//   FileText,\r\n//   TrendingUp,\r\n//   Mail,\r\n//   Phone,\r\n//   Printer,\r\n//   Send\r\n// } from 'lucide-react';\r\n\r\n// const AccountsReceivable = () => {\r\n//   const [customers, setCustomers] = useState([]);\r\n//   const [invoices, setInvoices] = useState([]);\r\n//   const [payments, setPayments] = useState([]);\r\n//   const [selectedCustomer, setSelectedCustomer] = useState(null);\r\n//   const [activeTab, setActiveTab] = useState('overview');\r\n//   const [viewInvoice, setViewInvoice] = useState(null);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [salesOrders, setSalesOrders] = useState([]);\r\n  \r\n//   const [filters, setFilters] = useState({\r\n//     customerType: 'all',\r\n//     status: 'all',\r\n//     dateRange: '30',\r\n//     searchTerm: ''\r\n//   });\r\n\r\n//   const [showInvoiceForm, setShowInvoiceForm] = useState(false);\r\n//   const [newInvoice, setNewInvoice] = useState({\r\n//     customerId: '',\r\n//     dueDate: '',\r\n//     items: [{ description: '', quantity: 1, price: 0, total: 0 }],\r\n//     notes: ''\r\n//   });\r\n\r\n//   // API Configuration\r\n//   const API_BASE_URL_SALES = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/orders?start=0&size=200';\r\n//   const API_CUSTOMERS='https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/customers?status=Active';\r\n//   // Fetch sales orders from API\r\n//   const fetchSalesOrders = async () => {\r\n//     setLoading(true);\r\n//     try {\r\n//       const response = await fetch(API_BASE_URL_SALES, {\r\n//         method: 'GET',\r\n//         headers: {\r\n//           'Authorization': 'Bearer Hamid',\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//       });\r\n      \r\n//       if (!response.ok) {\r\n//         throw new Error(`API request failed with status ${response.status}`);\r\n//       }\r\n      \r\n//       const data = await response.json();\r\n//       setSalesOrders(data);\r\n//       processARData(data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching sales orders:', error);\r\n//       // Load sample data as fallback\r\n//       loadSampleData();\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   // Fetch both sales orders and customers from API\r\n// const fetchData = async () => {\r\n//   setLoading(true);\r\n//   try {\r\n//     // Fetch both data sources in parallel\r\n//     const [ordersResponse, customersResponse] = await Promise.all([\r\n//       fetch(API_BASE_URL_SALES, {\r\n//         method: 'GET',\r\n//         headers: {\r\n//           'Authorization': 'Bearer Hamid',\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//       }),\r\n//       fetch(API_CUSTOMERS, {\r\n//         method: 'GET',\r\n//         headers: {\r\n//           'Authorization': 'Bearer Hamid',\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//       })\r\n//     ]);\r\n    \r\n//     if (!ordersResponse.ok || !customersResponse.ok) {\r\n//       throw new Error(`API request failed with status ${ordersResponse.status}/${customersResponse.status}`);\r\n//     }\r\n    \r\n//     const ordersData = await ordersResponse.json();\r\n//     const customersData = await customersResponse.json();\r\n    \r\n//     setSalesOrders(ordersData);\r\n//     processARData(ordersData, customersData);\r\n//   } catch (error) {\r\n//     console.error('Error fetching data:', error);\r\n//     // Load sample data as fallback\r\n//     loadSampleData();\r\n//   } finally {\r\n//     setLoading(false);\r\n//   }\r\n// };\r\n\r\n//   // // Process API data to create AR entries\r\n//   const processARData = (orders) => {\r\n//     // Group orders by customer and create customer records\r\n//     const customerMap = new Map();\r\n//     const invoiceList = [];\r\n//     const paymentList = [];\r\n\r\n//     orders.forEach(order => {\r\n//       // Skip draft orders\r\n//       if (order.draft) return;\r\n\r\n//       // Extract customer info (using orderId as customer identifier for now)\r\n//       const customerId = order.customerId || `CUST-${order.orderId}`;\r\n      \r\n//       if (!customerMap.has(customerId)) {\r\n//         customerMap.set(customerId, {\r\n//           id: customerId,\r\n//           name: order.customerName || `Customer ${customers}`,\r\n//           email: order.customerEmail || 'customer@example.com',\r\n//           phone: order.customerPhone || '+966-50-000-0000',\r\n//           address: order.customerAddress || 'Saudi Arabia',\r\n//           customerType: order.paymentMethod === 'cash' ? 'cash' : 'credit',\r\n//           creditLimit: 50000, // Default credit limit\r\n//           paymentTerms: 30,\r\n//           totalOwed: 0,\r\n//           overdueAmount: 0,\r\n//           lastPayment: null,\r\n//           creditStatus: 'good',\r\n//           accountBalance: 0,\r\n//           invoiceCount: 0,\r\n//           avgPaymentDays: 0\r\n//         });\r\n//       }\r\n//       console.log('customerMap',customerMap);\r\n\r\n//       // Create invoice from order\r\n//       const invoice = {\r\n//         id: `INV-${order.orderId}`,\r\n//         customerId: customerId,\r\n//         customerName: order.customerName || `Customer ${customerId}`,\r\n//         date: formatDate(order.createdAt),\r\n//         dueDate: calculateDueDate(order.createdAt, 30),\r\n//         amount: parseFloat(order.total) || 0,\r\n//         paid: order.paid ? parseFloat(order.total) : 0,\r\n//         balance: order.paid ? 0 : parseFloat(order.total) || 0,\r\n//         status: order.paid ? 'paid' : (isOverdue(order.createdAt, 30) ? 'overdue' : 'outstanding'),\r\n//         daysOverdue: calculateDaysOverdue(order.createdAt, 30),\r\n//         paymentTerms: 30,\r\n//         items: order.lineItems?.map(item => ({\r\n//           description: item.productName,\r\n//           quantity: item.quantity,\r\n//           price: item.price,\r\n//           total: item.total\r\n//         })) || [],\r\n//         notes: order.notes || '',\r\n//         source: 'pos'\r\n//       };\r\n\r\n//       invoiceList.push(invoice);\r\n\r\n//       // Update customer totals\r\n//       const customer = customerMap.get(customerId);\r\n//       if (!order.paid) {\r\n//         customer.totalOwed += invoice.balance;\r\n//         if (invoice.status === 'overdue') {\r\n//           customer.overdueAmount += invoice.balance;\r\n//         }\r\n//       }\r\n//       customer.invoiceCount++;\r\n\r\n//       // Create payment record if paid\r\n//       if (order.unpaid) {\r\n//         paymentList.push({\r\n//           id: `PAY-${order.orderId}`,\r\n//           customerId: customerId,\r\n//           customerName: order.customerName || `Customer ${customerId}`,\r\n//           invoiceId: invoice.id,\r\n//           date: formatDate(order.createdAt),\r\n//           amount: parseFloat(order.total),\r\n//           method: order.paymentMethod || 'cash',\r\n//           reference: `TXN-${order.orderId}`,\r\n//           status: 'cleared',\r\n//           notes: 'POS payment'\r\n//         });\r\n        \r\n//         customer.lastPayment = formatDate(order.createdAt);\r\n//       }\r\n//     });\r\n\r\n//     // Update credit status based on outstanding amounts\r\n//     customerMap.forEach(customer => {\r\n//       const utilizationRate = customer.totalOwed / customer.creditLimit;\r\n//       if (customer.overdueAmount > 0) {\r\n//         customer.creditStatus = 'watch';\r\n//       } else if (utilizationRate > 0.8) {\r\n//         customer.creditStatus = 'watch';\r\n//       } else if (utilizationRate > 0.5) {\r\n//         customer.creditStatus = 'good';\r\n//       } else {\r\n//         customer.creditStatus = 'excellent';\r\n//       }\r\n//     });\r\n\r\n//     setCustomers(Array.from(customerMap.values()));\r\n//     setInvoices(invoiceList);\r\n//     setPayments(paymentList);\r\n//   };\r\n\r\n//   // Helper functions\r\n//   const formatDate = (dateString) => {\r\n//     if (!dateString) return new Date().toISOString().split('T')[0];\r\n    \r\n//     // Handle the format \"2025.08.18.10.08.54.569\"\r\n//     const parts = dateString.split('.');\r\n//     if (parts.length >= 3) {\r\n//       return `${parts[0]}-${parts[1].padStart(2, '0')}-${parts[2].padStart(2, '0')}`;\r\n//     }\r\n//     return new Date().toISOString().split('T')[0];\r\n//   };\r\n\r\n//   const calculateDueDate = (createdAt, terms) => {\r\n//     const date = new Date(formatDate(createdAt));\r\n//     date.setDate(date.getDate() + terms);\r\n//     return date.toISOString().split('T')[0];\r\n//   };\r\n\r\n//   const isOverdue = (createdAt, terms) => {\r\n//     const dueDate = new Date(calculateDueDate(createdAt, terms));\r\n//     return dueDate < new Date();\r\n//   };\r\n\r\n//   const calculateDaysOverdue = (createdAt, terms) => {\r\n//     const dueDate = new Date(calculateDueDate(createdAt, terms));\r\n//     const today = new Date();\r\n//     if (dueDate >= today) return 0;\r\n    \r\n//     const diffTime = Math.abs(today - dueDate);\r\n//     return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   const loadSampleData = () => {\r\n//     // Fallback sample data\r\n//     const sampleCustomers = [\r\n//       {\r\n//         id: 'CUST001',\r\n//         name: 'Al Noor Medical Center',\r\n//         email: 'finance@alnoor.com',\r\n//         phone: '+966-11-123-4567',\r\n//         address: 'King Fahd Road, Riyadh',\r\n//         customerType: 'corporate',\r\n//         creditLimit: 50000,\r\n//         paymentTerms: 30,\r\n//         totalOwed: 15750.00,\r\n//         overdueAmount: 5250.00,\r\n//         lastPayment: '2025-01-10',\r\n//         creditStatus: 'good',\r\n//         accountBalance: -15750.00,\r\n//         invoiceCount: 8,\r\n//         avgPaymentDays: 25\r\n//       },\r\n//       {\r\n//         id: 'CUST002',\r\n//         name: 'Dr. Ahmed Clinic',\r\n//         email: 'dr.ahmed@clinic.com',\r\n//         phone: '+966-12-987-6543',\r\n//         address: 'Prince Sultan Street, Jeddah',\r\n//         customerType: 'small_business',\r\n//         creditLimit: 20000,\r\n//         paymentTerms: 15,\r\n//         totalOwed: 8900.00,\r\n//         overdueAmount: 2100.00,\r\n//         lastPayment: '2025-01-12',\r\n//         creditStatus: 'watch',\r\n//         accountBalance: -8900.00,\r\n//         invoiceCount: 5,\r\n//         avgPaymentDays: 18\r\n//       },\r\n//       {\r\n//         id: 'CUST003',\r\n//         name: 'Pharmacy Plus Chain',\r\n//         email: 'accounts@pharmacyplus.sa',\r\n//         phone: '+966-13-555-0123',\r\n//         address: 'Al Khobar, Eastern Province',\r\n//         customerType: 'corporate',\r\n//         creditLimit: 75000,\r\n//         paymentTerms: 45,\r\n//         totalOwed: 32100.00,\r\n//         overdueAmount: 0,\r\n//         lastPayment: '2025-01-14',\r\n//         creditStatus: 'excellent',\r\n//         accountBalance: -32100.00,\r\n//         invoiceCount: 12,\r\n//         avgPaymentDays: 35\r\n//       },\r\n//       {\r\n//         id: 'CUST004',\r\n//         name: 'Walk-in Customer',\r\n//         email: 'cash@pos.system',\r\n//         phone: '+966-50-000-0000',\r\n//         address: 'Point of Sale',\r\n//         customerType: 'cash',\r\n//         creditLimit: 0,\r\n//         paymentTerms: 0,\r\n//         totalOwed: 0,\r\n//         overdueAmount: 0,\r\n//         lastPayment: '2025-01-15',\r\n//         creditStatus: 'cash_only',\r\n//         accountBalance: 0,\r\n//         invoiceCount: 0,\r\n//         avgPaymentDays: 0\r\n//       }\r\n//     ];\r\n\r\n//     const sampleInvoices = [\r\n//       {\r\n//         id: 'INV-2025-001',\r\n//         customerId: 'CUST001',\r\n//         customerName: 'Al Noor Medical Center',\r\n//         date: '2025-01-15',\r\n//         dueDate: '2025-02-14',\r\n//         amount: 5250.00,\r\n//         paid: 0,\r\n//         balance: 5250.00,\r\n//         status: 'outstanding',\r\n//         daysOverdue: 0,\r\n//         paymentTerms: 30,\r\n//         items: [\r\n//           { description: 'A2A 25MG TAB', quantity: 100, price: 15.00, total: 1500.00 },\r\n//           { description: 'AALBUMIN 50ML', quantity: 150, price: 25.00, total: 3750.00 }\r\n//         ],\r\n//         notes: 'Monthly medical supplies order',\r\n//         source: 'manual'\r\n//       },\r\n//       {\r\n//         id: 'INV-2025-002',\r\n//         customerId: 'CUST002',\r\n//         customerName: 'Dr. Ahmed Clinic',\r\n//         date: '2025-01-10',\r\n//         dueDate: '2025-01-25',\r\n//         amount: 2100.00,\r\n//         paid: 0,\r\n//         balance: 2100.00,\r\n//         status: 'overdue',\r\n//         daysOverdue: 5,\r\n//         paymentTerms: 15,\r\n//         items: [\r\n//           { description: 'ABAKTAL INJ', quantity: 50, price: 30.00, total: 1500.00 },\r\n//           { description: 'AARAM PLUS', quantity: 20, price: 30.00, total: 600.00 }\r\n//         ],\r\n//         notes: 'Urgent medical supplies',\r\n//         source: 'pos'\r\n//       },\r\n//       {\r\n//         id: 'POS-2025-003',\r\n//         customerId: 'CUST001',\r\n//         customerName: 'Al Noor Medical Center',\r\n//         date: '2025-01-12',\r\n//         dueDate: '2025-02-11',\r\n//         amount: 1850.00,\r\n//         paid: 1850.00,\r\n//         balance: 0,\r\n//         status: 'paid',\r\n//         daysOverdue: 0,\r\n//         paymentTerms: 30,\r\n//         items: [\r\n//           { description: 'Medical supplies - POS Sale', quantity: 1, price: 1850.00, total: 1850.00 }\r\n//         ],\r\n//         notes: 'Direct POS sale - Credit account',\r\n//         source: 'pos'\r\n//       }\r\n//     ];\r\n\r\n//     const samplePayments = [\r\n//       {\r\n//         id: 'PAY001',\r\n//         customerId: 'CUST001',\r\n//         customerName: 'Al Noor Medical Center',\r\n//         invoiceId: 'POS-2025-003',\r\n//         date: '2025-01-14',\r\n//         amount: 1850.00,\r\n//         method: 'bank_transfer',\r\n//         reference: 'TXN123456789',\r\n//         status: 'cleared',\r\n//         notes: 'Payment for POS sale'\r\n//       },\r\n//       {\r\n//         id: 'PAY002',\r\n//         customerId: 'CUST003',\r\n//         customerName: 'Pharmacy Plus Chain',\r\n//         invoiceId: 'INV-2024-045',\r\n//         date: '2025-01-12',\r\n//         amount: 15600.00,\r\n//         method: 'check',\r\n//         reference: 'CHK-789123',\r\n//         status: 'cleared',\r\n//         notes: 'December invoice payment'\r\n//       }\r\n//     ];\r\n\r\n//     setCustomers(sampleCustomers);\r\n//     setInvoices(sampleInvoices);\r\n//     setPayments(samplePayments);\r\n//   };\r\n\r\n//   const calculateARSummary = () => {\r\n//     const totalAR = customers.reduce((sum, customer) => sum + customer.totalOwed, 0);\r\n//     const totalOverdue = customers.reduce((sum, customer) => sum + customer.overdueAmount, 0);\r\n//     const customersWithBalance = customers.filter(customer => customer.totalOwed > 0).length;\r\n//     const avgDaysOutstanding = customers.length > 0 \r\n//       ? customers.reduce((sum, customer) => sum + customer.avgPaymentDays, 0) / customers.length \r\n//       : 0;\r\n\r\n//     return {\r\n//       totalAR,\r\n//       totalOverdue,\r\n//       customersWithBalance,\r\n//       avgDaysOutstanding: Math.round(avgDaysOutstanding)\r\n//     };\r\n//   };\r\n\r\n//   const getAgingData = () => {\r\n//     const aging = {\r\n//       current: 0,\r\n//       days30: 0,\r\n//       days60: 0,\r\n//       days90: 0,\r\n//       over90: 0\r\n//     };\r\n\r\n//     invoices.forEach(invoice => {\r\n//       if (invoice.status === 'paid') return;\r\n      \r\n//       const daysPastDue = invoice.daysOverdue || 0;\r\n      \r\n//       if (daysPastDue <= 0) {\r\n//         aging.current += invoice.balance;\r\n//       } else if (daysPastDue <= 30) {\r\n//         aging.days30 += invoice.balance;\r\n//       } else if (daysPastDue <= 60) {\r\n//         aging.days60 += invoice.balance;\r\n//       } else if (daysPastDue <= 90) {\r\n//         aging.days90 += invoice.balance;\r\n//       } else {\r\n//         aging.over90 += invoice.balance;\r\n//       }\r\n//     });\r\n\r\n//     return aging;\r\n//   };\r\n\r\n//   const getFilteredCustomers = () => {\r\n//     let filtered = [...customers];\r\n\r\n//     if (filters.customerType !== 'all') {\r\n//       filtered = filtered.filter(customer => customer.customerType === filters.customerType);\r\n//     }\r\n\r\n//     if (filters.status !== 'all') {\r\n//       filtered = filtered.filter(customer => {\r\n//         if (filters.status === 'overdue') return customer.overdueAmount > 0;\r\n//         if (filters.status === 'current') return customer.totalOwed > 0 && customer.overdueAmount === 0;\r\n//         if (filters.status === 'paid_up') return customer.totalOwed === 0;\r\n//         return true;\r\n//       });\r\n//     }\r\n\r\n//     if (filters.searchTerm) {\r\n//       const term = filters.searchTerm.toLowerCase();\r\n//       filtered = filtered.filter(customer =>\r\n//         customer.name.toLowerCase().includes(term) ||\r\n//         customer.email.toLowerCase().includes(term) ||\r\n//         customer.id.toLowerCase().includes(term)\r\n//       );\r\n//     }\r\n\r\n//     return filtered;\r\n//   };\r\n\r\n//   const getCreditStatusColor = (status) => {\r\n//     switch (status) {\r\n//       case 'excellent': return 'bg-green-100 text-green-800';\r\n//       case 'good': return 'bg-blue-100 text-blue-800';\r\n//       case 'watch': return 'bg-yellow-100 text-yellow-800';\r\n//       case 'hold': return 'bg-red-100 text-red-800';\r\n//       case 'cash_only': return 'bg-gray-100 text-gray-800';\r\n//       default: return 'bg-gray-100 text-gray-800';\r\n//     }\r\n//   };\r\n\r\n//   const getInvoiceStatusColor = (status) => {\r\n//     switch (status) {\r\n//       case 'paid': return 'bg-green-100 text-green-800';\r\n//       case 'outstanding': return 'bg-blue-100 text-blue-800';\r\n//       case 'overdue': return 'bg-red-100 text-red-800';\r\n//       case 'partial': return 'bg-yellow-100 text-yellow-800';\r\n//       default: return 'bg-gray-100 text-gray-800';\r\n//     }\r\n//   };\r\n\r\n//   const handleCreateInvoice = () => {\r\n//     const customer = customers.find(c => c.id === newInvoice.customerId);\r\n//     if (!customer) {\r\n//       alert('Please select a customer');\r\n//       return;\r\n//     }\r\n\r\n//     const nextId = `INV-${new Date().getFullYear()}-${String(invoices.length + 1).padStart(3, '0')}`;\r\n//     const invoiceTotal = calculateInvoiceTotal();\r\n\r\n//     const newInvoiceData = {\r\n//       id: nextId,\r\n//       customerId: customer.id,\r\n//       customerName: customer.name,\r\n//       date: new Date().toISOString().slice(0, 10),\r\n//       dueDate: newInvoice.dueDate,\r\n//       amount: invoiceTotal,\r\n//       paid: 0,\r\n//       balance: invoiceTotal,\r\n//       status: 'outstanding',\r\n//       daysOverdue: 0,\r\n//       paymentTerms: customer.paymentTerms,\r\n//       items: newInvoice.items,\r\n//       notes: newInvoice.notes,\r\n//       source: 'manual'\r\n//     };\r\n\r\n//     setInvoices(prev => [...prev, newInvoiceData]);\r\n\r\n//     setCustomers(prev =>\r\n//       prev.map(c =>\r\n//         c.id === customer.id\r\n//           ? {\r\n//               ...c,\r\n//               totalOwed: c.totalOwed + invoiceTotal,\r\n//               invoiceCount: c.invoiceCount + 1\r\n//             }\r\n//           : c\r\n//       )\r\n//     );\r\n\r\n//     setNewInvoice({\r\n//       customerId: '',\r\n//       dueDate: '',\r\n//       items: [{ description: '', quantity: 1, price: 0, total: 0 }],\r\n//       notes: ''\r\n//     });\r\n\r\n//     setShowInvoiceForm(false);\r\n//     alert('Invoice created successfully!');\r\n//   };\r\n\r\n//   const addInvoiceItem = () => {\r\n//     setNewInvoice({\r\n//       ...newInvoice,\r\n//       items: [...newInvoice.items, { description: '', quantity: 1, price: 0, total: 0 }]\r\n//     });\r\n//   };\r\n\r\n//   const updateInvoiceItem = (index, field, value) => {\r\n//     const updatedItems = [...newInvoice.items];\r\n//     updatedItems[index] = { ...updatedItems[index], [field]: value };\r\n    \r\n//     if (field === 'quantity' || field === 'price') {\r\n//       updatedItems[index].total = updatedItems[index].quantity * updatedItems[index].price;\r\n//     }\r\n    \r\n//     setNewInvoice({ ...newInvoice, items: updatedItems });\r\n//   };\r\n\r\n//   const calculateInvoiceTotal = () => {\r\n//     return newInvoice.items.reduce((sum, item) => sum + item.total, 0);\r\n//   };\r\n\r\n//   const summary = calculateARSummary();\r\n//   const aging = getAgingData();\r\n//   const filteredCustomers = getFilteredCustomers();\r\n\r\n//   // Render Invoices Tab\r\n//   const renderInvoicesTab = () => (\r\n//     <div>\r\n//       <div className=\"mb-6 flex justify-between items-center\">\r\n//         <div className=\"flex items-center space-x-4\">\r\n//           <div className=\"relative\">\r\n//             <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Search invoices...\"\r\n//               className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//             />\r\n//           </div>\r\n//           <select className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\">\r\n//             <option value=\"all\">All Statuses</option>\r\n//             <option value=\"outstanding\">Outstanding</option>\r\n//             <option value=\"overdue\">Overdue</option>\r\n//             <option value=\"paid\">Paid</option>\r\n//           </select>\r\n//         </div>\r\n//         <button\r\n//           onClick={() => setShowInvoiceForm(true)}\r\n//           className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\r\n//         >\r\n//           <Plus size={16} />\r\n//           <span>New Invoice</span>\r\n//         </button>\r\n//       </div>\r\n\r\n//       <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//         <table className=\"w-full\">\r\n//           <thead className=\"bg-gray-50\">\r\n//             <tr>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Invoice</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Customer</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Due Date</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Amount</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Balance</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody className=\"divide-y divide-gray-200\">\r\n//             {invoices.map((invoice) => (\r\n//               <tr key={invoice.id} className=\"hover:bg-gray-50\">\r\n//                 <td className=\"px-6 py-4\">\r\n//                   <div className=\"text-sm font-medium text-gray-900\">{invoice.id}</div>\r\n//                   <div className=\"text-xs text-gray-500\">{invoice.source}</div>\r\n//                 </td>\r\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">{invoice.customerName}</td>\r\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">{invoice.date}</td>\r\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">\r\n//                   {invoice.dueDate}\r\n//                   {invoice.daysOverdue > 0 && (\r\n//                     <div className=\"text-xs text-red-600\">\r\n//                       {invoice.daysOverdue} days overdue\r\n//                     </div>\r\n//                   )}\r\n//                 </td>\r\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">${invoice.amount.toFixed(2)}</td>\r\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">${invoice.balance.toFixed(2)}</td>\r\n//                 <td className=\"px-6 py-4\">\r\n//                   <span className={`px-2 py-1 text-xs font-medium rounded-full ${getInvoiceStatusColor(invoice.status)}`}>\r\n//                     {invoice.status}\r\n//                   </span>\r\n//                 </td>\r\n//                 <td className=\"px-6 py-4 text-sm font-medium\">\r\n//                   <button\r\n//                     onClick={() => setViewInvoice(invoice)}\r\n//                     className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\r\n//                   >\r\n//                     <Eye size={16} />\r\n//                   </button>\r\n//                   <button className=\"text-blue-600 hover:text-blue-900\">\r\n//                     <Edit size={16} />\r\n//                   </button>\r\n//                 </td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n\r\n//   // Render Aging Report Tab\r\n//   const renderAgingTab = () => (\r\n//     <div>\r\n//       <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4 mb-8\">\r\n//         <div className=\"bg-green-50 p-4 rounded-lg border border-green-200\">\r\n//           <div className=\"text-sm font-medium text-green-600\">Current (0-30)</div>\r\n//           <div className=\"text-xl font-bold text-green-900\">${aging.current.toFixed(2)}</div>\r\n//         </div>\r\n//         <div className=\"bg-yellow-50 p-4 rounded-lg border border-yellow-200\">\r\n//           <div className=\"text-sm font-medium text-yellow-600\">31-60 Days</div>\r\n//           <div className=\"text-xl font-bold text-yellow-900\">${aging.days30.toFixed(2)}</div>\r\n//         </div>\r\n//         <div className=\"bg-orange-50 p-4 rounded-lg border border-orange-200\">\r\n//           <div className=\"text-sm font-medium text-orange-600\">61-90 Days</div>\r\n//           <div className=\"text-xl font-bold text-orange-900\">${aging.days60.toFixed(2)}</div>\r\n//         </div>\r\n//         <div className=\"bg-red-50 p-4 rounded-lg border border-red-200\">\r\n//           <div className=\"text-sm font-medium text-red-600\">91-120 Days</div>\r\n//           <div className=\"text-xl font-bold text-red-900\">${aging.days90.toFixed(2)}</div>\r\n//         </div>\r\n//         <div className=\"bg-gray-50 p-4 rounded-lg border border-gray-200\">\r\n//           <div className=\"text-sm font-medium text-gray-600\">Over 120 Days</div>\r\n//           <div className=\"text-xl font-bold text-gray-900\">${aging.over90.toFixed(2)}</div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//         <table className=\"w-full\">\r\n//           <thead className=\"bg-gray-50\">\r\n//             <tr>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Customer</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Current</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">31-60</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">61-90</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">91-120</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">120+</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Total</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody className=\"divide-y divide-gray-200\">\r\n//             {customers.filter(c => c.totalOwed > 0).map((customer) => {\r\n//               const customerInvoices = invoices.filter(inv => inv.customerId === customer.id && inv.status !== 'paid');\r\n//               const customerAging = {current: 0, days30: 0, days60: 0, days90: 0, over90: 0};\r\n              \r\n//               customerInvoices.forEach(invoice => {\r\n//                 const days = invoice.daysOverdue || 0;\r\n//                 if (days <= 0) customerAging.current += invoice.balance;\r\n//                 else if (days <= 30) customerAging.days30 += invoice.balance;\r\n//                 else if (days <= 60) customerAging.days60 += invoice.balance;\r\n//                 else if (days <= 90) customerAging.days90 += invoice.balance;\r\n//                 else customerAging.over90 += invoice.balance;\r\n//               });\r\n\r\n//               return (\r\n//                 <tr key={customer.id} className=\"hover:bg-gray-50\">\r\n//                   <td className=\"px-6 py-4\">\r\n//                     <div className=\"text-sm font-medium text-gray-900\">{customer.name}</div>\r\n//                     <div className=\"text-xs text-gray-500\">{customer.id}</div>\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 text-sm text-gray-900\">${customerAging.current.toFixed(2)}</td>\r\n//                   <td className=\"px-6 py-4 text-sm text-gray-900\">${customerAging.days30.toFixed(2)}</td>\r\n//                   <td className=\"px-6 py-4 text-sm text-gray-900\">${customerAging.days60.toFixed(2)}</td>\r\n//                   <td className=\"px-6 py-4 text-sm text-gray-900\">${customerAging.days90.toFixed(2)}</td>\r\n//                   <td className=\"px-6 py-4 text-sm text-gray-900\">${customerAging.over90.toFixed(2)}</td>\r\n//                   <td className=\"px-6 py-4 text-sm font-medium text-gray-900\">${customer.totalOwed.toFixed(2)}</td>\r\n//                 </tr>\r\n//               );\r\n//             })}\r\n//           </tbody>\r\n//         </table>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n\r\n//   // Render Payments Tab\r\n//   const renderPaymentsTab = () => (\r\n//     <div>\r\n//       <div className=\"mb-6 flex justify-between items-center\">\r\n//         <div className=\"flex items-center space-x-4\">\r\n//           <div className=\"relative\">\r\n//             <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Search payments...\"\r\n//               className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//             />\r\n//           </div>\r\n//           <select className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\">\r\n//             <option value=\"all\">All Methods</option>\r\n//             <option value=\"cash\">Cash</option>\r\n//             <option value=\"check\">Check</option>\r\n//             <option value=\"bank_transfer\">Bank Transfer</option>\r\n//             <option value=\"credit_card\">Credit Card</option>\r\n//           </select>\r\n//         </div>\r\n//         <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\r\n//           <Plus size={16} />\r\n//           <span>Record Payment</span>\r\n//         </button>\r\n//       </div>\r\n\r\n//       <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//         <table className=\"w-full\">\r\n//           <thead className=\"bg-gray-50\">\r\n//             <tr>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Payment ID</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Customer</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Invoice</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Amount</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Method</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Reference</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody className=\"divide-y divide-gray-200\">\r\n//             {payments.map((payment) => (\r\n//               <tr key={payment.id} className=\"hover:bg-gray-50\">\r\n//                 <td className=\"px-6 py-4 text-sm font-medium text-gray-900\">{payment.id}</td>\r\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">{payment.customerName}</td>\r\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">{payment.invoiceId}</td>\r\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">{payment.date}</td>\r\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">${payment.amount.toFixed(2)}</td>\r\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">{payment.method.replace('_', ' ')}</td>\r\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">{payment.reference}</td>\r\n//                 <td className=\"px-6 py-4\">\r\n//                   <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                     payment.status === 'cleared' ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n//                   }`}>\r\n//                     {payment.status}\r\n//                   </span>\r\n//                 </td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n\r\n//   return (\r\n//     <div className=\"max-w-7xl mx-auto p-6 bg-white\">\r\n//       {/* Header */}\r\n//       <div className=\"mb-8\">\r\n//         <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\r\n//           <CreditCard className=\"mr-3 text-emerald-600\" />\r\n//           Accounts Receivable\r\n//         </h1>\r\n//         <p className=\"text-gray-600\">Manage customer invoicing, payments, and credit limits</p>\r\n//       </div>\r\n\r\n//       {/* Summary Cards */}\r\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\r\n//         <div className=\"bg-blue-50 p-6 rounded-lg border border-blue-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-blue-600 text-sm font-medium\">Total A/R</p>\r\n//               <p className=\"text-2xl font-bold text-blue-900\">${summary.totalAR.toFixed(2)}</p>\r\n//             </div>\r\n//             <DollarSign className=\"text-blue-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-blue-700 mt-2\">{summary.customersWithBalance} customers with balances</p>\r\n//         </div>\r\n\r\n//         <div className=\"bg-red-50 p-6 rounded-lg border border-red-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-red-600 text-sm font-medium\">Overdue Amount</p>\r\n//               <p className=\"text-2xl font-bold text-red-900\">${summary.totalOverdue.toFixed(2)}</p>\r\n//             </div>\r\n//             <AlertTriangle className=\"text-red-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-red-700 mt-2\">\r\n//             {summary.totalAR > 0 ? ((summary.totalOverdue / summary.totalAR) * 100).toFixed(1) : 0}% of total A/R\r\n//           </p>\r\n//         </div>\r\n\r\n//         <div className=\"bg-green-50 p-6 rounded-lg border border-green-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-green-600 text-sm font-medium\">Avg. Days Outstanding</p>\r\n//               <p className=\"text-2xl font-bold text-green-900\">{summary.avgDaysOutstanding}</p>\r\n//             </div>\r\n//             <Clock className=\"text-green-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-green-700 mt-2\">Collection performance</p>\r\n//         </div>\r\n\r\n//         <div className=\"bg-purple-50 p-6 rounded-lg border border-purple-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-purple-600 text-sm font-medium\">Active Customers</p>\r\n//               <p className=\"text-2xl font-bold text-purple-900\">{customers.length}</p>\r\n//             </div>\r\n//             <Users className=\"text-purple-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-purple-700 mt-2\">Total customer accounts</p>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Tabs */}\r\n//       <div className=\"mb-6\">\r\n//         <div className=\"border-b border-gray-200\">\r\n//           <nav className=\"-mb-px flex space-x-8\">\r\n//             {[\r\n//               { id: 'overview', name: 'Customer Overview', icon: Users },\r\n//               { id: 'invoices', name: 'Invoices', icon: FileText },\r\n//               { id: 'aging', name: 'Aging Report', icon: Clock },\r\n//               { id: 'payments', name: 'Payments', icon: CheckCircle }\r\n//             ].map((tab) => (\r\n//               <button\r\n//                 key={tab.id}\r\n//                 onClick={() => setActiveTab(tab.id)}\r\n//                 className={`flex items-center py-2 px-1 border-b-2 font-medium text-sm ${\r\n//                   activeTab === tab.id\r\n//                     ? 'border-emerald-500 text-emerald-600'\r\n//                     : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n//                 }`}\r\n//               >\r\n//                 <tab.icon className=\"mr-2\" size={16} />\r\n//                 {tab.name}\r\n//               </button>\r\n//             ))}\r\n//           </nav>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Tab Content */}\r\n//       {activeTab === 'overview' && (\r\n//         <div>\r\n//           {/* Filters */}\r\n//           <div className=\"flex flex-wrap items-center gap-4 mb-6\">\r\n//             <div className=\"relative\">\r\n//               <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n//               <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Search customers...\"\r\n//                 value={filters.searchTerm}\r\n//                 onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\r\n//                 className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               />\r\n//             </div>\r\n\r\n//             <select\r\n//               value={filters.customerType}\r\n//               onChange={(e) => setFilters({ ...filters, customerType: e.target.value })}\r\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//             >\r\n//               <option value=\"all\">All Customer Types</option>\r\n//               <option value=\"corporate\">Corporate</option>\r\n//               <option value=\"small_business\">Small Business</option>\r\n//               <option value=\"credit\">Credit</option>\r\n//               <option value=\"cash\">Cash Only</option>\r\n//             </select>\r\n\r\n//             <select\r\n//               value={filters.status}\r\n//               onChange={(e) => setFilters({ ...filters, status: e.target.value })}\r\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//             >\r\n//               <option value=\"all\">All Statuses</option>\r\n//               <option value=\"current\">Current</option>\r\n//               <option value=\"overdue\">Overdue</option>\r\n//               <option value=\"paid_up\">Paid Up</option>\r\n//             </select>\r\n\r\n//             <button\r\n//               onClick={() => setShowInvoiceForm(true)}\r\n//               className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\r\n//             >\r\n//               <Plus size={16} />\r\n//               <span>New Invoice</span>\r\n//             </button>\r\n//           </div>\r\n\r\n//           {/* Customer List */}\r\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//             <div className=\"overflow-x-auto\">\r\n//               <table className=\"w-full\">\r\n//                 <thead className=\"bg-gray-50\">\r\n//                   <tr>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Customer\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Type\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Credit Limit\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Balance\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Overdue\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Credit Status\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Last Payment\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Actions\r\n//                     </th>\r\n//                   </tr>\r\n//                 </thead>\r\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//                   {loading ? (\r\n//                     <tr>\r\n//                       <td colSpan=\"8\" className=\"px-6 py-4 text-center text-gray-500\">\r\n//                         Loading data from API...\r\n//                       </td>\r\n//                     </tr>\r\n//                   ) : (\r\n//                     filteredCustomers.map((customer) => (\r\n//                       <tr key={customer.id} className=\"hover:bg-gray-50\">\r\n//                         <td className=\"px-6 py-4\">\r\n//                           <div>\r\n//                             <div className=\"text-sm font-medium text-gray-900\">{customer.name}</div>\r\n//                             <div className=\"text-sm text-gray-500\">{customer.id}</div>\r\n//                             <div className=\"text-xs text-gray-400 flex items-center mt-1\">\r\n//                               <Mail className=\"mr-1\" size={12} />\r\n//                               {customer.email}\r\n//                             </div>\r\n//                           </div>\r\n//                         </td>\r\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                           <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-gray-100 text-gray-800\">\r\n//                             {customer.customerType.replace('_', ' ')}\r\n//                           </span>\r\n//                         </td>\r\n//                         <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                           ${customer.creditLimit.toLocaleString()}\r\n//                         </td>\r\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                           <div className=\"text-sm font-medium text-gray-900\">\r\n//                             ${customer.totalOwed.toFixed(2)}\r\n//                           </div>\r\n//                           <div className=\"text-xs text-gray-500\">\r\n//                             {customer.invoiceCount} invoices\r\n//                           </div>\r\n//                         </td>\r\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                           {customer.overdueAmount > 0 ? (\r\n//                             <span className=\"text-red-600 font-medium\">\r\n//                               ${customer.overdueAmount.toFixed(2)}\r\n//                             </span>\r\n//                           ) : (\r\n//                             <span className=\"text-green-600\">$0.00</span>\r\n//                           )}\r\n//                         </td>\r\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                           <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(customer.creditStatus)}`}>\r\n//                             {customer.creditStatus.replace('_', ' ')}\r\n//                           </span>\r\n//                         </td>\r\n//                         <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                           {customer.lastPayment || 'N/A'}\r\n//                         </td>\r\n//                         <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n//                           <button\r\n//                             onClick={() => setSelectedCustomer(customer)}\r\n//                             className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\r\n//                           >\r\n//                             <Eye size={16} />\r\n//                           </button>\r\n//                           <button className=\"text-blue-600 hover:text-blue-900\">\r\n//                             <Edit size={16} />\r\n//                           </button>\r\n//                         </td>\r\n//                       </tr>\r\n//                     ))\r\n//                   )}\r\n//                 </tbody>\r\n//               </table>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {activeTab === 'invoices' && renderInvoicesTab()}\r\n//       {activeTab === 'aging' && renderAgingTab()}\r\n//       {activeTab === 'payments' && renderPaymentsTab()}\r\n\r\n//       {/* Customer Detail Modal */}\r\n//       {selectedCustomer && (\r\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\r\n//                   Customer Details - {selectedCustomer.name}\r\n//                 </h3>\r\n//                 <button\r\n//                   onClick={() => setSelectedCustomer(null)}\r\n//                   className=\"text-gray-400 hover:text-gray-600\"\r\n//                 >\r\n//                   <XCircle size={20} />\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <div className=\"px-6 py-4\">\r\n//               {/* Customer Info Grid */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n//                 <div className=\"space-y-4\">\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer ID</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.id}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Email</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.email}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Phone</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.phone}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Address</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.address}</p>\r\n//                   </div>\r\n//                 </div>\r\n                \r\n//                 <div className=\"space-y-4\">\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer Type</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.customerType.replace('_', ' ')}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Limit</label>\r\n//                     <p className=\"text-sm text-gray-900\">${selectedCustomer.creditLimit.toLocaleString()}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Payment Terms</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.paymentTerms} days</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Status</label>\r\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(selectedCustomer.creditStatus)}`}>\r\n//                       {selectedCustomer.creditStatus.replace('_', ' ')}\r\n//                     </span>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Financial Summary */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\r\n//                 <div className=\"bg-blue-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-blue-600\">Current Balance</div>\r\n//                   <div className=\"text-xl font-bold text-blue-900\">\r\n//                     ${selectedCustomer.totalOwed.toFixed(2)}\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"bg-red-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-red-600\">Overdue Amount</div>\r\n//                   <div className=\"text-xl font-bold text-red-900\">\r\n//                     ${selectedCustomer.overdueAmount.toFixed(2)}\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"bg-green-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-green-600\">Credit Available</div>\r\n//                   <div className=\"text-xl font-bold text-green-900\">\r\n//                     ${(selectedCustomer.creditLimit - selectedCustomer.totalOwed).toFixed(2)}\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"bg-purple-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-purple-600\">Avg Payment Days</div>\r\n//                   <div className=\"text-xl font-bold text-purple-900\">\r\n//                     {selectedCustomer.avgPaymentDays}\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Customer Invoices */}\r\n//               <div className=\"mb-6\">\r\n//                 <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Customer Invoices</h4>\r\n//                 <div className=\"overflow-x-auto\">\r\n//                   <table className=\"w-full border border-gray-200 rounded\">\r\n//                     <thead className=\"bg-gray-50\">\r\n//                       <tr>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Invoice</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Date</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Due Date</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Amount</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Balance</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Status</th>\r\n//                       </tr>\r\n//                     </thead>\r\n//                     <tbody className=\"divide-y divide-gray-200\">\r\n//                       {invoices\r\n//                         .filter(inv => inv.customerId === selectedCustomer.id)\r\n//                         .map((invoice) => (\r\n//                           <tr key={invoice.id}>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{invoice.id}</td>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{invoice.date}</td>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{invoice.dueDate}</td>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">${invoice.amount.toFixed(2)}</td>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">${invoice.balance.toFixed(2)}</td>\r\n//                             <td className=\"px-4 py-2\">\r\n//                               <span className={`px-2 py-1 text-xs font-medium rounded-full ${getInvoiceStatusColor(invoice.status)}`}>\r\n//                                 {invoice.status}\r\n//                               </span>\r\n//                             </td>\r\n//                           </tr>\r\n//                         ))}\r\n//                     </tbody>\r\n//                   </table>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Action Buttons */}\r\n//               <div className=\"flex space-x-3\">\r\n//                 <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\r\n//                   <Plus size={16} />\r\n//                   <span>New Invoice</span>\r\n//                 </button>\r\n//                 <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\r\n//                   <CheckCircle size={16} />\r\n//                   <span>Record Payment</span>\r\n//                 </button>\r\n//                 <button className=\"px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 flex items-center space-x-2\">\r\n//                   <Mail size={16} />\r\n//                   <span>Send Statement</span>\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Invoice Detail Modal */}\r\n//       {viewInvoice && (\r\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-lg max-w-3xl w-full max-h-[90vh] overflow-y-auto\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\r\n//                   Invoice Details - {viewInvoice.id}\r\n//                 </h3>\r\n//                 <button\r\n//                   onClick={() => setViewInvoice(null)}\r\n//                   className=\"text-gray-400 hover:text-gray-600\"\r\n//                 >\r\n//                   <XCircle size={20} />\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <div className=\"px-6 py-4\">\r\n//               {/* Invoice Header */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n//                 <div>\r\n//                   <h4 className=\"font-semibold text-gray-900 mb-3\">Invoice Information</h4>\r\n//                   <div className=\"space-y-2\">\r\n//                     <div><span className=\"text-gray-500\">Invoice ID:</span> {viewInvoice.id}</div>\r\n//                     <div><span className=\"text-gray-500\">Date:</span> {viewInvoice.date}</div>\r\n//                     <div><span className=\"text-gray-500\">Due Date:</span> {viewInvoice.dueDate}</div>\r\n//                     <div><span className=\"text-gray-500\">Payment Terms:</span> {viewInvoice.paymentTerms} days</div>\r\n//                     <div><span className=\"text-gray-500\">Source:</span> {viewInvoice.source}</div>\r\n//                   </div>\r\n//                 </div>\r\n//                 <div>\r\n//                   <h4 className=\"font-semibold text-gray-900 mb-3\">Customer Information</h4>\r\n//                   <div className=\"space-y-2\">\r\n//                     <div><span className=\"text-gray-500\">Customer:</span> {viewInvoice.customerName}</div>\r\n//                     <div><span className=\"text-gray-500\">Customer ID:</span> {viewInvoice.customerId}</div>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Invoice Items */}\r\n//               <div className=\"mb-6\">\r\n//                 <h4 className=\"font-semibold text-gray-900 mb-3\">Invoice Items</h4>\r\n//                 <div className=\"overflow-x-auto\">\r\n//                   <table className=\"w-full border border-gray-200 rounded\">\r\n//                     <thead className=\"bg-gray-50\">\r\n//                       <tr>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Description</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Quantity</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Price</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Total</th>\r\n//                       </tr>\r\n//                     </thead>\r\n//                     <tbody className=\"divide-y divide-gray-200\">\r\n//                       {viewInvoice.items.map((item, index) => (\r\n//                         <tr key={index}>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900\">{item.description}</td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{item.quantity}</td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">${item.price.toFixed(2)}</td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">${item.total.toFixed(2)}</td>\r\n//                         </tr>\r\n//                       ))}\r\n//                     </tbody>\r\n//                   </table>\r\n//                 </div>\r\n//               </div>\r\n\r\n//           {/* Invoice Summary */}\r\n// <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\r\n//   <div className=\"bg-blue-50 p-4 rounded-lg\">\r\n//     <div className=\"text-sm font-medium text-blue-600\">Invoice Amount</div>\r\n//     <div className=\"text-xl font-bold text-blue-900\">${viewInvoice.amount.toFixed(2)}</div>\r\n//   </div>\r\n//   <div className=\"bg-green-50 p-4 rounded-lg\">\r\n//     <div className=\"text-sm font-medium text-green-600\">Amount Paid</div>\r\n//     <div className=\"text-xl font-bold text-green-900\">${viewInvoice.paid.toFixed(2)}</div>\r\n//   </div>\r\n//   <div className=\"bg-red-50 p-4 rounded-lg\">\r\n//     <div className=\"text-sm font-medium text-red-600\">Balance Due</div>\r\n//     <div className=\"text-xl font-bold text-red-900\">${viewInvoice.balance.toFixed(2)}</div>\r\n//   </div>\r\n// </div>\r\n\r\n// {/* Invoice Status and Days Information */}\r\n// <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\r\n//   <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n//     <div className=\"text-sm font-medium text-gray-600\">Invoice Status</div>\r\n//     <span className={`inline-block mt-1 px-3 py-1 text-sm font-medium rounded-full ${getInvoiceStatusColor(viewInvoice.status)}`}>\r\n//       {viewInvoice.status.charAt(0).toUpperCase() + viewInvoice.status.slice(1)}\r\n//     </span>\r\n//   </div>\r\n//   <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n//     <div className=\"text-sm font-medium text-gray-600\">\r\n//       {viewInvoice.status === 'overdue' ? 'Days Overdue' : 'Days Until Due'}\r\n//     </div>\r\n//     <div className={`text-xl font-bold ${viewInvoice.status === 'overdue' ? 'text-red-900' : 'text-gray-900'}`}>\r\n//       {viewInvoice.status === 'overdue' ? viewInvoice.daysOverdue : \r\n//        Math.max(0, Math.ceil((new Date(viewInvoice.dueDate) - new Date()) / (1000 * 60 * 60 * 24)))}\r\n//     </div>\r\n//   </div>\r\n// </div>\r\n\r\n// {/* Notes */}\r\n// {viewInvoice.notes && (\r\n//   <div className=\"mb-6\">\r\n//     <h4 className=\"font-semibold text-gray-900 mb-2\">Notes</h4>\r\n//     <p className=\"text-sm text-gray-700 bg-gray-50 p-3 rounded border\">{viewInvoice.notes}</p>\r\n//   </div>\r\n// )}\r\n\r\n// {/* Payment History for this Invoice */}\r\n// <div className=\"mb-6\">\r\n//   <h4 className=\"font-semibold text-gray-900 mb-3\">Payment History</h4>\r\n//   {payments.filter(payment => payment.invoiceId === viewInvoice.id).length > 0 ? (\r\n//     <div className=\"overflow-x-auto\">\r\n//       <table className=\"w-full border border-gray-200 rounded\">\r\n//         <thead className=\"bg-gray-50\">\r\n//           <tr>\r\n//             <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Date</th>\r\n//             <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Amount</th>\r\n//             <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Method</th>\r\n//             <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Reference</th>\r\n//             <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Status</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody className=\"divide-y divide-gray-200\">\r\n//           {payments\r\n//             .filter(payment => payment.invoiceId === viewInvoice.id)\r\n//             .map((payment) => (\r\n//               <tr key={payment.id}>\r\n//                 <td className=\"px-4 py-2 text-sm text-gray-900\">{payment.date}</td>\r\n//                 <td className=\"px-4 py-2 text-sm text-gray-900\">${payment.amount.toFixed(2)}</td>\r\n//                 <td className=\"px-4 py-2 text-sm text-gray-900\">{payment.method.replace('_', ' ')}</td>\r\n//                 <td className=\"px-4 py-2 text-sm text-gray-900\">{payment.reference}</td>\r\n//                 <td className=\"px-4 py-2\">\r\n//                   <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                     payment.status === 'cleared' ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n//                   }`}>\r\n//                     {payment.status}\r\n//                   </span>\r\n//                 </td>\r\n//               </tr>\r\n//             ))}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   ) : (\r\n//     <div className=\"text-sm text-gray-500 bg-gray-50 p-4 rounded border text-center\">\r\n//       No payments recorded for this invoice\r\n//     </div>\r\n//   )}\r\n// </div>\r\n\r\n// {/* Customer Credit Information */}\r\n// <div className=\"mb-6 bg-blue-50 p-4 rounded-lg border border-blue-200\">\r\n//   <h4 className=\"font-semibold text-blue-900 mb-3\">Customer Credit Information</h4>\r\n//   <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\r\n//     <div>\r\n//       <span className=\"text-blue-700 font-medium\">Credit Limit:</span>\r\n//       <div className=\"text-blue-900 font-bold\">\r\n//         ${customers.find(c => c.id === viewInvoice.customerId)?.creditLimit.toLocaleString() || 'N/A'}\r\n//       </div>\r\n//     </div>\r\n//     <div>\r\n//       <span className=\"text-blue-700 font-medium\">Total Outstanding:</span>\r\n//       <div className=\"text-blue-900 font-bold\">\r\n//         ${customers.find(c => c.id === viewInvoice.customerId)?.totalOwed.toFixed(2) || '0.00'}\r\n//       </div>\r\n//     </div>\r\n//     <div>\r\n//       <span className=\"text-blue-700 font-medium\">Credit Available:</span>\r\n//       <div className=\"text-blue-900 font-bold\">\r\n//         ${((customers.find(c => c.id === viewInvoice.customerId)?.creditLimit || 0) - \r\n//             (customers.find(c => c.id === viewInvoice.customerId)?.totalOwed || 0)).toFixed(2)}\r\n//       </div>\r\n//     </div>\r\n//   </div>\r\n// </div>\r\n// {/* Action Buttons */}\r\n// <div className=\"flex flex-wrap gap-3\">\r\n//   <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2 transition-colors\">\r\n//     <CheckCircle size={16} />\r\n//     <span>Record Payment</span>\r\n//   </button>\r\n//   <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2 transition-colors\">\r\n//     <Mail size={16} />\r\n//     <span>Email Invoice</span>\r\n//   </button>\r\n//   <button className=\"px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 flex items-center space-x-2 transition-colors\">\r\n//     <Printer size={16} />\r\n//     <span>Print Invoice</span>\r\n//   </button>\r\n//   <button className=\"px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 flex items-center space-x-2 transition-colors\">\r\n//     <Download size={16} />\r\n//     <span>Download PDF</span>\r\n//   </button>\r\n//   <button className=\"px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 flex items-center space-x-2 transition-colors\">\r\n//     <Send size={16} />\r\n//     <span>Send Reminder</span>\r\n//   </button>\r\n//   {viewInvoice.balance > 0 && (\r\n//     <button className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 flex items-center space-x-2 transition-colors\">\r\n//       <AlertTriangle size={16} />\r\n//       <span>Mark Overdue</span>\r\n//     </button>\r\n//   )}\r\n// </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* New Invoice Form */}\r\n//       {showInvoiceForm && (\r\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">Create New Invoice</h3>\r\n//                 <button\r\n//                   onClick={() => setShowInvoiceForm(false)}\r\n//                   className=\"text-gray-400 hover:text-gray-600\"\r\n//                 >\r\n//                   <XCircle size={20} />\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <div className=\"px-6 py-4\">\r\n//               {/* Invoice Header */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\r\n//                 <div>\r\n//                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">Customer *</label>\r\n//                   <select\r\n//                     value={newInvoice.customerId}\r\n//                     onChange={(e) => setNewInvoice({ ...newInvoice, customerId: e.target.value })}\r\n//                     className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//                   >\r\n//                     <option value=\"\">Select Customer</option>\r\n//                     {customers.filter(c => c.customerType !== 'cash').map(customer => (\r\n//                       <option key={customer.id} value={customer.id}>\r\n//                         {customer.name} ({customer.id})\r\n//                       </option>\r\n//                     ))}\r\n//                   </select>\r\n//                 </div>\r\n//                 <div>\r\n//                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">Due Date *</label>\r\n//                   <input\r\n//                     type=\"date\"\r\n//                     value={newInvoice.dueDate}\r\n//                     onChange={(e) => setNewInvoice({ ...newInvoice, dueDate: e.target.value })}\r\n//                     className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//                   />\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Invoice Items */}\r\n//               <div className=\"mb-6\">\r\n//                 <label className=\"block text-sm font-medium text-gray-700 mb-2\">Invoice Items</label>\r\n//                 <div className=\"space-y-3\">\r\n//                   {newInvoice.items.map((item, index) => (\r\n//                     <div key={index} className=\"grid grid-cols-12 gap-2 items-center bg-gray-50 p-3 rounded\">\r\n//                       <div className=\"col-span-5\">\r\n//                         <input\r\n//                           type=\"text\"\r\n//                           value={item.description}\r\n//                           onChange={(e) => updateInvoiceItem(index, 'description', e.target.value)}\r\n//                           placeholder=\"Item description\"\r\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                         />\r\n//                       </div>\r\n//                       <div className=\"col-span-2\">\r\n//                         <input\r\n//                           type=\"number\"\r\n//                           value={item.quantity}\r\n//                           onChange={(e) => updateInvoiceItem(index, 'quantity', parseFloat(e.target.value) || 0)}\r\n//                           placeholder=\"Qty\"\r\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                         />\r\n//                       </div>\r\n//                       <div className=\"col-span-2\">\r\n//                         <input\r\n//                           type=\"number\"\r\n//                           step=\"0.01\"\r\n//                           value={item.price}\r\n//                           onChange={(e) => updateInvoiceItem(index, 'price', parseFloat(e.target.value) || 0)}\r\n//                           placeholder=\"Price\"\r\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                         />\r\n//                       </div>\r\n//                       <div className=\"col-span-2\">\r\n//                         <input\r\n//                           type=\"number\"\r\n//                           step=\"0.01\"\r\n//                           value={item.total}\r\n//                           readOnly\r\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm bg-gray-100\"\r\n//                         />\r\n//                       </div>\r\n//                       <div className=\"col-span-1\">\r\n//                         {newInvoice.items.length > 1 && (\r\n//                           <button\r\n//                             onClick={() => {\r\n//                               const updatedItems = newInvoice.items.filter((_, i) => i !== index);\r\n//                               setNewInvoice({ ...newInvoice, items: updatedItems });\r\n//                             }}\r\n//                             className=\"p-1 text-red-600 hover:bg-red-100 rounded\"\r\n//                           >\r\n//                             <XCircle size={14} />\r\n//                           </button>\r\n//                         )}\r\n//                       </div>\r\n//                     </div>\r\n//                   ))}\r\n//                 </div>\r\n\r\n//                 <div className=\"flex justify-between items-center mt-3\">\r\n//                   <button\r\n//                     onClick={addInvoiceItem}\r\n//                     className=\"px-3 py-1 text-sm bg-emerald-100 text-emerald-700 rounded hover:bg-emerald-200 flex items-center space-x-1\"\r\n//                   >\r\n//                     <Plus size={14} />\r\n//                     <span>Add Item</span>\r\n//                   </button>\r\n\r\n//                   <div className=\"text-lg font-semibold\">\r\n//                     Total: ${calculateInvoiceTotal().toFixed(2)}\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Notes */}\r\n//               <div className=\"mb-6\">\r\n//                 <label className=\"block text-sm font-medium text-gray-700 mb-1\">Notes</label>\r\n//                 <textarea\r\n//                   value={newInvoice.notes}\r\n//                   onChange={(e) => setNewInvoice({ ...newInvoice, notes: e.target.value })}\r\n//                   rows={3}\r\n//                   placeholder=\"Additional notes...\"\r\n//                   className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//                 />\r\n//               </div>\r\n\r\n//               {/* Action Buttons */}\r\n//               <div className=\"flex space-x-3\">\r\n//                 <button\r\n//                   onClick={handleCreateInvoice}\r\n//                   className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\r\n//                 >\r\n//                   <CheckCircle size={16} />\r\n//                   <span>Create Invoice</span>\r\n//                 </button>\r\n//                 <button\r\n//                   onClick={() => setShowInvoiceForm(false)}\r\n//                   className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\"\r\n//                 >\r\n//                   <XCircle size={16} />\r\n//                   <span>Cancel</span>\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Integration Status */}\r\n//       <div className=\"mt-8 p-6 bg-green-50 border border-green-200 rounded-lg\">\r\n//         <div className=\"flex items-center mb-4\">\r\n//           <CheckCircle className=\"text-green-600 mr-2\" size={20} />\r\n//           <h3 className=\"font-medium text-green-800\">POS Integration Active</h3>\r\n//         </div>\r\n//         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm text-green-700\">\r\n//           <div>\r\n//             <strong>Credit Sales:</strong> Automatically create AR entries when customers buy on credit in POS\r\n//           </div>\r\n//           <div>\r\n//             <strong>Customer Limits:</strong> POS checks credit limits before allowing credit sales\r\n//           </div>\r\n//           <div>\r\n//             <strong>Real-time Updates:</strong> Customer balances update instantly with each transaction\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AccountsReceivable;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { \r\n  Users, \r\n  DollarSign, \r\n  CreditCard, \r\n  AlertTriangle, \r\n  Clock, \r\n  Plus, \r\n  Search, \r\n  Filter, \r\n  Eye, \r\n  Edit, \r\n  Download,\r\n  CheckCircle,\r\n  XCircle,\r\n  Calendar,\r\n  FileText,\r\n  TrendingUp,\r\n  Mail,\r\n  Phone,\r\n  Loader,\r\n  RefreshCw\r\n} from 'lucide-react';\r\n\r\n// API Configuration\r\nconst API_BASE_URL_SALES = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/orders?start=0&size=200';\r\nconst API_CUSTOMERS = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/customers?status=Active';\r\n\r\n// Replace with your actual Bearer token\r\nconst BEARER_TOKEN = 'your-bearer-token-here';\r\n\r\nconst AccountsReceivable = () => {\r\n  // State management\r\n  const [sales, setSales] = useState({ loading: false, data: [], error: null });\r\n  const [customers, setCustomers] = useState({ loading: false, data: [], error: null });\r\n  const [activeTab, setActiveTab] = useState('overview');\r\n  const [selectedOrder, setSelectedOrder] = useState(null);\r\n  const [filters, setFilters] = useState({\r\n    customerType: 'all',\r\n    status: 'all',\r\n    searchTerm: ''\r\n  });\r\n\r\n  // API Functions\r\n  const fetchSales = async () => {\r\n    setSales(prev => ({ ...prev, loading: true, error: null }));\r\n    try {\r\n      const response = await fetch(API_BASE_URL_SALES, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': `Bearer ${BEARER_TOKEN}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      \r\n      // Filter for unpaid and unfulfilled orders only\r\n      const filteredOrders = data.filter(order => \r\n        !order.paid || !order.fulfilled || order.status === 'Active'\r\n      );\r\n      \r\n      setSales({ loading: false, data: filteredOrders, error: null });\r\n    } catch (error) {\r\n      console.error('Error fetching sales:', error);\r\n      setSales({ loading: false, data: [], error: error.message });\r\n    }\r\n  };\r\n\r\n  const fetchCustomers = async () => {\r\n    setCustomers(prev => ({ ...prev, loading: true, error: null }));\r\n    try {\r\n      const response = await fetch(API_CUSTOMERS, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': `Bearer ${BEARER_TOKEN}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setCustomers({ loading: false, data: data, error: null });\r\n    } catch (error) {\r\n      console.error('Error fetching customers:', error);\r\n      setCustomers({ loading: false, data: [], error: error.message });\r\n    }\r\n  };\r\n\r\n  // Load data on component mount\r\n  useEffect(() => {\r\n    fetchSales();\r\n    fetchCustomers();\r\n  }, []);\r\n\r\n  // Helper function to get customer name by ID\r\n  const getCustomerName = (customerId) => {\r\n    if (!customerId || customerId === 'null') return 'Walk-in Customer';\r\n    const customer = customers.data.find(c => c.id === customerId);\r\n    return customer ? customer.name : 'Unknown Customer';\r\n  };\r\n\r\n  // Helper function to get customer details by ID\r\n  const getCustomerDetails = (customerId) => {\r\n    if (!customerId || customerId === 'null') return null;\r\n    return customers.data.find(c => c.id === customerId);\r\n  };\r\n\r\n  // Calculate summary data\r\n  const calculateSummary = () => {\r\n    const totalAR = sales.data.reduce((sum, order) => sum + order.total, 0);\r\n    const totalOrders = sales.data.length;\r\n    const unfulfilledOrders = sales.data.filter(order => !order.fulfilled).length;\r\n    const unpaidOrders = sales.data.filter(order => !order.paid).length;\r\n\r\n    return {\r\n      totalAR,\r\n      totalOrders,\r\n      unfulfilledOrders,\r\n      unpaidOrders\r\n    };\r\n  };\r\n\r\n  // Filter orders based on search and filters\r\n  const getFilteredOrders = () => {\r\n    let filtered = [...sales.data];\r\n\r\n    if (filters.status !== 'all') {\r\n      if (filters.status === 'unpaid') {\r\n        filtered = filtered.filter(order => !order.paid);\r\n      } else if (filters.status === 'unfulfilled') {\r\n        filtered = filtered.filter(order => !order.fulfilled);\r\n      }\r\n    }\r\n\r\n    if (filters.searchTerm) {\r\n      const term = filters.searchTerm.toLowerCase();\r\n      filtered = filtered.filter(order =>\r\n        order.orderId.toLowerCase().includes(term) ||\r\n        getCustomerName(order.customerId).toLowerCase().includes(term) ||\r\n        order.lineItems.some(item => \r\n          item.productName.toLowerCase().includes(term)\r\n        )\r\n      );\r\n    }\r\n\r\n    return filtered;\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return 'N/A';\r\n    return dateString.split('.').slice(0, 3).join('/');\r\n  };\r\n\r\n  const formatCurrency = (amount) => {\r\n    return new Intl.NumberFormat('en-PK', {\r\n      style: 'currency',\r\n      currency: 'PKR',\r\n      minimumFractionDigits: 0,\r\n      maximumFractionDigits: 0\r\n    }).format(amount);\r\n  };\r\n\r\n  const summary = calculateSummary();\r\n  const filteredOrders = getFilteredOrders();\r\n\r\n  // Loading state\r\n  if (sales.loading || customers.loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <Loader className=\"animate-spin text-emerald-600\" size={24} />\r\n          <span className=\"text-gray-600\">Loading data from API...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Error state\r\n  if (sales.error || customers.error) {\r\n    return (\r\n      <div className=\"max-w-7xl mx-auto p-6\">\r\n        <div className=\"bg-red-50 border border-red-200 rounded-lg p-6\">\r\n          <div className=\"flex items-center mb-4\">\r\n            <AlertTriangle className=\"text-red-600 mr-2\" size={20} />\r\n            <h3 className=\"font-medium text-red-800\">API Connection Error</h3>\r\n          </div>\r\n          <div className=\"text-red-700 mb-4\">\r\n            {sales.error && <div>Sales API Error: {sales.error}</div>}\r\n            {customers.error && <div>Customers API Error: {customers.error}</div>}\r\n          </div>\r\n          <button\r\n            onClick={() => {\r\n              fetchSales();\r\n              fetchCustomers();\r\n            }}\r\n            className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 flex items-center space-x-2\"\r\n          >\r\n            <RefreshCw size={16} />\r\n            <span>Retry Connection</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto p-6 bg-white\">\r\n      {/* Header */}\r\n      <div className=\"mb-8\">\r\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\r\n          <CreditCard className=\"mr-3 text-emerald-600\" />\r\n          Accounts Receivable - Outstanding Orders\r\n        </h1>\r\n        <p className=\"text-gray-600\">Manage unpaid and unfulfilled orders from POS system</p>\r\n      </div>\r\n\r\n      {/* Summary Cards */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\r\n        <div className=\"bg-blue-50 p-6 rounded-lg border border-blue-200\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-blue-600 text-sm font-medium\">Total Outstanding</p>\r\n              <p className=\"text-2xl font-bold text-blue-900\">{formatCurrency(summary.totalAR)}</p>\r\n            </div>\r\n            <DollarSign className=\"text-blue-600\" size={24} />\r\n          </div>\r\n          <p className=\"text-sm text-blue-700 mt-2\">{summary.totalOrders} orders</p>\r\n        </div>\r\n\r\n        <div className=\"bg-red-50 p-6 rounded-lg border border-red-200\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-red-600 text-sm font-medium\">Unpaid Orders</p>\r\n              <p className=\"text-2xl font-bold text-red-900\">{summary.unpaidOrders}</p>\r\n            </div>\r\n            <AlertTriangle className=\"text-red-600\" size={24} />\r\n          </div>\r\n          <p className=\"text-sm text-red-700 mt-2\">Require payment</p>\r\n        </div>\r\n\r\n        <div className=\"bg-yellow-50 p-6 rounded-lg border border-yellow-200\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-yellow-600 text-sm font-medium\">Unfulfilled Orders</p>\r\n              <p className=\"text-2xl font-bold text-yellow-900\">{summary.unfulfilledOrders}</p>\r\n            </div>\r\n            <Clock className=\"text-yellow-600\" size={24} />\r\n          </div>\r\n          <p className=\"text-sm text-yellow-700 mt-2\">Pending fulfillment</p>\r\n        </div>\r\n\r\n        <div className=\"bg-purple-50 p-6 rounded-lg border border-purple-200\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-purple-600 text-sm font-medium\">Active Customers</p>\r\n              <p className=\"text-2xl font-bold text-purple-900\">{customers.data.length}</p>\r\n            </div>\r\n            <Users className=\"text-purple-600\" size={24} />\r\n          </div>\r\n          <p className=\"text-sm text-purple-700 mt-2\">Total customers</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Filters */}\r\n      <div className=\"flex flex-wrap items-center gap-4 mb-6\">\r\n        <div className=\"relative\">\r\n          <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search orders, customers, products...\"\r\n            value={filters.searchTerm}\r\n            onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\r\n            className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n          />\r\n        </div>\r\n\r\n        <select\r\n          value={filters.status}\r\n          onChange={(e) => setFilters({ ...filters, status: e.target.value })}\r\n          className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n        >\r\n          <option value=\"all\">All Status</option>\r\n          <option value=\"unpaid\">Unpaid Only</option>\r\n          <option value=\"unfulfilled\">Unfulfilled Only</option>\r\n        </select>\r\n\r\n        <button\r\n          onClick={() => {\r\n            fetchSales();\r\n            fetchCustomers();\r\n          }}\r\n          className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\r\n        >\r\n          <RefreshCw size={16} />\r\n          <span>Refresh Data</span>\r\n        </button>\r\n      </div>\r\n\r\n      {/* Orders Table */}\r\n      <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n        <div className=\"px-6 py-4 border-b border-gray-200\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900\">Outstanding Orders ({filteredOrders.length})</h3>\r\n        </div>\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"w-full\">\r\n            <thead className=\"bg-gray-50\">\r\n              <tr>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Order ID\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Customer\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Date\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Items\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Total Amount\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Payment Status\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Fulfillment Status\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Actions\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n              {filteredOrders.map((order) => (\r\n                <tr key={order.orderId} className=\"hover:bg-gray-50\">\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <div className=\"text-sm font-medium text-gray-900\">#{order.orderId}</div>\r\n                    <div className=\"text-xs text-gray-500\">{order.status}</div>\r\n                  </td>\r\n                  <td className=\"px-6 py-4\">\r\n                    <div className=\"text-sm font-medium text-gray-900\">\r\n                      {getCustomerName(order.customerId)}\r\n                    </div>\r\n                    {getCustomerDetails(order.customerId) && (\r\n                      <div className=\"text-xs text-gray-500 flex items-center mt-1\">\r\n                        <Mail className=\"mr-1\" size={10} />\r\n                        {getCustomerDetails(order.customerId).email}\r\n                      </div>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                    {formatDate(order.createdAt)}\r\n                  </td>\r\n                  <td className=\"px-6 py-4\">\r\n                    <div className=\"text-sm text-gray-900\">\r\n                      {order.lineItems.map((item, index) => (\r\n                        <div key={index} className=\"mb-1\">\r\n                          <span className=\"font-medium\">{item.productName}</span>\r\n                          <span className=\"text-gray-500 ml-2\">x{item.quantity}</span>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                    {formatCurrency(order.total)}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n                      order.paid \r\n                        ? 'bg-green-100 text-green-800' \r\n                        : 'bg-red-100 text-red-800'\r\n                    }`}>\r\n                      {order.paid ? 'Paid' : 'Unpaid'}\r\n                    </span>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n                      order.fulfilled \r\n                        ? 'bg-green-100 text-green-800' \r\n                        : 'bg-yellow-100 text-yellow-800'\r\n                    }`}>\r\n                      {order.fulfilled ? 'Fulfilled' : 'Pending'}\r\n                    </span>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                    <button\r\n                      onClick={() => setSelectedOrder(order)}\r\n                      className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\r\n                      title=\"View Details\"\r\n                    >\r\n                      <Eye size={16} />\r\n                    </button>\r\n                    <button \r\n                      className=\"text-blue-600 hover:text-blue-900\"\r\n                      title=\"Edit Order\"\r\n                    >\r\n                      <Edit size={16} />\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        {filteredOrders.length === 0 && (\r\n          <div className=\"text-center py-12\">\r\n            <div className=\"text-gray-500 text-lg\">No outstanding orders found</div>\r\n            <p className=\"text-gray-400 mt-2\">All orders are either paid and fulfilled, or try adjusting your filters</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Order Detail Modal */}\r\n      {selectedOrder && (\r\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n          <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n            <div className=\"px-6 py-4 border-b border-gray-200\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900\">\r\n                  Order Details - #{selectedOrder.orderId}\r\n                </h3>\r\n                <button\r\n                  onClick={() => setSelectedOrder(null)}\r\n                  className=\"text-gray-400 hover:text-gray-600\"\r\n                >\r\n                  <XCircle size={20} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"px-6 py-4\">\r\n              {/* Order Info */}\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n                <div className=\"space-y-4\">\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Order ID</label>\r\n                    <p className=\"text-sm text-gray-900\">{selectedOrder.orderId}</p>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Customer</label>\r\n                    <p className=\"text-sm text-gray-900\">{getCustomerName(selectedOrder.customerId)}</p>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Created Date</label>\r\n                    <p className=\"text-sm text-gray-900\">{formatDate(selectedOrder.createdAt)}</p>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Status</label>\r\n                    <p className=\"text-sm text-gray-900\">{selectedOrder.status}</p>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"space-y-4\">\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Payment Status</label>\r\n                    <div>\r\n                      <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n                        selectedOrder.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\r\n                      }`}>\r\n                        {selectedOrder.paid ? 'Paid' : 'Unpaid'}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Fulfillment Status</label>\r\n                    <div>\r\n                      <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n                        selectedOrder.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n                      }`}>\r\n                        {selectedOrder.fulfilled ? 'Fulfilled' : 'Pending'}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Total Amount</label>\r\n                    <p className=\"text-lg font-bold text-gray-900\">{formatCurrency(selectedOrder.total)}</p>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Payable Amount</label>\r\n                    <p className=\"text-sm text-gray-900\">{formatCurrency(selectedOrder.payableAmount)}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Line Items */}\r\n              <div className=\"mb-6\">\r\n                <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Order Items</h4>\r\n                <div className=\"overflow-x-auto\">\r\n                  <table className=\"w-full border border-gray-200 rounded\">\r\n                    <thead className=\"bg-gray-50\">\r\n                      <tr>\r\n                        <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Product</th>\r\n                        <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Quantity</th>\r\n                        <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Unit Price</th>\r\n                        <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Total</th>\r\n                        <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Status</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody className=\"divide-y divide-gray-200\">\r\n                      {selectedOrder.lineItems.map((item, index) => (\r\n                        <tr key={index}>\r\n                          <td className=\"px-4 py-2 text-sm text-gray-900\">{item.productName}</td>\r\n                          <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{item.quantity}</td>\r\n                          <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{formatCurrency(item.price)}</td>\r\n                          <td className=\"px-4 py-2 text-sm font-medium text-gray-900 text-right\">{formatCurrency(item.total)}</td>\r\n                          <td className=\"px-4 py-2\">\r\n                            <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n                              item.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n                            }`}>\r\n                              {item.status}\r\n                            </span>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Totals */}\r\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-sm text-gray-600\">Subtotal:</span>\r\n                    <span className=\"text-sm text-gray-900\">{formatCurrency(selectedOrder.subTotal)}</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-sm text-gray-600\">Tax ({selectedOrder.taxRate}%):</span>\r\n                    <span className=\"text-sm text-gray-900\">{formatCurrency(selectedOrder.taxAmount)}</span>\r\n                  </div>\r\n                  {selectedOrder.discountAmount > 0 && (\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-sm text-gray-600\">Discount:</span>\r\n                      <span className=\"text-sm text-red-600\">-{formatCurrency(selectedOrder.discountAmount)}</span>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"flex justify-between font-bold text-lg border-t pt-2\">\r\n                    <span>Total:</span>\r\n                    <span>{formatCurrency(selectedOrder.total)}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Action Buttons */}\r\n              <div className=\"flex space-x-3 mt-6\">\r\n                {!selectedOrder.paid && (\r\n                  <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\r\n                    <CheckCircle size={16} />\r\n                    <span>Mark as Paid</span>\r\n                  </button>\r\n                )}\r\n                {!selectedOrder.fulfilled && (\r\n                  <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\r\n                    <FileText size={16} />\r\n                    <span>Mark as Fulfilled</span>\r\n                  </button>\r\n                )}\r\n                <button className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\">\r\n                  <Download size={16} />\r\n                  <span>Download Invoice</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* API Status */}\r\n      <div className=\"mt-8 p-6 bg-green-50 border border-green-200 rounded-lg\">\r\n        <div className=\"flex items-center mb-4\">\r\n          <CheckCircle className=\"text-green-600 mr-2\" size={20} />\r\n          <h3 className=\"font-medium text-green-800\">API Integration Status</h3>\r\n        </div>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-green-700\">\r\n          <div>\r\n            <strong>Sales API:</strong> Connected - Showing {sales.data.length} outstanding orders\r\n          </div>\r\n          <div>\r\n            <strong>Customers API:</strong> Connected - {customers.data.length} active customers loaded\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-4 text-xs text-green-600\">\r\n          <strong>Note:</strong> Only unpaid or unfulfilled orders are displayed. Update your Bearer token in the code for live data.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountsReceivable;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}