{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Logic-Unit\\\\my-account\\\\src\\\\components\\\\AccountsReceivable\\\\APPaymentsTab.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { formatCurrency, formatDate } from './AccountsReceivableUtils/formatters';\n\n// const APPaymentsTab = ({ allSalesData, getCustomerName }) => {\n//   const [payments, setPayments] = useState([]);\n\n//   useEffect(() => {\n//     // Load payments from localStorage\n//     const storedPayments = JSON.parse(localStorage.getItem('payments') || '[]');\n//     setPayments(storedPayments);\n//   }, []);\n\n//   // Get paid orders from both API and localStorage\n//   const paidOrders = allSalesData?.filter(order => order.paid && order.fulfilled) || [];\n\n//   // Combine API orders with localStorage payments\n//   const allPayments = [...paidOrders, ...payments];\n\n//   return (\n//     <div>\n//       <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//         <div className=\"px-6 py-4 border-b border-gray-200\">\n//           <h3 className=\"text-lg font-semibold text-gray-900\">Payment History</h3>\n//         </div>\n//         <div className=\"overflow-x-auto\">\n//           <table className=\"w-full\">\n//             <thead className=\"bg-gray-50\">\n//               <tr>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Invoice ID\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Customer\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Date\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Amount\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Payment Method\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Status\n//                 </th>\n//               </tr>\n//             </thead>\n//             <tbody className=\"bg-white divide-y divide-gray-200\">\n//               {allPayments.map((payment, index) => (\n//                 <tr key={payment.id || index} className=\"hover:bg-gray-50\">\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n//                     #{payment.invoiceId || payment.orderId}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                     {payment.customerId ? getCustomerName(payment.customerId) || 'Unknown / Guest' : 'N/A'}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                     {formatDate(payment.date || payment.createdAt)}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                     {formatCurrency(payment.amount || payment.total)}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                     {payment.paymentMethod || 'N/A'}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\n//                     <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-green-100 text-green-800\">\n//                       {payment.status || 'Paid'}\n//                     </span>\n//                   </td>\n//                 </tr>\n//               ))}\n\n//               {allPayments.length === 0 && (\n//                 <tr>\n//                   <td colSpan={6} className=\"px-6 py-4 text-center text-gray-500\">\n//                     No payments found.\n//                   </td>\n//                 </tr>\n//               )}\n//             </tbody>\n//           </table>\n//         </div>\n\n//         {allPayments.length === 0 && (\n//           <div className=\"text-center py-12\">\n//             <div className=\"text-gray-500 text-lg\">No payments found</div>\n//             <p className=\"text-gray-400 mt-2\">All orders are currently unpaid</p>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default APPaymentsTab;\n\nimport React, { useState, useEffect } from 'react';\nimport { formatCurrency, formatDate } from './AccountsReceivableUtils/formatters';\nimport { RefreshCw, CheckCircle, Clock, XCircle } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst APPaymentsTab = ({\n  allSalesData,\n  getCustomerName\n}) => {\n  _s();\n  const [payments, setPayments] = useState([]);\n  const [refreshing, setRefreshing] = useState(false);\n  const loadPayments = () => {\n    // Load payments from localStorage\n    const storedPayments = JSON.parse(localStorage.getItem('payments') || '[]');\n\n    // Sort payments by date (newest first)\n    const sortedPayments = storedPayments.sort((a, b) => new Date(b.date || b.createdAt) - new Date(a.date || a.createdAt));\n    setPayments(sortedPayments);\n  };\n  useEffect(() => {\n    loadPayments();\n\n    // Set up a listener for storage changes to sync across tabs\n    const handleStorageChange = e => {\n      if (e.key === 'payments') {\n        loadPayments();\n      }\n    };\n    window.addEventListener('storage', handleStorageChange);\n    return () => window.removeEventListener('storage', handleStorageChange);\n  }, []);\n  const refreshData = () => {\n    setRefreshing(true);\n    loadPayments();\n    setTimeout(() => setRefreshing(false), 500);\n  };\n\n  // Get paid orders from API data\n  const paidOrders = (allSalesData === null || allSalesData === void 0 ? void 0 : allSalesData.filter(order => order.paid && order.fulfilled)) || [];\n\n  // Combine with manual payment records\n  const combinedPayments = [...payments];\n\n  // Add API orders that don't have manual payment records\n  paidOrders.forEach(order => {\n    const hasPaymentRecord = payments.some(p => p.invoiceId === order.orderId);\n    if (!hasPaymentRecord) {\n      combinedPayments.push({\n        id: `API-${order.orderId}`,\n        invoiceId: order.orderId,\n        customerId: order.customerId,\n        date: order.paymentDate || order.createdAt,\n        amount: order.total,\n        paymentMethod: order.paymentMethod || 'Not specified',\n        status: 'paid',\n        source: 'api'\n      });\n    }\n  });\n  const getStatusIcon = status => {\n    switch (status) {\n      case 'paid':\n      case 'completed':\n        return /*#__PURE__*/_jsxDEV(CheckCircle, {\n          size: 16,\n          className: \"text-green-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 16\n        }, this);\n      case 'partial':\n        return /*#__PURE__*/_jsxDEV(Clock, {\n          size: 16,\n          className: \"text-orange-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 16\n        }, this);\n      case 'failed':\n        return /*#__PURE__*/_jsxDEV(XCircle, {\n          size: 16,\n          className: \"text-red-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 16\n        }, this);\n      default:\n        return null;\n    }\n  };\n  const getStatusBadge = payment => {\n    const status = payment.status || 'paid';\n    const statusStyles = {\n      paid: 'bg-green-100 text-green-800',\n      completed: 'bg-green-100 text-green-800',\n      partial: 'bg-orange-100 text-orange-800',\n      pending: 'bg-yellow-100 text-yellow-800',\n      failed: 'bg-red-100 text-red-800'\n    };\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `inline-flex items-center gap-1 px-2 py-1 text-xs font-medium rounded-full ${statusStyles[status] || 'bg-gray-100 text-gray-800'}`,\n      children: [getStatusIcon(status), status.charAt(0).toUpperCase() + status.slice(1), payment.remainingAmount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-1 text-xs\",\n        children: [\"(\", formatCurrency(payment.remainingAmount), \" remaining)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this);\n  };\n  const getPaymentMethodLabel = method => {\n    const methodLabels = {\n      cash: 'Cash',\n      check: 'Check',\n      bank_transfer: 'Bank Transfer',\n      credit_card: 'Credit Card',\n      debit_card: 'Debit Card',\n      online: 'Online Payment',\n      eft: 'Electronic Funds Transfer'\n    };\n    return methodLabels[method] || method || 'Not specified';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white border border-gray-200 rounded-lg overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-6 py-4 border-b border-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-gray-900\",\n            children: \"Payment History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: refreshData,\n            className: \"flex items-center gap-2 px-3 py-1 text-sm text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded transition-colors\",\n            children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n              size: 16,\n              className: refreshing ? 'animate-spin' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), \"Refresh\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"bg-gray-50\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Invoice ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Payment Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Payment Method\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Memo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            className: \"bg-white divide-y divide-gray-200\",\n            children: [combinedPayments.map(payment => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"hover:bg-gray-50\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\",\n                children: \"#payment.invoiceId || payment.orderId}\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900\",\n                children: payment.customerId ? getCustomerName(payment.customerId) || 'Unknown Customer' : 'Walk-in Customer'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900\",\n                children: formatDate(payment.date || payment.createdAt)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium\",\n                  children: formatCurrency(payment.amount || payment.total)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900\",\n                children: getPaymentMethodLabel(payment.paymentMethod)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap\",\n                children: getStatusBadge(payment)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 text-sm text-gray-600\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"max-w-xs truncate\",\n                  children: payment.memo || '-'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 19\n              }, this)]\n            }, payment.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this)), combinedPayments.length === 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: 7,\n                className: \"px-6 py-12 text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex flex-col items-center justify-center text-gray-500\",\n                  children: [/*#__PURE__*/_jsxDEV(XCircle, {\n                    size: 48,\n                    className: \"mb-3 text-gray-300\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-lg font-medium\",\n                    children: \"No payments recorded\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm mt-1\",\n                    children: \"Payment records will appear here once processed\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), combinedPayments.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-6 py-4 bg-gray-50 border-t border-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between text-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray-600\",\n            children: [\"Showing \", combinedPayments.length, \" payment\", combinedPayments.length !== 1 ? 's' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-medium text-gray-900\",\n            children: [\"Total: \", formatCurrency(combinedPayments.reduce((sum, p) => sum + (p.amount || p.total || 0), 0))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n};\n_s(APPaymentsTab, \"9wWoZIXiLssGYSPLvvyXNUvSE5M=\");\n_c = APPaymentsTab;\nexport default APPaymentsTab;\nvar _c;\n$RefreshReg$(_c, \"APPaymentsTab\");","map":{"version":3,"names":["React","useState","useEffect","formatCurrency","formatDate","RefreshCw","CheckCircle","Clock","XCircle","jsxDEV","_jsxDEV","APPaymentsTab","allSalesData","getCustomerName","_s","payments","setPayments","refreshing","setRefreshing","loadPayments","storedPayments","JSON","parse","localStorage","getItem","sortedPayments","sort","a","b","Date","date","createdAt","handleStorageChange","e","key","window","addEventListener","removeEventListener","refreshData","setTimeout","paidOrders","filter","order","paid","fulfilled","combinedPayments","forEach","hasPaymentRecord","some","p","invoiceId","orderId","push","id","customerId","paymentDate","amount","total","paymentMethod","status","source","getStatusIcon","size","className","fileName","_jsxFileName","lineNumber","columnNumber","getStatusBadge","payment","statusStyles","completed","partial","pending","failed","children","charAt","toUpperCase","slice","remainingAmount","getPaymentMethodLabel","method","methodLabels","cash","check","bank_transfer","credit_card","debit_card","online","eft","onClick","map","memo","length","colSpan","reduce","sum","_c","$RefreshReg$"],"sources":["C:/Users/Logic-Unit/my-account/src/components/AccountsReceivable/APPaymentsTab.jsx"],"sourcesContent":["\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { formatCurrency, formatDate } from './AccountsReceivableUtils/formatters';\r\n\r\n// const APPaymentsTab = ({ allSalesData, getCustomerName }) => {\r\n//   const [payments, setPayments] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     // Load payments from localStorage\r\n//     const storedPayments = JSON.parse(localStorage.getItem('payments') || '[]');\r\n//     setPayments(storedPayments);\r\n//   }, []);\r\n\r\n//   // Get paid orders from both API and localStorage\r\n//   const paidOrders = allSalesData?.filter(order => order.paid && order.fulfilled) || [];\r\n  \r\n//   // Combine API orders with localStorage payments\r\n//   const allPayments = [...paidOrders, ...payments];\r\n\r\n//   return (\r\n//     <div>\r\n//       <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//         <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//           <h3 className=\"text-lg font-semibold text-gray-900\">Payment History</h3>\r\n//         </div>\r\n//         <div className=\"overflow-x-auto\">\r\n//           <table className=\"w-full\">\r\n//             <thead className=\"bg-gray-50\">\r\n//               <tr>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Invoice ID\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Customer\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Date\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Amount\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Payment Method\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Status\r\n//                 </th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//               {allPayments.map((payment, index) => (\r\n//                 <tr key={payment.id || index} className=\"hover:bg-gray-50\">\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n//                     #{payment.invoiceId || payment.orderId}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                     {payment.customerId ? getCustomerName(payment.customerId) || 'Unknown / Guest' : 'N/A'}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                     {formatDate(payment.date || payment.createdAt)}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                     {formatCurrency(payment.amount || payment.total)}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                     {payment.paymentMethod || 'N/A'}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                     <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-green-100 text-green-800\">\r\n//                       {payment.status || 'Paid'}\r\n//                     </span>\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n\r\n//               {allPayments.length === 0 && (\r\n//                 <tr>\r\n//                   <td colSpan={6} className=\"px-6 py-4 text-center text-gray-500\">\r\n//                     No payments found.\r\n//                   </td>\r\n//                 </tr>\r\n//               )}\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n        \r\n//         {allPayments.length === 0 && (\r\n//           <div className=\"text-center py-12\">\r\n//             <div className=\"text-gray-500 text-lg\">No payments found</div>\r\n//             <p className=\"text-gray-400 mt-2\">All orders are currently unpaid</p>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default APPaymentsTab;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { formatCurrency, formatDate } from './AccountsReceivableUtils/formatters';\r\nimport { RefreshCw, CheckCircle, Clock, XCircle } from 'lucide-react';\r\n\r\nconst APPaymentsTab = ({ allSalesData, getCustomerName }) => {\r\n  const [payments, setPayments] = useState([]);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n\r\n  const loadPayments = () => {\r\n    // Load payments from localStorage\r\n    const storedPayments = JSON.parse(localStorage.getItem('payments') || '[]');\r\n    \r\n    // Sort payments by date (newest first)\r\n    const sortedPayments = storedPayments.sort((a, b) => \r\n      new Date(b.date || b.createdAt) - new Date(a.date || a.createdAt)\r\n    );\r\n    \r\n    setPayments(sortedPayments);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadPayments();\r\n    \r\n    // Set up a listener for storage changes to sync across tabs\r\n    const handleStorageChange = (e) => {\r\n      if (e.key === 'payments') {\r\n        loadPayments();\r\n      }\r\n    };\r\n    \r\n    window.addEventListener('storage', handleStorageChange);\r\n    return () => window.removeEventListener('storage', handleStorageChange);\r\n  }, []);\r\n\r\n  const refreshData = () => {\r\n    setRefreshing(true);\r\n    loadPayments();\r\n    setTimeout(() => setRefreshing(false), 500);\r\n  };\r\n\r\n  // Get paid orders from API data\r\n  const paidOrders = allSalesData?.filter(order => order.paid && order.fulfilled) || [];\r\n  \r\n  // Combine with manual payment records\r\n  const combinedPayments = [...payments];\r\n  \r\n  // Add API orders that don't have manual payment records\r\n  paidOrders.forEach(order => {\r\n    const hasPaymentRecord = payments.some(p => p.invoiceId === order.orderId);\r\n    if (!hasPaymentRecord) {\r\n      combinedPayments.push({\r\n        id: `API-${order.orderId}`,\r\n        invoiceId: order.orderId,\r\n        customerId: order.customerId,\r\n        date: order.paymentDate || order.createdAt,\r\n        amount: order.total,\r\n        paymentMethod: order.paymentMethod || 'Not specified',\r\n        status: 'paid',\r\n        source: 'api'\r\n      });\r\n    }\r\n  });\r\n\r\n  const getStatusIcon = (status) => {\r\n    switch (status) {\r\n      case 'paid':\r\n      case 'completed':\r\n        return <CheckCircle size={16} className=\"text-green-600\" />;\r\n      case 'partial':\r\n        return <Clock size={16} className=\"text-orange-600\" />;\r\n      case 'failed':\r\n        return <XCircle size={16} className=\"text-red-600\" />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const getStatusBadge = (payment) => {\r\n    const status = payment.status || 'paid';\r\n    const statusStyles = {\r\n      paid: 'bg-green-100 text-green-800',\r\n      completed: 'bg-green-100 text-green-800',\r\n      partial: 'bg-orange-100 text-orange-800',\r\n      pending: 'bg-yellow-100 text-yellow-800',\r\n      failed: 'bg-red-100 text-red-800'\r\n    };\r\n\r\n    return (\r\n      <span className={`inline-flex items-center gap-1 px-2 py-1 text-xs font-medium rounded-full ${statusStyles[status] || 'bg-gray-100 text-gray-800'}`}>\r\n        {getStatusIcon(status)}\r\n        {status.charAt(0).toUpperCase() + status.slice(1)}\r\n        {payment.remainingAmount > 0 && (\r\n          <span className=\"ml-1 text-xs\">\r\n            ({formatCurrency(payment.remainingAmount)} remaining)\r\n          </span>\r\n        )}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  const getPaymentMethodLabel = (method) => {\r\n    const methodLabels = {\r\n      cash: 'Cash',\r\n      check: 'Check',\r\n      bank_transfer: 'Bank Transfer',\r\n      credit_card: 'Credit Card',\r\n      debit_card: 'Debit Card',\r\n      online: 'Online Payment',\r\n      eft: 'Electronic Funds Transfer'\r\n    };\r\n    return methodLabels[method] || method || 'Not specified';\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n        <div className=\"px-6 py-4 border-b border-gray-200\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900\">Payment History</h3>\r\n            <button\r\n              onClick={refreshData}\r\n              className=\"flex items-center gap-2 px-3 py-1 text-sm text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded transition-colors\"\r\n            >\r\n              <RefreshCw size={16} className={refreshing ? 'animate-spin' : ''} />\r\n              Refresh\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"w-full\">\r\n            <thead className=\"bg-gray-50\">\r\n              <tr>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Invoice ID\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Customer\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Payment Date\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Amount\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Payment Method\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Status\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Memo\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n              {combinedPayments.map((payment) => (\r\n                <tr key={payment.id} className=\"hover:bg-gray-50\">\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                    #payment.invoiceId || payment.orderId}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                    {payment.customerId \r\n                      ? getCustomerName(payment.customerId) || 'Unknown Customer'\r\n                      : 'Walk-in Customer'}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                    {formatDate(payment.date || payment.createdAt)}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                    <span className=\"font-medium\">{formatCurrency(payment.amount || payment.total)}</span>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                    {getPaymentMethodLabel(payment.paymentMethod)}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    {getStatusBadge(payment)}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 text-sm text-gray-600\">\r\n                    <div className=\"max-w-xs truncate\">\r\n                      {payment.memo || '-'}\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n\r\n              {combinedPayments.length === 0 && (\r\n                <tr>\r\n                  <td colSpan={7} className=\"px-6 py-12 text-center\">\r\n                    <div className=\"flex flex-col items-center justify-center text-gray-500\">\r\n                      <XCircle size={48} className=\"mb-3 text-gray-300\" />\r\n                      <p className=\"text-lg font-medium\">No payments recorded</p>\r\n                      <p className=\"text-sm mt-1\">Payment records will appear here once processed</p>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        {/* Summary Footer */}\r\n        {combinedPayments.length > 0 && (\r\n          <div className=\"px-6 py-4 bg-gray-50 border-t border-gray-200\">\r\n            <div className=\"flex items-center justify-between text-sm\">\r\n              <div className=\"text-gray-600\">\r\n                Showing {combinedPayments.length} payment{combinedPayments.length !== 1 ? 's' : ''}\r\n              </div>\r\n              <div className=\"font-medium text-gray-900\">\r\n                Total: {formatCurrency(\r\n                  combinedPayments.reduce((sum, p) => sum + (p.amount || p.total || 0), 0)\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default APPaymentsTab;"],"mappings":";;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,cAAc,EAAEC,UAAU,QAAQ,sCAAsC;AACjF,SAASC,SAAS,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtE,MAAMC,aAAa,GAAGA,CAAC;EAAEC,YAAY;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAC3D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMkB,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA,MAAMC,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC;;IAE3E;IACA,MAAMC,cAAc,GAAGL,cAAc,CAACM,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAC9C,IAAIC,IAAI,CAACD,CAAC,CAACE,IAAI,IAAIF,CAAC,CAACG,SAAS,CAAC,GAAG,IAAIF,IAAI,CAACF,CAAC,CAACG,IAAI,IAAIH,CAAC,CAACI,SAAS,CAClE,CAAC;IAEDf,WAAW,CAACS,cAAc,CAAC;EAC7B,CAAC;EAEDvB,SAAS,CAAC,MAAM;IACdiB,YAAY,CAAC,CAAC;;IAEd;IACA,MAAMa,mBAAmB,GAAIC,CAAC,IAAK;MACjC,IAAIA,CAAC,CAACC,GAAG,KAAK,UAAU,EAAE;QACxBf,YAAY,CAAC,CAAC;MAChB;IACF,CAAC;IAEDgB,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEJ,mBAAmB,CAAC;IACvD,OAAO,MAAMG,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEL,mBAAmB,CAAC;EACzE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACxBpB,aAAa,CAAC,IAAI,CAAC;IACnBC,YAAY,CAAC,CAAC;IACdoB,UAAU,CAAC,MAAMrB,aAAa,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC;EAC7C,CAAC;;EAED;EACA,MAAMsB,UAAU,GAAG,CAAA5B,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAE6B,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,IAAID,KAAK,CAACE,SAAS,CAAC,KAAI,EAAE;;EAErF;EACA,MAAMC,gBAAgB,GAAG,CAAC,GAAG9B,QAAQ,CAAC;;EAEtC;EACAyB,UAAU,CAACM,OAAO,CAACJ,KAAK,IAAI;IAC1B,MAAMK,gBAAgB,GAAGhC,QAAQ,CAACiC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,SAAS,KAAKR,KAAK,CAACS,OAAO,CAAC;IAC1E,IAAI,CAACJ,gBAAgB,EAAE;MACrBF,gBAAgB,CAACO,IAAI,CAAC;QACpBC,EAAE,EAAE,OAAOX,KAAK,CAACS,OAAO,EAAE;QAC1BD,SAAS,EAAER,KAAK,CAACS,OAAO;QACxBG,UAAU,EAAEZ,KAAK,CAACY,UAAU;QAC5BxB,IAAI,EAAEY,KAAK,CAACa,WAAW,IAAIb,KAAK,CAACX,SAAS;QAC1CyB,MAAM,EAAEd,KAAK,CAACe,KAAK;QACnBC,aAAa,EAAEhB,KAAK,CAACgB,aAAa,IAAI,eAAe;QACrDC,MAAM,EAAE,MAAM;QACdC,MAAM,EAAE;MACV,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;EAEF,MAAMC,aAAa,GAAIF,MAAM,IAAK;IAChC,QAAQA,MAAM;MACZ,KAAK,MAAM;MACX,KAAK,WAAW;QACd,oBAAOjD,OAAA,CAACJ,WAAW;UAACwD,IAAI,EAAE,EAAG;UAACC,SAAS,EAAC;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAC7D,KAAK,SAAS;QACZ,oBAAOzD,OAAA,CAACH,KAAK;UAACuD,IAAI,EAAE,EAAG;UAACC,SAAS,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACxD,KAAK,QAAQ;QACX,oBAAOzD,OAAA,CAACF,OAAO;UAACsD,IAAI,EAAE,EAAG;UAACC,SAAS,EAAC;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACvD;QACE,OAAO,IAAI;IACf;EACF,CAAC;EAED,MAAMC,cAAc,GAAIC,OAAO,IAAK;IAClC,MAAMV,MAAM,GAAGU,OAAO,CAACV,MAAM,IAAI,MAAM;IACvC,MAAMW,YAAY,GAAG;MACnB3B,IAAI,EAAE,6BAA6B;MACnC4B,SAAS,EAAE,6BAA6B;MACxCC,OAAO,EAAE,+BAA+B;MACxCC,OAAO,EAAE,+BAA+B;MACxCC,MAAM,EAAE;IACV,CAAC;IAED,oBACEhE,OAAA;MAAMqD,SAAS,EAAE,6EAA6EO,YAAY,CAACX,MAAM,CAAC,IAAI,2BAA2B,EAAG;MAAAgB,QAAA,GACjJd,aAAa,CAACF,MAAM,CAAC,EACrBA,MAAM,CAACiB,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGlB,MAAM,CAACmB,KAAK,CAAC,CAAC,CAAC,EAChDT,OAAO,CAACU,eAAe,GAAG,CAAC,iBAC1BrE,OAAA;QAAMqD,SAAS,EAAC,cAAc;QAAAY,QAAA,GAAC,GAC5B,EAACxE,cAAc,CAACkE,OAAO,CAACU,eAAe,CAAC,EAAC,aAC5C;MAAA;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CACP;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAEX,CAAC;EAED,MAAMa,qBAAqB,GAAIC,MAAM,IAAK;IACxC,MAAMC,YAAY,GAAG;MACnBC,IAAI,EAAE,MAAM;MACZC,KAAK,EAAE,OAAO;MACdC,aAAa,EAAE,eAAe;MAC9BC,WAAW,EAAE,aAAa;MAC1BC,UAAU,EAAE,YAAY;MACxBC,MAAM,EAAE,gBAAgB;MACxBC,GAAG,EAAE;IACP,CAAC;IACD,OAAOP,YAAY,CAACD,MAAM,CAAC,IAAIA,MAAM,IAAI,eAAe;EAC1D,CAAC;EAED,oBACEvE,OAAA;IAAAiE,QAAA,eACEjE,OAAA;MAAKqD,SAAS,EAAC,4DAA4D;MAAAY,QAAA,gBACzEjE,OAAA;QAAKqD,SAAS,EAAC,oCAAoC;QAAAY,QAAA,eACjDjE,OAAA;UAAKqD,SAAS,EAAC,mCAAmC;UAAAY,QAAA,gBAChDjE,OAAA;YAAIqD,SAAS,EAAC,qCAAqC;YAAAY,QAAA,EAAC;UAAe;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxEzD,OAAA;YACEgF,OAAO,EAAEpD,WAAY;YACrByB,SAAS,EAAC,yHAAyH;YAAAY,QAAA,gBAEnIjE,OAAA,CAACL,SAAS;cAACyD,IAAI,EAAE,EAAG;cAACC,SAAS,EAAE9C,UAAU,GAAG,cAAc,GAAG;YAAG;cAAA+C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,WAEtE;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENzD,OAAA;QAAKqD,SAAS,EAAC,iBAAiB;QAAAY,QAAA,eAC9BjE,OAAA;UAAOqD,SAAS,EAAC,QAAQ;UAAAY,QAAA,gBACvBjE,OAAA;YAAOqD,SAAS,EAAC,YAAY;YAAAY,QAAA,eAC3BjE,OAAA;cAAAiE,QAAA,gBACEjE,OAAA;gBAAIqD,SAAS,EAAC,gFAAgF;gBAAAY,QAAA,EAAC;cAE/F;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACLzD,OAAA;gBAAIqD,SAAS,EAAC,gFAAgF;gBAAAY,QAAA,EAAC;cAE/F;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACLzD,OAAA;gBAAIqD,SAAS,EAAC,gFAAgF;gBAAAY,QAAA,EAAC;cAE/F;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACLzD,OAAA;gBAAIqD,SAAS,EAAC,gFAAgF;gBAAAY,QAAA,EAAC;cAE/F;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACLzD,OAAA;gBAAIqD,SAAS,EAAC,gFAAgF;gBAAAY,QAAA,EAAC;cAE/F;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACLzD,OAAA;gBAAIqD,SAAS,EAAC,gFAAgF;gBAAAY,QAAA,EAAC;cAE/F;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACLzD,OAAA;gBAAIqD,SAAS,EAAC,gFAAgF;gBAAAY,QAAA,EAAC;cAE/F;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACRzD,OAAA;YAAOqD,SAAS,EAAC,mCAAmC;YAAAY,QAAA,GACjD9B,gBAAgB,CAAC8C,GAAG,CAAEtB,OAAO,iBAC5B3D,OAAA;cAAqBqD,SAAS,EAAC,kBAAkB;cAAAY,QAAA,gBAC/CjE,OAAA;gBAAIqD,SAAS,EAAC,+DAA+D;gBAAAY,QAAA,EAAC;cAE9E;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACLzD,OAAA;gBAAIqD,SAAS,EAAC,mDAAmD;gBAAAY,QAAA,EAC9DN,OAAO,CAACf,UAAU,GACfzC,eAAe,CAACwD,OAAO,CAACf,UAAU,CAAC,IAAI,kBAAkB,GACzD;cAAkB;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpB,CAAC,eACLzD,OAAA;gBAAIqD,SAAS,EAAC,mDAAmD;gBAAAY,QAAA,EAC9DvE,UAAU,CAACiE,OAAO,CAACvC,IAAI,IAAIuC,OAAO,CAACtC,SAAS;cAAC;gBAAAiC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5C,CAAC,eACLzD,OAAA;gBAAIqD,SAAS,EAAC,mDAAmD;gBAAAY,QAAA,eAC/DjE,OAAA;kBAAMqD,SAAS,EAAC,aAAa;kBAAAY,QAAA,EAAExE,cAAc,CAACkE,OAAO,CAACb,MAAM,IAAIa,OAAO,CAACZ,KAAK;gBAAC;kBAAAO,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpF,CAAC,eACLzD,OAAA;gBAAIqD,SAAS,EAAC,mDAAmD;gBAAAY,QAAA,EAC9DK,qBAAqB,CAACX,OAAO,CAACX,aAAa;cAAC;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3C,CAAC,eACLzD,OAAA;gBAAIqD,SAAS,EAAC,6BAA6B;gBAAAY,QAAA,EACxCP,cAAc,CAACC,OAAO;cAAC;gBAAAL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtB,CAAC,eACLzD,OAAA;gBAAIqD,SAAS,EAAC,iCAAiC;gBAAAY,QAAA,eAC7CjE,OAAA;kBAAKqD,SAAS,EAAC,mBAAmB;kBAAAY,QAAA,EAC/BN,OAAO,CAACuB,IAAI,IAAI;gBAAG;kBAAA5B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACjB;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CAAC;YAAA,GAzBEE,OAAO,CAAChB,EAAE;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OA0Bf,CACL,CAAC,EAEDtB,gBAAgB,CAACgD,MAAM,KAAK,CAAC,iBAC5BnF,OAAA;cAAAiE,QAAA,eACEjE,OAAA;gBAAIoF,OAAO,EAAE,CAAE;gBAAC/B,SAAS,EAAC,wBAAwB;gBAAAY,QAAA,eAChDjE,OAAA;kBAAKqD,SAAS,EAAC,yDAAyD;kBAAAY,QAAA,gBACtEjE,OAAA,CAACF,OAAO;oBAACsD,IAAI,EAAE,EAAG;oBAACC,SAAS,EAAC;kBAAoB;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,eACpDzD,OAAA;oBAAGqD,SAAS,EAAC,qBAAqB;oBAAAY,QAAA,EAAC;kBAAoB;oBAAAX,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAG,CAAC,eAC3DzD,OAAA;oBAAGqD,SAAS,EAAC,cAAc;oBAAAY,QAAA,EAAC;kBAA+C;oBAAAX,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAG,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC5E;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CACL;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,EAGLtB,gBAAgB,CAACgD,MAAM,GAAG,CAAC,iBAC1BnF,OAAA;QAAKqD,SAAS,EAAC,+CAA+C;QAAAY,QAAA,eAC5DjE,OAAA;UAAKqD,SAAS,EAAC,2CAA2C;UAAAY,QAAA,gBACxDjE,OAAA;YAAKqD,SAAS,EAAC,eAAe;YAAAY,QAAA,GAAC,UACrB,EAAC9B,gBAAgB,CAACgD,MAAM,EAAC,UAAQ,EAAChD,gBAAgB,CAACgD,MAAM,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE;UAAA;YAAA7B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/E,CAAC,eACNzD,OAAA;YAAKqD,SAAS,EAAC,2BAA2B;YAAAY,QAAA,GAAC,SAClC,EAACxE,cAAc,CACpB0C,gBAAgB,CAACkD,MAAM,CAAC,CAACC,GAAG,EAAE/C,CAAC,KAAK+C,GAAG,IAAI/C,CAAC,CAACO,MAAM,IAAIP,CAAC,CAACQ,KAAK,IAAI,CAAC,CAAC,EAAE,CAAC,CACzE,CAAC;UAAA;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACrD,EAAA,CAxNIH,aAAa;AAAAsF,EAAA,GAAbtF,aAAa;AA0NnB,eAAeA,aAAa;AAAC,IAAAsF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}