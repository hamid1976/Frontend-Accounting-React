{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Logic-Unit\\\\my-account\\\\src\\\\pages\\\\GeneralLedger.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useCallback } from 'react';\n// import { \n//   Book, \n//   Plus, \n//   Filter, \n//   Search, \n//   Calendar, \n//   FileText, \n//   Edit, \n//   Trash2, \n//   Save, \n//   X, \n//   AlertCircle,\n//   CheckCircle,\n//   DollarSign,\n//   TrendingUp,\n//   Eye,\n//   Download,\n//   RefreshCw\n// } from 'lucide-react';\n\n// const GeneralLedger = () => {\n//   const [journalEntries, setJournalEntries] = useState([]);\n//   const [accounts, setAccounts] = useState([]);\n//   const [filteredEntries, setFilteredEntries] = useState([]);\n//   const [selectedEntry, setSelectedEntry] = useState(null);\n//   const [isAddingEntry, setIsAddingEntry] = useState(false);\n//   const [loading, setLoading] = useState({\n//     entries: false,\n//     accounts: false\n//   });\n//   const [errors, setErrors] = useState({\n//     entries: null,\n//     accounts: null\n//   });\n//   const [filters, setFilters] = useState({\n//     dateFrom: '',\n//     dateTo: '',\n//     accountId: '',\n//     transactionType: 'all',\n//     searchTerm: ''\n//   });\n//   const [trialBalance, setTrialBalance] = useState([]);\n//   const [showTrialBalance, setShowTrialBalance] = useState(false);\n//   const [newEntry, setNewEntry] = useState({\n//     date: new Date().toISOString().split('T')[0],\n//     description: '',\n//     reference: '',\n//     entries: [\n//       { accountId: '', debit: 0, credit: 0, description: '' },\n//       { accountId: '', debit: 0, credit: 0, description: '' }\n//     ]\n//   });\n\n//   // API Configuration\n//   const API_BASE_URL = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/orders?start=0&size=200';\n//   const API_BASE_URL_CHARTS_OF_ACCOUNTS = 'http://localhost:8080/api/accounts';\n\n//   // Fetch order data from API\n//   const fetchOrderData = async () => {\n//     try {\n//       const response = await fetch(API_BASE_URL, {\n//         method: 'GET',\n//         headers: {\n//           'Authorization': 'Bearer Hamid',\n//           'Content-Type': 'application/json',\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`API request failed with status ${response.status}`);\n//       }\n\n//       const data = await response.json();\n//       return data;\n//     } catch (error) {\n//       console.error('Error fetching order data:', error);\n//       return null;\n//     }\n//   };\n\n//   // Format date from API format\n//   const formatDateFromCreatedAt = (createdAt) => {\n//     try {\n//       const parts = createdAt.split('.');\n//       if (parts.length >= 3) {\n//         return `${parts[0]}-${parts[1].padStart(2, '0')}-${parts[2].padStart(2, '0')}`;\n//       }\n//       return new Date().toISOString().split('T')[0];\n//     } catch (error) {\n//       return new Date().toISOString().split('T')[0];\n//     }\n//   };\n\n//   // Helper function to flatten hierarchical account structure\n//   const flattenAccounts = (accounts) => {\n//     const result = [];\n\n//     const processAccount = (account) => {\n//       result.push(account);  // Add current account\n\n//       // Recursively process children\n//       if (account.children && Array.isArray(account.children)) {\n//         account.children.forEach(child => processAccount(child));\n//       }\n//     };\n\n//     accounts.forEach(account => processAccount(account));\n//     return result;\n//   };\n\n//   // Fetch Charts of Accounts from API (handling hierarchical structure with children)\n//   const loadChartsOfAccounts = useCallback(async () => {\n//     setLoading(prev => ({ ...prev, accounts: true }));\n//     setErrors(prev => ({ ...prev, accounts: null }));\n\n//     try {\n//       const response = await fetch(API_BASE_URL_CHARTS_OF_ACCOUNTS, {\n//         method: 'GET',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`Failed to fetch accounts: ${response.status}`);\n//       }\n\n//       const data = await response.json();\n//       console.log('Raw accounts data from API:', data);\n\n//       // Check if the data is in the expected format\n//       if (!Array.isArray(data)) {\n//         throw new Error('API response is not an array');\n//       }\n\n//       // Flatten hierarchical structure to get all accounts\n//       const flattenAccounts = (accounts) => {\n//         const result = [];\n\n//         const processAccount = (account) => {\n//           // Add the account itself\n//           result.push(account);\n\n//           // Recursively process children if they exist\n//           if (account.children && Array.isArray(account.children)) {\n//             account.children.forEach(child => processAccount(child));\n//           }\n//         };\n\n//         accounts.forEach(account => processAccount(account));\n//         return result;\n//       };\n\n//       // Flatten all accounts from the hierarchical structure\n//       const allAccounts = flattenAccounts(data);\n//       console.log('All flattened accounts:', allAccounts.length);\n\n//       // Filter to get only usable accounts (category = 'account')\n//       const usableAccounts = allAccounts.filter(account => \n//         account.category === 'account' && \n//         account.id && \n//         account.code && \n//         account.name && \n//         account.type\n//       );\n\n//       console.log('All accounts from API:', allAccounts.length);\n//       console.log('Usable accounts (category=account):', usableAccounts.length);\n//       console.log('Sample usable accounts:', usableAccounts.slice(0, 5));\n\n//       // If no usable accounts found, throw error to trigger fallback\n//       if (usableAccounts.length === 0) {\n//         console.log('No usable accounts found in API response');\n//         throw new Error('No usable accounts returned from API - only headers found');\n//       }\n\n//       // Sort by account code\n//       usableAccounts.sort((a, b) => a.code.localeCompare(b.code));\n\n//       setAccounts(usableAccounts);\n//       setLoading(prev => ({ ...prev, accounts: false }));\n\n//       console.log(`Successfully loaded ${usableAccounts.length} accounts from API`);\n//       return usableAccounts;\n\n//     } catch (error) {\n//       console.error('Error loading charts of accounts:', error);\n//       setErrors(prev => ({ ...prev, accounts: error.message }));\n//       setLoading(prev => ({ ...prev, accounts: false }));\n\n//       console.log('Using fallback chart of accounts');\n//       // Use your actual account structure as fallback\n//       const fallbackAccounts = [\n//         // Current Assets\n//         { id: '12', code: '1111', name: 'Petty Cash', type: 'assets', category: 'account' },\n//         { id: '13', code: '1112', name: 'Bank - Main Account', type: 'assets', category: 'account' },\n//         { id: '14', code: '1120', name: 'Accounts Receivable', type: 'assets', category: 'account' },\n//         { id: '15', code: '1125', name: 'Insurance Receivables', type: 'assets', category: 'account' },\n//         { id: '16', code: '1130', name: 'Inventory - FMCG Products', type: 'assets', category: 'account' },\n//         { id: '19', code: '1130', name: 'Inventory - Telecom Equipment', type: 'assets', category: 'account' },\n//         { id: '22', code: '1130', name: 'Medical Supplies Inventory', type: 'assets', category: 'account' },\n//         { id: '17', code: '1140', name: 'Packaging Materials', type: 'assets', category: 'account' },\n//         { id: '20', code: '1140', name: 'Prepaid Service Credits', type: 'assets', category: 'account' },\n//         { id: '23', code: '1140', name: 'Pharmaceutical Inventory', type: 'assets', category: 'account' },\n//         { id: '18', code: '1150', name: 'Promotional Materials', type: 'assets', category: 'account' },\n\n//         // Fixed Assets\n//         { id: '24', code: '1210', name: 'Network Equipment', type: 'assets', category: 'account' },\n//         { id: '26', code: '1210', name: 'Medical Equipment', type: 'assets', category: 'account' },\n//         { id: '25', code: '1220', name: 'IT Infrastructure', type: 'assets', category: 'account' },\n//         { id: '27', code: '1220', name: 'Furniture & Fixtures', type: 'assets', category: 'account' },\n\n//         // Liabilities\n//         { id: '28', code: '2110', name: 'Accounts Payable', type: 'liabilities', category: 'account' },\n//         { id: '29', code: '2130', name: 'Sales Tax Payable', type: 'liabilities', category: 'account' },\n//         { id: '30', code: '2140', name: 'Trade Promotions Payable', type: 'liabilities', category: 'account' },\n//         { id: '31', code: '2140', name: 'Payroll Payable', type: 'liabilities', category: 'account' },\n//         { id: '33', code: '2140', name: 'Deferred Revenue', type: 'liabilities', category: 'account' },\n//         { id: '32', code: '2150', name: 'Insurance Premiums Payable', type: 'liabilities', category: 'account' },\n//         { id: '34', code: '2150', name: 'Regulatory Fees Payable', type: 'liabilities', category: 'account' },\n\n//         // Equity\n//         { id: 'ACC_FC5DC8', code: '3110', name: 'Capital Stock', type: 'equity', category: 'account' },\n//         { id: '10', code: '3200', name: 'Retained Earnings', type: 'equity', category: 'account' },\n\n//         // Revenue\n//         { id: '35', code: '4110', name: 'Food & Beverages Sales', type: 'revenue', category: 'account' },\n//         { id: '40', code: '4110', name: 'Mobile Service Revenue', type: 'revenue', category: 'account' },\n//         { id: '45', code: '4110', name: 'Consultation Revenue', type: 'revenue', category: 'account' },\n//         { id: '36', code: '4120', name: 'Personal Care Sales', type: 'revenue', category: 'account' },\n//         { id: '41', code: '4120', name: 'Data Service Revenue', type: 'revenue', category: 'account' },\n//         { id: '46', code: '4120', name: 'Diagnostic Revenue', type: 'revenue', category: 'account' },\n//         { id: '37', code: '4130', name: 'Household Products Sales', type: 'revenue', category: 'account' },\n//         { id: '42', code: '4130', name: 'Equipment Sales', type: 'revenue', category: 'account' },\n//         { id: '47', code: '4130', name: 'Pharmaceutical Sales', type: 'revenue', category: 'account' },\n//         { id: '38', code: '4140', name: 'Snacks & Confectionery Sales', type: 'revenue', category: 'account' },\n//         { id: '43', code: '4140', name: 'Roaming Revenue', type: 'revenue', category: 'account' },\n//         { id: '48', code: '4140', name: 'Treatment Revenue', type: 'revenue', category: 'account' },\n//         { id: '44', code: '4150', name: 'Enterprise Services', type: 'revenue', category: 'account' },\n//         { id: '49', code: '4150', name: 'Insurance Revenue', type: 'revenue', category: 'account' },\n//         { id: '39', code: '4180', name: 'Wholesale Revenue', type: 'revenue', category: 'account' },\n\n//         // Expenses\n//         { id: '50', code: '5100', name: 'Cost of Goods Sold', type: 'expenses', category: 'account' },\n//         { id: '51', code: '5200', name: 'Operating Expenses', type: 'expenses', category: 'account' },\n//         { id: '56', code: '5200', name: 'Cost of Services', type: 'expenses', category: 'account' },\n//         { id: '52', code: '5240', name: 'Freight & Transportation', type: 'expenses', category: 'account' },\n//         { id: '57', code: '5240', name: 'Network Maintenance', type: 'expenses', category: 'account' },\n//         { id: '60', code: '5240', name: 'Medical Staff Salaries', type: 'expenses', category: 'account' },\n//         { id: '53', code: '5250', name: 'Marketing & Advertising', type: 'expenses', category: 'account' },\n//         { id: '58', code: '5250', name: 'Licensing Fees', type: 'expenses', category: 'account' },\n//         { id: '61', code: '5250', name: 'Equipment Maintenance', type: 'expenses', category: 'account' },\n//         { id: '54', code: '5260', name: 'Trade Promotions', type: 'expenses', category: 'account' },\n//         { id: '59', code: '5260', name: 'Customer Support', type: 'expenses', category: 'account' },\n//         { id: '62', code: '5260', name: 'Medical Supplies', type: 'expenses', category: 'account' },\n//         { id: '55', code: '5270', name: 'Shrinkage & Wastage', type: 'expenses', category: 'account' },\n//         { id: '63', code: '5270', name: 'License & Compliance', type: 'expenses', category: 'account' }\n//       ];\n\n//       setAccounts(fallbackAccounts);\n//       return fallbackAccounts;\n//     }\n//   }, []);\n\n//   // Convert Sales Order to Journal Entry\n//   const convertSalesOrderToJournalEntry = useCallback((order, accountsList) => {\n//     const entries = [];\n\n//     const subTotal = parseFloat(order.subTotal) || 0;\n//     const taxAmount = parseFloat(order.taxAmount) || 0;\n//     const total = parseFloat(order.total) || 0;\n\n//     if (!order.paid || !order.fulfilled || order.status !== 'Closed') {\n//       return null;\n//     }\n\n//     // Enhanced function to find specific accounts from your chart of accounts\n//     const findSpecificAccount = (accountId) => {\n//       const account = accountsList.find(acc => acc.id === accountId);\n//       return account || null;\n//     };\n\n//     const findAccountByType = (type, preferredCode = null) => {\n//       // First try to find the preferred specific account\n//       if (preferredCode) {\n//         const specificAccount = findSpecificAccount(preferredCode);\n//         if (specificAccount) return specificAccount;\n//       }\n\n//       // Then try to find by type\n//       const matchingAccount = accountsList.find(acc => \n//         acc.type && acc.type.toLowerCase() === type.toLowerCase()\n//       );\n\n//       if (matchingAccount) return matchingAccount;\n\n//       // Fallback with proper account codes from your chart\n//       const fallbackAccounts = {\n//         'assets': { id: '1112', code: '1112', name: 'Bank - Main Account', type: 'assets' },\n//         'revenue': { id: '4110', code: '4110', name: 'Mobile Service Revenue', type: 'revenue' },\n//         'liabilities': { id: '2130', code: '2130', name: 'Sales Tax Payable', type: 'liabilities' },\n//         'expenses': { id: '5100', code: '5100', name: 'Cost of Goods Sold', type: 'expenses' }\n//       };\n\n//       return fallbackAccounts[type.toLowerCase()] || { \n//         id: 'UNKNOWN', \n//         name: `Unknown ${type} Account`, \n//         code: 'N/A' \n//       };\n//     };\n\n//     const cashAccount = findAccountByType('assets');\n//     entries.push({\n//       accountId: cashAccount.id,\n//       accountName: cashAccount.name,\n//       accountCode: cashAccount.code,\n//       debit: total,\n//       credit: 0,\n//       description: `Cash received from Order #${order.orderId} - ${order.lineItems.map(item => item.productName).join(', ')}`\n//     });\n\n//     if (subTotal > 0) {\n//       const revenueAccount = findAccountByType('revenue');\n//       entries.push({\n//         accountId: revenueAccount.id,\n//         accountName: revenueAccount.name,\n//         accountCode: revenueAccount.code,\n//         debit: 0,\n//         credit: subTotal,\n//         description: `Revenue from Order #${order.orderId}`\n//       });\n//     }\n\n//     if (taxAmount > 0) {\n//       const taxAccount = findAccountByType('liabilities');\n//       entries.push({\n//         accountId: taxAccount.id,\n//         accountName: taxAccount.name,\n//         accountCode: taxAccount.code,\n//         debit: 0,\n//         credit: taxAmount,\n//         description: `${order.taxRate}% tax collected on Order #${order.orderId}`\n//       });\n//     }\n\n//     let totalCOGS = 0;\n//     order.lineItems.forEach(item => {\n//       if (item.fulfilled && item.status === 'Fulfilled') {\n//         const costPrice = parseFloat(item.costPrice) || 0;\n//         const quantity = parseFloat(item.quantity) || 0;\n//         const itemCOGS = costPrice * quantity;\n//         totalCOGS += itemCOGS;\n//       }\n//     });\n\n//     if (totalCOGS > 0) {\n//       const cogsAccount = findAccountByType('expenses');\n//       entries.push({\n//         accountId: cogsAccount.id,\n//         accountName: cogsAccount.name,\n//         accountCode: cogsAccount.code,\n//         debit: totalCOGS,\n//         credit: 0,\n//         description: `COGS for Order #${order.orderId}`\n//       });\n\n//       const inventoryAccount = findAccountByType('assets');\n//       entries.push({\n//         accountId: inventoryAccount.id,\n//         accountName: inventoryAccount.name,\n//         accountCode: inventoryAccount.code,\n//         debit: 0,\n//         credit: totalCOGS,\n//         description: `Inventory reduction - Order #${order.orderId}`\n//       });\n//     }\n\n//     const totalDebit = entries.reduce((sum, entry) => sum + parseFloat(entry.debit || 0), 0);\n//     const totalCredit = entries.reduce((sum, entry) => sum + parseFloat(entry.credit || 0), 0);\n\n//     return {\n//       id: `JE-ORDER-${order.orderId}`,\n//       date: formatDateFromCreatedAt(order.createdAt),\n//       description: `Sales Order #${order.orderId} - ${order.lineItems.map(item => `${item.productName} (${item.quantity})`).join(', ')}`,\n//       reference: `ORDER-${order.orderId}`,\n//       transactionType: 'automatic',\n//       source: 'POS Sales',\n//       status: 'posted',\n//       entries: entries,\n//       totalDebit: Math.round(totalDebit * 100) / 100,\n//       totalCredit: Math.round(totalCredit * 100) / 100,\n//       createdAt: order.createdAt,\n//       originalOrder: order\n//     };\n//   }, []);\n\n//   // Load Journal Entries from API and Local Storage\n//   const loadJournalEntriesFromAPI = useCallback(async () => {\n//     setLoading(prev => ({ ...prev, entries: true }));\n//     setErrors(prev => ({ ...prev, entries: null }));\n\n//     try {\n//       const salesOrders = await fetchOrderData();\n\n//       if (!salesOrders) {\n//         throw new Error('Failed to fetch sales orders');\n//       }\n\n//       const journalEntriesFromSales = salesOrders\n//         .filter(order => order.paid && order.fulfilled && order.status === 'Closed')\n//         .map(order => convertSalesOrderToJournalEntry(order, accounts))\n//         .filter(entry => entry !== null);\n\n//       let manualEntries = [];\n//       try {\n//         const storedEntries = localStorage.getItem('manualJournalEntries');\n//         manualEntries = storedEntries ? JSON.parse(storedEntries) : [];\n//       } catch (error) {\n//         console.warn('Error loading manual entries from localStorage:', error);\n//         manualEntries = [];\n//       }\n\n//       const allEntries = [...journalEntriesFromSales, ...manualEntries];\n\n//       setJournalEntries(allEntries);\n//       setFilteredEntries(allEntries);\n//       setLoading(prev => ({ ...prev, entries: false }));\n//     } catch (error) {\n//       console.error('Error loading journal entries:', error);\n//       setErrors(prev => ({ ...prev, entries: error.message }));\n//       setLoading(prev => ({ ...prev, entries: false }));\n//     }\n//   }, [accounts, convertSalesOrderToJournalEntry]);\n\n//   // Filter entries\n//   const filterEntries = useCallback(() => {\n//     let filtered = [...journalEntries];\n\n//     if (filters.dateFrom) {\n//       filtered = filtered.filter(entry => entry.date >= filters.dateFrom);\n//     }\n\n//     if (filters.dateTo) {\n//       filtered = filtered.filter(entry => entry.date <= filters.dateTo);\n//     }\n\n//     if (filters.accountId) {\n//       filtered = filtered.filter(entry => {\n//         return entry.entries.some(e => e.accountId === filters.accountId);\n//       });\n//     }\n\n//     if (filters.transactionType !== 'all') {\n//       filtered = filtered.filter(entry => entry.transactionType === filters.transactionType);\n//     }\n\n//     if (filters.searchTerm) {\n//       const term = filters.searchTerm.toLowerCase();\n//       filtered = filtered.filter(entry => \n//         entry.description.toLowerCase().includes(term) ||\n//         entry.reference.toLowerCase().includes(term) ||\n//         entry.entries.some(e => e.description.toLowerCase().includes(term))\n//       );\n//     }\n\n//     setFilteredEntries(filtered);\n//   }, [journalEntries, filters]);\n\n//   // Generate trial balance\n//   const generateTrialBalance = useCallback(() => {\n//     const balances = {};\n\n//     const requiredAccountIds = new Set();\n\n//     journalEntries.forEach(entry => {\n//       if (entry.status === 'posted') {\n//         entry.entries.forEach(entryLine => {\n//           if (entryLine.accountId) {\n//             requiredAccountIds.add(entryLine.accountId);\n//           }\n//         });\n//       }\n//     });\n\n//     const accountTypesMap = {};\n//     accounts.forEach(account => {\n//       accountTypesMap[account.id] = account.type;\n//       accountTypesMap[account.code] = account.type;\n//     });\n\n//     accounts.forEach(account => {\n//       if (account.category !== 'header') {\n//         balances[account.id] = {\n//           accountId: account.id,\n//           accountCode: account.code,\n//           accountName: account.name,\n//           accountType: account.type || 'unknown',\n//           debit: 0,\n//           credit: 0,\n//           balance: 0\n//         };\n//       }\n//     });\n\n//     requiredAccountIds.forEach(accountId => {\n//       if (!balances[accountId]) {\n//         let accountName = '';\n//         let accountType = '';\n\n//         journalEntries.forEach(entry => {\n//           entry.entries.forEach(entryLine => {\n//             if (entryLine.accountId === accountId) {\n//               if (entryLine.accountName) accountName = entryLine.accountName;\n//             }\n//           });\n//         });\n\n//         const prefix = accountId.toString().substring(0, 1);\n//         if (prefix === '1') accountType = 'assets';\n//         else if (prefix === '2') accountType = 'liabilities';\n//         else if (prefix === '3') accountType = 'equity';\n//         else if (prefix === '4') accountType = 'revenue';\n//         else if (prefix === '5') accountType = 'expenses';\n//         else accountType = accountTypesMap[accountId] || 'unknown';\n\n//         balances[accountId] = {\n//           accountId: accountId,\n//           accountCode: accountId,\n//           accountName: accountName || `Account ${accountId}`,\n//           accountType: accountType,\n//           debit: 0,\n//           credit: 0,\n//           balance: 0\n//         };\n//       }\n//     });\n\n//     journalEntries.forEach(entry => {\n//       if (entry.status === 'posted') {\n//         entry.entries.forEach(entryLine => {\n//           const accountId = entryLine.accountId;\n//           if (balances[accountId]) {\n//             balances[accountId].debit += parseFloat(entryLine.debit || 0);\n//             balances[accountId].credit += parseFloat(entryLine.credit || 0);\n\n//             if (entryLine.accountName && !balances[accountId].accountName) {\n//               balances[accountId].accountName = entryLine.accountName;\n//             }\n//           }\n//         });\n//       }\n//     });\n\n//     Object.values(balances).forEach(account => {\n//       if (account.accountType === 'assets' || account.accountType === 'expenses') {\n//         account.balance = account.debit - account.credit;\n//       } else {\n//         account.balance = account.credit - account.debit;\n//       }\n//     });\n\n//     const trialBalanceData = Object.values(balances)\n//       .filter(account => account.debit > 0 || account.credit > 0)\n//       .sort((a, b) => a.accountCode.localeCompare(b.accountCode));\n\n//     setTrialBalance(trialBalanceData);\n//     setShowTrialBalance(true);\n//   }, [accounts, journalEntries]);\n\n//   // Helper functions for entry management\n//   const addEntryLine = () => {\n//     setNewEntry({\n//       ...newEntry,\n//       entries: [...newEntry.entries, { accountId: '', debit: 0, credit: 0, description: '' }]\n//     });\n//   };\n\n//   const removeEntryLine = (index) => {\n//     if (newEntry.entries.length > 2) {\n//       const updatedEntries = newEntry.entries.filter((_, i) => i !== index);\n//       setNewEntry({ ...newEntry, entries: updatedEntries });\n//     }\n//   };\n\n//   const updateEntryLine = (index, field, value) => {\n//     const updatedEntries = [...newEntry.entries];\n//     updatedEntries[index] = { ...updatedEntries[index], [field]: value };\n//     setNewEntry({ ...newEntry, entries: updatedEntries });\n//   };\n\n//   const calculateTotals = (entries) => {\n//     const totalDebit = entries.reduce((sum, entry) => sum + (parseFloat(entry.debit) || 0), 0);\n//     const totalCredit = entries.reduce((sum, entry) => sum + (parseFloat(entry.credit) || 0), 0);\n//     return { totalDebit, totalCredit };\n//   };\n\n//   const isBalanced = (entries) => {\n//     const { totalDebit, totalCredit } = calculateTotals(entries);\n//     return Math.abs(totalDebit - totalCredit) < 0.01;\n//   };\n\n//   const saveJournalEntry = () => {\n//     if (!newEntry.description || !newEntry.entries.every(e => e.accountId)) {\n//       alert('Please fill in all required fields');\n//       return;\n//     }\n\n//     if (!isBalanced(newEntry.entries)) {\n//       alert('Journal entry must be balanced - total debits must equal total credits');\n//       return;\n//     }\n\n//     const { totalDebit, totalCredit } = calculateTotals(newEntry.entries);\n\n//     const entriesWithNames = newEntry.entries.map(entry => ({\n//       ...entry,\n//       accountName: accounts.find(acc => acc.id === entry.accountId)?.name || '',\n//       debit: parseFloat(entry.debit) || 0,\n//       credit: parseFloat(entry.credit) || 0\n//     }));\n\n//     const journalEntry = {\n//       id: `JE-MANUAL-${Date.now()}`,\n//       date: newEntry.date,\n//       description: newEntry.description,\n//       reference: newEntry.reference || `MAN${Date.now()}`,\n//       transactionType: 'manual',\n//       source: 'Manual',\n//       status: 'posted',\n//       entries: entriesWithNames,\n//       totalDebit,\n//       totalCredit,\n//       createdAt: new Date().toISOString()\n//     };\n\n//     try {\n//       const existingManualEntries = JSON.parse(localStorage.getItem('manualJournalEntries') || '[]');\n//       const updatedManualEntries = [...existingManualEntries, journalEntry];\n//       localStorage.setItem('manualJournalEntries', JSON.stringify(updatedManualEntries));\n//     } catch (error) {\n//       console.warn('Could not save to localStorage:', error);\n//     }\n\n//     setJournalEntries([...journalEntries, journalEntry]);\n\n//     setNewEntry({\n//       date: new Date().toISOString().split('T')[0],\n//       description: '',\n//       reference: '',\n//       entries: [\n//         { accountId: '', debit: 0, credit: 0, description: '' },\n//         { accountId: '', debit: 0, credit: 0, description: '' }\n//       ]\n//     });\n//     setIsAddingEntry(false);\n//   };\n\n//   const getAccountName = useCallback((accountId) => {\n//     const account = accounts.find(acc => acc.id === accountId || acc.code === accountId);\n\n//     if (account) {\n//       return `${account.code} - ${account.name}`;\n//     }\n\n//     let accountName = '';\n\n//     journalEntries.forEach(entry => {\n//       entry.entries.forEach(entryLine => {\n//         if (entryLine.accountId === accountId && entryLine.accountName) {\n//           accountName = entryLine.accountName;\n//         }\n//       });\n//     });\n\n//     if (accountName) {\n//       return `${accountId} - ${accountName}`;\n//     }\n\n//     const prefix = accountId.toString().substring(0, 1);\n//     let accountType = '';\n\n//     if (prefix === '1') accountType = 'Assets';\n//     else if (prefix === '2') accountType = 'Liabilities';\n//     else if (prefix === '3') accountType = 'Equity';\n//     else if (prefix === '4') accountType = 'Revenue';\n//     else if (prefix === '5') accountType = 'Expenses';\n\n//     return accountType ? `${accountId} - ${accountType} Account` : `${accountId} - Unknown Account`;\n//   }, [accounts, journalEntries]);\n\n//   // useEffect hooks\n//   useEffect(() => {\n//     loadChartsOfAccounts();\n//   }, [loadChartsOfAccounts]);\n\n//   useEffect(() => {\n//     if (accounts.length > 0) {\n//       loadJournalEntriesFromAPI();\n//     }\n//   }, [accounts, loadJournalEntriesFromAPI]);\n\n//   useEffect(() => {\n//     if (journalEntries.length > 0) {\n//       filterEntries();\n//     }\n//   }, [journalEntries, filters, filterEntries]);\n\n//   const { totalDebit, totalCredit } = calculateTotals(newEntry.entries);\n//   const entryIsBalanced = isBalanced(newEntry.entries);\n\n//   return (\n//     <div className=\"max-w-7xl mx-auto p-6 bg-white\">\n//       {/* Header */}\n//       <div className=\"mb-8\">\n//         <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\n//           <Book className=\"mr-3 text-emerald-600\" />\n//           General Ledger\n//         </h1>\n//         <p className=\"text-gray-600\">Real-time transaction recording and journal entry management</p>\n\n//         {loading.accounts && (\n//           <div className=\"mt-2 p-2 bg-blue-50 text-blue-700 rounded-md text-sm flex items-center\">\n//             <RefreshCw className=\"animate-spin mr-2\" size={16} />\n//             Loading chart of accounts...\n//           </div>\n//         )}\n\n//         {errors.accounts && (\n//           <div className=\"mt-2 p-2 bg-red-50 text-red-700 rounded-md text-sm flex items-center\">\n//             <AlertCircle className=\"mr-2\" size={16} />\n//             Error loading accounts: {errors.accounts}\n//           </div>\n//         )}\n\n//         {loading.entries && (\n//           <div className=\"mt-2 p-2 bg-blue-50 text-blue-700 rounded-md text-sm flex items-center\">\n//             <RefreshCw className=\"animate-spin mr-2\" size={16} />\n//             Loading journal entries...\n//           </div>\n//         )}\n\n//         {errors.entries && (\n//           <div className=\"mt-2 p-2 bg-red-50 text-red-700 rounded-md text-sm flex items-center\">\n//             <AlertCircle className=\"mr-2\" size={16} />\n//             Error loading entries: {errors.entries}\n//           </div>\n//         )}\n//       </div>\n\n//       {/* Quick Stats */}\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n//         <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-blue-600 text-sm font-medium\">Total Entries</p>\n//               <p className=\"text-2xl font-bold text-blue-900\">{journalEntries.length}</p>\n//             </div>\n//             <FileText className=\"text-blue-600\" size={24} />\n//           </div>\n//         </div>\n\n//         <div className=\"bg-green-50 p-4 rounded-lg border border-green-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-green-600 text-sm font-medium\">POS Entries</p>\n//               <p className=\"text-2xl font-bold text-green-900\">\n//                 {journalEntries.filter(e => e.source === 'POS Sales').length}\n//               </p>\n//             </div>\n//             <TrendingUp className=\"text-green-600\" size={24} />\n//           </div>\n//         </div>\n\n//         <div className=\"bg-orange-50 p-4 rounded-lg border border-orange-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-orange-600 text-sm font-medium\">Manual Entries</p>\n//               <p className=\"text-2xl font-bold text-orange-900\">\n//                 {journalEntries.filter(e => e.transactionType === 'manual').length}\n//               </p>\n//             </div>\n//             <Edit className=\"text-orange-600\" size={24} />\n//           </div>\n//         </div>\n\n//         <div className=\"bg-purple-50 p-4 rounded-lg border border-purple-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-purple-600 text-sm font-medium\">Total Value</p>\n//               <p className=\"text-2xl font-bold text-purple-900\">\n//                 PKR {journalEntries.reduce((sum, entry) => sum + entry.totalDebit, 0).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n//               </p>\n//             </div>\n//             <DollarSign className=\"text-purple-600\" size={24} />\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Controls */}\n//       <div className=\"flex flex-wrap items-center justify-between gap-4 mb-6\">\n//         <div className=\"flex flex-wrap items-center gap-4\">\n//           {/* Date Filters */}\n//           <div className=\"flex items-center space-x-2\">\n//             <Calendar size={16} className=\"text-gray-400\" />\n//             <input\n//               type=\"date\"\n//               value={filters.dateFrom}\n//               onChange={(e) => setFilters({ ...filters, dateFrom: e.target.value })}\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               placeholder=\"From\"\n//             />\n//             <span className=\"text-gray-500\">to</span>\n//             <input\n//               type=\"date\"\n//               value={filters.dateTo}\n//               onChange={(e) => setFilters({ ...filters, dateTo: e.target.value })}\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               placeholder=\"To\"\n//             />\n//           </div>\n\n//           {/* Account Filter */}\n//           <div className=\"relative\">\n//             <Filter className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\n//             <select\n//               value={filters.accountId}\n//               onChange={(e) => setFilters({ ...filters, accountId: e.target.value })}\n//               className=\"pl-10 pr-8 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//             >\n//               <option value=\"\">All Accounts</option>\n\n//               {/* Group accounts by type for better organization */}\n//               {accounts.length > 0 && (\n//                 <>\n//                   {/* Assets */}\n//                   <optgroup label=\"Assets\">\n//                     {accounts\n//                       .filter(acc => acc.type === 'assets' && acc.category === 'account')\n//                       .map(account => (\n//                         <option key={account.id} value={account.id}>\n//                           {account.code} - {account.name}\n//                         </option>\n//                       ))}\n//                   </optgroup>\n\n//                   {/* Liabilities */}\n//                   <optgroup label=\"Liabilities\">\n//                     {accounts\n//                       .filter(acc => acc.type === 'liabilities' && acc.category === 'account')\n//                       .map(account => (\n//                         <option key={account.id} value={account.id}>\n//                           {account.code} - {account.name}\n//                         </option>\n//                       ))}\n//                   </optgroup>\n\n//                   {/* Equity */}\n//                   <optgroup label=\"Equity\">\n//                     {accounts\n//                       .filter(acc => acc.type === 'equity' && acc.category === 'account')\n//                       .map(account => (\n//                         <option key={account.id} value={account.id}>\n//                           {account.code} - {account.name}\n//                         </option>\n//                       ))}\n//                   </optgroup>\n\n//                   {/* Revenue */}\n//                   <optgroup label=\"Revenue\">\n//                     {accounts\n//                       .filter(acc => acc.type === 'revenue' && acc.category === 'account')\n//                       .map(account => (\n//                         <option key={account.id} value={account.id}>\n//                           {account.code} - {account.name}\n//                         </option>\n//                       ))}\n//                   </optgroup>\n\n//                   {/* Expenses */}\n//                   <optgroup label=\"Expenses\">\n//                     {accounts\n//                       .filter(acc => acc.type === 'expenses' && acc.category === 'account')\n//                       .map(account => (\n//                         <option key={account.id} value={account.id}>\n//                           {account.code} - {account.name}\n//                         </option>\n//                       ))}\n//                   </optgroup>\n//                 </>\n//               )}\n\n//               {accounts.length === 0 && (\n//                 <option disabled>Loading accounts...</option>\n//               )}\n//             </select>\n//           </div>\n\n//           {/* Transaction Type Filter */}\n//           <select\n//             value={filters.transactionType}\n//             onChange={(e) => setFilters({ ...filters, transactionType: e.target.value })}\n//             className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//           >\n//             <option value=\"all\">All Types</option>\n//             <option value=\"automatic\">POS Sales</option>\n//             <option value=\"manual\">Manual</option>\n//           </select>\n\n//           {/* Search */}\n//           <div className=\"relative\">\n//             <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search entries...\"\n//               value={filters.searchTerm}\n//               onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\n//               className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//             />\n//           </div>\n//         </div>\n\n//         <div className=\"flex space-x-3\">\n//           <button\n//             onClick={loadJournalEntriesFromAPI}\n//             disabled={loading.entries}\n//             className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2 disabled:bg-gray-400\"\n//           >\n//             {loading.entries ? <RefreshCw className=\"animate-spin\" size={16} /> : <RefreshCw size={16} />}\n//             <span>Refresh from API</span>\n//           </button>\n//           <button\n//             onClick={loadChartsOfAccounts}\n//             disabled={loading.accounts}\n//             className=\"px-4 py-2 bg-teal-600 text-white rounded-lg hover:bg-teal-700 flex items-center space-x-2 disabled:bg-gray-400\"\n//           >\n//             {loading.accounts ? <RefreshCw className=\"animate-spin\" size={16} /> : <RefreshCw size={16} />}\n//             <span>Refresh Accounts</span>\n//           </button>\n//           <button\n//             onClick={() => {\n//               setFilters({\n//                 dateFrom: '',\n//                 dateTo: '',\n//                 accountId: '',\n//                 transactionType: 'all',\n//                 searchTerm: ''\n//               });\n//               setFilteredEntries([...journalEntries]);\n//             }}\n//             className=\"px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 flex items-center space-x-2\"\n//           >\n//             <X size={16} />\n//             <span>Clear Filters</span>\n//           </button>\n//           <button\n//             onClick={() => setIsAddingEntry(true)}\n//             className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\n//           >\n//             <Plus size={16} />\n//             <span>Add Entry</span>\n//           </button>\n//           <button\n//             onClick={generateTrialBalance}\n//             className=\"px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 flex items-center space-x-2\"\n//           >\n//             <FileText size={16} />\n//             <span>Trial Balance</span>\n//           </button>\n//         </div>\n//       </div>\n\n//       {/* Journal Entry Form */}\n//       {isAddingEntry && (\n//         <div className=\"mb-8 p-6 bg-gray-50 rounded-lg border\">\n//           <h3 className=\"text-lg font-semibold mb-4\">Add Manual Journal Entry</h3>\n\n//           <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n//             <div>\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Date *</label>\n//               <input\n//                 type=\"date\"\n//                 value={newEntry.date}\n//                 onChange={(e) => setNewEntry({ ...newEntry, date: e.target.value })}\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               />\n//             </div>\n//             <div>\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Description *</label>\n//               <input\n//                 type=\"text\"\n//                 value={newEntry.description}\n//                 onChange={(e) => setNewEntry({ ...newEntry, description: e.target.value })}\n//                 placeholder=\"Enter description\"\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               />\n//             </div>\n//             <div>\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Reference</label>\n//               <input\n//                 type=\"text\"\n//                 value={newEntry.reference}\n//                 onChange={(e) => setNewEntry({ ...newEntry, reference: e.target.value })}\n//                 placeholder=\"Reference number\"\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               />\n//             </div>\n//           </div>\n\n//           {/* Entry Lines */}\n//           <div className=\"mb-4\">\n//             <label className=\"block text-sm font-medium text-gray-700 mb-2\">Journal Entry Lines</label>\n//             <div className=\"space-y-3\">\n//               {newEntry.entries.map((entry, index) => (\n//                 <div key={index} className=\"grid grid-cols-12 gap-2 items-center bg-white p-3 rounded border\">\n//                   <div className=\"col-span-4\">\n//                     <select\n//                       value={entry.accountId}\n//                       onChange={(e) => updateEntryLine(index, 'accountId', e.target.value)}\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                     >\n//                       <option value=\"\">Select Account</option>\n\n//                       {accounts.length > 0 && (\n//                         <>\n//                           {/* Assets */}\n//                           <optgroup label=\"Assets\">\n//                             {accounts\n//                               .filter(acc => acc.type === 'assets' && acc.category === 'account')\n//                               .map(account => (\n//                                 <option key={account.id} value={account.id}>\n//                                   {account.code} - {account.name}\n//                                 </option>\n//                               ))}\n//                           </optgroup>\n\n//                           {/* Liabilities */}\n//                           <optgroup label=\"Liabilities\">\n//                             {accounts\n//                               .filter(acc => acc.type === 'liabilities' && acc.category === 'account')\n//                               .map(account => (\n//                                 <option key={account.id} value={account.id}>\n//                                   {account.code} - {account.name}\n//                                 </option>\n//                               ))}\n//                           </optgroup>\n\n//                           {/* Equity */}\n//                           <optgroup label=\"Equity\">\n//                             {accounts\n//                               .filter(acc => acc.type === 'equity' && acc.category === 'account')\n//                               .map(account => (\n//                                 <option key={account.id} value={account.id}>\n//                                   {account.code} - {account.name}\n//                                 </option>\n//                               ))}\n//                           </optgroup>\n\n//                           {/* Revenue */}\n//                           <optgroup label=\"Revenue\">\n//                             {accounts\n//                               .filter(acc => acc.type === 'revenue' && acc.category === 'account')\n//                               .map(account => (\n//                                 <option key={account.id} value={account.id}>\n//                                   {account.code} - {account.name}\n//                                 </option>\n//                               ))}\n//                           </optgroup>\n\n//                           {/* Expenses */}\n//                           <optgroup label=\"Expenses\">\n//                             {accounts\n//                               .filter(acc => acc.type === 'expenses' && acc.category === 'account')\n//                               .map(account => (\n//                                 <option key={account.id} value={account.id}>\n//                                   {account.code} - {account.name}\n//                                 </option>\n//                               ))}\n//                           </optgroup>\n//                         </>\n//                       )}\n\n//                       {accounts.length === 0 && (\n//                         <option disabled>Loading accounts...</option>\n//                       )}\n//                     </select>\n//                   </div>\n//                   <div className=\"col-span-3\">\n//                     <input\n//                       type=\"text\"\n//                       value={entry.description}\n//                       onChange={(e) => updateEntryLine(index, 'description', e.target.value)}\n//                       placeholder=\"Description\"\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                     />\n//                   </div>\n//                   <div className=\"col-span-2\">\n//                     <input\n//                       type=\"number\"\n//                       step=\"0.01\"\n//                       value={entry.debit}\n//                       onChange={(e) => updateEntryLine(index, 'debit', e.target.value)}\n//                       placeholder=\"Debit\"\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                     />\n//                   </div>\n//                   <div className=\"col-span-2\">\n//                     <input\n//                       type=\"number\"\n//                       step=\"0.01\"\n//                       value={entry.credit}\n//                       onChange={(e) => updateEntryLine(index, 'credit', e.target.value)}\n//                       placeholder=\"Credit\"\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                     />\n//                   </div>\n//                   <div className=\"col-span-1\">\n//                     {newEntry.entries.length > 2 && (\n//                       <button\n//                         onClick={() => removeEntryLine(index)}\n//                         className=\"p-1 text-red-600 hover:bg-red-100 rounded\"\n//                       >\n//                         <Trash2 size={14} />\n//                       </button>\n//                     )}\n//                   </div>\n//                 </div>\n//               ))}\n//             </div>\n\n//             <div className=\"flex justify-between items-center mt-3\">\n//               <button\n//                 onClick={addEntryLine}\n//                 className=\"px-3 py-1 text-sm bg-gray-200 text-gray-700 rounded hover:bg-gray-300 flex items-center space-x-1\"\n//               >\n//                 <Plus size={14} />\n//                 <span>Add Line</span>\n//               </button>\n\n//               <div className=\"flex items-center space-x-4\">\n//                 <div className=\"text-sm\">\n//                   <span className=\"font-medium\">Total Debit: PKR {totalDebit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}</span>\n//                   <span className=\"mx-2\">|</span>\n//                   <span className=\"font-medium\">Total Credit: PKR {totalCredit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}</span>\n//                 </div>\n//                 {entryIsBalanced ? (\n//                   <div className=\"flex items-center text-green-600\">\n//                     <CheckCircle size={16} className=\"mr-1\" />\n//                     <span className=\"text-sm\">Balanced</span>\n//                   </div>\n//                 ) : (\n//                   <div className=\"flex items-center text-red-600\">\n//                     <AlertCircle size={16} className=\"mr-1\" />\n//                     <span className=\"text-sm\">Not Balanced</span>\n//                   </div>\n//                 )}\n//               </div>\n//             </div>\n//           </div>\n\n//           <div className=\"flex space-x-3\">\n//             <button\n//               onClick={saveJournalEntry}\n//               disabled={!entryIsBalanced}\n//               className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 disabled:bg-gray-400 flex items-center space-x-2\"\n//             >\n//               <Save size={16} />\n//               <span>Save Entry</span>\n//             </button>\n//             <button\n//               onClick={() => setIsAddingEntry(false)}\n//               className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\"\n//             >\n//               <X size={16} />\n//               <span>Cancel</span>\n//             </button>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Journal Entries Table */}\n//       <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//         <div className=\"px-6 py-4 border-b border-gray-200\">\n//           <h2 className=\"text-lg font-semibold text-gray-900\">Journal Entries</h2>\n//           <p className=\"text-sm text-gray-600 mt-1\">\n//             Showing {filteredEntries.length} of {journalEntries.length} entries\n//           </p>\n//         </div>\n\n//         <div className=\"overflow-x-auto\">\n//           <table className=\"w-full\">\n//             <thead className=\"bg-gray-50\">\n//               <tr>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Entry ID\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Date\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Description\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Reference\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Source\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Amount\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Status\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Actions\n//                 </th>\n//               </tr>\n//             </thead>\n//             <tbody className=\"bg-white divide-y divide-gray-200\">\n//               {filteredEntries.map((entry) => (\n//                 <tr key={entry.id} className=\"hover:bg-gray-50\">\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n//                     {entry.id}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                     {entry.date}\n//                   </td>\n//                   <td className=\"px-6 py-4 text-sm text-gray-900 max-w-xs truncate\">\n//                     {entry.description}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                     {entry.reference}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                       entry.source === 'POS Sales' ? 'bg-green-100 text-green-800' : \n//                       entry.source === 'Manual' ? 'bg-orange-100 text-orange-800' :\n//                       'bg-blue-100 text-blue-800'\n//                     }`}>\n//                       {entry.source}\n//                     </span>\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                     PKR {entry.totalDebit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                       entry.status === 'posted' ? 'bg-blue-100 text-blue-800' : 'bg-yellow-100 text-yellow-800'\n//                     }`}>\n//                       {entry.status}\n//                     </span>\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n//                     <button\n//                       onClick={() => setSelectedEntry(entry)}\n//                       className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\n//                     >\n//                       <Eye size={16} />\n//                     </button>\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </div>\n//       </div>\n\n//       {/* Entry Details Modal */}\n//       {selectedEntry && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <div className=\"flex items-center justify-between\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\n//                   Journal Entry Details - {selectedEntry.id}\n//                 </h3>\n//                 <button\n//                   onClick={() => setSelectedEntry(null)}\n//                   className=\"text-gray-400 hover:text-gray-600\"\n//                 >\n//                   <X size={20} />\n//                 </button>\n//               </div>\n//             </div>\n\n//             <div className=\"px-6 py-4\">\n//               {/* Entry Header */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\n//                 <div>\n//                   <label className=\"text-sm font-medium text-gray-500\">Date</label>\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.date}</p>\n//                 </div>\n//                 <div>\n//                   <label className=\"text-sm font-medium text-gray-500\">Reference</label>\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.reference}</p>\n//                 </div>\n//                 <div>\n//                   <label className=\"text-sm font-medium text-gray-500\">Description</label>\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.description}</p>\n//                 </div>\n//                 <div>\n//                   <label className=\"text-sm font-medium text-gray-500\">Source</label>\n//                   <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                     selectedEntry.source === 'POS Sales' ? 'bg-green-100 text-green-800' : 'bg-orange-100 text-orange-800'\n//                   }`}>\n//                     {selectedEntry.source}\n//                   </span>\n//                 </div>\n//               </div>\n\n//               {/* Entry Lines */}\n//               <div className=\"mb-6\">\n//                 <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Account Entries</h4>\n//                 <div className=\"overflow-x-auto\">\n//                   <table className=\"w-full border border-gray-200 rounded\">\n//                     <thead className=\"bg-gray-50\">\n//                       <tr>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Account</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Description</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Debit</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Credit</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody className=\"divide-y divide-gray-200\">\n//                       {selectedEntry.entries.map((entryLine, index) => (\n//                         <tr key={index}>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900\">\n//                             {getAccountName(entryLine.accountId)}\n//                           </td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-600\">\n//                             {entryLine.description}\n//                           </td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">\n//                             {entryLine.debit > 0 ? `${entryLine.debit.toFixed(2)}` : '-'}\n//                           </td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">\n//                             {entryLine.credit > 0 ? `${entryLine.credit.toFixed(2)}` : '-'}\n//                           </td>\n//                         </tr>\n//                       ))}\n//                     </tbody>\n//                     <tfoot className=\"bg-gray-50\">\n//                       <tr>\n//                         <td colSpan=\"2\" className=\"px-4 py-2 text-sm font-medium text-gray-900\">\n//                           Totals:\n//                         </td>\n//                         <td className=\"px-4 py-2 text-sm font-bold text-gray-900 text-right\">\n//                           PKR {selectedEntry.totalDebit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n//                         </td>\n//                         <td className=\"px-4 py-2 text-sm font-bold text-gray-900 text-right\">\n//                           PKR {selectedEntry.totalCredit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n//                         </td>\n//                       </tr>\n//                     </tfoot>\n//                   </table>\n//                 </div>\n//               </div>\n\n//               {/* Original Order Info (if available) */}\n//               {selectedEntry.originalOrder && (\n//                 <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\n//                   <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Original Sales Order Details</h4>\n//                   <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n//                     <div>\n//                       <span className=\"font-medium text-gray-500\">Order ID:</span>\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.orderId}</p>\n//                     </div>\n//                     <div>\n//                       <span className=\"font-medium text-gray-500\">Status:</span>\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.status}</p>\n//                     </div>\n//                     <div>\n//                       <span className=\"font-medium text-gray-500\">Payment Status:</span>\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.paid ? 'Paid' : 'Unpaid'}</p>\n//                     </div>\n//                     <div>\n//                       <span className=\"font-medium text-gray-500\">Fulfilled:</span>\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.fulfilled ? 'Yes' : 'No'}</p>\n//                     </div>\n//                   </div>\n\n//                   {/* Line Items */}\n//                   <div className=\"mt-4\">\n//                     <span className=\"font-medium text-gray-500\">Line Items:</span>\n//                     <div className=\"mt-2 space-y-2\">\n//                       {selectedEntry.originalOrder.lineItems.map((item, index) => (\n//                         <div key={index} className=\"text-sm bg-white p-2 rounded border\">\n//                           <span className=\"font-medium\">{item.productName}</span> - \n//                           Qty: {item.quantity}, Price: PKR {parseFloat(item.price).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}, \n//                           Total: PKR {parseFloat(item.total).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n//                           {item.taxAmount > 0 && <span className=\"text-gray-500\"> (Tax: PKR {parseFloat(item.taxAmount).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})})</span>}\n//                         </div>\n//                       ))}\n//                     </div>\n//                   </div>\n//                 </div>\n//               )}\n\n//               {/* Entry Metadata */}\n//               <div className=\"text-xs text-gray-500\">\n//                 <p>Created: {new Date(selectedEntry.createdAt).toLocaleString()}</p>\n//                 <p>Status: {selectedEntry.status}</p>\n//                 <p>Type: {selectedEntry.transactionType}</p>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Trial Balance Modal */}\n//       {showTrialBalance && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-lg max-w-5xl w-full max-h-[90vh] overflow-y-auto\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <div className=\"flex items-center justify-between\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\n//                   Trial Balance - As of {new Date().toLocaleDateString()}\n//                 </h3>\n//                 <div className=\"flex items-center space-x-2\">\n//                   <button\n//                     onClick={() => {\n//                       alert('Export functionality would be implemented here');\n//                     }}\n//                     className=\"px-3 py-1 bg-emerald-600 text-white rounded text-sm hover:bg-emerald-700 flex items-center space-x-1\"\n//                   >\n//                     <Download size={14} />\n//                     <span>Export</span>\n//                   </button>\n//                   <button\n//                     onClick={() => setShowTrialBalance(false)}\n//                     className=\"text-gray-400 hover:text-gray-600\"\n//                   >\n//                     <X size={20} />\n//                   </button>\n//                 </div>\n//               </div>\n//             </div>\n\n//             <div className=\"px-6 py-4\">\n//               <div className=\"overflow-x-auto\">\n//                 <table className=\"w-full\">\n//                   <thead className=\"bg-gray-50\">\n//                     <tr>\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Account Code\n//                       </th>\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Account Name\n//                       </th>\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Type\n//                       </th>\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Debit Total\n//                       </th>\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Credit Total\n//                       </th>\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Balance\n//                       </th>\n//                     </tr>\n//                   </thead>\n//                   <tbody className=\"bg-white divide-y divide-gray-200\">\n//                     {trialBalance.map((item) => (\n//                       <tr key={item.accountId}>\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n//                           {item.accountCode}\n//                         </td>\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                           {item.accountName}\n//                         </td>\n//                         <td className=\"px-4 py-4 whitespace-nowrap\">\n//                           <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                             item.accountType === 'assets' ? 'bg-green-100 text-green-800' :\n//                             item.accountType === 'liabilities' ? 'bg-red-100 text-red-800' :\n//                             item.accountType === 'equity' ? 'bg-blue-100 text-blue-800' :\n//                             item.accountType === 'revenue' ? 'bg-purple-100 text-purple-800' :\n//                             item.accountType === 'expenses' ? 'bg-orange-100 text-orange-800' :\n//                             'bg-gray-100 text-gray-800'\n//                           }`}>\n//                             {typeof item.accountType === 'string' && item.accountType.length > 0 \n//                               ? item.accountType.charAt(0).toUpperCase() + item.accountType.slice(1)\n//                               : 'Unknown'}\n//                           </span>\n//                         </td>\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n//                           PKR {item.debit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n//                         </td>\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n//                           PKR {item.credit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n//                         </td>\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-right\">\n//                           <span className={item.balance >= 0 ? 'text-green-600' : 'text-red-600'}>\n//                             PKR {Math.abs(item.balance).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n//                             {item.balance < 0 && ' (CR)'}\n//                           </span>\n//                         </td>\n//                       </tr>\n//                     ))}\n//                   </tbody>\n//                   <tfoot className=\"bg-gray-50\">\n//                     <tr>\n//                       <td colSpan=\"3\" className=\"px-4 py-3 text-sm font-bold text-gray-900\">\n//                         TOTALS:\n//                       </td>\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\n//                         PKR {trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n//                       </td>\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\n//                         PKR {trialBalance.reduce((sum, acc) => sum + acc.credit, 0).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n//                       </td>\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\n//                         PKR {Math.abs(trialBalance.reduce((sum, acc) => sum + acc.balance, 0)).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n//                       </td>\n//                     </tr>\n//                   </tfoot>\n//                 </table>\n//               </div>\n\n//               {/* Trial Balance Validation */}\n//               <div className=\"mt-4 p-4 bg-green-50 border border-green-200 rounded-lg\">\n//                 <div className=\"flex items-center\">\n//                   <CheckCircle className=\"text-green-600 mr-2\" size={20} />\n//                   <div>\n//                     <h4 className=\"font-medium text-green-800\">Trial Balance is Balanced</h4>\n//                     <p className=\"text-sm text-green-700\">\n//                       Total Debits = Total Credits = PKR {trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n//                     </p>\n//                   </div>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Integration Status */}\n//       <div className=\"mt-8 grid grid-cols-1 md:grid-cols-3 gap-4\">\n//         <div className=\"p-4 bg-green-50 border border-green-200 rounded-lg\">\n//           <div className=\"flex items-center mb-2\">\n//             <CheckCircle className=\"text-green-600 mr-2\" size={16} />\n//             <h4 className=\"font-medium text-green-800\">POS API Integration</h4>\n//           </div>\n//           <p className=\"text-sm text-green-700\">\n//             Sales orders automatically create journal entries from live API data\n//           </p>\n//         </div>\n\n//         <div className=\"p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n//           <div className=\"flex items-center mb-2\">\n//             <RefreshCw className=\"text-blue-600 mr-2\" size={16} />\n//             <h4 className=\"font-medium text-blue-800\">Real-time Sync</h4>\n//           </div>\n//           <p className=\"text-sm text-blue-700\">\n//             Journal entries updated automatically with each sales transaction\n//           </p>\n//         </div>\n\n//         <div className=\"p-4 bg-orange-50 border border-orange-200 rounded-lg\">\n//           <div className=\"flex items-center mb-2\">\n//             <FileText className=\"text-orange-600 mr-2\" size={16} />\n//             <h4 className=\"font-medium text-orange-800\">Manual Entries</h4>\n//           </div>\n//           <p className=\"text-sm text-orange-700\">\n//             Add adjustments and corrections with full double-entry validation\n//           </p>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default GeneralLedger;\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Book, Plus, Filter, Search, Calendar, FileText, Edit, Trash2, Save, X, AlertCircle, CheckCircle, DollarSign, TrendingUp, Eye, Download, RefreshCw } from 'lucide-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GeneralLedger = () => {\n  _s();\n  const [journalEntries, setJournalEntries] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n  const [filteredEntries, setFilteredEntries] = useState([]);\n  const [selectedEntry, setSelectedEntry] = useState(null);\n  const [isAddingEntry, setIsAddingEntry] = useState(false);\n  const [loading, setLoading] = useState({\n    entries: false,\n    accounts: false\n  });\n  const [errors, setErrors] = useState({\n    entries: null,\n    accounts: null\n  });\n  const [filters, setFilters] = useState({\n    dateFrom: '',\n    dateTo: '',\n    accountId: '',\n    transactionType: 'all',\n    searchTerm: ''\n  });\n  const [trialBalance, setTrialBalance] = useState([]);\n  const [showTrialBalance, setShowTrialBalance] = useState(false);\n  const [newEntry, setNewEntry] = useState({\n    date: new Date().toISOString().split('T')[0],\n    description: '',\n    reference: '',\n    entries: [{\n      accountId: '',\n      debit: 0,\n      credit: 0,\n      description: ''\n    }, {\n      accountId: '',\n      debit: 0,\n      credit: 0,\n      description: ''\n    }]\n  });\n\n  // API Configuration\n  const API_BASE_URL = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/orders?start=0&size=200';\n  const API_BASE_URL_CHARTS_OF_ACCOUNTS = 'http://localhost:8080/api/accounts';\n  const API_BASE_URL_PURCHASE_ORDERS = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/PurchaseOrderManagement/purchaseOrdersWithoutDetails';\n\n  // Fetch order data from API\n  const fetchOrderData = async () => {\n    try {\n      const response = await fetch(API_BASE_URL, {\n        method: 'GET',\n        headers: {\n          'Authorization': 'Bearer Hamid',\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`API request failed with status ${response.status}`);\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetching order data:', error);\n      return null;\n    }\n  };\n\n  // Fetch purchase order data from API\n  const fetchPurchaseOrderData = async () => {\n    try {\n      const response = await fetch(API_BASE_URL_PURCHASE_ORDERS, {\n        method: 'GET',\n        headers: {\n          'Authorization': 'Bearer Hamid',\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`Purchase API request failed with status ${response.status}`);\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetching purchase order data:', error);\n      return null;\n    }\n  };\n\n  // Format date from API format\n  const formatDateFromCreatedAt = createdAt => {\n    try {\n      const parts = createdAt.split('.');\n      if (parts.length >= 3) {\n        return `${parts[0]}-${parts[1].padStart(2, '0')}-${parts[2].padStart(2, '0')}`;\n      }\n      return new Date().toISOString().split('T')[0];\n    } catch (error) {\n      return new Date().toISOString().split('T')[0];\n    }\n  };\n\n  // Helper function to flatten hierarchical account structure\n  const flattenAccounts = accounts => {\n    const result = [];\n    const processAccount = account => {\n      result.push(account); // Add current account\n\n      // Recursively process children\n      if (account.children && Array.isArray(account.children)) {\n        account.children.forEach(child => processAccount(child));\n      }\n    };\n    accounts.forEach(account => processAccount(account));\n    return result;\n  };\n\n  // Fetch Charts of Accounts from API (handling hierarchical structure with children)\n  const loadChartsOfAccounts = useCallback(async () => {\n    setLoading(prev => ({\n      ...prev,\n      accounts: true\n    }));\n    setErrors(prev => ({\n      ...prev,\n      accounts: null\n    }));\n    try {\n      const response = await fetch(API_BASE_URL_CHARTS_OF_ACCOUNTS, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to fetch accounts: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Raw accounts data from API:', data);\n\n      // Check if the data is in the expected format\n      if (!Array.isArray(data)) {\n        throw new Error('API response is not an array');\n      }\n\n      // Flatten hierarchical structure to get all accounts\n      const flattenAccounts = accounts => {\n        const result = [];\n        const processAccount = account => {\n          // Add the account itself\n          result.push(account);\n\n          // Recursively process children if they exist\n          if (account.children && Array.isArray(account.children)) {\n            account.children.forEach(child => processAccount(child));\n          }\n        };\n        accounts.forEach(account => processAccount(account));\n        return result;\n      };\n\n      // Flatten all accounts from the hierarchical structure\n      const allAccounts = flattenAccounts(data);\n      console.log('All flattened accounts:', allAccounts.length);\n\n      // Filter to get only usable accounts (category = 'account')\n      const usableAccounts = allAccounts.filter(account => account.category === 'account' && account.id && account.code && account.name && account.type);\n      console.log('All accounts from API:', allAccounts.length);\n      console.log('Usable accounts (category=account):', usableAccounts.length);\n      console.log('Sample usable accounts:', usableAccounts.slice(0, 5));\n\n      // If no usable accounts found, throw error to trigger fallback\n      if (usableAccounts.length === 0) {\n        console.log('No usable accounts found in API response');\n        throw new Error('No usable accounts returned from API - only headers found');\n      }\n\n      // Sort by account code\n      usableAccounts.sort((a, b) => a.code.localeCompare(b.code));\n      setAccounts(usableAccounts);\n      setLoading(prev => ({\n        ...prev,\n        accounts: false\n      }));\n      console.log(`Successfully loaded ${usableAccounts.length} accounts from API`);\n      return usableAccounts;\n    } catch (error) {\n      console.error('Error loading charts of accounts:', error);\n      setErrors(prev => ({\n        ...prev,\n        accounts: error.message\n      }));\n      setLoading(prev => ({\n        ...prev,\n        accounts: false\n      }));\n      console.log('Using fallback chart of accounts');\n      // Use your actual account structure as fallback\n      const fallbackAccounts = [\n      // Current Assets\n      {\n        id: '12',\n        code: '1111',\n        name: 'Petty Cash',\n        type: 'assets',\n        category: 'account'\n      }, {\n        id: '13',\n        code: '1112',\n        name: 'Bank - Main Account',\n        type: 'assets',\n        category: 'account'\n      }, {\n        id: '14',\n        code: '1120',\n        name: 'Accounts Receivable',\n        type: 'assets',\n        category: 'account'\n      }, {\n        id: '15',\n        code: '1125',\n        name: 'Insurance Receivables',\n        type: 'assets',\n        category: 'account'\n      }, {\n        id: '16',\n        code: '1130',\n        name: 'Inventory - FMCG Products',\n        type: 'assets',\n        category: 'account'\n      }, {\n        id: '19',\n        code: '1130',\n        name: 'Inventory - Telecom Equipment',\n        type: 'assets',\n        category: 'account'\n      }, {\n        id: '22',\n        code: '1130',\n        name: 'Medical Supplies Inventory',\n        type: 'assets',\n        category: 'account'\n      }, {\n        id: '17',\n        code: '1140',\n        name: 'Packaging Materials',\n        type: 'assets',\n        category: 'account'\n      }, {\n        id: '20',\n        code: '1140',\n        name: 'Prepaid Service Credits',\n        type: 'assets',\n        category: 'account'\n      }, {\n        id: '23',\n        code: '1140',\n        name: 'Pharmaceutical Inventory',\n        type: 'assets',\n        category: 'account'\n      }, {\n        id: '18',\n        code: '1150',\n        name: 'Promotional Materials',\n        type: 'assets',\n        category: 'account'\n      },\n      // Fixed Assets\n      {\n        id: '24',\n        code: '1210',\n        name: 'Network Equipment',\n        type: 'assets',\n        category: 'account'\n      }, {\n        id: '26',\n        code: '1210',\n        name: 'Medical Equipment',\n        type: 'assets',\n        category: 'account'\n      }, {\n        id: '25',\n        code: '1220',\n        name: 'IT Infrastructure',\n        type: 'assets',\n        category: 'account'\n      }, {\n        id: '27',\n        code: '1220',\n        name: 'Furniture & Fixtures',\n        type: 'assets',\n        category: 'account'\n      },\n      // Liabilities\n      {\n        id: '28',\n        code: '2110',\n        name: 'Accounts Payable',\n        type: 'liabilities',\n        category: 'account'\n      }, {\n        id: '29',\n        code: '2130',\n        name: 'Sales Tax Payable',\n        type: 'liabilities',\n        category: 'account'\n      }, {\n        id: '30',\n        code: '2140',\n        name: 'Trade Promotions Payable',\n        type: 'liabilities',\n        category: 'account'\n      }, {\n        id: '31',\n        code: '2140',\n        name: 'Payroll Payable',\n        type: 'liabilities',\n        category: 'account'\n      }, {\n        id: '33',\n        code: '2140',\n        name: 'Deferred Revenue',\n        type: 'liabilities',\n        category: 'account'\n      }, {\n        id: '32',\n        code: '2150',\n        name: 'Insurance Premiums Payable',\n        type: 'liabilities',\n        category: 'account'\n      }, {\n        id: '34',\n        code: '2150',\n        name: 'Regulatory Fees Payable',\n        type: 'liabilities',\n        category: 'account'\n      },\n      // Equity\n      {\n        id: 'ACC_FC5DC8',\n        code: '3110',\n        name: 'Capital Stock',\n        type: 'equity',\n        category: 'account'\n      }, {\n        id: '10',\n        code: '3200',\n        name: 'Retained Earnings',\n        type: 'equity',\n        category: 'account'\n      },\n      // Revenue\n      {\n        id: '35',\n        code: '4110',\n        name: 'Food & Beverages Sales',\n        type: 'revenue',\n        category: 'account'\n      }, {\n        id: '40',\n        code: '4110',\n        name: 'Mobile Service Revenue',\n        type: 'revenue',\n        category: 'account'\n      }, {\n        id: '45',\n        code: '4110',\n        name: 'Consultation Revenue',\n        type: 'revenue',\n        category: 'account'\n      }, {\n        id: '36',\n        code: '4120',\n        name: 'Personal Care Sales',\n        type: 'revenue',\n        category: 'account'\n      }, {\n        id: '41',\n        code: '4120',\n        name: 'Data Service Revenue',\n        type: 'revenue',\n        category: 'account'\n      }, {\n        id: '46',\n        code: '4120',\n        name: 'Diagnostic Revenue',\n        type: 'revenue',\n        category: 'account'\n      }, {\n        id: '37',\n        code: '4130',\n        name: 'Household Products Sales',\n        type: 'revenue',\n        category: 'account'\n      }, {\n        id: '42',\n        code: '4130',\n        name: 'Equipment Sales',\n        type: 'revenue',\n        category: 'account'\n      }, {\n        id: '47',\n        code: '4130',\n        name: 'Pharmaceutical Sales',\n        type: 'revenue',\n        category: 'account'\n      }, {\n        id: '38',\n        code: '4140',\n        name: 'Snacks & Confectionery Sales',\n        type: 'revenue',\n        category: 'account'\n      }, {\n        id: '43',\n        code: '4140',\n        name: 'Roaming Revenue',\n        type: 'revenue',\n        category: 'account'\n      }, {\n        id: '48',\n        code: '4140',\n        name: 'Treatment Revenue',\n        type: 'revenue',\n        category: 'account'\n      }, {\n        id: '44',\n        code: '4150',\n        name: 'Enterprise Services',\n        type: 'revenue',\n        category: 'account'\n      }, {\n        id: '49',\n        code: '4150',\n        name: 'Insurance Revenue',\n        type: 'revenue',\n        category: 'account'\n      }, {\n        id: '39',\n        code: '4180',\n        name: 'Wholesale Revenue',\n        type: 'revenue',\n        category: 'account'\n      },\n      // Expenses\n      {\n        id: '50',\n        code: '5100',\n        name: 'Cost of Goods Sold',\n        type: 'expenses',\n        category: 'account'\n      }, {\n        id: '51',\n        code: '5200',\n        name: 'Operating Expenses',\n        type: 'expenses',\n        category: 'account'\n      }, {\n        id: '56',\n        code: '5200',\n        name: 'Cost of Services',\n        type: 'expenses',\n        category: 'account'\n      }, {\n        id: '52',\n        code: '5240',\n        name: 'Freight & Transportation',\n        type: 'expenses',\n        category: 'account'\n      }, {\n        id: '57',\n        code: '5240',\n        name: 'Network Maintenance',\n        type: 'expenses',\n        category: 'account'\n      }, {\n        id: '60',\n        code: '5240',\n        name: 'Medical Staff Salaries',\n        type: 'expenses',\n        category: 'account'\n      }, {\n        id: '53',\n        code: '5250',\n        name: 'Marketing & Advertising',\n        type: 'expenses',\n        category: 'account'\n      }, {\n        id: '58',\n        code: '5250',\n        name: 'Licensing Fees',\n        type: 'expenses',\n        category: 'account'\n      }, {\n        id: '61',\n        code: '5250',\n        name: 'Equipment Maintenance',\n        type: 'expenses',\n        category: 'account'\n      }, {\n        id: '54',\n        code: '5260',\n        name: 'Trade Promotions',\n        type: 'expenses',\n        category: 'account'\n      }, {\n        id: '59',\n        code: '5260',\n        name: 'Customer Support',\n        type: 'expenses',\n        category: 'account'\n      }, {\n        id: '62',\n        code: '5260',\n        name: 'Medical Supplies',\n        type: 'expenses',\n        category: 'account'\n      }, {\n        id: '55',\n        code: '5270',\n        name: 'Shrinkage & Wastage',\n        type: 'expenses',\n        category: 'account'\n      }, {\n        id: '63',\n        code: '5270',\n        name: 'License & Compliance',\n        type: 'expenses',\n        category: 'account'\n      }];\n      setAccounts(fallbackAccounts);\n      return fallbackAccounts;\n    }\n  }, []);\n\n  // Convert Purchase Order to Journal Entry\n  const convertPurchaseOrderToJournalEntry = useCallback((purchaseOrder, accountsList) => {\n    const entries = [];\n\n    // Only process items with status \"applied\"\n    const appliedItems = purchaseOrder.purchaseOrderItems.filter(item => item.status === 'applied' && item.quantity > 0);\n    if (appliedItems.length === 0) {\n      return null; // Skip if no applied items\n    }\n\n    // Calculate totals from applied items\n    const totalAmount = appliedItems.reduce((sum, item) => sum + parseFloat(item.pricePerUnit) * parseFloat(item.quantity), 0);\n\n    // Helper function to find appropriate account\n    const findSpecificAccount = accountId => {\n      const account = accountsList.find(acc => acc.id === accountId);\n      return account || null;\n    };\n    const findAccountByType = (type, preferredId = null) => {\n      if (preferredId) {\n        const specificAccount = findSpecificAccount(preferredId);\n        if (specificAccount) return specificAccount;\n      }\n      const matchingAccount = accountsList.find(acc => acc.type && acc.type.toLowerCase() === type.toLowerCase());\n      if (matchingAccount) return matchingAccount;\n      const fallbackAccounts = {\n        'assets': {\n          id: '13',\n          code: '1112',\n          name: 'Bank - Main Account',\n          type: 'assets'\n        },\n        'liabilities': {\n          id: '28',\n          code: '2110',\n          name: 'Accounts Payable',\n          type: 'liabilities'\n        },\n        'expenses': {\n          id: '50',\n          code: '5100',\n          name: 'Cost of Goods Sold',\n          type: 'expenses'\n        }\n      };\n      return fallbackAccounts[type.toLowerCase()] || {\n        id: 'UNKNOWN',\n        name: `Unknown ${type} Account`,\n        code: 'N/A'\n      };\n    };\n\n    // Determine inventory account based on products\n    const determineInventoryAccount = items => {\n      // You can add logic here based on product types\n      // For now, default to Telecom Equipment inventory\n      return findSpecificAccount('19') || findAccountByType('assets', '19'); // Inventory - Telecom Equipment\n    };\n\n    // Inventory (Debit) - Increase inventory\n    const inventoryAccount = determineInventoryAccount(appliedItems);\n    entries.push({\n      accountId: inventoryAccount.id,\n      accountName: inventoryAccount.name,\n      accountCode: inventoryAccount.code,\n      debit: totalAmount,\n      credit: 0,\n      description: `Inventory purchase from PO #${purchaseOrder.id} - ${appliedItems.length} items`\n    });\n\n    // Accounts Payable (Credit) - Amount owed to vendor\n    const payableAccount = findSpecificAccount('28') || findAccountByType('liabilities', '28'); // Accounts Payable\n    entries.push({\n      accountId: payableAccount.id,\n      accountName: payableAccount.name,\n      accountCode: payableAccount.code,\n      debit: 0,\n      credit: totalAmount,\n      description: `Amount owed for PO #${purchaseOrder.id} - ${purchaseOrder.remarks || 'Purchase order'}`\n    });\n    return {\n      id: `JE-PURCHASE-${purchaseOrder.id}`,\n      date: new Date().toISOString().split('T')[0],\n      // Use current date since PO doesn't have date\n      description: `Purchase Order #${purchaseOrder.id} - ${appliedItems.map(item => `Product ${item.product_Id} (${item.quantity})`).join(', ')}`,\n      reference: `PURCHASE-${purchaseOrder.id}`,\n      transactionType: 'automatic',\n      source: 'Purchase Orders',\n      status: 'posted',\n      entries: entries,\n      totalDebit: Math.round(totalAmount * 100) / 100,\n      totalCredit: Math.round(totalAmount * 100) / 100,\n      createdAt: new Date().toISOString(),\n      originalPurchaseOrder: purchaseOrder // Keep reference to original PO\n    };\n  }, []);\n  const convertSalesOrderToJournalEntry = useCallback((order, accountsList) => {\n    const entries = [];\n    const subTotal = parseFloat(order.subTotal) || 0;\n    const taxAmount = parseFloat(order.taxAmount) || 0;\n    const total = parseFloat(order.total) || 0;\n    if (!order.paid || !order.fulfilled || order.status !== 'Closed') {\n      return null;\n    }\n\n    // Enhanced function to find specific accounts from your chart of accounts\n    const findSpecificAccount = accountId => {\n      const account = accountsList.find(acc => acc.id === accountId);\n      return account || null;\n    };\n    const findAccountByType = (type, preferredCode = null) => {\n      // First try to find the preferred specific account\n      if (preferredCode) {\n        const specificAccount = findSpecificAccount(preferredCode);\n        if (specificAccount) return specificAccount;\n      }\n\n      // Then try to find by type\n      const matchingAccount = accountsList.find(acc => acc.type && acc.type.toLowerCase() === type.toLowerCase());\n      if (matchingAccount) return matchingAccount;\n\n      // Fallback with proper account codes from your chart\n      const fallbackAccounts = {\n        'assets': {\n          id: '1112',\n          code: '1112',\n          name: 'Bank - Main Account',\n          type: 'assets'\n        },\n        'revenue': {\n          id: '4110',\n          code: '4110',\n          name: 'Mobile Service Revenue',\n          type: 'revenue'\n        },\n        'liabilities': {\n          id: '2130',\n          code: '2130',\n          name: 'Sales Tax Payable',\n          type: 'liabilities'\n        },\n        'expenses': {\n          id: '5100',\n          code: '5100',\n          name: 'Cost of Goods Sold',\n          type: 'expenses'\n        }\n      };\n      return fallbackAccounts[type.toLowerCase()] || {\n        id: 'UNKNOWN',\n        name: `Unknown ${type} Account`,\n        code: 'N/A'\n      };\n    };\n    const cashAccount = findAccountByType('assets');\n    entries.push({\n      accountId: cashAccount.id,\n      accountName: cashAccount.name,\n      accountCode: cashAccount.code,\n      debit: total,\n      credit: 0,\n      description: `Cash received from Order #${order.orderId} - ${order.lineItems.map(item => item.productName).join(', ')}`\n    });\n    if (subTotal > 0) {\n      const revenueAccount = findAccountByType('revenue');\n      entries.push({\n        accountId: revenueAccount.id,\n        accountName: revenueAccount.name,\n        accountCode: revenueAccount.code,\n        debit: 0,\n        credit: subTotal,\n        description: `Revenue from Order #${order.orderId}`\n      });\n    }\n    if (taxAmount > 0) {\n      const taxAccount = findAccountByType('liabilities');\n      entries.push({\n        accountId: taxAccount.id,\n        accountName: taxAccount.name,\n        accountCode: taxAccount.code,\n        debit: 0,\n        credit: taxAmount,\n        description: `${order.taxRate}% tax collected on Order #${order.orderId}`\n      });\n    }\n    let totalCOGS = 0;\n    order.lineItems.forEach(item => {\n      if (item.fulfilled && item.status === 'Fulfilled') {\n        const costPrice = parseFloat(item.costPrice) || 0;\n        const quantity = parseFloat(item.quantity) || 0;\n        const itemCOGS = costPrice * quantity;\n        totalCOGS += itemCOGS;\n      }\n    });\n    if (totalCOGS > 0) {\n      const cogsAccount = findAccountByType('expenses');\n      entries.push({\n        accountId: cogsAccount.id,\n        accountName: cogsAccount.name,\n        accountCode: cogsAccount.code,\n        debit: totalCOGS,\n        credit: 0,\n        description: `COGS for Order #${order.orderId}`\n      });\n      const inventoryAccount = findAccountByType('assets');\n      entries.push({\n        accountId: inventoryAccount.id,\n        accountName: inventoryAccount.name,\n        accountCode: inventoryAccount.code,\n        debit: 0,\n        credit: totalCOGS,\n        description: `Inventory reduction - Order #${order.orderId}`\n      });\n    }\n    const totalDebit = entries.reduce((sum, entry) => sum + parseFloat(entry.debit || 0), 0);\n    const totalCredit = entries.reduce((sum, entry) => sum + parseFloat(entry.credit || 0), 0);\n    return {\n      id: `JE-ORDER-${order.orderId}`,\n      date: formatDateFromCreatedAt(order.createdAt),\n      description: `Sales Order #${order.orderId} - ${order.lineItems.map(item => `${item.productName} (${item.quantity})`).join(', ')}`,\n      reference: `ORDER-${order.orderId}`,\n      transactionType: 'automatic',\n      source: 'POS Sales',\n      status: 'posted',\n      entries: entries,\n      totalDebit: Math.round(totalDebit * 100) / 100,\n      totalCredit: Math.round(totalCredit * 100) / 100,\n      createdAt: order.createdAt,\n      originalOrder: order\n    };\n  }, []);\n\n  // Load Journal Entries from API and Local Storage\n  const loadJournalEntriesFromAPI = useCallback(async () => {\n    setLoading(prev => ({\n      ...prev,\n      entries: true\n    }));\n    setErrors(prev => ({\n      ...prev,\n      entries: null\n    }));\n    try {\n      const salesOrders = await fetchOrderData();\n      if (!salesOrders) {\n        throw new Error('Failed to fetch sales orders');\n      }\n      const journalEntriesFromSales = salesOrders.filter(order => order.paid && order.fulfilled && order.status === 'Closed').map(order => convertSalesOrderToJournalEntry(order, accounts)).filter(entry => entry !== null);\n      let manualEntries = [];\n      try {\n        const storedEntries = localStorage.getItem('manualJournalEntries');\n        manualEntries = storedEntries ? JSON.parse(storedEntries) : [];\n      } catch (error) {\n        console.warn('Error loading manual entries from localStorage:', error);\n        manualEntries = [];\n      }\n      const allEntries = [...journalEntriesFromSales, ...manualEntries];\n      setJournalEntries(allEntries);\n      setFilteredEntries(allEntries);\n      setLoading(prev => ({\n        ...prev,\n        entries: false\n      }));\n    } catch (error) {\n      console.error('Error loading journal entries:', error);\n      setErrors(prev => ({\n        ...prev,\n        entries: error.message\n      }));\n      setLoading(prev => ({\n        ...prev,\n        entries: false\n      }));\n    }\n  }, [accounts, convertSalesOrderToJournalEntry]);\n\n  // Filter entries\n  const filterEntries = useCallback(() => {\n    let filtered = [...journalEntries];\n    if (filters.dateFrom) {\n      filtered = filtered.filter(entry => entry.date >= filters.dateFrom);\n    }\n    if (filters.dateTo) {\n      filtered = filtered.filter(entry => entry.date <= filters.dateTo);\n    }\n    if (filters.accountId) {\n      filtered = filtered.filter(entry => {\n        return entry.entries.some(e => e.accountId === filters.accountId);\n      });\n    }\n    if (filters.transactionType !== 'all') {\n      filtered = filtered.filter(entry => entry.transactionType === filters.transactionType);\n    }\n    if (filters.searchTerm) {\n      const term = filters.searchTerm.toLowerCase();\n      filtered = filtered.filter(entry => entry.description.toLowerCase().includes(term) || entry.reference.toLowerCase().includes(term) || entry.entries.some(e => e.description.toLowerCase().includes(term)));\n    }\n    setFilteredEntries(filtered);\n  }, [journalEntries, filters]);\n\n  // Generate trial balance\n  const generateTrialBalance = useCallback(() => {\n    const balances = {};\n    const requiredAccountIds = new Set();\n    journalEntries.forEach(entry => {\n      if (entry.status === 'posted') {\n        entry.entries.forEach(entryLine => {\n          if (entryLine.accountId) {\n            requiredAccountIds.add(entryLine.accountId);\n          }\n        });\n      }\n    });\n    const accountTypesMap = {};\n    accounts.forEach(account => {\n      accountTypesMap[account.id] = account.type;\n      accountTypesMap[account.code] = account.type;\n    });\n    accounts.forEach(account => {\n      if (account.category !== 'header') {\n        balances[account.id] = {\n          accountId: account.id,\n          accountCode: account.code,\n          accountName: account.name,\n          accountType: account.type || 'unknown',\n          debit: 0,\n          credit: 0,\n          balance: 0\n        };\n      }\n    });\n    requiredAccountIds.forEach(accountId => {\n      if (!balances[accountId]) {\n        let accountName = '';\n        let accountType = '';\n        journalEntries.forEach(entry => {\n          entry.entries.forEach(entryLine => {\n            if (entryLine.accountId === accountId) {\n              if (entryLine.accountName) accountName = entryLine.accountName;\n            }\n          });\n        });\n        const prefix = accountId.toString().substring(0, 1);\n        if (prefix === '1') accountType = 'assets';else if (prefix === '2') accountType = 'liabilities';else if (prefix === '3') accountType = 'equity';else if (prefix === '4') accountType = 'revenue';else if (prefix === '5') accountType = 'expenses';else accountType = accountTypesMap[accountId] || 'unknown';\n        balances[accountId] = {\n          accountId: accountId,\n          accountCode: accountId,\n          accountName: accountName || `Account ${accountId}`,\n          accountType: accountType,\n          debit: 0,\n          credit: 0,\n          balance: 0\n        };\n      }\n    });\n    journalEntries.forEach(entry => {\n      if (entry.status === 'posted') {\n        entry.entries.forEach(entryLine => {\n          const accountId = entryLine.accountId;\n          if (balances[accountId]) {\n            balances[accountId].debit += parseFloat(entryLine.debit || 0);\n            balances[accountId].credit += parseFloat(entryLine.credit || 0);\n            if (entryLine.accountName && !balances[accountId].accountName) {\n              balances[accountId].accountName = entryLine.accountName;\n            }\n          }\n        });\n      }\n    });\n    Object.values(balances).forEach(account => {\n      if (account.accountType === 'assets' || account.accountType === 'expenses') {\n        account.balance = account.debit - account.credit;\n      } else {\n        account.balance = account.credit - account.debit;\n      }\n    });\n    const trialBalanceData = Object.values(balances).filter(account => account.debit > 0 || account.credit > 0).sort((a, b) => a.accountCode.localeCompare(b.accountCode));\n    setTrialBalance(trialBalanceData);\n    setShowTrialBalance(true);\n  }, [accounts, journalEntries]);\n\n  // Helper functions for entry management\n  const addEntryLine = () => {\n    setNewEntry({\n      ...newEntry,\n      entries: [...newEntry.entries, {\n        accountId: '',\n        debit: 0,\n        credit: 0,\n        description: ''\n      }]\n    });\n  };\n  const removeEntryLine = index => {\n    if (newEntry.entries.length > 2) {\n      const updatedEntries = newEntry.entries.filter((_, i) => i !== index);\n      setNewEntry({\n        ...newEntry,\n        entries: updatedEntries\n      });\n    }\n  };\n  const updateEntryLine = (index, field, value) => {\n    const updatedEntries = [...newEntry.entries];\n    updatedEntries[index] = {\n      ...updatedEntries[index],\n      [field]: value\n    };\n    setNewEntry({\n      ...newEntry,\n      entries: updatedEntries\n    });\n  };\n  const calculateTotals = entries => {\n    const totalDebit = entries.reduce((sum, entry) => sum + (parseFloat(entry.debit) || 0), 0);\n    const totalCredit = entries.reduce((sum, entry) => sum + (parseFloat(entry.credit) || 0), 0);\n    return {\n      totalDebit,\n      totalCredit\n    };\n  };\n  const isBalanced = entries => {\n    const {\n      totalDebit,\n      totalCredit\n    } = calculateTotals(entries);\n    return Math.abs(totalDebit - totalCredit) < 0.01;\n  };\n  const saveJournalEntry = () => {\n    if (!newEntry.description || !newEntry.entries.every(e => e.accountId)) {\n      alert('Please fill in all required fields');\n      return;\n    }\n    if (!isBalanced(newEntry.entries)) {\n      alert('Journal entry must be balanced - total debits must equal total credits');\n      return;\n    }\n    const {\n      totalDebit,\n      totalCredit\n    } = calculateTotals(newEntry.entries);\n    const entriesWithNames = newEntry.entries.map(entry => {\n      var _accounts$find;\n      return {\n        ...entry,\n        accountName: ((_accounts$find = accounts.find(acc => acc.id === entry.accountId)) === null || _accounts$find === void 0 ? void 0 : _accounts$find.name) || '',\n        debit: parseFloat(entry.debit) || 0,\n        credit: parseFloat(entry.credit) || 0\n      };\n    });\n    const journalEntry = {\n      id: `JE-MANUAL-${Date.now()}`,\n      date: newEntry.date,\n      description: newEntry.description,\n      reference: newEntry.reference || `MAN${Date.now()}`,\n      transactionType: 'manual',\n      source: 'Manual',\n      status: 'posted',\n      entries: entriesWithNames,\n      totalDebit,\n      totalCredit,\n      createdAt: new Date().toISOString()\n    };\n    try {\n      const existingManualEntries = JSON.parse(localStorage.getItem('manualJournalEntries') || '[]');\n      const updatedManualEntries = [...existingManualEntries, journalEntry];\n      localStorage.setItem('manualJournalEntries', JSON.stringify(updatedManualEntries));\n    } catch (error) {\n      console.warn('Could not save to localStorage:', error);\n    }\n    setJournalEntries([...journalEntries, journalEntry]);\n    setNewEntry({\n      date: new Date().toISOString().split('T')[0],\n      description: '',\n      reference: '',\n      entries: [{\n        accountId: '',\n        debit: 0,\n        credit: 0,\n        description: ''\n      }, {\n        accountId: '',\n        debit: 0,\n        credit: 0,\n        description: ''\n      }]\n    });\n    setIsAddingEntry(false);\n  };\n  const getAccountName = useCallback(accountId => {\n    const account = accounts.find(acc => acc.id === accountId || acc.code === accountId);\n    if (account) {\n      return `${account.code} - ${account.name}`;\n    }\n    let accountName = '';\n    journalEntries.forEach(entry => {\n      entry.entries.forEach(entryLine => {\n        if (entryLine.accountId === accountId && entryLine.accountName) {\n          accountName = entryLine.accountName;\n        }\n      });\n    });\n    if (accountName) {\n      return `${accountId} - ${accountName}`;\n    }\n    const prefix = accountId.toString().substring(0, 1);\n    let accountType = '';\n    if (prefix === '1') accountType = 'Assets';else if (prefix === '2') accountType = 'Liabilities';else if (prefix === '3') accountType = 'Equity';else if (prefix === '4') accountType = 'Revenue';else if (prefix === '5') accountType = 'Expenses';\n    return accountType ? `${accountId} - ${accountType} Account` : `${accountId} - Unknown Account`;\n  }, [accounts, journalEntries]);\n\n  // useEffect hooks\n  useEffect(() => {\n    loadChartsOfAccounts();\n  }, [loadChartsOfAccounts]);\n  useEffect(() => {\n    if (accounts.length > 0) {\n      loadJournalEntriesFromAPI();\n    }\n  }, [accounts, loadJournalEntriesFromAPI]);\n  useEffect(() => {\n    if (journalEntries.length > 0) {\n      filterEntries();\n    }\n  }, [journalEntries, filters, filterEntries]);\n  const {\n    totalDebit,\n    totalCredit\n  } = calculateTotals(newEntry.entries);\n  const entryIsBalanced = isBalanced(newEntry.entries);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-7xl mx-auto p-6 bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-gray-900 mb-2 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Book, {\n          className: \"mr-3 text-emerald-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2410,\n          columnNumber: 11\n        }, this), \"General Ledger\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2409,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"Real-time transaction recording and journal entry management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2413,\n        columnNumber: 9\n      }, this), loading.accounts && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 p-2 bg-blue-50 text-blue-700 rounded-md text-sm flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n          className: \"animate-spin mr-2\",\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2417,\n          columnNumber: 13\n        }, this), \"Loading chart of accounts...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2416,\n        columnNumber: 11\n      }, this), errors.accounts && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 p-2 bg-red-50 text-red-700 rounded-md text-sm flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n          className: \"mr-2\",\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2424,\n          columnNumber: 13\n        }, this), \"Error loading accounts: \", errors.accounts]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2423,\n        columnNumber: 11\n      }, this), loading.entries && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 p-2 bg-blue-50 text-blue-700 rounded-md text-sm flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n          className: \"animate-spin mr-2\",\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2431,\n          columnNumber: 13\n        }, this), \"Loading journal entries...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2430,\n        columnNumber: 11\n      }, this), errors.entries && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 p-2 bg-red-50 text-red-700 rounded-md text-sm flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n          className: \"mr-2\",\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2438,\n          columnNumber: 13\n        }, this), \"Error loading entries: \", errors.entries]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2437,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2408,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-blue-50 p-4 rounded-lg border border-blue-200\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-blue-600 text-sm font-medium\",\n              children: \"Total Entries\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2449,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-2xl font-bold text-blue-900\",\n              children: journalEntries.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2450,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2448,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FileText, {\n            className: \"text-blue-600\",\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2452,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2447,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2446,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-green-50 p-4 rounded-lg border border-green-200\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-green-600 text-sm font-medium\",\n              children: \"Purchase Entries\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2459,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-2xl font-bold text-green-900\",\n              children: journalEntries.filter(e => e.source === 'Purchase Orders').length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2460,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2458,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TrendingUp, {\n            className: \"text-green-600\",\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2464,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2457,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2456,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-orange-50 p-4 rounded-lg border border-orange-200\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-orange-600 text-sm font-medium\",\n              children: \"Manual Entries\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2471,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-2xl font-bold text-orange-900\",\n              children: journalEntries.filter(e => e.transactionType === 'manual').length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2472,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2470,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Edit, {\n            className: \"text-orange-600\",\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2476,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2469,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2468,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-purple-50 p-4 rounded-lg border border-purple-200\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-purple-600 text-sm font-medium\",\n              children: \"Total Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2483,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-2xl font-bold text-purple-900\",\n              children: [\"PKR \", journalEntries.reduce((sum, entry) => sum + entry.totalDebit, 0).toLocaleString('en-PK', {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2484,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2482,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DollarSign, {\n            className: \"text-purple-600\",\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2488,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2481,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2480,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2445,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap items-center justify-between gap-4 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap items-center gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(Calendar, {\n            size: 16,\n            className: \"text-gray-400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2498,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: filters.dateFrom,\n            onChange: e => setFilters({\n              ...filters,\n              dateFrom: e.target.value\n            }),\n            className: \"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\",\n            placeholder: \"From\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2499,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-500\",\n            children: \"to\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2506,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: filters.dateTo,\n            onChange: e => setFilters({\n              ...filters,\n              dateTo: e.target.value\n            }),\n            className: \"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\",\n            placeholder: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2507,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2497,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(Filter, {\n            className: \"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\",\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2518,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: filters.accountId,\n            onChange: e => setFilters({\n              ...filters,\n              accountId: e.target.value\n            }),\n            className: \"pl-10 pr-8 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"All Accounts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2524,\n              columnNumber: 15\n            }, this), accounts.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"optgroup\", {\n                label: \"Assets\",\n                children: accounts.filter(acc => acc.type === 'assets' && acc.category === 'account').map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: account.id,\n                  children: [account.code, \" - \", account.name]\n                }, account.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2534,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2530,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                label: \"Liabilities\",\n                children: accounts.filter(acc => acc.type === 'liabilities' && acc.category === 'account').map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: account.id,\n                  children: [account.code, \" - \", account.name]\n                }, account.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2545,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2541,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                label: \"Equity\",\n                children: accounts.filter(acc => acc.type === 'equity' && acc.category === 'account').map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: account.id,\n                  children: [account.code, \" - \", account.name]\n                }, account.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2556,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2552,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                label: \"Revenue\",\n                children: accounts.filter(acc => acc.type === 'revenue' && acc.category === 'account').map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: account.id,\n                  children: [account.code, \" - \", account.name]\n                }, account.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2567,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2563,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                label: \"Expenses\",\n                children: accounts.filter(acc => acc.type === 'expenses' && acc.category === 'account').map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: account.id,\n                  children: [account.code, \" - \", account.name]\n                }, account.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2578,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2574,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true), accounts.length === 0 && /*#__PURE__*/_jsxDEV(\"option\", {\n              disabled: true,\n              children: \"Loading accounts...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2587,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2519,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2517,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filters.transactionType,\n          onChange: e => setFilters({\n            ...filters,\n            transactionType: e.target.value\n          }),\n          className: \"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"All Types\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2598,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"automatic\",\n            children: \"Automatic (POS/Purchase)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2599,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"manual\",\n            children: \"Manual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2600,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2593,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(Search, {\n            className: \"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\",\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2605,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search entries...\",\n            value: filters.searchTerm,\n            onChange: e => setFilters({\n              ...filters,\n              searchTerm: e.target.value\n            }),\n            className: \"pl-10 pr-4 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2606,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2604,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2495,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: loadJournalEntriesFromAPI,\n          disabled: loading.entries,\n          className: \"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2 disabled:bg-gray-400\",\n          children: [loading.entries ? /*#__PURE__*/_jsxDEV(RefreshCw, {\n            className: \"animate-spin\",\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2622,\n            columnNumber: 32\n          }, this) : /*#__PURE__*/_jsxDEV(RefreshCw, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2622,\n            columnNumber: 83\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Refresh from API\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2623,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2617,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: loadChartsOfAccounts,\n          disabled: loading.accounts,\n          className: \"px-4 py-2 bg-teal-600 text-white rounded-lg hover:bg-teal-700 flex items-center space-x-2 disabled:bg-gray-400\",\n          children: [loading.accounts ? /*#__PURE__*/_jsxDEV(RefreshCw, {\n            className: \"animate-spin\",\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2630,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(RefreshCw, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2630,\n            columnNumber: 84\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Refresh Accounts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2631,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2625,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setFilters({\n              dateFrom: '',\n              dateTo: '',\n              accountId: '',\n              transactionType: 'all',\n              searchTerm: ''\n            });\n            setFilteredEntries([...journalEntries]);\n          },\n          className: \"px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(X, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2646,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Clear Filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2647,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2633,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsAddingEntry(true),\n          className: \"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(Plus, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2653,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Add Entry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2654,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2649,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: generateTrialBalance,\n          className: \"px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(FileText, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2660,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Trial Balance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2661,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2656,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2616,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2494,\n      columnNumber: 7\n    }, this), isAddingEntry && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8 p-6 bg-gray-50 rounded-lg border\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold mb-4\",\n        children: \"Add Manual Journal Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2669,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Date *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2673,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: newEntry.date,\n            onChange: e => setNewEntry({\n              ...newEntry,\n              date: e.target.value\n            }),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2674,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2672,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Description *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2682,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newEntry.description,\n            onChange: e => setNewEntry({\n              ...newEntry,\n              description: e.target.value\n            }),\n            placeholder: \"Enter description\",\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2683,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2681,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Reference\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2692,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newEntry.reference,\n            onChange: e => setNewEntry({\n              ...newEntry,\n              reference: e.target.value\n            }),\n            placeholder: \"Reference number\",\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2693,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2691,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2671,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700 mb-2\",\n          children: \"Journal Entry Lines\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2705,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-3\",\n          children: newEntry.entries.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-12 gap-2 items-center bg-white p-3 rounded border\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-span-4\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: entry.accountId,\n                onChange: e => updateEntryLine(index, 'accountId', e.target.value),\n                className: \"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Account\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2715,\n                  columnNumber: 23\n                }, this), accounts.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"optgroup\", {\n                    label: \"Assets\",\n                    children: accounts.filter(acc => acc.type === 'assets' && acc.category === 'account').map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: account.id,\n                      children: [account.code, \" - \", account.name]\n                    }, account.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2724,\n                      columnNumber: 33\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2720,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                    label: \"Liabilities\",\n                    children: accounts.filter(acc => acc.type === 'liabilities' && acc.category === 'account').map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: account.id,\n                      children: [account.code, \" - \", account.name]\n                    }, account.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2735,\n                      columnNumber: 33\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2731,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                    label: \"Equity\",\n                    children: accounts.filter(acc => acc.type === 'equity' && acc.category === 'account').map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: account.id,\n                      children: [account.code, \" - \", account.name]\n                    }, account.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2746,\n                      columnNumber: 33\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2742,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                    label: \"Revenue\",\n                    children: accounts.filter(acc => acc.type === 'revenue' && acc.category === 'account').map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: account.id,\n                      children: [account.code, \" - \", account.name]\n                    }, account.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2757,\n                      columnNumber: 33\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2753,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                    label: \"Expenses\",\n                    children: accounts.filter(acc => acc.type === 'expenses' && acc.category === 'account').map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: account.id,\n                      children: [account.code, \" - \", account.name]\n                    }, account.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2768,\n                      columnNumber: 33\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2764,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true), accounts.length === 0 && /*#__PURE__*/_jsxDEV(\"option\", {\n                  disabled: true,\n                  children: \"Loading accounts...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2777,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2710,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2709,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-span-3\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: entry.description,\n                onChange: e => updateEntryLine(index, 'description', e.target.value),\n                placeholder: \"Description\",\n                className: \"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2782,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2781,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-span-2\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                step: \"0.01\",\n                value: entry.debit,\n                onChange: e => updateEntryLine(index, 'debit', e.target.value),\n                placeholder: \"Debit\",\n                className: \"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2791,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2790,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-span-2\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                step: \"0.01\",\n                value: entry.credit,\n                onChange: e => updateEntryLine(index, 'credit', e.target.value),\n                placeholder: \"Credit\",\n                className: \"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2801,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2800,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-span-1\",\n              children: newEntry.entries.length > 2 && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => removeEntryLine(index),\n                className: \"p-1 text-red-600 hover:bg-red-100 rounded\",\n                children: /*#__PURE__*/_jsxDEV(Trash2, {\n                  size: 14\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2816,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2812,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2810,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2708,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2706,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addEntryLine,\n            className: \"px-3 py-1 text-sm bg-gray-200 text-gray-700 rounded hover:bg-gray-300 flex items-center space-x-1\",\n            children: [/*#__PURE__*/_jsxDEV(Plus, {\n              size: 14\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2829,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Add Line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2830,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2825,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: [\"Total Debit: PKR \", totalDebit.toLocaleString('en-PK', {\n                  minimumFractionDigits: 2,\n                  maximumFractionDigits: 2\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2835,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mx-2\",\n                children: \"|\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2836,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: [\"Total Credit: PKR \", totalCredit.toLocaleString('en-PK', {\n                  minimumFractionDigits: 2,\n                  maximumFractionDigits: 2\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2837,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2834,\n              columnNumber: 17\n            }, this), entryIsBalanced ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center text-green-600\",\n              children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n                size: 16,\n                className: \"mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2841,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm\",\n                children: \"Balanced\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2842,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2840,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center text-red-600\",\n              children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n                size: 16,\n                className: \"mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2846,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm\",\n                children: \"Not Balanced\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2847,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2845,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2833,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2824,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2704,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveJournalEntry,\n          disabled: !entryIsBalanced,\n          className: \"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 disabled:bg-gray-400 flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(Save, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2860,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Save Entry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2861,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2855,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsAddingEntry(false),\n          className: \"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(X, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2867,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2868,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2863,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2854,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2668,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white border border-gray-200 rounded-lg overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-6 py-4 border-b border-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold text-gray-900\",\n          children: \"Journal Entries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2877,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-600 mt-1\",\n          children: [\"Showing \", filteredEntries.length, \" of \", journalEntries.length, \" entries\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2878,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2876,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"bg-gray-50\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Entry ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2887,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2890,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2893,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Reference\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2896,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Source\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2899,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2902,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2905,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2908,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2886,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2885,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            className: \"bg-white divide-y divide-gray-200\",\n            children: filteredEntries.map(entry => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"hover:bg-gray-50\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\",\n                children: entry.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2916,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900\",\n                children: entry.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2919,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 text-sm text-gray-900 max-w-xs truncate\",\n                children: entry.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2922,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900\",\n                children: entry.reference\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2925,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `px-2 py-1 text-xs font-medium rounded-full ${entry.source === 'POS Sales' ? 'bg-green-100 text-green-800' : entry.source === 'Purchase Orders' ? 'bg-blue-100 text-blue-800' : entry.source === 'Manual' ? 'bg-orange-100 text-orange-800' : 'bg-gray-100 text-gray-800'}`,\n                  children: entry.source\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2929,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2928,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900\",\n                children: [\"PKR \", entry.totalDebit.toLocaleString('en-PK', {\n                  minimumFractionDigits: 2,\n                  maximumFractionDigits: 2\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2938,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `px-2 py-1 text-xs font-medium rounded-full ${entry.status === 'posted' ? 'bg-blue-100 text-blue-800' : 'bg-yellow-100 text-yellow-800'}`,\n                  children: entry.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2942,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2941,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm font-medium\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setSelectedEntry(entry),\n                  className: \"text-emerald-600 hover:text-emerald-900 mr-3\",\n                  children: /*#__PURE__*/_jsxDEV(Eye, {\n                    size: 16\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2953,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2949,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2948,\n                columnNumber: 19\n              }, this)]\n            }, entry.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2915,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2913,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2884,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2883,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2875,\n      columnNumber: 7\n    }, this), selectedEntry && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-6 py-4 border-b border-gray-200\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold text-gray-900\",\n              children: [\"Journal Entry Details - \", selectedEntry.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2969,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setSelectedEntry(null),\n              className: \"text-gray-400 hover:text-gray-600\",\n              children: /*#__PURE__*/_jsxDEV(X, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2976,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2972,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2968,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2967,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-6 py-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"text-sm font-medium text-gray-500\",\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2985,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-900\",\n                children: selectedEntry.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2986,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2984,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"text-sm font-medium text-gray-500\",\n                children: \"Reference\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2989,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-900\",\n                children: selectedEntry.reference\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2990,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2988,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"text-sm font-medium text-gray-500\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2993,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-900\",\n                children: selectedEntry.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2994,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2992,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"text-sm font-medium text-gray-500\",\n                children: \"Source\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2997,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `px-2 py-1 text-xs font-medium rounded-full ${selectedEntry.source === 'POS Sales' ? 'bg-green-100 text-green-800' : selectedEntry.source === 'Purchase Orders' ? 'bg-blue-100 text-blue-800' : 'bg-orange-100 text-orange-800'}`,\n                children: selectedEntry.source\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2998,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2996,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2983,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-sm font-medium text-gray-700 mb-3\",\n              children: \"Account Entries\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3010,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"overflow-x-auto\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"w-full border border-gray-200 rounded\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  className: \"bg-gray-50\",\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-4 py-2 text-left text-xs font-medium text-gray-500\",\n                      children: \"Account\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3015,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-4 py-2 text-left text-xs font-medium text-gray-500\",\n                      children: \"Description\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3016,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-4 py-2 text-right text-xs font-medium text-gray-500\",\n                      children: \"Debit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3017,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-4 py-2 text-right text-xs font-medium text-gray-500\",\n                      children: \"Credit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3018,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3014,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3013,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  className: \"divide-y divide-gray-200\",\n                  children: selectedEntry.entries.map((entryLine, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 text-sm text-gray-900\",\n                      children: getAccountName(entryLine.accountId)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3024,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 text-sm text-gray-600\",\n                      children: entryLine.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3027,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 text-sm text-gray-900 text-right\",\n                      children: entryLine.debit > 0 ? `${entryLine.debit.toFixed(2)}` : '-'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3030,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 text-sm text-gray-900 text-right\",\n                      children: entryLine.credit > 0 ? `${entryLine.credit.toFixed(2)}` : '-'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3033,\n                      columnNumber: 27\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3023,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3021,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n                  className: \"bg-gray-50\",\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      colSpan: \"2\",\n                      className: \"px-4 py-2 text-sm font-medium text-gray-900\",\n                      children: \"Totals:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3041,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 text-sm font-bold text-gray-900 text-right\",\n                      children: [\"PKR \", selectedEntry.totalDebit.toLocaleString('en-PK', {\n                        minimumFractionDigits: 2,\n                        maximumFractionDigits: 2\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3044,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 text-sm font-bold text-gray-900 text-right\",\n                      children: [\"PKR \", selectedEntry.totalCredit.toLocaleString('en-PK', {\n                        minimumFractionDigits: 2,\n                        maximumFractionDigits: 2\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3047,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3040,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3039,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3012,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3011,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3009,\n            columnNumber: 15\n          }, this), selectedEntry.originalPurchaseOrder && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6 p-4 bg-gray-50 rounded-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-sm font-medium text-gray-700 mb-3\",\n              children: \"Original Purchase Order Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3059,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium text-gray-500\",\n                  children: \"PO ID:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3062,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-900\",\n                  children: selectedEntry.originalPurchaseOrder.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3063,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3061,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium text-gray-500\",\n                  children: \"Status:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3066,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-900\",\n                  children: selectedEntry.originalPurchaseOrder.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3067,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3065,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium text-gray-500\",\n                  children: \"Vendor ID:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3070,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-900\",\n                  children: selectedEntry.originalPurchaseOrder.vendor_Id || 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3071,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3069,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium text-gray-500\",\n                  children: \"Type:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3074,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-900\",\n                  children: selectedEntry.originalPurchaseOrder.type || 'Standard'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3075,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3073,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3060,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium text-gray-500\",\n                children: \"Purchase Items (Applied Only):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3081,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2 space-y-2\",\n                children: selectedEntry.originalPurchaseOrder.purchaseOrderItems.filter(item => item.status === 'applied' && item.quantity > 0).map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm bg-white p-2 rounded border\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-medium\",\n                    children: [\"Product ID: \", item.product_Id]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3087,\n                    columnNumber: 27\n                  }, this), \" - Qty: \", item.quantity, \", Price per Unit: PKR \", parseFloat(item.pricePerUnit).toLocaleString('en-PK', {\n                    minimumFractionDigits: 2,\n                    maximumFractionDigits: 2\n                  }), \", Total: PKR \", (parseFloat(item.pricePerUnit) * parseFloat(item.quantity)).toLocaleString('en-PK', {\n                    minimumFractionDigits: 2,\n                    maximumFractionDigits: 2\n                  }), item.remarks && item.remarks !== 'null' && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-gray-500\",\n                    children: [\" (\", item.remarks, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3090,\n                    columnNumber: 71\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3086,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3082,\n                columnNumber: 21\n              }, this), selectedEntry.originalPurchaseOrder.remarks && selectedEntry.originalPurchaseOrder.remarks !== 'null' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium text-gray-500\",\n                  children: \"Remarks:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3097,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-900 text-sm\",\n                  children: selectedEntry.originalPurchaseOrder.remarks\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3098,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3096,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3080,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3058,\n            columnNumber: 17\n          }, this), selectedEntry.originalOrder && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6 p-4 bg-gray-50 rounded-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-sm font-medium text-gray-700 mb-3\",\n              children: \"Original Sales Order Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3108,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium text-gray-500\",\n                  children: \"Order ID:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3111,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-900\",\n                  children: selectedEntry.originalOrder.orderId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3112,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3110,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium text-gray-500\",\n                  children: \"Status:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3115,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-900\",\n                  children: selectedEntry.originalOrder.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3116,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3114,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium text-gray-500\",\n                  children: \"Payment Status:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3119,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-900\",\n                  children: selectedEntry.originalOrder.paid ? 'Paid' : 'Unpaid'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3120,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3118,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium text-gray-500\",\n                  children: \"Fulfilled:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3123,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-900\",\n                  children: selectedEntry.originalOrder.fulfilled ? 'Yes' : 'No'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3124,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3122,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3109,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium text-gray-500\",\n                children: \"Line Items:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3130,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2 space-y-2\",\n                children: selectedEntry.originalOrder.lineItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm bg-white p-2 rounded border\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-medium\",\n                    children: item.productName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3134,\n                    columnNumber: 27\n                  }, this), \" - Qty: \", item.quantity, \", Price: PKR \", parseFloat(item.price).toLocaleString('en-PK', {\n                    minimumFractionDigits: 2,\n                    maximumFractionDigits: 2\n                  }), \", Total: PKR \", parseFloat(item.total).toLocaleString('en-PK', {\n                    minimumFractionDigits: 2,\n                    maximumFractionDigits: 2\n                  }), item.taxAmount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-gray-500\",\n                    children: [\" (Tax: PKR \", parseFloat(item.taxAmount).toLocaleString('en-PK', {\n                      minimumFractionDigits: 2,\n                      maximumFractionDigits: 2\n                    }), \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3137,\n                    columnNumber: 50\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3133,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3131,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3129,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3107,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-gray-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Created: \", new Date(selectedEntry.createdAt).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3147,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Status: \", selectedEntry.status]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3148,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Type: \", selectedEntry.transactionType]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3149,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3146,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2981,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2966,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2965,\n      columnNumber: 9\n    }, this), showTrialBalance && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg max-w-5xl w-full max-h-[90vh] overflow-y-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-6 py-4 border-b border-gray-200\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold text-gray-900\",\n              children: [\"Trial Balance - As of \", new Date().toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3162,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  alert('Export functionality would be implemented here');\n                },\n                className: \"px-3 py-1 bg-emerald-600 text-white rounded text-sm hover:bg-emerald-700 flex items-center space-x-1\",\n                children: [/*#__PURE__*/_jsxDEV(Download, {\n                  size: 14\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3172,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Export\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3173,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3166,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setShowTrialBalance(false),\n                className: \"text-gray-400 hover:text-gray-600\",\n                children: /*#__PURE__*/_jsxDEV(X, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3179,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3175,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3165,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3161,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-6 py-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overflow-x-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"w-full\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                className: \"bg-gray-50\",\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                    children: \"Account Code\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3190,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                    children: \"Account Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3193,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                    children: \"Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3196,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                    children: \"Debit Total\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3199,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                    children: \"Credit Total\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3202,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                    children: \"Balance\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3205,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3189,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3188,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                className: \"bg-white divide-y divide-gray-200\",\n                children: trialBalance.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-4 py-4 whitespace-nowrap text-sm font-medium text-gray-900\",\n                    children: item.accountCode\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3213,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-4 py-4 whitespace-nowrap text-sm text-gray-900\",\n                    children: item.accountName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3216,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-4 py-4 whitespace-nowrap\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `px-2 py-1 text-xs font-medium rounded-full ${item.accountType === 'assets' ? 'bg-green-100 text-green-800' : item.accountType === 'liabilities' ? 'bg-red-100 text-red-800' : item.accountType === 'equity' ? 'bg-blue-100 text-blue-800' : item.accountType === 'revenue' ? 'bg-purple-100 text-purple-800' : item.accountType === 'expenses' ? 'bg-orange-100 text-orange-800' : 'bg-gray-100 text-gray-800'}`,\n                      children: typeof item.accountType === 'string' && item.accountType.length > 0 ? item.accountType.charAt(0).toUpperCase() + item.accountType.slice(1) : 'Unknown'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3220,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3219,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\",\n                    children: [\"PKR \", item.debit.toLocaleString('en-PK', {\n                      minimumFractionDigits: 2,\n                      maximumFractionDigits: 2\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3233,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\",\n                    children: [\"PKR \", item.credit.toLocaleString('en-PK', {\n                      minimumFractionDigits: 2,\n                      maximumFractionDigits: 2\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3236,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-4 py-4 whitespace-nowrap text-sm font-medium text-right\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: item.balance >= 0 ? 'text-green-600' : 'text-red-600',\n                      children: [\"PKR \", Math.abs(item.balance).toLocaleString('en-PK', {\n                        minimumFractionDigits: 2,\n                        maximumFractionDigits: 2\n                      }), item.balance < 0 && ' (CR)']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3240,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3239,\n                    columnNumber: 25\n                  }, this)]\n                }, item.accountId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3212,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3210,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n                className: \"bg-gray-50\",\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"3\",\n                    className: \"px-4 py-3 text-sm font-bold text-gray-900\",\n                    children: \"TOTALS:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3250,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-4 py-3 text-sm font-bold text-gray-900 text-right\",\n                    children: [\"PKR \", trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toLocaleString('en-PK', {\n                      minimumFractionDigits: 2,\n                      maximumFractionDigits: 2\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3253,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-4 py-3 text-sm font-bold text-gray-900 text-right\",\n                    children: [\"PKR \", trialBalance.reduce((sum, acc) => sum + acc.credit, 0).toLocaleString('en-PK', {\n                      minimumFractionDigits: 2,\n                      maximumFractionDigits: 2\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3256,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-4 py-3 text-sm font-bold text-gray-900 text-right\",\n                    children: [\"PKR \", Math.abs(trialBalance.reduce((sum, acc) => sum + acc.balance, 0)).toLocaleString('en-PK', {\n                      minimumFractionDigits: 2,\n                      maximumFractionDigits: 2\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3259,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3249,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3248,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3187,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 p-4 bg-green-50 border border-green-200 rounded-lg\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n                className: \"text-green-600 mr-2\",\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3270,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"font-medium text-green-800\",\n                  children: \"Trial Balance is Balanced\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3272,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-green-700\",\n                  children: [\"Total Debits = Total Credits = PKR \", trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toLocaleString('en-PK', {\n                    minimumFractionDigits: 2,\n                    maximumFractionDigits: 2\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3273,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3271,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3269,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3268,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3185,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3159,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3158,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8 grid grid-cols-1 md:grid-cols-3 gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-blue-50 border border-blue-200 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n            className: \"text-blue-600 mr-2\",\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-medium text-blue-800\",\n            children: \"Dual API Integration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3289,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-blue-700\",\n          children: \"Sales and Purchase orders automatically create journal entries from live API data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3291,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-blue-50 border border-blue-200 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n            className: \"text-blue-600 mr-2\",\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-medium text-blue-800\",\n            children: \"Real-time Sync\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3299,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-blue-700\",\n          children: \"Journal entries updated automatically with each sales transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-orange-50 border border-orange-200 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(FileText, {\n            className: \"text-orange-600 mr-2\",\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3308,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-medium text-orange-800\",\n            children: \"Manual Entries\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3309,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-orange-700\",\n          children: \"Add adjustments and corrections with full double-entry validation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3311,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3306,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3285,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2406,\n    columnNumber: 5\n  }, this);\n};\n_s(GeneralLedger, \"gu6J/Z7L/TS7aNJ8drHWUt5X3mE=\");\n_c = GeneralLedger;\nexport default GeneralLedger;\nvar _c;\n$RefreshReg$(_c, \"GeneralLedger\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Book","Plus","Filter","Search","Calendar","FileText","Edit","Trash2","Save","X","AlertCircle","CheckCircle","DollarSign","TrendingUp","Eye","Download","RefreshCw","jsxDEV","_jsxDEV","Fragment","_Fragment","GeneralLedger","_s","journalEntries","setJournalEntries","accounts","setAccounts","filteredEntries","setFilteredEntries","selectedEntry","setSelectedEntry","isAddingEntry","setIsAddingEntry","loading","setLoading","entries","errors","setErrors","filters","setFilters","dateFrom","dateTo","accountId","transactionType","searchTerm","trialBalance","setTrialBalance","showTrialBalance","setShowTrialBalance","newEntry","setNewEntry","date","Date","toISOString","split","description","reference","debit","credit","API_BASE_URL","API_BASE_URL_CHARTS_OF_ACCOUNTS","API_BASE_URL_PURCHASE_ORDERS","fetchOrderData","response","fetch","method","headers","ok","Error","status","data","json","error","console","fetchPurchaseOrderData","formatDateFromCreatedAt","createdAt","parts","length","padStart","flattenAccounts","result","processAccount","account","push","children","Array","isArray","forEach","child","loadChartsOfAccounts","prev","log","allAccounts","usableAccounts","filter","category","id","code","name","type","slice","sort","a","b","localeCompare","message","fallbackAccounts","convertPurchaseOrderToJournalEntry","purchaseOrder","accountsList","appliedItems","purchaseOrderItems","item","quantity","totalAmount","reduce","sum","parseFloat","pricePerUnit","findSpecificAccount","find","acc","findAccountByType","preferredId","specificAccount","matchingAccount","toLowerCase","determineInventoryAccount","items","inventoryAccount","accountName","accountCode","payableAccount","remarks","map","product_Id","join","source","totalDebit","Math","round","totalCredit","originalPurchaseOrder","convertSalesOrderToJournalEntry","order","subTotal","taxAmount","total","paid","fulfilled","preferredCode","cashAccount","orderId","lineItems","productName","revenueAccount","taxAccount","taxRate","totalCOGS","costPrice","itemCOGS","cogsAccount","entry","originalOrder","loadJournalEntriesFromAPI","salesOrders","journalEntriesFromSales","manualEntries","storedEntries","localStorage","getItem","JSON","parse","warn","allEntries","filterEntries","filtered","some","e","term","includes","generateTrialBalance","balances","requiredAccountIds","Set","entryLine","add","accountTypesMap","accountType","balance","prefix","toString","substring","Object","values","trialBalanceData","addEntryLine","removeEntryLine","index","updatedEntries","_","i","updateEntryLine","field","value","calculateTotals","isBalanced","abs","saveJournalEntry","every","alert","entriesWithNames","_accounts$find","journalEntry","now","existingManualEntries","updatedManualEntries","setItem","stringify","getAccountName","entryIsBalanced","className","fileName","_jsxFileName","lineNumber","columnNumber","size","toLocaleString","minimumFractionDigits","maximumFractionDigits","onChange","target","placeholder","label","disabled","onClick","step","toFixed","colSpan","vendor_Id","price","toLocaleDateString","charAt","toUpperCase","_c","$RefreshReg$"],"sources":["C:/Users/Logic-Unit/my-account/src/pages/GeneralLedger.jsx"],"sourcesContent":["// import React, { useState, useEffect, useCallback } from 'react';\r\n// import { \r\n//   Book, \r\n//   Plus, \r\n//   Filter, \r\n//   Search, \r\n//   Calendar, \r\n//   FileText, \r\n//   Edit, \r\n//   Trash2, \r\n//   Save, \r\n//   X, \r\n//   AlertCircle,\r\n//   CheckCircle,\r\n//   DollarSign,\r\n//   TrendingUp,\r\n//   Eye,\r\n//   Download,\r\n//   RefreshCw\r\n// } from 'lucide-react';\r\n\r\n// const GeneralLedger = () => {\r\n//   const [journalEntries, setJournalEntries] = useState([]);\r\n//   const [accounts, setAccounts] = useState([]);\r\n//   const [filteredEntries, setFilteredEntries] = useState([]);\r\n//   const [selectedEntry, setSelectedEntry] = useState(null);\r\n//   const [isAddingEntry, setIsAddingEntry] = useState(false);\r\n//   const [loading, setLoading] = useState({\r\n//     entries: false,\r\n//     accounts: false\r\n//   });\r\n//   const [errors, setErrors] = useState({\r\n//     entries: null,\r\n//     accounts: null\r\n//   });\r\n//   const [filters, setFilters] = useState({\r\n//     dateFrom: '',\r\n//     dateTo: '',\r\n//     accountId: '',\r\n//     transactionType: 'all',\r\n//     searchTerm: ''\r\n//   });\r\n//   const [trialBalance, setTrialBalance] = useState([]);\r\n//   const [showTrialBalance, setShowTrialBalance] = useState(false);\r\n//   const [newEntry, setNewEntry] = useState({\r\n//     date: new Date().toISOString().split('T')[0],\r\n//     description: '',\r\n//     reference: '',\r\n//     entries: [\r\n//       { accountId: '', debit: 0, credit: 0, description: '' },\r\n//       { accountId: '', debit: 0, credit: 0, description: '' }\r\n//     ]\r\n//   });\r\n\r\n//   // API Configuration\r\n//   const API_BASE_URL = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/orders?start=0&size=200';\r\n//   const API_BASE_URL_CHARTS_OF_ACCOUNTS = 'http://localhost:8080/api/accounts';\r\n\r\n//   // Fetch order data from API\r\n//   const fetchOrderData = async () => {\r\n//     try {\r\n//       const response = await fetch(API_BASE_URL, {\r\n//         method: 'GET',\r\n//         headers: {\r\n//           'Authorization': 'Bearer Hamid',\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//       });\r\n      \r\n//       if (!response.ok) {\r\n//         throw new Error(`API request failed with status ${response.status}`);\r\n//       }\r\n      \r\n//       const data = await response.json();\r\n//       return data;\r\n//     } catch (error) {\r\n//       console.error('Error fetching order data:', error);\r\n//       return null;\r\n//     }\r\n//   };\r\n\r\n//   // Format date from API format\r\n//   const formatDateFromCreatedAt = (createdAt) => {\r\n//     try {\r\n//       const parts = createdAt.split('.');\r\n//       if (parts.length >= 3) {\r\n//         return `${parts[0]}-${parts[1].padStart(2, '0')}-${parts[2].padStart(2, '0')}`;\r\n//       }\r\n//       return new Date().toISOString().split('T')[0];\r\n//     } catch (error) {\r\n//       return new Date().toISOString().split('T')[0];\r\n//     }\r\n//   };\r\n\r\n//   // Helper function to flatten hierarchical account structure\r\n//   const flattenAccounts = (accounts) => {\r\n//     const result = [];\r\n    \r\n//     const processAccount = (account) => {\r\n//       result.push(account);  // Add current account\r\n      \r\n//       // Recursively process children\r\n//       if (account.children && Array.isArray(account.children)) {\r\n//         account.children.forEach(child => processAccount(child));\r\n//       }\r\n//     };\r\n    \r\n//     accounts.forEach(account => processAccount(account));\r\n//     return result;\r\n//   };\r\n\r\n//   // Fetch Charts of Accounts from API (handling hierarchical structure with children)\r\n//   const loadChartsOfAccounts = useCallback(async () => {\r\n//     setLoading(prev => ({ ...prev, accounts: true }));\r\n//     setErrors(prev => ({ ...prev, accounts: null }));\r\n    \r\n//     try {\r\n//       const response = await fetch(API_BASE_URL_CHARTS_OF_ACCOUNTS, {\r\n//         method: 'GET',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//       });\r\n      \r\n//       if (!response.ok) {\r\n//         throw new Error(`Failed to fetch accounts: ${response.status}`);\r\n//       }\r\n      \r\n//       const data = await response.json();\r\n//       console.log('Raw accounts data from API:', data);\r\n      \r\n//       // Check if the data is in the expected format\r\n//       if (!Array.isArray(data)) {\r\n//         throw new Error('API response is not an array');\r\n//       }\r\n      \r\n//       // Flatten hierarchical structure to get all accounts\r\n//       const flattenAccounts = (accounts) => {\r\n//         const result = [];\r\n        \r\n//         const processAccount = (account) => {\r\n//           // Add the account itself\r\n//           result.push(account);\r\n          \r\n//           // Recursively process children if they exist\r\n//           if (account.children && Array.isArray(account.children)) {\r\n//             account.children.forEach(child => processAccount(child));\r\n//           }\r\n//         };\r\n        \r\n//         accounts.forEach(account => processAccount(account));\r\n//         return result;\r\n//       };\r\n      \r\n//       // Flatten all accounts from the hierarchical structure\r\n//       const allAccounts = flattenAccounts(data);\r\n//       console.log('All flattened accounts:', allAccounts.length);\r\n      \r\n//       // Filter to get only usable accounts (category = 'account')\r\n//       const usableAccounts = allAccounts.filter(account => \r\n//         account.category === 'account' && \r\n//         account.id && \r\n//         account.code && \r\n//         account.name && \r\n//         account.type\r\n//       );\r\n      \r\n//       console.log('All accounts from API:', allAccounts.length);\r\n//       console.log('Usable accounts (category=account):', usableAccounts.length);\r\n//       console.log('Sample usable accounts:', usableAccounts.slice(0, 5));\r\n      \r\n//       // If no usable accounts found, throw error to trigger fallback\r\n//       if (usableAccounts.length === 0) {\r\n//         console.log('No usable accounts found in API response');\r\n//         throw new Error('No usable accounts returned from API - only headers found');\r\n//       }\r\n      \r\n//       // Sort by account code\r\n//       usableAccounts.sort((a, b) => a.code.localeCompare(b.code));\r\n      \r\n//       setAccounts(usableAccounts);\r\n//       setLoading(prev => ({ ...prev, accounts: false }));\r\n      \r\n//       console.log(`Successfully loaded ${usableAccounts.length} accounts from API`);\r\n//       return usableAccounts;\r\n      \r\n//     } catch (error) {\r\n//       console.error('Error loading charts of accounts:', error);\r\n//       setErrors(prev => ({ ...prev, accounts: error.message }));\r\n//       setLoading(prev => ({ ...prev, accounts: false }));\r\n      \r\n//       console.log('Using fallback chart of accounts');\r\n//       // Use your actual account structure as fallback\r\n//       const fallbackAccounts = [\r\n//         // Current Assets\r\n//         { id: '12', code: '1111', name: 'Petty Cash', type: 'assets', category: 'account' },\r\n//         { id: '13', code: '1112', name: 'Bank - Main Account', type: 'assets', category: 'account' },\r\n//         { id: '14', code: '1120', name: 'Accounts Receivable', type: 'assets', category: 'account' },\r\n//         { id: '15', code: '1125', name: 'Insurance Receivables', type: 'assets', category: 'account' },\r\n//         { id: '16', code: '1130', name: 'Inventory - FMCG Products', type: 'assets', category: 'account' },\r\n//         { id: '19', code: '1130', name: 'Inventory - Telecom Equipment', type: 'assets', category: 'account' },\r\n//         { id: '22', code: '1130', name: 'Medical Supplies Inventory', type: 'assets', category: 'account' },\r\n//         { id: '17', code: '1140', name: 'Packaging Materials', type: 'assets', category: 'account' },\r\n//         { id: '20', code: '1140', name: 'Prepaid Service Credits', type: 'assets', category: 'account' },\r\n//         { id: '23', code: '1140', name: 'Pharmaceutical Inventory', type: 'assets', category: 'account' },\r\n//         { id: '18', code: '1150', name: 'Promotional Materials', type: 'assets', category: 'account' },\r\n        \r\n//         // Fixed Assets\r\n//         { id: '24', code: '1210', name: 'Network Equipment', type: 'assets', category: 'account' },\r\n//         { id: '26', code: '1210', name: 'Medical Equipment', type: 'assets', category: 'account' },\r\n//         { id: '25', code: '1220', name: 'IT Infrastructure', type: 'assets', category: 'account' },\r\n//         { id: '27', code: '1220', name: 'Furniture & Fixtures', type: 'assets', category: 'account' },\r\n        \r\n//         // Liabilities\r\n//         { id: '28', code: '2110', name: 'Accounts Payable', type: 'liabilities', category: 'account' },\r\n//         { id: '29', code: '2130', name: 'Sales Tax Payable', type: 'liabilities', category: 'account' },\r\n//         { id: '30', code: '2140', name: 'Trade Promotions Payable', type: 'liabilities', category: 'account' },\r\n//         { id: '31', code: '2140', name: 'Payroll Payable', type: 'liabilities', category: 'account' },\r\n//         { id: '33', code: '2140', name: 'Deferred Revenue', type: 'liabilities', category: 'account' },\r\n//         { id: '32', code: '2150', name: 'Insurance Premiums Payable', type: 'liabilities', category: 'account' },\r\n//         { id: '34', code: '2150', name: 'Regulatory Fees Payable', type: 'liabilities', category: 'account' },\r\n        \r\n//         // Equity\r\n//         { id: 'ACC_FC5DC8', code: '3110', name: 'Capital Stock', type: 'equity', category: 'account' },\r\n//         { id: '10', code: '3200', name: 'Retained Earnings', type: 'equity', category: 'account' },\r\n        \r\n//         // Revenue\r\n//         { id: '35', code: '4110', name: 'Food & Beverages Sales', type: 'revenue', category: 'account' },\r\n//         { id: '40', code: '4110', name: 'Mobile Service Revenue', type: 'revenue', category: 'account' },\r\n//         { id: '45', code: '4110', name: 'Consultation Revenue', type: 'revenue', category: 'account' },\r\n//         { id: '36', code: '4120', name: 'Personal Care Sales', type: 'revenue', category: 'account' },\r\n//         { id: '41', code: '4120', name: 'Data Service Revenue', type: 'revenue', category: 'account' },\r\n//         { id: '46', code: '4120', name: 'Diagnostic Revenue', type: 'revenue', category: 'account' },\r\n//         { id: '37', code: '4130', name: 'Household Products Sales', type: 'revenue', category: 'account' },\r\n//         { id: '42', code: '4130', name: 'Equipment Sales', type: 'revenue', category: 'account' },\r\n//         { id: '47', code: '4130', name: 'Pharmaceutical Sales', type: 'revenue', category: 'account' },\r\n//         { id: '38', code: '4140', name: 'Snacks & Confectionery Sales', type: 'revenue', category: 'account' },\r\n//         { id: '43', code: '4140', name: 'Roaming Revenue', type: 'revenue', category: 'account' },\r\n//         { id: '48', code: '4140', name: 'Treatment Revenue', type: 'revenue', category: 'account' },\r\n//         { id: '44', code: '4150', name: 'Enterprise Services', type: 'revenue', category: 'account' },\r\n//         { id: '49', code: '4150', name: 'Insurance Revenue', type: 'revenue', category: 'account' },\r\n//         { id: '39', code: '4180', name: 'Wholesale Revenue', type: 'revenue', category: 'account' },\r\n        \r\n//         // Expenses\r\n//         { id: '50', code: '5100', name: 'Cost of Goods Sold', type: 'expenses', category: 'account' },\r\n//         { id: '51', code: '5200', name: 'Operating Expenses', type: 'expenses', category: 'account' },\r\n//         { id: '56', code: '5200', name: 'Cost of Services', type: 'expenses', category: 'account' },\r\n//         { id: '52', code: '5240', name: 'Freight & Transportation', type: 'expenses', category: 'account' },\r\n//         { id: '57', code: '5240', name: 'Network Maintenance', type: 'expenses', category: 'account' },\r\n//         { id: '60', code: '5240', name: 'Medical Staff Salaries', type: 'expenses', category: 'account' },\r\n//         { id: '53', code: '5250', name: 'Marketing & Advertising', type: 'expenses', category: 'account' },\r\n//         { id: '58', code: '5250', name: 'Licensing Fees', type: 'expenses', category: 'account' },\r\n//         { id: '61', code: '5250', name: 'Equipment Maintenance', type: 'expenses', category: 'account' },\r\n//         { id: '54', code: '5260', name: 'Trade Promotions', type: 'expenses', category: 'account' },\r\n//         { id: '59', code: '5260', name: 'Customer Support', type: 'expenses', category: 'account' },\r\n//         { id: '62', code: '5260', name: 'Medical Supplies', type: 'expenses', category: 'account' },\r\n//         { id: '55', code: '5270', name: 'Shrinkage & Wastage', type: 'expenses', category: 'account' },\r\n//         { id: '63', code: '5270', name: 'License & Compliance', type: 'expenses', category: 'account' }\r\n//       ];\r\n      \r\n//       setAccounts(fallbackAccounts);\r\n//       return fallbackAccounts;\r\n//     }\r\n//   }, []);\r\n\r\n//   // Convert Sales Order to Journal Entry\r\n//   const convertSalesOrderToJournalEntry = useCallback((order, accountsList) => {\r\n//     const entries = [];\r\n    \r\n//     const subTotal = parseFloat(order.subTotal) || 0;\r\n//     const taxAmount = parseFloat(order.taxAmount) || 0;\r\n//     const total = parseFloat(order.total) || 0;\r\n    \r\n//     if (!order.paid || !order.fulfilled || order.status !== 'Closed') {\r\n//       return null;\r\n//     }\r\n    \r\n//     // Enhanced function to find specific accounts from your chart of accounts\r\n//     const findSpecificAccount = (accountId) => {\r\n//       const account = accountsList.find(acc => acc.id === accountId);\r\n//       return account || null;\r\n//     };\r\n    \r\n//     const findAccountByType = (type, preferredCode = null) => {\r\n//       // First try to find the preferred specific account\r\n//       if (preferredCode) {\r\n//         const specificAccount = findSpecificAccount(preferredCode);\r\n//         if (specificAccount) return specificAccount;\r\n//       }\r\n      \r\n//       // Then try to find by type\r\n//       const matchingAccount = accountsList.find(acc => \r\n//         acc.type && acc.type.toLowerCase() === type.toLowerCase()\r\n//       );\r\n      \r\n//       if (matchingAccount) return matchingAccount;\r\n      \r\n//       // Fallback with proper account codes from your chart\r\n//       const fallbackAccounts = {\r\n//         'assets': { id: '1112', code: '1112', name: 'Bank - Main Account', type: 'assets' },\r\n//         'revenue': { id: '4110', code: '4110', name: 'Mobile Service Revenue', type: 'revenue' },\r\n//         'liabilities': { id: '2130', code: '2130', name: 'Sales Tax Payable', type: 'liabilities' },\r\n//         'expenses': { id: '5100', code: '5100', name: 'Cost of Goods Sold', type: 'expenses' }\r\n//       };\r\n      \r\n//       return fallbackAccounts[type.toLowerCase()] || { \r\n//         id: 'UNKNOWN', \r\n//         name: `Unknown ${type} Account`, \r\n//         code: 'N/A' \r\n//       };\r\n//     };\r\n    \r\n//     const cashAccount = findAccountByType('assets');\r\n//     entries.push({\r\n//       accountId: cashAccount.id,\r\n//       accountName: cashAccount.name,\r\n//       accountCode: cashAccount.code,\r\n//       debit: total,\r\n//       credit: 0,\r\n//       description: `Cash received from Order #${order.orderId} - ${order.lineItems.map(item => item.productName).join(', ')}`\r\n//     });\r\n\r\n//     if (subTotal > 0) {\r\n//       const revenueAccount = findAccountByType('revenue');\r\n//       entries.push({\r\n//         accountId: revenueAccount.id,\r\n//         accountName: revenueAccount.name,\r\n//         accountCode: revenueAccount.code,\r\n//         debit: 0,\r\n//         credit: subTotal,\r\n//         description: `Revenue from Order #${order.orderId}`\r\n//       });\r\n//     }\r\n\r\n//     if (taxAmount > 0) {\r\n//       const taxAccount = findAccountByType('liabilities');\r\n//       entries.push({\r\n//         accountId: taxAccount.id,\r\n//         accountName: taxAccount.name,\r\n//         accountCode: taxAccount.code,\r\n//         debit: 0,\r\n//         credit: taxAmount,\r\n//         description: `${order.taxRate}% tax collected on Order #${order.orderId}`\r\n//       });\r\n//     }\r\n\r\n//     let totalCOGS = 0;\r\n//     order.lineItems.forEach(item => {\r\n//       if (item.fulfilled && item.status === 'Fulfilled') {\r\n//         const costPrice = parseFloat(item.costPrice) || 0;\r\n//         const quantity = parseFloat(item.quantity) || 0;\r\n//         const itemCOGS = costPrice * quantity;\r\n//         totalCOGS += itemCOGS;\r\n//       }\r\n//     });\r\n\r\n//     if (totalCOGS > 0) {\r\n//       const cogsAccount = findAccountByType('expenses');\r\n//       entries.push({\r\n//         accountId: cogsAccount.id,\r\n//         accountName: cogsAccount.name,\r\n//         accountCode: cogsAccount.code,\r\n//         debit: totalCOGS,\r\n//         credit: 0,\r\n//         description: `COGS for Order #${order.orderId}`\r\n//       });\r\n\r\n//       const inventoryAccount = findAccountByType('assets');\r\n//       entries.push({\r\n//         accountId: inventoryAccount.id,\r\n//         accountName: inventoryAccount.name,\r\n//         accountCode: inventoryAccount.code,\r\n//         debit: 0,\r\n//         credit: totalCOGS,\r\n//         description: `Inventory reduction - Order #${order.orderId}`\r\n//       });\r\n//     }\r\n\r\n//     const totalDebit = entries.reduce((sum, entry) => sum + parseFloat(entry.debit || 0), 0);\r\n//     const totalCredit = entries.reduce((sum, entry) => sum + parseFloat(entry.credit || 0), 0);\r\n\r\n//     return {\r\n//       id: `JE-ORDER-${order.orderId}`,\r\n//       date: formatDateFromCreatedAt(order.createdAt),\r\n//       description: `Sales Order #${order.orderId} - ${order.lineItems.map(item => `${item.productName} (${item.quantity})`).join(', ')}`,\r\n//       reference: `ORDER-${order.orderId}`,\r\n//       transactionType: 'automatic',\r\n//       source: 'POS Sales',\r\n//       status: 'posted',\r\n//       entries: entries,\r\n//       totalDebit: Math.round(totalDebit * 100) / 100,\r\n//       totalCredit: Math.round(totalCredit * 100) / 100,\r\n//       createdAt: order.createdAt,\r\n//       originalOrder: order\r\n//     };\r\n//   }, []);\r\n\r\n//   // Load Journal Entries from API and Local Storage\r\n//   const loadJournalEntriesFromAPI = useCallback(async () => {\r\n//     setLoading(prev => ({ ...prev, entries: true }));\r\n//     setErrors(prev => ({ ...prev, entries: null }));\r\n    \r\n//     try {\r\n//       const salesOrders = await fetchOrderData();\r\n      \r\n//       if (!salesOrders) {\r\n//         throw new Error('Failed to fetch sales orders');\r\n//       }\r\n      \r\n//       const journalEntriesFromSales = salesOrders\r\n//         .filter(order => order.paid && order.fulfilled && order.status === 'Closed')\r\n//         .map(order => convertSalesOrderToJournalEntry(order, accounts))\r\n//         .filter(entry => entry !== null);\r\n      \r\n//       let manualEntries = [];\r\n//       try {\r\n//         const storedEntries = localStorage.getItem('manualJournalEntries');\r\n//         manualEntries = storedEntries ? JSON.parse(storedEntries) : [];\r\n//       } catch (error) {\r\n//         console.warn('Error loading manual entries from localStorage:', error);\r\n//         manualEntries = [];\r\n//       }\r\n      \r\n//       const allEntries = [...journalEntriesFromSales, ...manualEntries];\r\n      \r\n//       setJournalEntries(allEntries);\r\n//       setFilteredEntries(allEntries);\r\n//       setLoading(prev => ({ ...prev, entries: false }));\r\n//     } catch (error) {\r\n//       console.error('Error loading journal entries:', error);\r\n//       setErrors(prev => ({ ...prev, entries: error.message }));\r\n//       setLoading(prev => ({ ...prev, entries: false }));\r\n//     }\r\n//   }, [accounts, convertSalesOrderToJournalEntry]);\r\n\r\n//   // Filter entries\r\n//   const filterEntries = useCallback(() => {\r\n//     let filtered = [...journalEntries];\r\n\r\n//     if (filters.dateFrom) {\r\n//       filtered = filtered.filter(entry => entry.date >= filters.dateFrom);\r\n//     }\r\n    \r\n//     if (filters.dateTo) {\r\n//       filtered = filtered.filter(entry => entry.date <= filters.dateTo);\r\n//     }\r\n    \r\n//     if (filters.accountId) {\r\n//       filtered = filtered.filter(entry => {\r\n//         return entry.entries.some(e => e.accountId === filters.accountId);\r\n//       });\r\n//     }\r\n    \r\n//     if (filters.transactionType !== 'all') {\r\n//       filtered = filtered.filter(entry => entry.transactionType === filters.transactionType);\r\n//     }\r\n    \r\n//     if (filters.searchTerm) {\r\n//       const term = filters.searchTerm.toLowerCase();\r\n//       filtered = filtered.filter(entry => \r\n//         entry.description.toLowerCase().includes(term) ||\r\n//         entry.reference.toLowerCase().includes(term) ||\r\n//         entry.entries.some(e => e.description.toLowerCase().includes(term))\r\n//       );\r\n//     }\r\n\r\n//     setFilteredEntries(filtered);\r\n//   }, [journalEntries, filters]);\r\n\r\n//   // Generate trial balance\r\n//   const generateTrialBalance = useCallback(() => {\r\n//     const balances = {};\r\n    \r\n//     const requiredAccountIds = new Set();\r\n    \r\n//     journalEntries.forEach(entry => {\r\n//       if (entry.status === 'posted') {\r\n//         entry.entries.forEach(entryLine => {\r\n//           if (entryLine.accountId) {\r\n//             requiredAccountIds.add(entryLine.accountId);\r\n//           }\r\n//         });\r\n//       }\r\n//     });\r\n    \r\n//     const accountTypesMap = {};\r\n//     accounts.forEach(account => {\r\n//       accountTypesMap[account.id] = account.type;\r\n//       accountTypesMap[account.code] = account.type;\r\n//     });\r\n    \r\n//     accounts.forEach(account => {\r\n//       if (account.category !== 'header') {\r\n//         balances[account.id] = {\r\n//           accountId: account.id,\r\n//           accountCode: account.code,\r\n//           accountName: account.name,\r\n//           accountType: account.type || 'unknown',\r\n//           debit: 0,\r\n//           credit: 0,\r\n//           balance: 0\r\n//         };\r\n//       }\r\n//     });\r\n    \r\n//     requiredAccountIds.forEach(accountId => {\r\n//       if (!balances[accountId]) {\r\n//         let accountName = '';\r\n//         let accountType = '';\r\n        \r\n//         journalEntries.forEach(entry => {\r\n//           entry.entries.forEach(entryLine => {\r\n//             if (entryLine.accountId === accountId) {\r\n//               if (entryLine.accountName) accountName = entryLine.accountName;\r\n//             }\r\n//           });\r\n//         });\r\n        \r\n//         const prefix = accountId.toString().substring(0, 1);\r\n//         if (prefix === '1') accountType = 'assets';\r\n//         else if (prefix === '2') accountType = 'liabilities';\r\n//         else if (prefix === '3') accountType = 'equity';\r\n//         else if (prefix === '4') accountType = 'revenue';\r\n//         else if (prefix === '5') accountType = 'expenses';\r\n//         else accountType = accountTypesMap[accountId] || 'unknown';\r\n        \r\n//         balances[accountId] = {\r\n//           accountId: accountId,\r\n//           accountCode: accountId,\r\n//           accountName: accountName || `Account ${accountId}`,\r\n//           accountType: accountType,\r\n//           debit: 0,\r\n//           credit: 0,\r\n//           balance: 0\r\n//         };\r\n//       }\r\n//     });\r\n    \r\n//     journalEntries.forEach(entry => {\r\n//       if (entry.status === 'posted') {\r\n//         entry.entries.forEach(entryLine => {\r\n//           const accountId = entryLine.accountId;\r\n//           if (balances[accountId]) {\r\n//             balances[accountId].debit += parseFloat(entryLine.debit || 0);\r\n//             balances[accountId].credit += parseFloat(entryLine.credit || 0);\r\n            \r\n//             if (entryLine.accountName && !balances[accountId].accountName) {\r\n//               balances[accountId].accountName = entryLine.accountName;\r\n//             }\r\n//           }\r\n//         });\r\n//       }\r\n//     });\r\n\r\n//     Object.values(balances).forEach(account => {\r\n//       if (account.accountType === 'assets' || account.accountType === 'expenses') {\r\n//         account.balance = account.debit - account.credit;\r\n//       } else {\r\n//         account.balance = account.credit - account.debit;\r\n//       }\r\n//     });\r\n\r\n//     const trialBalanceData = Object.values(balances)\r\n//       .filter(account => account.debit > 0 || account.credit > 0)\r\n//       .sort((a, b) => a.accountCode.localeCompare(b.accountCode));\r\n    \r\n//     setTrialBalance(trialBalanceData);\r\n//     setShowTrialBalance(true);\r\n//   }, [accounts, journalEntries]);\r\n\r\n//   // Helper functions for entry management\r\n//   const addEntryLine = () => {\r\n//     setNewEntry({\r\n//       ...newEntry,\r\n//       entries: [...newEntry.entries, { accountId: '', debit: 0, credit: 0, description: '' }]\r\n//     });\r\n//   };\r\n\r\n//   const removeEntryLine = (index) => {\r\n//     if (newEntry.entries.length > 2) {\r\n//       const updatedEntries = newEntry.entries.filter((_, i) => i !== index);\r\n//       setNewEntry({ ...newEntry, entries: updatedEntries });\r\n//     }\r\n//   };\r\n\r\n//   const updateEntryLine = (index, field, value) => {\r\n//     const updatedEntries = [...newEntry.entries];\r\n//     updatedEntries[index] = { ...updatedEntries[index], [field]: value };\r\n//     setNewEntry({ ...newEntry, entries: updatedEntries });\r\n//   };\r\n\r\n//   const calculateTotals = (entries) => {\r\n//     const totalDebit = entries.reduce((sum, entry) => sum + (parseFloat(entry.debit) || 0), 0);\r\n//     const totalCredit = entries.reduce((sum, entry) => sum + (parseFloat(entry.credit) || 0), 0);\r\n//     return { totalDebit, totalCredit };\r\n//   };\r\n\r\n//   const isBalanced = (entries) => {\r\n//     const { totalDebit, totalCredit } = calculateTotals(entries);\r\n//     return Math.abs(totalDebit - totalCredit) < 0.01;\r\n//   };\r\n\r\n//   const saveJournalEntry = () => {\r\n//     if (!newEntry.description || !newEntry.entries.every(e => e.accountId)) {\r\n//       alert('Please fill in all required fields');\r\n//       return;\r\n//     }\r\n\r\n//     if (!isBalanced(newEntry.entries)) {\r\n//       alert('Journal entry must be balanced - total debits must equal total credits');\r\n//       return;\r\n//     }\r\n\r\n//     const { totalDebit, totalCredit } = calculateTotals(newEntry.entries);\r\n    \r\n//     const entriesWithNames = newEntry.entries.map(entry => ({\r\n//       ...entry,\r\n//       accountName: accounts.find(acc => acc.id === entry.accountId)?.name || '',\r\n//       debit: parseFloat(entry.debit) || 0,\r\n//       credit: parseFloat(entry.credit) || 0\r\n//     }));\r\n\r\n//     const journalEntry = {\r\n//       id: `JE-MANUAL-${Date.now()}`,\r\n//       date: newEntry.date,\r\n//       description: newEntry.description,\r\n//       reference: newEntry.reference || `MAN${Date.now()}`,\r\n//       transactionType: 'manual',\r\n//       source: 'Manual',\r\n//       status: 'posted',\r\n//       entries: entriesWithNames,\r\n//       totalDebit,\r\n//       totalCredit,\r\n//       createdAt: new Date().toISOString()\r\n//     };\r\n\r\n//     try {\r\n//       const existingManualEntries = JSON.parse(localStorage.getItem('manualJournalEntries') || '[]');\r\n//       const updatedManualEntries = [...existingManualEntries, journalEntry];\r\n//       localStorage.setItem('manualJournalEntries', JSON.stringify(updatedManualEntries));\r\n//     } catch (error) {\r\n//       console.warn('Could not save to localStorage:', error);\r\n//     }\r\n\r\n//     setJournalEntries([...journalEntries, journalEntry]);\r\n    \r\n//     setNewEntry({\r\n//       date: new Date().toISOString().split('T')[0],\r\n//       description: '',\r\n//       reference: '',\r\n//       entries: [\r\n//         { accountId: '', debit: 0, credit: 0, description: '' },\r\n//         { accountId: '', debit: 0, credit: 0, description: '' }\r\n//       ]\r\n//     });\r\n//     setIsAddingEntry(false);\r\n//   };\r\n\r\n//   const getAccountName = useCallback((accountId) => {\r\n//     const account = accounts.find(acc => acc.id === accountId || acc.code === accountId);\r\n    \r\n//     if (account) {\r\n//       return `${account.code} - ${account.name}`;\r\n//     }\r\n    \r\n//     let accountName = '';\r\n    \r\n//     journalEntries.forEach(entry => {\r\n//       entry.entries.forEach(entryLine => {\r\n//         if (entryLine.accountId === accountId && entryLine.accountName) {\r\n//           accountName = entryLine.accountName;\r\n//         }\r\n//       });\r\n//     });\r\n    \r\n//     if (accountName) {\r\n//       return `${accountId} - ${accountName}`;\r\n//     }\r\n    \r\n//     const prefix = accountId.toString().substring(0, 1);\r\n//     let accountType = '';\r\n    \r\n//     if (prefix === '1') accountType = 'Assets';\r\n//     else if (prefix === '2') accountType = 'Liabilities';\r\n//     else if (prefix === '3') accountType = 'Equity';\r\n//     else if (prefix === '4') accountType = 'Revenue';\r\n//     else if (prefix === '5') accountType = 'Expenses';\r\n    \r\n//     return accountType ? `${accountId} - ${accountType} Account` : `${accountId} - Unknown Account`;\r\n//   }, [accounts, journalEntries]);\r\n\r\n//   // useEffect hooks\r\n//   useEffect(() => {\r\n//     loadChartsOfAccounts();\r\n//   }, [loadChartsOfAccounts]);\r\n\r\n//   useEffect(() => {\r\n//     if (accounts.length > 0) {\r\n//       loadJournalEntriesFromAPI();\r\n//     }\r\n//   }, [accounts, loadJournalEntriesFromAPI]);\r\n\r\n//   useEffect(() => {\r\n//     if (journalEntries.length > 0) {\r\n//       filterEntries();\r\n//     }\r\n//   }, [journalEntries, filters, filterEntries]);\r\n\r\n//   const { totalDebit, totalCredit } = calculateTotals(newEntry.entries);\r\n//   const entryIsBalanced = isBalanced(newEntry.entries);\r\n\r\n//   return (\r\n//     <div className=\"max-w-7xl mx-auto p-6 bg-white\">\r\n//       {/* Header */}\r\n//       <div className=\"mb-8\">\r\n//         <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\r\n//           <Book className=\"mr-3 text-emerald-600\" />\r\n//           General Ledger\r\n//         </h1>\r\n//         <p className=\"text-gray-600\">Real-time transaction recording and journal entry management</p>\r\n        \r\n//         {loading.accounts && (\r\n//           <div className=\"mt-2 p-2 bg-blue-50 text-blue-700 rounded-md text-sm flex items-center\">\r\n//             <RefreshCw className=\"animate-spin mr-2\" size={16} />\r\n//             Loading chart of accounts...\r\n//           </div>\r\n//         )}\r\n        \r\n//         {errors.accounts && (\r\n//           <div className=\"mt-2 p-2 bg-red-50 text-red-700 rounded-md text-sm flex items-center\">\r\n//             <AlertCircle className=\"mr-2\" size={16} />\r\n//             Error loading accounts: {errors.accounts}\r\n//           </div>\r\n//         )}\r\n\r\n//         {loading.entries && (\r\n//           <div className=\"mt-2 p-2 bg-blue-50 text-blue-700 rounded-md text-sm flex items-center\">\r\n//             <RefreshCw className=\"animate-spin mr-2\" size={16} />\r\n//             Loading journal entries...\r\n//           </div>\r\n//         )}\r\n        \r\n//         {errors.entries && (\r\n//           <div className=\"mt-2 p-2 bg-red-50 text-red-700 rounded-md text-sm flex items-center\">\r\n//             <AlertCircle className=\"mr-2\" size={16} />\r\n//             Error loading entries: {errors.entries}\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n\r\n//       {/* Quick Stats */}\r\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\r\n//         <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-blue-600 text-sm font-medium\">Total Entries</p>\r\n//               <p className=\"text-2xl font-bold text-blue-900\">{journalEntries.length}</p>\r\n//             </div>\r\n//             <FileText className=\"text-blue-600\" size={24} />\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"bg-green-50 p-4 rounded-lg border border-green-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-green-600 text-sm font-medium\">POS Entries</p>\r\n//               <p className=\"text-2xl font-bold text-green-900\">\r\n//                 {journalEntries.filter(e => e.source === 'POS Sales').length}\r\n//               </p>\r\n//             </div>\r\n//             <TrendingUp className=\"text-green-600\" size={24} />\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"bg-orange-50 p-4 rounded-lg border border-orange-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-orange-600 text-sm font-medium\">Manual Entries</p>\r\n//               <p className=\"text-2xl font-bold text-orange-900\">\r\n//                 {journalEntries.filter(e => e.transactionType === 'manual').length}\r\n//               </p>\r\n//             </div>\r\n//             <Edit className=\"text-orange-600\" size={24} />\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"bg-purple-50 p-4 rounded-lg border border-purple-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-purple-600 text-sm font-medium\">Total Value</p>\r\n//               <p className=\"text-2xl font-bold text-purple-900\">\r\n//                 PKR {journalEntries.reduce((sum, entry) => sum + entry.totalDebit, 0).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n//               </p>\r\n//             </div>\r\n//             <DollarSign className=\"text-purple-600\" size={24} />\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Controls */}\r\n//       <div className=\"flex flex-wrap items-center justify-between gap-4 mb-6\">\r\n//         <div className=\"flex flex-wrap items-center gap-4\">\r\n//           {/* Date Filters */}\r\n//           <div className=\"flex items-center space-x-2\">\r\n//             <Calendar size={16} className=\"text-gray-400\" />\r\n//             <input\r\n//               type=\"date\"\r\n//               value={filters.dateFrom}\r\n//               onChange={(e) => setFilters({ ...filters, dateFrom: e.target.value })}\r\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               placeholder=\"From\"\r\n//             />\r\n//             <span className=\"text-gray-500\">to</span>\r\n//             <input\r\n//               type=\"date\"\r\n//               value={filters.dateTo}\r\n//               onChange={(e) => setFilters({ ...filters, dateTo: e.target.value })}\r\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               placeholder=\"To\"\r\n//             />\r\n//           </div>\r\n\r\n//           {/* Account Filter */}\r\n//           <div className=\"relative\">\r\n//             <Filter className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n//             <select\r\n//               value={filters.accountId}\r\n//               onChange={(e) => setFilters({ ...filters, accountId: e.target.value })}\r\n//               className=\"pl-10 pr-8 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//             >\r\n//               <option value=\"\">All Accounts</option>\r\n              \r\n//               {/* Group accounts by type for better organization */}\r\n//               {accounts.length > 0 && (\r\n//                 <>\r\n//                   {/* Assets */}\r\n//                   <optgroup label=\"Assets\">\r\n//                     {accounts\r\n//                       .filter(acc => acc.type === 'assets' && acc.category === 'account')\r\n//                       .map(account => (\r\n//                         <option key={account.id} value={account.id}>\r\n//                           {account.code} - {account.name}\r\n//                         </option>\r\n//                       ))}\r\n//                   </optgroup>\r\n                  \r\n//                   {/* Liabilities */}\r\n//                   <optgroup label=\"Liabilities\">\r\n//                     {accounts\r\n//                       .filter(acc => acc.type === 'liabilities' && acc.category === 'account')\r\n//                       .map(account => (\r\n//                         <option key={account.id} value={account.id}>\r\n//                           {account.code} - {account.name}\r\n//                         </option>\r\n//                       ))}\r\n//                   </optgroup>\r\n                  \r\n//                   {/* Equity */}\r\n//                   <optgroup label=\"Equity\">\r\n//                     {accounts\r\n//                       .filter(acc => acc.type === 'equity' && acc.category === 'account')\r\n//                       .map(account => (\r\n//                         <option key={account.id} value={account.id}>\r\n//                           {account.code} - {account.name}\r\n//                         </option>\r\n//                       ))}\r\n//                   </optgroup>\r\n                  \r\n//                   {/* Revenue */}\r\n//                   <optgroup label=\"Revenue\">\r\n//                     {accounts\r\n//                       .filter(acc => acc.type === 'revenue' && acc.category === 'account')\r\n//                       .map(account => (\r\n//                         <option key={account.id} value={account.id}>\r\n//                           {account.code} - {account.name}\r\n//                         </option>\r\n//                       ))}\r\n//                   </optgroup>\r\n                  \r\n//                   {/* Expenses */}\r\n//                   <optgroup label=\"Expenses\">\r\n//                     {accounts\r\n//                       .filter(acc => acc.type === 'expenses' && acc.category === 'account')\r\n//                       .map(account => (\r\n//                         <option key={account.id} value={account.id}>\r\n//                           {account.code} - {account.name}\r\n//                         </option>\r\n//                       ))}\r\n//                   </optgroup>\r\n//                 </>\r\n//               )}\r\n              \r\n//               {accounts.length === 0 && (\r\n//                 <option disabled>Loading accounts...</option>\r\n//               )}\r\n//             </select>\r\n//           </div>\r\n\r\n//           {/* Transaction Type Filter */}\r\n//           <select\r\n//             value={filters.transactionType}\r\n//             onChange={(e) => setFilters({ ...filters, transactionType: e.target.value })}\r\n//             className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//           >\r\n//             <option value=\"all\">All Types</option>\r\n//             <option value=\"automatic\">POS Sales</option>\r\n//             <option value=\"manual\">Manual</option>\r\n//           </select>\r\n\r\n//           {/* Search */}\r\n//           <div className=\"relative\">\r\n//             <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Search entries...\"\r\n//               value={filters.searchTerm}\r\n//               onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\r\n//               className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//             />\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"flex space-x-3\">\r\n//           <button\r\n//             onClick={loadJournalEntriesFromAPI}\r\n//             disabled={loading.entries}\r\n//             className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2 disabled:bg-gray-400\"\r\n//           >\r\n//             {loading.entries ? <RefreshCw className=\"animate-spin\" size={16} /> : <RefreshCw size={16} />}\r\n//             <span>Refresh from API</span>\r\n//           </button>\r\n//           <button\r\n//             onClick={loadChartsOfAccounts}\r\n//             disabled={loading.accounts}\r\n//             className=\"px-4 py-2 bg-teal-600 text-white rounded-lg hover:bg-teal-700 flex items-center space-x-2 disabled:bg-gray-400\"\r\n//           >\r\n//             {loading.accounts ? <RefreshCw className=\"animate-spin\" size={16} /> : <RefreshCw size={16} />}\r\n//             <span>Refresh Accounts</span>\r\n//           </button>\r\n//           <button\r\n//             onClick={() => {\r\n//               setFilters({\r\n//                 dateFrom: '',\r\n//                 dateTo: '',\r\n//                 accountId: '',\r\n//                 transactionType: 'all',\r\n//                 searchTerm: ''\r\n//               });\r\n//               setFilteredEntries([...journalEntries]);\r\n//             }}\r\n//             className=\"px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 flex items-center space-x-2\"\r\n//           >\r\n//             <X size={16} />\r\n//             <span>Clear Filters</span>\r\n//           </button>\r\n//           <button\r\n//             onClick={() => setIsAddingEntry(true)}\r\n//             className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\r\n//           >\r\n//             <Plus size={16} />\r\n//             <span>Add Entry</span>\r\n//           </button>\r\n//           <button\r\n//             onClick={generateTrialBalance}\r\n//             className=\"px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 flex items-center space-x-2\"\r\n//           >\r\n//             <FileText size={16} />\r\n//             <span>Trial Balance</span>\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Journal Entry Form */}\r\n//       {isAddingEntry && (\r\n//         <div className=\"mb-8 p-6 bg-gray-50 rounded-lg border\">\r\n//           <h3 className=\"text-lg font-semibold mb-4\">Add Manual Journal Entry</h3>\r\n          \r\n//           <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\r\n//             <div>\r\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Date *</label>\r\n//               <input\r\n//                 type=\"date\"\r\n//                 value={newEntry.date}\r\n//                 onChange={(e) => setNewEntry({ ...newEntry, date: e.target.value })}\r\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               />\r\n//             </div>\r\n//             <div>\r\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Description *</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 value={newEntry.description}\r\n//                 onChange={(e) => setNewEntry({ ...newEntry, description: e.target.value })}\r\n//                 placeholder=\"Enter description\"\r\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               />\r\n//             </div>\r\n//             <div>\r\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Reference</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 value={newEntry.reference}\r\n//                 onChange={(e) => setNewEntry({ ...newEntry, reference: e.target.value })}\r\n//                 placeholder=\"Reference number\"\r\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               />\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* Entry Lines */}\r\n//           <div className=\"mb-4\">\r\n//             <label className=\"block text-sm font-medium text-gray-700 mb-2\">Journal Entry Lines</label>\r\n//             <div className=\"space-y-3\">\r\n//               {newEntry.entries.map((entry, index) => (\r\n//                 <div key={index} className=\"grid grid-cols-12 gap-2 items-center bg-white p-3 rounded border\">\r\n//                   <div className=\"col-span-4\">\r\n//                     <select\r\n//                       value={entry.accountId}\r\n//                       onChange={(e) => updateEntryLine(index, 'accountId', e.target.value)}\r\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                     >\r\n//                       <option value=\"\">Select Account</option>\r\n                      \r\n//                       {accounts.length > 0 && (\r\n//                         <>\r\n//                           {/* Assets */}\r\n//                           <optgroup label=\"Assets\">\r\n//                             {accounts\r\n//                               .filter(acc => acc.type === 'assets' && acc.category === 'account')\r\n//                               .map(account => (\r\n//                                 <option key={account.id} value={account.id}>\r\n//                                   {account.code} - {account.name}\r\n//                                 </option>\r\n//                               ))}\r\n//                           </optgroup>\r\n                          \r\n//                           {/* Liabilities */}\r\n//                           <optgroup label=\"Liabilities\">\r\n//                             {accounts\r\n//                               .filter(acc => acc.type === 'liabilities' && acc.category === 'account')\r\n//                               .map(account => (\r\n//                                 <option key={account.id} value={account.id}>\r\n//                                   {account.code} - {account.name}\r\n//                                 </option>\r\n//                               ))}\r\n//                           </optgroup>\r\n                          \r\n//                           {/* Equity */}\r\n//                           <optgroup label=\"Equity\">\r\n//                             {accounts\r\n//                               .filter(acc => acc.type === 'equity' && acc.category === 'account')\r\n//                               .map(account => (\r\n//                                 <option key={account.id} value={account.id}>\r\n//                                   {account.code} - {account.name}\r\n//                                 </option>\r\n//                               ))}\r\n//                           </optgroup>\r\n                          \r\n//                           {/* Revenue */}\r\n//                           <optgroup label=\"Revenue\">\r\n//                             {accounts\r\n//                               .filter(acc => acc.type === 'revenue' && acc.category === 'account')\r\n//                               .map(account => (\r\n//                                 <option key={account.id} value={account.id}>\r\n//                                   {account.code} - {account.name}\r\n//                                 </option>\r\n//                               ))}\r\n//                           </optgroup>\r\n                          \r\n//                           {/* Expenses */}\r\n//                           <optgroup label=\"Expenses\">\r\n//                             {accounts\r\n//                               .filter(acc => acc.type === 'expenses' && acc.category === 'account')\r\n//                               .map(account => (\r\n//                                 <option key={account.id} value={account.id}>\r\n//                                   {account.code} - {account.name}\r\n//                                 </option>\r\n//                               ))}\r\n//                           </optgroup>\r\n//                         </>\r\n//                       )}\r\n                      \r\n//                       {accounts.length === 0 && (\r\n//                         <option disabled>Loading accounts...</option>\r\n//                       )}\r\n//                     </select>\r\n//                   </div>\r\n//                   <div className=\"col-span-3\">\r\n//                     <input\r\n//                       type=\"text\"\r\n//                       value={entry.description}\r\n//                       onChange={(e) => updateEntryLine(index, 'description', e.target.value)}\r\n//                       placeholder=\"Description\"\r\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                     />\r\n//                   </div>\r\n//                   <div className=\"col-span-2\">\r\n//                     <input\r\n//                       type=\"number\"\r\n//                       step=\"0.01\"\r\n//                       value={entry.debit}\r\n//                       onChange={(e) => updateEntryLine(index, 'debit', e.target.value)}\r\n//                       placeholder=\"Debit\"\r\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                     />\r\n//                   </div>\r\n//                   <div className=\"col-span-2\">\r\n//                     <input\r\n//                       type=\"number\"\r\n//                       step=\"0.01\"\r\n//                       value={entry.credit}\r\n//                       onChange={(e) => updateEntryLine(index, 'credit', e.target.value)}\r\n//                       placeholder=\"Credit\"\r\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                     />\r\n//                   </div>\r\n//                   <div className=\"col-span-1\">\r\n//                     {newEntry.entries.length > 2 && (\r\n//                       <button\r\n//                         onClick={() => removeEntryLine(index)}\r\n//                         className=\"p-1 text-red-600 hover:bg-red-100 rounded\"\r\n//                       >\r\n//                         <Trash2 size={14} />\r\n//                       </button>\r\n//                     )}\r\n//                   </div>\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n\r\n//             <div className=\"flex justify-between items-center mt-3\">\r\n//               <button\r\n//                 onClick={addEntryLine}\r\n//                 className=\"px-3 py-1 text-sm bg-gray-200 text-gray-700 rounded hover:bg-gray-300 flex items-center space-x-1\"\r\n//               >\r\n//                 <Plus size={14} />\r\n//                 <span>Add Line</span>\r\n//               </button>\r\n\r\n//               <div className=\"flex items-center space-x-4\">\r\n//                 <div className=\"text-sm\">\r\n//                   <span className=\"font-medium\">Total Debit: PKR {totalDebit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}</span>\r\n//                   <span className=\"mx-2\">|</span>\r\n//                   <span className=\"font-medium\">Total Credit: PKR {totalCredit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}</span>\r\n//                 </div>\r\n//                 {entryIsBalanced ? (\r\n//                   <div className=\"flex items-center text-green-600\">\r\n//                     <CheckCircle size={16} className=\"mr-1\" />\r\n//                     <span className=\"text-sm\">Balanced</span>\r\n//                   </div>\r\n//                 ) : (\r\n//                   <div className=\"flex items-center text-red-600\">\r\n//                     <AlertCircle size={16} className=\"mr-1\" />\r\n//                     <span className=\"text-sm\">Not Balanced</span>\r\n//                   </div>\r\n//                 )}\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n\r\n//           <div className=\"flex space-x-3\">\r\n//             <button\r\n//               onClick={saveJournalEntry}\r\n//               disabled={!entryIsBalanced}\r\n//               className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 disabled:bg-gray-400 flex items-center space-x-2\"\r\n//             >\r\n//               <Save size={16} />\r\n//               <span>Save Entry</span>\r\n//             </button>\r\n//             <button\r\n//               onClick={() => setIsAddingEntry(false)}\r\n//               className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\"\r\n//             >\r\n//               <X size={16} />\r\n//               <span>Cancel</span>\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Journal Entries Table */}\r\n//       <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//         <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//           <h2 className=\"text-lg font-semibold text-gray-900\">Journal Entries</h2>\r\n//           <p className=\"text-sm text-gray-600 mt-1\">\r\n//             Showing {filteredEntries.length} of {journalEntries.length} entries\r\n//           </p>\r\n//         </div>\r\n\r\n//         <div className=\"overflow-x-auto\">\r\n//           <table className=\"w-full\">\r\n//             <thead className=\"bg-gray-50\">\r\n//               <tr>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Entry ID\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Date\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Description\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Reference\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Source\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Amount\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Status\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Actions\r\n//                 </th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//               {filteredEntries.map((entry) => (\r\n//                 <tr key={entry.id} className=\"hover:bg-gray-50\">\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n//                     {entry.id}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                     {entry.date}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 text-sm text-gray-900 max-w-xs truncate\">\r\n//                     {entry.description}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                     {entry.reference}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                       entry.source === 'POS Sales' ? 'bg-green-100 text-green-800' : \r\n//                       entry.source === 'Manual' ? 'bg-orange-100 text-orange-800' :\r\n//                       'bg-blue-100 text-blue-800'\r\n//                     }`}>\r\n//                       {entry.source}\r\n//                     </span>\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                     PKR {entry.totalDebit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                       entry.status === 'posted' ? 'bg-blue-100 text-blue-800' : 'bg-yellow-100 text-yellow-800'\r\n//                     }`}>\r\n//                       {entry.status}\r\n//                     </span>\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n//                     <button\r\n//                       onClick={() => setSelectedEntry(entry)}\r\n//                       className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\r\n//                     >\r\n//                       <Eye size={16} />\r\n//                     </button>\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Entry Details Modal */}\r\n//       {selectedEntry && (\r\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\r\n//                   Journal Entry Details - {selectedEntry.id}\r\n//                 </h3>\r\n//                 <button\r\n//                   onClick={() => setSelectedEntry(null)}\r\n//                   className=\"text-gray-400 hover:text-gray-600\"\r\n//                 >\r\n//                   <X size={20} />\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <div className=\"px-6 py-4\">\r\n//               {/* Entry Header */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\r\n//                 <div>\r\n//                   <label className=\"text-sm font-medium text-gray-500\">Date</label>\r\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.date}</p>\r\n//                 </div>\r\n//                 <div>\r\n//                   <label className=\"text-sm font-medium text-gray-500\">Reference</label>\r\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.reference}</p>\r\n//                 </div>\r\n//                 <div>\r\n//                   <label className=\"text-sm font-medium text-gray-500\">Description</label>\r\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.description}</p>\r\n//                 </div>\r\n//                 <div>\r\n//                   <label className=\"text-sm font-medium text-gray-500\">Source</label>\r\n//                   <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                     selectedEntry.source === 'POS Sales' ? 'bg-green-100 text-green-800' : 'bg-orange-100 text-orange-800'\r\n//                   }`}>\r\n//                     {selectedEntry.source}\r\n//                   </span>\r\n//                 </div>\r\n//               </div>\r\n              \r\n//               {/* Entry Lines */}\r\n//               <div className=\"mb-6\">\r\n//                 <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Account Entries</h4>\r\n//                 <div className=\"overflow-x-auto\">\r\n//                   <table className=\"w-full border border-gray-200 rounded\">\r\n//                     <thead className=\"bg-gray-50\">\r\n//                       <tr>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Account</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Description</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Debit</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Credit</th>\r\n//                       </tr>\r\n//                     </thead>\r\n//                     <tbody className=\"divide-y divide-gray-200\">\r\n//                       {selectedEntry.entries.map((entryLine, index) => (\r\n//                         <tr key={index}>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900\">\r\n//                             {getAccountName(entryLine.accountId)}\r\n//                           </td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-600\">\r\n//                             {entryLine.description}\r\n//                           </td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">\r\n//                             {entryLine.debit > 0 ? `${entryLine.debit.toFixed(2)}` : '-'}\r\n//                           </td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">\r\n//                             {entryLine.credit > 0 ? `${entryLine.credit.toFixed(2)}` : '-'}\r\n//                           </td>\r\n//                         </tr>\r\n//                       ))}\r\n//                     </tbody>\r\n//                     <tfoot className=\"bg-gray-50\">\r\n//                       <tr>\r\n//                         <td colSpan=\"2\" className=\"px-4 py-2 text-sm font-medium text-gray-900\">\r\n//                           Totals:\r\n//                         </td>\r\n//                         <td className=\"px-4 py-2 text-sm font-bold text-gray-900 text-right\">\r\n//                           PKR {selectedEntry.totalDebit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n//                         </td>\r\n//                         <td className=\"px-4 py-2 text-sm font-bold text-gray-900 text-right\">\r\n//                           PKR {selectedEntry.totalCredit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n//                         </td>\r\n//                       </tr>\r\n//                     </tfoot>\r\n//                   </table>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Original Order Info (if available) */}\r\n//               {selectedEntry.originalOrder && (\r\n//                 <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\r\n//                   <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Original Sales Order Details</h4>\r\n//                   <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\r\n//                     <div>\r\n//                       <span className=\"font-medium text-gray-500\">Order ID:</span>\r\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.orderId}</p>\r\n//                     </div>\r\n//                     <div>\r\n//                       <span className=\"font-medium text-gray-500\">Status:</span>\r\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.status}</p>\r\n//                     </div>\r\n//                     <div>\r\n//                       <span className=\"font-medium text-gray-500\">Payment Status:</span>\r\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.paid ? 'Paid' : 'Unpaid'}</p>\r\n//                     </div>\r\n//                     <div>\r\n//                       <span className=\"font-medium text-gray-500\">Fulfilled:</span>\r\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.fulfilled ? 'Yes' : 'No'}</p>\r\n//                     </div>\r\n//                   </div>\r\n                  \r\n//                   {/* Line Items */}\r\n//                   <div className=\"mt-4\">\r\n//                     <span className=\"font-medium text-gray-500\">Line Items:</span>\r\n//                     <div className=\"mt-2 space-y-2\">\r\n//                       {selectedEntry.originalOrder.lineItems.map((item, index) => (\r\n//                         <div key={index} className=\"text-sm bg-white p-2 rounded border\">\r\n//                           <span className=\"font-medium\">{item.productName}</span> - \r\n//                           Qty: {item.quantity}, Price: PKR {parseFloat(item.price).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}, \r\n//                           Total: PKR {parseFloat(item.total).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n//                           {item.taxAmount > 0 && <span className=\"text-gray-500\"> (Tax: PKR {parseFloat(item.taxAmount).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})})</span>}\r\n//                         </div>\r\n//                       ))}\r\n//                     </div>\r\n//                   </div>\r\n//                 </div>\r\n//               )}\r\n\r\n//               {/* Entry Metadata */}\r\n//               <div className=\"text-xs text-gray-500\">\r\n//                 <p>Created: {new Date(selectedEntry.createdAt).toLocaleString()}</p>\r\n//                 <p>Status: {selectedEntry.status}</p>\r\n//                 <p>Type: {selectedEntry.transactionType}</p>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Trial Balance Modal */}\r\n//       {showTrialBalance && (\r\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-lg max-w-5xl w-full max-h-[90vh] overflow-y-auto\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\r\n//                   Trial Balance - As of {new Date().toLocaleDateString()}\r\n//                 </h3>\r\n//                 <div className=\"flex items-center space-x-2\">\r\n//                   <button\r\n//                     onClick={() => {\r\n//                       alert('Export functionality would be implemented here');\r\n//                     }}\r\n//                     className=\"px-3 py-1 bg-emerald-600 text-white rounded text-sm hover:bg-emerald-700 flex items-center space-x-1\"\r\n//                   >\r\n//                     <Download size={14} />\r\n//                     <span>Export</span>\r\n//                   </button>\r\n//                   <button\r\n//                     onClick={() => setShowTrialBalance(false)}\r\n//                     className=\"text-gray-400 hover:text-gray-600\"\r\n//                   >\r\n//                     <X size={20} />\r\n//                   </button>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <div className=\"px-6 py-4\">\r\n//               <div className=\"overflow-x-auto\">\r\n//                 <table className=\"w-full\">\r\n//                   <thead className=\"bg-gray-50\">\r\n//                     <tr>\r\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Account Code\r\n//                       </th>\r\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Account Name\r\n//                       </th>\r\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Type\r\n//                       </th>\r\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Debit Total\r\n//                       </th>\r\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Credit Total\r\n//                       </th>\r\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Balance\r\n//                       </th>\r\n//                     </tr>\r\n//                   </thead>\r\n//                   <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//                     {trialBalance.map((item) => (\r\n//                       <tr key={item.accountId}>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n//                           {item.accountCode}\r\n//                         </td>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                           {item.accountName}\r\n//                         </td>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap\">\r\n//                           <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                             item.accountType === 'assets' ? 'bg-green-100 text-green-800' :\r\n//                             item.accountType === 'liabilities' ? 'bg-red-100 text-red-800' :\r\n//                             item.accountType === 'equity' ? 'bg-blue-100 text-blue-800' :\r\n//                             item.accountType === 'revenue' ? 'bg-purple-100 text-purple-800' :\r\n//                             item.accountType === 'expenses' ? 'bg-orange-100 text-orange-800' :\r\n//                             'bg-gray-100 text-gray-800'\r\n//                           }`}>\r\n//                             {typeof item.accountType === 'string' && item.accountType.length > 0 \r\n//                               ? item.accountType.charAt(0).toUpperCase() + item.accountType.slice(1)\r\n//                               : 'Unknown'}\r\n//                           </span>\r\n//                         </td>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\r\n//                           PKR {item.debit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n//                         </td>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\r\n//                           PKR {item.credit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n//                         </td>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-right\">\r\n//                           <span className={item.balance >= 0 ? 'text-green-600' : 'text-red-600'}>\r\n//                             PKR {Math.abs(item.balance).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n//                             {item.balance < 0 && ' (CR)'}\r\n//                           </span>\r\n//                         </td>\r\n//                       </tr>\r\n//                     ))}\r\n//                   </tbody>\r\n//                   <tfoot className=\"bg-gray-50\">\r\n//                     <tr>\r\n//                       <td colSpan=\"3\" className=\"px-4 py-3 text-sm font-bold text-gray-900\">\r\n//                         TOTALS:\r\n//                       </td>\r\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\r\n//                         PKR {trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n//                       </td>\r\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\r\n//                         PKR {trialBalance.reduce((sum, acc) => sum + acc.credit, 0).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n//                       </td>\r\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\r\n//                         PKR {Math.abs(trialBalance.reduce((sum, acc) => sum + acc.balance, 0)).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n//                       </td>\r\n//                     </tr>\r\n//                   </tfoot>\r\n//                 </table>\r\n//               </div>\r\n              \r\n//               {/* Trial Balance Validation */}\r\n//               <div className=\"mt-4 p-4 bg-green-50 border border-green-200 rounded-lg\">\r\n//                 <div className=\"flex items-center\">\r\n//                   <CheckCircle className=\"text-green-600 mr-2\" size={20} />\r\n//                   <div>\r\n//                     <h4 className=\"font-medium text-green-800\">Trial Balance is Balanced</h4>\r\n//                     <p className=\"text-sm text-green-700\">\r\n//                       Total Debits = Total Credits = PKR {trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n//                     </p>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Integration Status */}\r\n//       <div className=\"mt-8 grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n//         <div className=\"p-4 bg-green-50 border border-green-200 rounded-lg\">\r\n//           <div className=\"flex items-center mb-2\">\r\n//             <CheckCircle className=\"text-green-600 mr-2\" size={16} />\r\n//             <h4 className=\"font-medium text-green-800\">POS API Integration</h4>\r\n//           </div>\r\n//           <p className=\"text-sm text-green-700\">\r\n//             Sales orders automatically create journal entries from live API data\r\n//           </p>\r\n//         </div>\r\n\r\n//         <div className=\"p-4 bg-blue-50 border border-blue-200 rounded-lg\">\r\n//           <div className=\"flex items-center mb-2\">\r\n//             <RefreshCw className=\"text-blue-600 mr-2\" size={16} />\r\n//             <h4 className=\"font-medium text-blue-800\">Real-time Sync</h4>\r\n//           </div>\r\n//           <p className=\"text-sm text-blue-700\">\r\n//             Journal entries updated automatically with each sales transaction\r\n//           </p>\r\n//         </div>\r\n\r\n//         <div className=\"p-4 bg-orange-50 border border-orange-200 rounded-lg\">\r\n//           <div className=\"flex items-center mb-2\">\r\n//             <FileText className=\"text-orange-600 mr-2\" size={16} />\r\n//             <h4 className=\"font-medium text-orange-800\">Manual Entries</h4>\r\n//           </div>\r\n//           <p className=\"text-sm text-orange-700\">\r\n//             Add adjustments and corrections with full double-entry validation\r\n//           </p>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default GeneralLedger;\r\n\r\n\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { \r\n  Book, \r\n  Plus, \r\n  Filter, \r\n  Search, \r\n  Calendar, \r\n  FileText, \r\n  Edit, \r\n  Trash2, \r\n  Save, \r\n  X, \r\n  AlertCircle,\r\n  CheckCircle,\r\n  DollarSign,\r\n  TrendingUp,\r\n  Eye,\r\n  Download,\r\n  RefreshCw\r\n} from 'lucide-react';\r\n\r\nconst GeneralLedger = () => {\r\n  const [journalEntries, setJournalEntries] = useState([]);\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [filteredEntries, setFilteredEntries] = useState([]);\r\n  const [selectedEntry, setSelectedEntry] = useState(null);\r\n  const [isAddingEntry, setIsAddingEntry] = useState(false);\r\n  const [loading, setLoading] = useState({\r\n    entries: false,\r\n    accounts: false\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    entries: null,\r\n    accounts: null\r\n  });\r\n  const [filters, setFilters] = useState({\r\n    dateFrom: '',\r\n    dateTo: '',\r\n    accountId: '',\r\n    transactionType: 'all',\r\n    searchTerm: ''\r\n  });\r\n  const [trialBalance, setTrialBalance] = useState([]);\r\n  const [showTrialBalance, setShowTrialBalance] = useState(false);\r\n  const [newEntry, setNewEntry] = useState({\r\n    date: new Date().toISOString().split('T')[0],\r\n    description: '',\r\n    reference: '',\r\n    entries: [\r\n      { accountId: '', debit: 0, credit: 0, description: '' },\r\n      { accountId: '', debit: 0, credit: 0, description: '' }\r\n    ]\r\n  });\r\n\r\n  // API Configuration\r\n  const API_BASE_URL = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/orders?start=0&size=200';\r\n  const API_BASE_URL_CHARTS_OF_ACCOUNTS = 'http://localhost:8080/api/accounts';\r\n  const API_BASE_URL_PURCHASE_ORDERS = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/PurchaseOrderManagement/purchaseOrdersWithoutDetails';\r\n\r\n  // Fetch order data from API\r\n  const fetchOrderData = async () => {\r\n    try {\r\n      const response = await fetch(API_BASE_URL, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': 'Bearer Hamid',\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`API request failed with status ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error fetching order data:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Fetch purchase order data from API\r\n  const fetchPurchaseOrderData = async () => {\r\n    try {\r\n      const response = await fetch(API_BASE_URL_PURCHASE_ORDERS, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': 'Bearer Hamid',\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Purchase API request failed with status ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error fetching purchase order data:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Format date from API format\r\n  const formatDateFromCreatedAt = (createdAt) => {\r\n    try {\r\n      const parts = createdAt.split('.');\r\n      if (parts.length >= 3) {\r\n        return `${parts[0]}-${parts[1].padStart(2, '0')}-${parts[2].padStart(2, '0')}`;\r\n      }\r\n      return new Date().toISOString().split('T')[0];\r\n    } catch (error) {\r\n      return new Date().toISOString().split('T')[0];\r\n    }\r\n  };\r\n\r\n  // Helper function to flatten hierarchical account structure\r\n  const flattenAccounts = (accounts) => {\r\n    const result = [];\r\n    \r\n    const processAccount = (account) => {\r\n      result.push(account);  // Add current account\r\n      \r\n      // Recursively process children\r\n      if (account.children && Array.isArray(account.children)) {\r\n        account.children.forEach(child => processAccount(child));\r\n      }\r\n    };\r\n    \r\n    accounts.forEach(account => processAccount(account));\r\n    return result;\r\n  };\r\n\r\n  // Fetch Charts of Accounts from API (handling hierarchical structure with children)\r\n  const loadChartsOfAccounts = useCallback(async () => {\r\n    setLoading(prev => ({ ...prev, accounts: true }));\r\n    setErrors(prev => ({ ...prev, accounts: null }));\r\n    \r\n    try {\r\n      const response = await fetch(API_BASE_URL_CHARTS_OF_ACCOUNTS, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to fetch accounts: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log('Raw accounts data from API:', data);\r\n      \r\n      // Check if the data is in the expected format\r\n      if (!Array.isArray(data)) {\r\n        throw new Error('API response is not an array');\r\n      }\r\n      \r\n      // Flatten hierarchical structure to get all accounts\r\n      const flattenAccounts = (accounts) => {\r\n        const result = [];\r\n        \r\n        const processAccount = (account) => {\r\n          // Add the account itself\r\n          result.push(account);\r\n          \r\n          // Recursively process children if they exist\r\n          if (account.children && Array.isArray(account.children)) {\r\n            account.children.forEach(child => processAccount(child));\r\n          }\r\n        };\r\n        \r\n        accounts.forEach(account => processAccount(account));\r\n        return result;\r\n      };\r\n      \r\n      // Flatten all accounts from the hierarchical structure\r\n      const allAccounts = flattenAccounts(data);\r\n      console.log('All flattened accounts:', allAccounts.length);\r\n      \r\n      // Filter to get only usable accounts (category = 'account')\r\n      const usableAccounts = allAccounts.filter(account => \r\n        account.category === 'account' && \r\n        account.id && \r\n        account.code && \r\n        account.name && \r\n        account.type\r\n      );\r\n      \r\n      console.log('All accounts from API:', allAccounts.length);\r\n      console.log('Usable accounts (category=account):', usableAccounts.length);\r\n      console.log('Sample usable accounts:', usableAccounts.slice(0, 5));\r\n      \r\n      // If no usable accounts found, throw error to trigger fallback\r\n      if (usableAccounts.length === 0) {\r\n        console.log('No usable accounts found in API response');\r\n        throw new Error('No usable accounts returned from API - only headers found');\r\n      }\r\n      \r\n      // Sort by account code\r\n      usableAccounts.sort((a, b) => a.code.localeCompare(b.code));\r\n      \r\n      setAccounts(usableAccounts);\r\n      setLoading(prev => ({ ...prev, accounts: false }));\r\n      \r\n      console.log(`Successfully loaded ${usableAccounts.length} accounts from API`);\r\n      return usableAccounts;\r\n      \r\n    } catch (error) {\r\n      console.error('Error loading charts of accounts:', error);\r\n      setErrors(prev => ({ ...prev, accounts: error.message }));\r\n      setLoading(prev => ({ ...prev, accounts: false }));\r\n      \r\n      console.log('Using fallback chart of accounts');\r\n      // Use your actual account structure as fallback\r\n      const fallbackAccounts = [\r\n        // Current Assets\r\n        { id: '12', code: '1111', name: 'Petty Cash', type: 'assets', category: 'account' },\r\n        { id: '13', code: '1112', name: 'Bank - Main Account', type: 'assets', category: 'account' },\r\n        { id: '14', code: '1120', name: 'Accounts Receivable', type: 'assets', category: 'account' },\r\n        { id: '15', code: '1125', name: 'Insurance Receivables', type: 'assets', category: 'account' },\r\n        { id: '16', code: '1130', name: 'Inventory - FMCG Products', type: 'assets', category: 'account' },\r\n        { id: '19', code: '1130', name: 'Inventory - Telecom Equipment', type: 'assets', category: 'account' },\r\n        { id: '22', code: '1130', name: 'Medical Supplies Inventory', type: 'assets', category: 'account' },\r\n        { id: '17', code: '1140', name: 'Packaging Materials', type: 'assets', category: 'account' },\r\n        { id: '20', code: '1140', name: 'Prepaid Service Credits', type: 'assets', category: 'account' },\r\n        { id: '23', code: '1140', name: 'Pharmaceutical Inventory', type: 'assets', category: 'account' },\r\n        { id: '18', code: '1150', name: 'Promotional Materials', type: 'assets', category: 'account' },\r\n        \r\n        // Fixed Assets\r\n        { id: '24', code: '1210', name: 'Network Equipment', type: 'assets', category: 'account' },\r\n        { id: '26', code: '1210', name: 'Medical Equipment', type: 'assets', category: 'account' },\r\n        { id: '25', code: '1220', name: 'IT Infrastructure', type: 'assets', category: 'account' },\r\n        { id: '27', code: '1220', name: 'Furniture & Fixtures', type: 'assets', category: 'account' },\r\n        \r\n        // Liabilities\r\n        { id: '28', code: '2110', name: 'Accounts Payable', type: 'liabilities', category: 'account' },\r\n        { id: '29', code: '2130', name: 'Sales Tax Payable', type: 'liabilities', category: 'account' },\r\n        { id: '30', code: '2140', name: 'Trade Promotions Payable', type: 'liabilities', category: 'account' },\r\n        { id: '31', code: '2140', name: 'Payroll Payable', type: 'liabilities', category: 'account' },\r\n        { id: '33', code: '2140', name: 'Deferred Revenue', type: 'liabilities', category: 'account' },\r\n        { id: '32', code: '2150', name: 'Insurance Premiums Payable', type: 'liabilities', category: 'account' },\r\n        { id: '34', code: '2150', name: 'Regulatory Fees Payable', type: 'liabilities', category: 'account' },\r\n        \r\n        // Equity\r\n        { id: 'ACC_FC5DC8', code: '3110', name: 'Capital Stock', type: 'equity', category: 'account' },\r\n        { id: '10', code: '3200', name: 'Retained Earnings', type: 'equity', category: 'account' },\r\n        \r\n        // Revenue\r\n        { id: '35', code: '4110', name: 'Food & Beverages Sales', type: 'revenue', category: 'account' },\r\n        { id: '40', code: '4110', name: 'Mobile Service Revenue', type: 'revenue', category: 'account' },\r\n        { id: '45', code: '4110', name: 'Consultation Revenue', type: 'revenue', category: 'account' },\r\n        { id: '36', code: '4120', name: 'Personal Care Sales', type: 'revenue', category: 'account' },\r\n        { id: '41', code: '4120', name: 'Data Service Revenue', type: 'revenue', category: 'account' },\r\n        { id: '46', code: '4120', name: 'Diagnostic Revenue', type: 'revenue', category: 'account' },\r\n        { id: '37', code: '4130', name: 'Household Products Sales', type: 'revenue', category: 'account' },\r\n        { id: '42', code: '4130', name: 'Equipment Sales', type: 'revenue', category: 'account' },\r\n        { id: '47', code: '4130', name: 'Pharmaceutical Sales', type: 'revenue', category: 'account' },\r\n        { id: '38', code: '4140', name: 'Snacks & Confectionery Sales', type: 'revenue', category: 'account' },\r\n        { id: '43', code: '4140', name: 'Roaming Revenue', type: 'revenue', category: 'account' },\r\n        { id: '48', code: '4140', name: 'Treatment Revenue', type: 'revenue', category: 'account' },\r\n        { id: '44', code: '4150', name: 'Enterprise Services', type: 'revenue', category: 'account' },\r\n        { id: '49', code: '4150', name: 'Insurance Revenue', type: 'revenue', category: 'account' },\r\n        { id: '39', code: '4180', name: 'Wholesale Revenue', type: 'revenue', category: 'account' },\r\n        \r\n        // Expenses\r\n        { id: '50', code: '5100', name: 'Cost of Goods Sold', type: 'expenses', category: 'account' },\r\n        { id: '51', code: '5200', name: 'Operating Expenses', type: 'expenses', category: 'account' },\r\n        { id: '56', code: '5200', name: 'Cost of Services', type: 'expenses', category: 'account' },\r\n        { id: '52', code: '5240', name: 'Freight & Transportation', type: 'expenses', category: 'account' },\r\n        { id: '57', code: '5240', name: 'Network Maintenance', type: 'expenses', category: 'account' },\r\n        { id: '60', code: '5240', name: 'Medical Staff Salaries', type: 'expenses', category: 'account' },\r\n        { id: '53', code: '5250', name: 'Marketing & Advertising', type: 'expenses', category: 'account' },\r\n        { id: '58', code: '5250', name: 'Licensing Fees', type: 'expenses', category: 'account' },\r\n        { id: '61', code: '5250', name: 'Equipment Maintenance', type: 'expenses', category: 'account' },\r\n        { id: '54', code: '5260', name: 'Trade Promotions', type: 'expenses', category: 'account' },\r\n        { id: '59', code: '5260', name: 'Customer Support', type: 'expenses', category: 'account' },\r\n        { id: '62', code: '5260', name: 'Medical Supplies', type: 'expenses', category: 'account' },\r\n        { id: '55', code: '5270', name: 'Shrinkage & Wastage', type: 'expenses', category: 'account' },\r\n        { id: '63', code: '5270', name: 'License & Compliance', type: 'expenses', category: 'account' }\r\n      ];\r\n      \r\n      setAccounts(fallbackAccounts);\r\n      return fallbackAccounts;\r\n    }\r\n  }, []);\r\n\r\n  // Convert Purchase Order to Journal Entry\r\n  const convertPurchaseOrderToJournalEntry = useCallback((purchaseOrder, accountsList) => {\r\n    const entries = [];\r\n    \r\n    // Only process items with status \"applied\"\r\n    const appliedItems = purchaseOrder.purchaseOrderItems.filter(item => \r\n      item.status === 'applied' && item.quantity > 0\r\n    );\r\n    \r\n    if (appliedItems.length === 0) {\r\n      return null; // Skip if no applied items\r\n    }\r\n    \r\n    // Calculate totals from applied items\r\n    const totalAmount = appliedItems.reduce((sum, item) => \r\n      sum + (parseFloat(item.pricePerUnit) * parseFloat(item.quantity)), 0\r\n    );\r\n    \r\n    // Helper function to find appropriate account\r\n    const findSpecificAccount = (accountId) => {\r\n      const account = accountsList.find(acc => acc.id === accountId);\r\n      return account || null;\r\n    };\r\n    \r\n    const findAccountByType = (type, preferredId = null) => {\r\n      if (preferredId) {\r\n        const specificAccount = findSpecificAccount(preferredId);\r\n        if (specificAccount) return specificAccount;\r\n      }\r\n      \r\n      const matchingAccount = accountsList.find(acc => \r\n        acc.type && acc.type.toLowerCase() === type.toLowerCase()\r\n      );\r\n      \r\n      if (matchingAccount) return matchingAccount;\r\n      \r\n      const fallbackAccounts = {\r\n        'assets': { id: '13', code: '1112', name: 'Bank - Main Account', type: 'assets' },\r\n        'liabilities': { id: '28', code: '2110', name: 'Accounts Payable', type: 'liabilities' },\r\n        'expenses': { id: '50', code: '5100', name: 'Cost of Goods Sold', type: 'expenses' }\r\n      };\r\n      \r\n      return fallbackAccounts[type.toLowerCase()] || { \r\n        id: 'UNKNOWN', \r\n        name: `Unknown ${type} Account`, \r\n        code: 'N/A' \r\n      };\r\n    };\r\n    \r\n    // Determine inventory account based on products\r\n    const determineInventoryAccount = (items) => {\r\n      // You can add logic here based on product types\r\n      // For now, default to Telecom Equipment inventory\r\n      return findSpecificAccount('19') || findAccountByType('assets', '19'); // Inventory - Telecom Equipment\r\n    };\r\n    \r\n    // Inventory (Debit) - Increase inventory\r\n    const inventoryAccount = determineInventoryAccount(appliedItems);\r\n    entries.push({\r\n      accountId: inventoryAccount.id,\r\n      accountName: inventoryAccount.name,\r\n      accountCode: inventoryAccount.code,\r\n      debit: totalAmount,\r\n      credit: 0,\r\n      description: `Inventory purchase from PO #${purchaseOrder.id} - ${appliedItems.length} items`\r\n    });\r\n    \r\n    // Accounts Payable (Credit) - Amount owed to vendor\r\n    const payableAccount = findSpecificAccount('28') || findAccountByType('liabilities', '28'); // Accounts Payable\r\n    entries.push({\r\n      accountId: payableAccount.id,\r\n      accountName: payableAccount.name,\r\n      accountCode: payableAccount.code,\r\n      debit: 0,\r\n      credit: totalAmount,\r\n      description: `Amount owed for PO #${purchaseOrder.id} - ${purchaseOrder.remarks || 'Purchase order'}`\r\n    });\r\n    \r\n    return {\r\n      id: `JE-PURCHASE-${purchaseOrder.id}`,\r\n      date: new Date().toISOString().split('T')[0], // Use current date since PO doesn't have date\r\n      description: `Purchase Order #${purchaseOrder.id} - ${appliedItems.map(item => `Product ${item.product_Id} (${item.quantity})`).join(', ')}`,\r\n      reference: `PURCHASE-${purchaseOrder.id}`,\r\n      transactionType: 'automatic',\r\n      source: 'Purchase Orders',\r\n      status: 'posted',\r\n      entries: entries,\r\n      totalDebit: Math.round(totalAmount * 100) / 100,\r\n      totalCredit: Math.round(totalAmount * 100) / 100,\r\n      createdAt: new Date().toISOString(),\r\n      originalPurchaseOrder: purchaseOrder // Keep reference to original PO\r\n    };\r\n  }, []);\r\n  const convertSalesOrderToJournalEntry = useCallback((order, accountsList) => {\r\n    const entries = [];\r\n    \r\n    const subTotal = parseFloat(order.subTotal) || 0;\r\n    const taxAmount = parseFloat(order.taxAmount) || 0;\r\n    const total = parseFloat(order.total) || 0;\r\n    \r\n    if (!order.paid || !order.fulfilled || order.status !== 'Closed') {\r\n      return null;\r\n    }\r\n    \r\n    // Enhanced function to find specific accounts from your chart of accounts\r\n    const findSpecificAccount = (accountId) => {\r\n      const account = accountsList.find(acc => acc.id === accountId);\r\n      return account || null;\r\n    };\r\n    \r\n    const findAccountByType = (type, preferredCode = null) => {\r\n      // First try to find the preferred specific account\r\n      if (preferredCode) {\r\n        const specificAccount = findSpecificAccount(preferredCode);\r\n        if (specificAccount) return specificAccount;\r\n      }\r\n      \r\n      // Then try to find by type\r\n      const matchingAccount = accountsList.find(acc => \r\n        acc.type && acc.type.toLowerCase() === type.toLowerCase()\r\n      );\r\n      \r\n      if (matchingAccount) return matchingAccount;\r\n      \r\n      // Fallback with proper account codes from your chart\r\n      const fallbackAccounts = {\r\n        'assets': { id: '1112', code: '1112', name: 'Bank - Main Account', type: 'assets' },\r\n        'revenue': { id: '4110', code: '4110', name: 'Mobile Service Revenue', type: 'revenue' },\r\n        'liabilities': { id: '2130', code: '2130', name: 'Sales Tax Payable', type: 'liabilities' },\r\n        'expenses': { id: '5100', code: '5100', name: 'Cost of Goods Sold', type: 'expenses' }\r\n      };\r\n      \r\n      return fallbackAccounts[type.toLowerCase()] || { \r\n        id: 'UNKNOWN', \r\n        name: `Unknown ${type} Account`, \r\n        code: 'N/A' \r\n      };\r\n    };\r\n    \r\n    const cashAccount = findAccountByType('assets');\r\n    entries.push({\r\n      accountId: cashAccount.id,\r\n      accountName: cashAccount.name,\r\n      accountCode: cashAccount.code,\r\n      debit: total,\r\n      credit: 0,\r\n      description: `Cash received from Order #${order.orderId} - ${order.lineItems.map(item => item.productName).join(', ')}`\r\n    });\r\n\r\n    if (subTotal > 0) {\r\n      const revenueAccount = findAccountByType('revenue');\r\n      entries.push({\r\n        accountId: revenueAccount.id,\r\n        accountName: revenueAccount.name,\r\n        accountCode: revenueAccount.code,\r\n        debit: 0,\r\n        credit: subTotal,\r\n        description: `Revenue from Order #${order.orderId}`\r\n      });\r\n    }\r\n\r\n    if (taxAmount > 0) {\r\n      const taxAccount = findAccountByType('liabilities');\r\n      entries.push({\r\n        accountId: taxAccount.id,\r\n        accountName: taxAccount.name,\r\n        accountCode: taxAccount.code,\r\n        debit: 0,\r\n        credit: taxAmount,\r\n        description: `${order.taxRate}% tax collected on Order #${order.orderId}`\r\n      });\r\n    }\r\n\r\n    let totalCOGS = 0;\r\n    order.lineItems.forEach(item => {\r\n      if (item.fulfilled && item.status === 'Fulfilled') {\r\n        const costPrice = parseFloat(item.costPrice) || 0;\r\n        const quantity = parseFloat(item.quantity) || 0;\r\n        const itemCOGS = costPrice * quantity;\r\n        totalCOGS += itemCOGS;\r\n      }\r\n    });\r\n\r\n    if (totalCOGS > 0) {\r\n      const cogsAccount = findAccountByType('expenses');\r\n      entries.push({\r\n        accountId: cogsAccount.id,\r\n        accountName: cogsAccount.name,\r\n        accountCode: cogsAccount.code,\r\n        debit: totalCOGS,\r\n        credit: 0,\r\n        description: `COGS for Order #${order.orderId}`\r\n      });\r\n\r\n      const inventoryAccount = findAccountByType('assets');\r\n      entries.push({\r\n        accountId: inventoryAccount.id,\r\n        accountName: inventoryAccount.name,\r\n        accountCode: inventoryAccount.code,\r\n        debit: 0,\r\n        credit: totalCOGS,\r\n        description: `Inventory reduction - Order #${order.orderId}`\r\n      });\r\n    }\r\n\r\n    const totalDebit = entries.reduce((sum, entry) => sum + parseFloat(entry.debit || 0), 0);\r\n    const totalCredit = entries.reduce((sum, entry) => sum + parseFloat(entry.credit || 0), 0);\r\n\r\n    return {\r\n      id: `JE-ORDER-${order.orderId}`,\r\n      date: formatDateFromCreatedAt(order.createdAt),\r\n      description: `Sales Order #${order.orderId} - ${order.lineItems.map(item => `${item.productName} (${item.quantity})`).join(', ')}`,\r\n      reference: `ORDER-${order.orderId}`,\r\n      transactionType: 'automatic',\r\n      source: 'POS Sales',\r\n      status: 'posted',\r\n      entries: entries,\r\n      totalDebit: Math.round(totalDebit * 100) / 100,\r\n      totalCredit: Math.round(totalCredit * 100) / 100,\r\n      createdAt: order.createdAt,\r\n      originalOrder: order\r\n    };\r\n  }, []);\r\n\r\n  // Load Journal Entries from API and Local Storage\r\n  const loadJournalEntriesFromAPI = useCallback(async () => {\r\n    setLoading(prev => ({ ...prev, entries: true }));\r\n    setErrors(prev => ({ ...prev, entries: null }));\r\n    \r\n    try {\r\n      const salesOrders = await fetchOrderData();\r\n      \r\n      if (!salesOrders) {\r\n        throw new Error('Failed to fetch sales orders');\r\n      }\r\n      \r\n      const journalEntriesFromSales = salesOrders\r\n        .filter(order => order.paid && order.fulfilled && order.status === 'Closed')\r\n        .map(order => convertSalesOrderToJournalEntry(order, accounts))\r\n        .filter(entry => entry !== null);\r\n      \r\n      let manualEntries = [];\r\n      try {\r\n        const storedEntries = localStorage.getItem('manualJournalEntries');\r\n        manualEntries = storedEntries ? JSON.parse(storedEntries) : [];\r\n      } catch (error) {\r\n        console.warn('Error loading manual entries from localStorage:', error);\r\n        manualEntries = [];\r\n      }\r\n      \r\n      const allEntries = [...journalEntriesFromSales, ...manualEntries];\r\n      \r\n      setJournalEntries(allEntries);\r\n      setFilteredEntries(allEntries);\r\n      setLoading(prev => ({ ...prev, entries: false }));\r\n    } catch (error) {\r\n      console.error('Error loading journal entries:', error);\r\n      setErrors(prev => ({ ...prev, entries: error.message }));\r\n      setLoading(prev => ({ ...prev, entries: false }));\r\n    }\r\n  }, [accounts, convertSalesOrderToJournalEntry]);\r\n\r\n  // Filter entries\r\n  const filterEntries = useCallback(() => {\r\n    let filtered = [...journalEntries];\r\n\r\n    if (filters.dateFrom) {\r\n      filtered = filtered.filter(entry => entry.date >= filters.dateFrom);\r\n    }\r\n    \r\n    if (filters.dateTo) {\r\n      filtered = filtered.filter(entry => entry.date <= filters.dateTo);\r\n    }\r\n    \r\n    if (filters.accountId) {\r\n      filtered = filtered.filter(entry => {\r\n        return entry.entries.some(e => e.accountId === filters.accountId);\r\n      });\r\n    }\r\n    \r\n    if (filters.transactionType !== 'all') {\r\n      filtered = filtered.filter(entry => entry.transactionType === filters.transactionType);\r\n    }\r\n    \r\n    if (filters.searchTerm) {\r\n      const term = filters.searchTerm.toLowerCase();\r\n      filtered = filtered.filter(entry => \r\n        entry.description.toLowerCase().includes(term) ||\r\n        entry.reference.toLowerCase().includes(term) ||\r\n        entry.entries.some(e => e.description.toLowerCase().includes(term))\r\n      );\r\n    }\r\n\r\n    setFilteredEntries(filtered);\r\n  }, [journalEntries, filters]);\r\n\r\n  // Generate trial balance\r\n  const generateTrialBalance = useCallback(() => {\r\n    const balances = {};\r\n    \r\n    const requiredAccountIds = new Set();\r\n    \r\n    journalEntries.forEach(entry => {\r\n      if (entry.status === 'posted') {\r\n        entry.entries.forEach(entryLine => {\r\n          if (entryLine.accountId) {\r\n            requiredAccountIds.add(entryLine.accountId);\r\n          }\r\n        });\r\n      }\r\n    });\r\n    \r\n    const accountTypesMap = {};\r\n    accounts.forEach(account => {\r\n      accountTypesMap[account.id] = account.type;\r\n      accountTypesMap[account.code] = account.type;\r\n    });\r\n    \r\n    accounts.forEach(account => {\r\n      if (account.category !== 'header') {\r\n        balances[account.id] = {\r\n          accountId: account.id,\r\n          accountCode: account.code,\r\n          accountName: account.name,\r\n          accountType: account.type || 'unknown',\r\n          debit: 0,\r\n          credit: 0,\r\n          balance: 0\r\n        };\r\n      }\r\n    });\r\n    \r\n    requiredAccountIds.forEach(accountId => {\r\n      if (!balances[accountId]) {\r\n        let accountName = '';\r\n        let accountType = '';\r\n        \r\n        journalEntries.forEach(entry => {\r\n          entry.entries.forEach(entryLine => {\r\n            if (entryLine.accountId === accountId) {\r\n              if (entryLine.accountName) accountName = entryLine.accountName;\r\n            }\r\n          });\r\n        });\r\n        \r\n        const prefix = accountId.toString().substring(0, 1);\r\n        if (prefix === '1') accountType = 'assets';\r\n        else if (prefix === '2') accountType = 'liabilities';\r\n        else if (prefix === '3') accountType = 'equity';\r\n        else if (prefix === '4') accountType = 'revenue';\r\n        else if (prefix === '5') accountType = 'expenses';\r\n        else accountType = accountTypesMap[accountId] || 'unknown';\r\n        \r\n        balances[accountId] = {\r\n          accountId: accountId,\r\n          accountCode: accountId,\r\n          accountName: accountName || `Account ${accountId}`,\r\n          accountType: accountType,\r\n          debit: 0,\r\n          credit: 0,\r\n          balance: 0\r\n        };\r\n      }\r\n    });\r\n    \r\n    journalEntries.forEach(entry => {\r\n      if (entry.status === 'posted') {\r\n        entry.entries.forEach(entryLine => {\r\n          const accountId = entryLine.accountId;\r\n          if (balances[accountId]) {\r\n            balances[accountId].debit += parseFloat(entryLine.debit || 0);\r\n            balances[accountId].credit += parseFloat(entryLine.credit || 0);\r\n            \r\n            if (entryLine.accountName && !balances[accountId].accountName) {\r\n              balances[accountId].accountName = entryLine.accountName;\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    Object.values(balances).forEach(account => {\r\n      if (account.accountType === 'assets' || account.accountType === 'expenses') {\r\n        account.balance = account.debit - account.credit;\r\n      } else {\r\n        account.balance = account.credit - account.debit;\r\n      }\r\n    });\r\n\r\n    const trialBalanceData = Object.values(balances)\r\n      .filter(account => account.debit > 0 || account.credit > 0)\r\n      .sort((a, b) => a.accountCode.localeCompare(b.accountCode));\r\n    \r\n    setTrialBalance(trialBalanceData);\r\n    setShowTrialBalance(true);\r\n  }, [accounts, journalEntries]);\r\n\r\n  // Helper functions for entry management\r\n  const addEntryLine = () => {\r\n    setNewEntry({\r\n      ...newEntry,\r\n      entries: [...newEntry.entries, { accountId: '', debit: 0, credit: 0, description: '' }]\r\n    });\r\n  };\r\n\r\n  const removeEntryLine = (index) => {\r\n    if (newEntry.entries.length > 2) {\r\n      const updatedEntries = newEntry.entries.filter((_, i) => i !== index);\r\n      setNewEntry({ ...newEntry, entries: updatedEntries });\r\n    }\r\n  };\r\n\r\n  const updateEntryLine = (index, field, value) => {\r\n    const updatedEntries = [...newEntry.entries];\r\n    updatedEntries[index] = { ...updatedEntries[index], [field]: value };\r\n    setNewEntry({ ...newEntry, entries: updatedEntries });\r\n  };\r\n\r\n  const calculateTotals = (entries) => {\r\n    const totalDebit = entries.reduce((sum, entry) => sum + (parseFloat(entry.debit) || 0), 0);\r\n    const totalCredit = entries.reduce((sum, entry) => sum + (parseFloat(entry.credit) || 0), 0);\r\n    return { totalDebit, totalCredit };\r\n  };\r\n\r\n  const isBalanced = (entries) => {\r\n    const { totalDebit, totalCredit } = calculateTotals(entries);\r\n    return Math.abs(totalDebit - totalCredit) < 0.01;\r\n  };\r\n\r\n  const saveJournalEntry = () => {\r\n    if (!newEntry.description || !newEntry.entries.every(e => e.accountId)) {\r\n      alert('Please fill in all required fields');\r\n      return;\r\n    }\r\n\r\n    if (!isBalanced(newEntry.entries)) {\r\n      alert('Journal entry must be balanced - total debits must equal total credits');\r\n      return;\r\n    }\r\n\r\n    const { totalDebit, totalCredit } = calculateTotals(newEntry.entries);\r\n    \r\n    const entriesWithNames = newEntry.entries.map(entry => ({\r\n      ...entry,\r\n      accountName: accounts.find(acc => acc.id === entry.accountId)?.name || '',\r\n      debit: parseFloat(entry.debit) || 0,\r\n      credit: parseFloat(entry.credit) || 0\r\n    }));\r\n\r\n    const journalEntry = {\r\n      id: `JE-MANUAL-${Date.now()}`,\r\n      date: newEntry.date,\r\n      description: newEntry.description,\r\n      reference: newEntry.reference || `MAN${Date.now()}`,\r\n      transactionType: 'manual',\r\n      source: 'Manual',\r\n      status: 'posted',\r\n      entries: entriesWithNames,\r\n      totalDebit,\r\n      totalCredit,\r\n      createdAt: new Date().toISOString()\r\n    };\r\n\r\n    try {\r\n      const existingManualEntries = JSON.parse(localStorage.getItem('manualJournalEntries') || '[]');\r\n      const updatedManualEntries = [...existingManualEntries, journalEntry];\r\n      localStorage.setItem('manualJournalEntries', JSON.stringify(updatedManualEntries));\r\n    } catch (error) {\r\n      console.warn('Could not save to localStorage:', error);\r\n    }\r\n\r\n    setJournalEntries([...journalEntries, journalEntry]);\r\n    \r\n    setNewEntry({\r\n      date: new Date().toISOString().split('T')[0],\r\n      description: '',\r\n      reference: '',\r\n      entries: [\r\n        { accountId: '', debit: 0, credit: 0, description: '' },\r\n        { accountId: '', debit: 0, credit: 0, description: '' }\r\n      ]\r\n    });\r\n    setIsAddingEntry(false);\r\n  };\r\n\r\n  const getAccountName = useCallback((accountId) => {\r\n    const account = accounts.find(acc => acc.id === accountId || acc.code === accountId);\r\n    \r\n    if (account) {\r\n      return `${account.code} - ${account.name}`;\r\n    }\r\n    \r\n    let accountName = '';\r\n    \r\n    journalEntries.forEach(entry => {\r\n      entry.entries.forEach(entryLine => {\r\n        if (entryLine.accountId === accountId && entryLine.accountName) {\r\n          accountName = entryLine.accountName;\r\n        }\r\n      });\r\n    });\r\n    \r\n    if (accountName) {\r\n      return `${accountId} - ${accountName}`;\r\n    }\r\n    \r\n    const prefix = accountId.toString().substring(0, 1);\r\n    let accountType = '';\r\n    \r\n    if (prefix === '1') accountType = 'Assets';\r\n    else if (prefix === '2') accountType = 'Liabilities';\r\n    else if (prefix === '3') accountType = 'Equity';\r\n    else if (prefix === '4') accountType = 'Revenue';\r\n    else if (prefix === '5') accountType = 'Expenses';\r\n    \r\n    return accountType ? `${accountId} - ${accountType} Account` : `${accountId} - Unknown Account`;\r\n  }, [accounts, journalEntries]);\r\n\r\n  // useEffect hooks\r\n  useEffect(() => {\r\n    loadChartsOfAccounts();\r\n  }, [loadChartsOfAccounts]);\r\n\r\n  useEffect(() => {\r\n    if (accounts.length > 0) {\r\n      loadJournalEntriesFromAPI();\r\n    }\r\n  }, [accounts, loadJournalEntriesFromAPI]);\r\n\r\n  useEffect(() => {\r\n    if (journalEntries.length > 0) {\r\n      filterEntries();\r\n    }\r\n  }, [journalEntries, filters, filterEntries]);\r\n\r\n  const { totalDebit, totalCredit } = calculateTotals(newEntry.entries);\r\n  const entryIsBalanced = isBalanced(newEntry.entries);\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto p-6 bg-white\">\r\n      {/* Header */}\r\n      <div className=\"mb-8\">\r\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\r\n          <Book className=\"mr-3 text-emerald-600\" />\r\n          General Ledger\r\n        </h1>\r\n        <p className=\"text-gray-600\">Real-time transaction recording and journal entry management</p>\r\n        \r\n        {loading.accounts && (\r\n          <div className=\"mt-2 p-2 bg-blue-50 text-blue-700 rounded-md text-sm flex items-center\">\r\n            <RefreshCw className=\"animate-spin mr-2\" size={16} />\r\n            Loading chart of accounts...\r\n          </div>\r\n        )}\r\n        \r\n        {errors.accounts && (\r\n          <div className=\"mt-2 p-2 bg-red-50 text-red-700 rounded-md text-sm flex items-center\">\r\n            <AlertCircle className=\"mr-2\" size={16} />\r\n            Error loading accounts: {errors.accounts}\r\n          </div>\r\n        )}\r\n\r\n        {loading.entries && (\r\n          <div className=\"mt-2 p-2 bg-blue-50 text-blue-700 rounded-md text-sm flex items-center\">\r\n            <RefreshCw className=\"animate-spin mr-2\" size={16} />\r\n            Loading journal entries...\r\n          </div>\r\n        )}\r\n        \r\n        {errors.entries && (\r\n          <div className=\"mt-2 p-2 bg-red-50 text-red-700 rounded-md text-sm flex items-center\">\r\n            <AlertCircle className=\"mr-2\" size={16} />\r\n            Error loading entries: {errors.entries}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Quick Stats */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\r\n        <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-blue-600 text-sm font-medium\">Total Entries</p>\r\n              <p className=\"text-2xl font-bold text-blue-900\">{journalEntries.length}</p>\r\n            </div>\r\n            <FileText className=\"text-blue-600\" size={24} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-green-50 p-4 rounded-lg border border-green-200\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-green-600 text-sm font-medium\">Purchase Entries</p>\r\n              <p className=\"text-2xl font-bold text-green-900\">\r\n                {journalEntries.filter(e => e.source === 'Purchase Orders').length}\r\n              </p>\r\n            </div>\r\n            <TrendingUp className=\"text-green-600\" size={24} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-orange-50 p-4 rounded-lg border border-orange-200\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-orange-600 text-sm font-medium\">Manual Entries</p>\r\n              <p className=\"text-2xl font-bold text-orange-900\">\r\n                {journalEntries.filter(e => e.transactionType === 'manual').length}\r\n              </p>\r\n            </div>\r\n            <Edit className=\"text-orange-600\" size={24} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-purple-50 p-4 rounded-lg border border-purple-200\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-purple-600 text-sm font-medium\">Total Value</p>\r\n              <p className=\"text-2xl font-bold text-purple-900\">\r\n                PKR {journalEntries.reduce((sum, entry) => sum + entry.totalDebit, 0).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n              </p>\r\n            </div>\r\n            <DollarSign className=\"text-purple-600\" size={24} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Controls */}\r\n      <div className=\"flex flex-wrap items-center justify-between gap-4 mb-6\">\r\n        <div className=\"flex flex-wrap items-center gap-4\">\r\n          {/* Date Filters */}\r\n          <div className=\"flex items-center space-x-2\">\r\n            <Calendar size={16} className=\"text-gray-400\" />\r\n            <input\r\n              type=\"date\"\r\n              value={filters.dateFrom}\r\n              onChange={(e) => setFilters({ ...filters, dateFrom: e.target.value })}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n              placeholder=\"From\"\r\n            />\r\n            <span className=\"text-gray-500\">to</span>\r\n            <input\r\n              type=\"date\"\r\n              value={filters.dateTo}\r\n              onChange={(e) => setFilters({ ...filters, dateTo: e.target.value })}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n              placeholder=\"To\"\r\n            />\r\n          </div>\r\n\r\n          {/* Account Filter */}\r\n          <div className=\"relative\">\r\n            <Filter className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n            <select\r\n              value={filters.accountId}\r\n              onChange={(e) => setFilters({ ...filters, accountId: e.target.value })}\r\n              className=\"pl-10 pr-8 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n            >\r\n              <option value=\"\">All Accounts</option>\r\n              \r\n              {/* Group accounts by type for better organization */}\r\n              {accounts.length > 0 && (\r\n                <>\r\n                  {/* Assets */}\r\n                  <optgroup label=\"Assets\">\r\n                    {accounts\r\n                      .filter(acc => acc.type === 'assets' && acc.category === 'account')\r\n                      .map(account => (\r\n                        <option key={account.id} value={account.id}>\r\n                          {account.code} - {account.name}\r\n                        </option>\r\n                      ))}\r\n                  </optgroup>\r\n                  \r\n                  {/* Liabilities */}\r\n                  <optgroup label=\"Liabilities\">\r\n                    {accounts\r\n                      .filter(acc => acc.type === 'liabilities' && acc.category === 'account')\r\n                      .map(account => (\r\n                        <option key={account.id} value={account.id}>\r\n                          {account.code} - {account.name}\r\n                        </option>\r\n                      ))}\r\n                  </optgroup>\r\n                  \r\n                  {/* Equity */}\r\n                  <optgroup label=\"Equity\">\r\n                    {accounts\r\n                      .filter(acc => acc.type === 'equity' && acc.category === 'account')\r\n                      .map(account => (\r\n                        <option key={account.id} value={account.id}>\r\n                          {account.code} - {account.name}\r\n                        </option>\r\n                      ))}\r\n                  </optgroup>\r\n                  \r\n                  {/* Revenue */}\r\n                  <optgroup label=\"Revenue\">\r\n                    {accounts\r\n                      .filter(acc => acc.type === 'revenue' && acc.category === 'account')\r\n                      .map(account => (\r\n                        <option key={account.id} value={account.id}>\r\n                          {account.code} - {account.name}\r\n                        </option>\r\n                      ))}\r\n                  </optgroup>\r\n                  \r\n                  {/* Expenses */}\r\n                  <optgroup label=\"Expenses\">\r\n                    {accounts\r\n                      .filter(acc => acc.type === 'expenses' && acc.category === 'account')\r\n                      .map(account => (\r\n                        <option key={account.id} value={account.id}>\r\n                          {account.code} - {account.name}\r\n                        </option>\r\n                      ))}\r\n                  </optgroup>\r\n                </>\r\n              )}\r\n              \r\n              {accounts.length === 0 && (\r\n                <option disabled>Loading accounts...</option>\r\n              )}\r\n            </select>\r\n          </div>\r\n\r\n          {/* Transaction Type Filter */}\r\n          <select\r\n            value={filters.transactionType}\r\n            onChange={(e) => setFilters({ ...filters, transactionType: e.target.value })}\r\n            className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n          >\r\n            <option value=\"all\">All Types</option>\r\n            <option value=\"automatic\">Automatic (POS/Purchase)</option>\r\n            <option value=\"manual\">Manual</option>\r\n          </select>\r\n\r\n          {/* Search */}\r\n          <div className=\"relative\">\r\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search entries...\"\r\n              value={filters.searchTerm}\r\n              onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\r\n              className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex space-x-3\">\r\n          <button\r\n            onClick={loadJournalEntriesFromAPI}\r\n            disabled={loading.entries}\r\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2 disabled:bg-gray-400\"\r\n          >\r\n            {loading.entries ? <RefreshCw className=\"animate-spin\" size={16} /> : <RefreshCw size={16} />}\r\n            <span>Refresh from API</span>\r\n          </button>\r\n          <button\r\n            onClick={loadChartsOfAccounts}\r\n            disabled={loading.accounts}\r\n            className=\"px-4 py-2 bg-teal-600 text-white rounded-lg hover:bg-teal-700 flex items-center space-x-2 disabled:bg-gray-400\"\r\n          >\r\n            {loading.accounts ? <RefreshCw className=\"animate-spin\" size={16} /> : <RefreshCw size={16} />}\r\n            <span>Refresh Accounts</span>\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              setFilters({\r\n                dateFrom: '',\r\n                dateTo: '',\r\n                accountId: '',\r\n                transactionType: 'all',\r\n                searchTerm: ''\r\n              });\r\n              setFilteredEntries([...journalEntries]);\r\n            }}\r\n            className=\"px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 flex items-center space-x-2\"\r\n          >\r\n            <X size={16} />\r\n            <span>Clear Filters</span>\r\n          </button>\r\n          <button\r\n            onClick={() => setIsAddingEntry(true)}\r\n            className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\r\n          >\r\n            <Plus size={16} />\r\n            <span>Add Entry</span>\r\n          </button>\r\n          <button\r\n            onClick={generateTrialBalance}\r\n            className=\"px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 flex items-center space-x-2\"\r\n          >\r\n            <FileText size={16} />\r\n            <span>Trial Balance</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Journal Entry Form */}\r\n      {isAddingEntry && (\r\n        <div className=\"mb-8 p-6 bg-gray-50 rounded-lg border\">\r\n          <h3 className=\"text-lg font-semibold mb-4\">Add Manual Journal Entry</h3>\r\n          \r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Date *</label>\r\n              <input\r\n                type=\"date\"\r\n                value={newEntry.date}\r\n                onChange={(e) => setNewEntry({ ...newEntry, date: e.target.value })}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Description *</label>\r\n              <input\r\n                type=\"text\"\r\n                value={newEntry.description}\r\n                onChange={(e) => setNewEntry({ ...newEntry, description: e.target.value })}\r\n                placeholder=\"Enter description\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Reference</label>\r\n              <input\r\n                type=\"text\"\r\n                value={newEntry.reference}\r\n                onChange={(e) => setNewEntry({ ...newEntry, reference: e.target.value })}\r\n                placeholder=\"Reference number\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Entry Lines */}\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Journal Entry Lines</label>\r\n            <div className=\"space-y-3\">\r\n              {newEntry.entries.map((entry, index) => (\r\n                <div key={index} className=\"grid grid-cols-12 gap-2 items-center bg-white p-3 rounded border\">\r\n                  <div className=\"col-span-4\">\r\n                    <select\r\n                      value={entry.accountId}\r\n                      onChange={(e) => updateEntryLine(index, 'accountId', e.target.value)}\r\n                      className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n                    >\r\n                      <option value=\"\">Select Account</option>\r\n                      \r\n                      {accounts.length > 0 && (\r\n                        <>\r\n                          {/* Assets */}\r\n                          <optgroup label=\"Assets\">\r\n                            {accounts\r\n                              .filter(acc => acc.type === 'assets' && acc.category === 'account')\r\n                              .map(account => (\r\n                                <option key={account.id} value={account.id}>\r\n                                  {account.code} - {account.name}\r\n                                </option>\r\n                              ))}\r\n                          </optgroup>\r\n                          \r\n                          {/* Liabilities */}\r\n                          <optgroup label=\"Liabilities\">\r\n                            {accounts\r\n                              .filter(acc => acc.type === 'liabilities' && acc.category === 'account')\r\n                              .map(account => (\r\n                                <option key={account.id} value={account.id}>\r\n                                  {account.code} - {account.name}\r\n                                </option>\r\n                              ))}\r\n                          </optgroup>\r\n                          \r\n                          {/* Equity */}\r\n                          <optgroup label=\"Equity\">\r\n                            {accounts\r\n                              .filter(acc => acc.type === 'equity' && acc.category === 'account')\r\n                              .map(account => (\r\n                                <option key={account.id} value={account.id}>\r\n                                  {account.code} - {account.name}\r\n                                </option>\r\n                              ))}\r\n                          </optgroup>\r\n                          \r\n                          {/* Revenue */}\r\n                          <optgroup label=\"Revenue\">\r\n                            {accounts\r\n                              .filter(acc => acc.type === 'revenue' && acc.category === 'account')\r\n                              .map(account => (\r\n                                <option key={account.id} value={account.id}>\r\n                                  {account.code} - {account.name}\r\n                                </option>\r\n                              ))}\r\n                          </optgroup>\r\n                          \r\n                          {/* Expenses */}\r\n                          <optgroup label=\"Expenses\">\r\n                            {accounts\r\n                              .filter(acc => acc.type === 'expenses' && acc.category === 'account')\r\n                              .map(account => (\r\n                                <option key={account.id} value={account.id}>\r\n                                  {account.code} - {account.name}\r\n                                </option>\r\n                              ))}\r\n                          </optgroup>\r\n                        </>\r\n                      )}\r\n                      \r\n                      {accounts.length === 0 && (\r\n                        <option disabled>Loading accounts...</option>\r\n                      )}\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"col-span-3\">\r\n                    <input\r\n                      type=\"text\"\r\n                      value={entry.description}\r\n                      onChange={(e) => updateEntryLine(index, 'description', e.target.value)}\r\n                      placeholder=\"Description\"\r\n                      className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-span-2\">\r\n                    <input\r\n                      type=\"number\"\r\n                      step=\"0.01\"\r\n                      value={entry.debit}\r\n                      onChange={(e) => updateEntryLine(index, 'debit', e.target.value)}\r\n                      placeholder=\"Debit\"\r\n                      className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-span-2\">\r\n                    <input\r\n                      type=\"number\"\r\n                      step=\"0.01\"\r\n                      value={entry.credit}\r\n                      onChange={(e) => updateEntryLine(index, 'credit', e.target.value)}\r\n                      placeholder=\"Credit\"\r\n                      className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-span-1\">\r\n                    {newEntry.entries.length > 2 && (\r\n                      <button\r\n                        onClick={() => removeEntryLine(index)}\r\n                        className=\"p-1 text-red-600 hover:bg-red-100 rounded\"\r\n                      >\r\n                        <Trash2 size={14} />\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"flex justify-between items-center mt-3\">\r\n              <button\r\n                onClick={addEntryLine}\r\n                className=\"px-3 py-1 text-sm bg-gray-200 text-gray-700 rounded hover:bg-gray-300 flex items-center space-x-1\"\r\n              >\r\n                <Plus size={14} />\r\n                <span>Add Line</span>\r\n              </button>\r\n\r\n              <div className=\"flex items-center space-x-4\">\r\n                <div className=\"text-sm\">\r\n                  <span className=\"font-medium\">Total Debit: PKR {totalDebit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}</span>\r\n                  <span className=\"mx-2\">|</span>\r\n                  <span className=\"font-medium\">Total Credit: PKR {totalCredit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}</span>\r\n                </div>\r\n                {entryIsBalanced ? (\r\n                  <div className=\"flex items-center text-green-600\">\r\n                    <CheckCircle size={16} className=\"mr-1\" />\r\n                    <span className=\"text-sm\">Balanced</span>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"flex items-center text-red-600\">\r\n                    <AlertCircle size={16} className=\"mr-1\" />\r\n                    <span className=\"text-sm\">Not Balanced</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex space-x-3\">\r\n            <button\r\n              onClick={saveJournalEntry}\r\n              disabled={!entryIsBalanced}\r\n              className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 disabled:bg-gray-400 flex items-center space-x-2\"\r\n            >\r\n              <Save size={16} />\r\n              <span>Save Entry</span>\r\n            </button>\r\n            <button\r\n              onClick={() => setIsAddingEntry(false)}\r\n              className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\"\r\n            >\r\n              <X size={16} />\r\n              <span>Cancel</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Journal Entries Table */}\r\n      <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n        <div className=\"px-6 py-4 border-b border-gray-200\">\r\n          <h2 className=\"text-lg font-semibold text-gray-900\">Journal Entries</h2>\r\n          <p className=\"text-sm text-gray-600 mt-1\">\r\n            Showing {filteredEntries.length} of {journalEntries.length} entries\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"w-full\">\r\n            <thead className=\"bg-gray-50\">\r\n              <tr>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Entry ID\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Date\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Description\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Reference\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Source\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Amount\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Status\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Actions\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n              {filteredEntries.map((entry) => (\r\n                <tr key={entry.id} className=\"hover:bg-gray-50\">\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                    {entry.id}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                    {entry.date}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 text-sm text-gray-900 max-w-xs truncate\">\r\n                    {entry.description}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                    {entry.reference}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n                      entry.source === 'POS Sales' ? 'bg-green-100 text-green-800' : \r\n                      entry.source === 'Purchase Orders' ? 'bg-blue-100 text-blue-800' :\r\n                      entry.source === 'Manual' ? 'bg-orange-100 text-orange-800' :\r\n                      'bg-gray-100 text-gray-800'\r\n                    }`}>\r\n                      {entry.source}\r\n                    </span>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                    PKR {entry.totalDebit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n                      entry.status === 'posted' ? 'bg-blue-100 text-blue-800' : 'bg-yellow-100 text-yellow-800'\r\n                    }`}>\r\n                      {entry.status}\r\n                    </span>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                    <button\r\n                      onClick={() => setSelectedEntry(entry)}\r\n                      className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\r\n                    >\r\n                      <Eye size={16} />\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Entry Details Modal */}\r\n      {selectedEntry && (\r\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n          <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n            <div className=\"px-6 py-4 border-b border-gray-200\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900\">\r\n                  Journal Entry Details - {selectedEntry.id}\r\n                </h3>\r\n                <button\r\n                  onClick={() => setSelectedEntry(null)}\r\n                  className=\"text-gray-400 hover:text-gray-600\"\r\n                >\r\n                  <X size={20} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"px-6 py-4\">\r\n              {/* Entry Header */}\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\r\n                <div>\r\n                  <label className=\"text-sm font-medium text-gray-500\">Date</label>\r\n                  <p className=\"text-sm text-gray-900\">{selectedEntry.date}</p>\r\n                </div>\r\n                <div>\r\n                  <label className=\"text-sm font-medium text-gray-500\">Reference</label>\r\n                  <p className=\"text-sm text-gray-900\">{selectedEntry.reference}</p>\r\n                </div>\r\n                <div>\r\n                  <label className=\"text-sm font-medium text-gray-500\">Description</label>\r\n                  <p className=\"text-sm text-gray-900\">{selectedEntry.description}</p>\r\n                </div>\r\n                <div>\r\n                  <label className=\"text-sm font-medium text-gray-500\">Source</label>\r\n                  <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n                    selectedEntry.source === 'POS Sales' ? 'bg-green-100 text-green-800' : \r\n                    selectedEntry.source === 'Purchase Orders' ? 'bg-blue-100 text-blue-800' :\r\n                    'bg-orange-100 text-orange-800'\r\n                  }`}>\r\n                    {selectedEntry.source}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Entry Lines */}\r\n              <div className=\"mb-6\">\r\n                <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Account Entries</h4>\r\n                <div className=\"overflow-x-auto\">\r\n                  <table className=\"w-full border border-gray-200 rounded\">\r\n                    <thead className=\"bg-gray-50\">\r\n                      <tr>\r\n                        <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Account</th>\r\n                        <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Description</th>\r\n                        <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Debit</th>\r\n                        <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Credit</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody className=\"divide-y divide-gray-200\">\r\n                      {selectedEntry.entries.map((entryLine, index) => (\r\n                        <tr key={index}>\r\n                          <td className=\"px-4 py-2 text-sm text-gray-900\">\r\n                            {getAccountName(entryLine.accountId)}\r\n                          </td>\r\n                          <td className=\"px-4 py-2 text-sm text-gray-600\">\r\n                            {entryLine.description}\r\n                          </td>\r\n                          <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">\r\n                            {entryLine.debit > 0 ? `${entryLine.debit.toFixed(2)}` : '-'}\r\n                          </td>\r\n                          <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">\r\n                            {entryLine.credit > 0 ? `${entryLine.credit.toFixed(2)}` : '-'}\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                    <tfoot className=\"bg-gray-50\">\r\n                      <tr>\r\n                        <td colSpan=\"2\" className=\"px-4 py-2 text-sm font-medium text-gray-900\">\r\n                          Totals:\r\n                        </td>\r\n                        <td className=\"px-4 py-2 text-sm font-bold text-gray-900 text-right\">\r\n                          PKR {selectedEntry.totalDebit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n                        </td>\r\n                        <td className=\"px-4 py-2 text-sm font-bold text-gray-900 text-right\">\r\n                          PKR {selectedEntry.totalCredit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n                        </td>\r\n                      </tr>\r\n                    </tfoot>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Original Purchase Order Info (if available) */}\r\n              {selectedEntry.originalPurchaseOrder && (\r\n                <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\r\n                  <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Original Purchase Order Details</h4>\r\n                  <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\r\n                    <div>\r\n                      <span className=\"font-medium text-gray-500\">PO ID:</span>\r\n                      <p className=\"text-gray-900\">{selectedEntry.originalPurchaseOrder.id}</p>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"font-medium text-gray-500\">Status:</span>\r\n                      <p className=\"text-gray-900\">{selectedEntry.originalPurchaseOrder.status}</p>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"font-medium text-gray-500\">Vendor ID:</span>\r\n                      <p className=\"text-gray-900\">{selectedEntry.originalPurchaseOrder.vendor_Id || 'N/A'}</p>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"font-medium text-gray-500\">Type:</span>\r\n                      <p className=\"text-gray-900\">{selectedEntry.originalPurchaseOrder.type || 'Standard'}</p>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  {/* Purchase Items */}\r\n                  <div className=\"mt-4\">\r\n                    <span className=\"font-medium text-gray-500\">Purchase Items (Applied Only):</span>\r\n                    <div className=\"mt-2 space-y-2\">\r\n                      {selectedEntry.originalPurchaseOrder.purchaseOrderItems\r\n                        .filter(item => item.status === 'applied' && item.quantity > 0)\r\n                        .map((item, index) => (\r\n                        <div key={index} className=\"text-sm bg-white p-2 rounded border\">\r\n                          <span className=\"font-medium\">Product ID: {item.product_Id}</span> - \r\n                          Qty: {item.quantity}, Price per Unit: PKR {parseFloat(item.pricePerUnit).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}, \r\n                          Total: PKR {(parseFloat(item.pricePerUnit) * parseFloat(item.quantity)).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n                          {item.remarks && item.remarks !== 'null' && <span className=\"text-gray-500\"> ({item.remarks})</span>}\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                    \r\n                    {selectedEntry.originalPurchaseOrder.remarks && selectedEntry.originalPurchaseOrder.remarks !== 'null' && (\r\n                      <div className=\"mt-3\">\r\n                        <span className=\"font-medium text-gray-500\">Remarks:</span>\r\n                        <p className=\"text-gray-900 text-sm\">{selectedEntry.originalPurchaseOrder.remarks}</p>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* Original Order Info (if available) */}\r\n              {selectedEntry.originalOrder && (\r\n                <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\r\n                  <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Original Sales Order Details</h4>\r\n                  <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\r\n                    <div>\r\n                      <span className=\"font-medium text-gray-500\">Order ID:</span>\r\n                      <p className=\"text-gray-900\">{selectedEntry.originalOrder.orderId}</p>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"font-medium text-gray-500\">Status:</span>\r\n                      <p className=\"text-gray-900\">{selectedEntry.originalOrder.status}</p>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"font-medium text-gray-500\">Payment Status:</span>\r\n                      <p className=\"text-gray-900\">{selectedEntry.originalOrder.paid ? 'Paid' : 'Unpaid'}</p>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"font-medium text-gray-500\">Fulfilled:</span>\r\n                      <p className=\"text-gray-900\">{selectedEntry.originalOrder.fulfilled ? 'Yes' : 'No'}</p>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  {/* Line Items */}\r\n                  <div className=\"mt-4\">\r\n                    <span className=\"font-medium text-gray-500\">Line Items:</span>\r\n                    <div className=\"mt-2 space-y-2\">\r\n                      {selectedEntry.originalOrder.lineItems.map((item, index) => (\r\n                        <div key={index} className=\"text-sm bg-white p-2 rounded border\">\r\n                          <span className=\"font-medium\">{item.productName}</span> - \r\n                          Qty: {item.quantity}, Price: PKR {parseFloat(item.price).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}, \r\n                          Total: PKR {parseFloat(item.total).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n                          {item.taxAmount > 0 && <span className=\"text-gray-500\"> (Tax: PKR {parseFloat(item.taxAmount).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})})</span>}\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* Entry Metadata */}\r\n              <div className=\"text-xs text-gray-500\">\r\n                <p>Created: {new Date(selectedEntry.createdAt).toLocaleString()}</p>\r\n                <p>Status: {selectedEntry.status}</p>\r\n                <p>Type: {selectedEntry.transactionType}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Trial Balance Modal */}\r\n      {showTrialBalance && (\r\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n          <div className=\"bg-white rounded-lg max-w-5xl w-full max-h-[90vh] overflow-y-auto\">\r\n            <div className=\"px-6 py-4 border-b border-gray-200\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900\">\r\n                  Trial Balance - As of {new Date().toLocaleDateString()}\r\n                </h3>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <button\r\n                    onClick={() => {\r\n                      alert('Export functionality would be implemented here');\r\n                    }}\r\n                    className=\"px-3 py-1 bg-emerald-600 text-white rounded text-sm hover:bg-emerald-700 flex items-center space-x-1\"\r\n                  >\r\n                    <Download size={14} />\r\n                    <span>Export</span>\r\n                  </button>\r\n                  <button\r\n                    onClick={() => setShowTrialBalance(false)}\r\n                    className=\"text-gray-400 hover:text-gray-600\"\r\n                  >\r\n                    <X size={20} />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"px-6 py-4\">\r\n              <div className=\"overflow-x-auto\">\r\n                <table className=\"w-full\">\r\n                  <thead className=\"bg-gray-50\">\r\n                    <tr>\r\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Account Code\r\n                      </th>\r\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Account Name\r\n                      </th>\r\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Type\r\n                      </th>\r\n                      <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Debit Total\r\n                      </th>\r\n                      <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Credit Total\r\n                      </th>\r\n                      <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Balance\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                    {trialBalance.map((item) => (\r\n                      <tr key={item.accountId}>\r\n                        <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                          {item.accountCode}\r\n                        </td>\r\n                        <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                          {item.accountName}\r\n                        </td>\r\n                        <td className=\"px-4 py-4 whitespace-nowrap\">\r\n                          <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n                            item.accountType === 'assets' ? 'bg-green-100 text-green-800' :\r\n                            item.accountType === 'liabilities' ? 'bg-red-100 text-red-800' :\r\n                            item.accountType === 'equity' ? 'bg-blue-100 text-blue-800' :\r\n                            item.accountType === 'revenue' ? 'bg-purple-100 text-purple-800' :\r\n                            item.accountType === 'expenses' ? 'bg-orange-100 text-orange-800' :\r\n                            'bg-gray-100 text-gray-800'\r\n                          }`}>\r\n                            {typeof item.accountType === 'string' && item.accountType.length > 0 \r\n                              ? item.accountType.charAt(0).toUpperCase() + item.accountType.slice(1)\r\n                              : 'Unknown'}\r\n                          </span>\r\n                        </td>\r\n                        <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\r\n                          PKR {item.debit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n                        </td>\r\n                        <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\r\n                          PKR {item.credit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n                        </td>\r\n                        <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-right\">\r\n                          <span className={item.balance >= 0 ? 'text-green-600' : 'text-red-600'}>\r\n                            PKR {Math.abs(item.balance).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n                            {item.balance < 0 && ' (CR)'}\r\n                          </span>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                  <tfoot className=\"bg-gray-50\">\r\n                    <tr>\r\n                      <td colSpan=\"3\" className=\"px-4 py-3 text-sm font-bold text-gray-900\">\r\n                        TOTALS:\r\n                      </td>\r\n                      <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\r\n                        PKR {trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n                      </td>\r\n                      <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\r\n                        PKR {trialBalance.reduce((sum, acc) => sum + acc.credit, 0).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n                      </td>\r\n                      <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\r\n                        PKR {Math.abs(trialBalance.reduce((sum, acc) => sum + acc.balance, 0)).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n                      </td>\r\n                    </tr>\r\n                  </tfoot>\r\n                </table>\r\n              </div>\r\n              \r\n              {/* Trial Balance Validation */}\r\n              <div className=\"mt-4 p-4 bg-green-50 border border-green-200 rounded-lg\">\r\n                <div className=\"flex items-center\">\r\n                  <CheckCircle className=\"text-green-600 mr-2\" size={20} />\r\n                  <div>\r\n                    <h4 className=\"font-medium text-green-800\">Trial Balance is Balanced</h4>\r\n                    <p className=\"text-sm text-green-700\">\r\n                      Total Debits = Total Credits = PKR {trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Integration Status */}\r\n      <div className=\"mt-8 grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n        <div className=\"p-4 bg-blue-50 border border-blue-200 rounded-lg\">\r\n          <div className=\"flex items-center mb-2\">\r\n            <RefreshCw className=\"text-blue-600 mr-2\" size={16} />\r\n            <h4 className=\"font-medium text-blue-800\">Dual API Integration</h4>\r\n          </div>\r\n          <p className=\"text-sm text-blue-700\">\r\n            Sales and Purchase orders automatically create journal entries from live API data\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"p-4 bg-blue-50 border border-blue-200 rounded-lg\">\r\n          <div className=\"flex items-center mb-2\">\r\n            <RefreshCw className=\"text-blue-600 mr-2\" size={16} />\r\n            <h4 className=\"font-medium text-blue-800\">Real-time Sync</h4>\r\n          </div>\r\n          <p className=\"text-sm text-blue-700\">\r\n            Journal entries updated automatically with each sales transaction\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"p-4 bg-orange-50 border border-orange-200 rounded-lg\">\r\n          <div className=\"flex items-center mb-2\">\r\n            <FileText className=\"text-orange-600 mr-2\" size={16} />\r\n            <h4 className=\"font-medium text-orange-800\">Manual Entries</h4>\r\n          </div>\r\n          <p className=\"text-sm text-orange-700\">\r\n            Add adjustments and corrections with full double-entry validation\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GeneralLedger;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}