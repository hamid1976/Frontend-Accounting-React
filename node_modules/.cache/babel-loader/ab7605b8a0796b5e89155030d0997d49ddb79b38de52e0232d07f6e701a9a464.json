{"ast":null,"code":"var _s = $RefreshSig$();\n// src/hooks/useAPFilters.js\nimport { useState } from 'react';\nimport { getPOOverallStatus } from '../../../AccountPayableUtil/apCalculations';\nexport const useAPFilters = (vendorsData, purchaseOrdersData) => {\n  _s();\n  const [filters, setFilters] = useState({\n    vendorType: 'all',\n    status: 'all',\n    searchTerm: '',\n    dateRange: 'all',\n    amountRange: 'all'\n  });\n  const getFilteredVendors = () => {\n    if (!vendorsData) return [];\n    let filtered = [...vendorsData];\n\n    // Filter by vendor type\n    if (filters.vendorType !== 'all') {\n      filtered = filtered.filter(vendor => vendor.vendorType === filters.vendorType);\n    }\n\n    // Filter by status - based on actual PO statuses and amounts\n    if (filters.status !== 'all') {\n      filtered = filtered.filter(vendor => {\n        // Get all POs for this vendor\n        const vendorPOs = (purchaseOrdersData || []).filter(po => po.vendor_Id === vendor.id || po.Vendor_Id === vendor.id);\n        if (vendorPOs.length === 0) {\n          return filters.status === 'no_orders';\n        }\n\n        // Calculate pending amount for this vendor\n        const vendorPendingAmount = vendorPOs.reduce((sum, po) => {\n          const overallStatus = getPOOverallStatus(po);\n          if (overallStatus === 'applied') {\n            return sum; // Skip fully applied POs\n          } else if (overallStatus === 'partial') {\n            // For partial POs, only calculate pending items\n            const pendingItemsTotal = po.purchaseOrderItems.reduce((itemSum, item) => {\n              if (item.status !== 'applied') {\n                const itemTotal = (item.quantity || 0) * (item.pricePerUnit || 0);\n                return itemSum + itemTotal;\n              }\n              return itemSum;\n            }, 0);\n            return sum + pendingItemsTotal;\n          } else {\n            // For fully pending POs, calculate all items\n            const poTotal = po.purchaseOrderItems.reduce((itemSum, item) => {\n              const itemTotal = (item.quantity || 0) * (item.pricePerUnit || 0);\n              return itemSum + itemTotal;\n            }, 0);\n            return sum + poTotal;\n          }\n        }, 0);\n\n        // Check PO statuses\n        const hasAppliedPOs = vendorPOs.some(po => getPOOverallStatus(po) === 'applied');\n        const hasPendingPOs = vendorPOs.some(po => getPOOverallStatus(po) === 'pending');\n        const hasPartialPOs = vendorPOs.some(po => getPOOverallStatus(po) === 'partial');\n        switch (filters.status) {\n          case 'pending':\n            return vendorPendingAmount > 0;\n          // Has any pending amount\n          case 'applied':\n            return hasAppliedPOs && vendorPendingAmount === 0;\n          // Only applied orders\n          case 'partial':\n            return hasPartialPOs;\n          // Has partially applied orders\n          case 'overdue':\n            return vendorPendingAmount > 0;\n          // Same as pending for now\n          case 'current':\n            return vendorPendingAmount > 0 && !hasPartialPOs;\n          // Pending but not overdue\n          case 'paid_up':\n            return vendorPendingAmount === 0 && hasAppliedPOs;\n          // All paid\n          case 'no_orders':\n            return vendorPOs.length === 0;\n          default:\n            return true;\n        }\n      });\n    }\n\n    // Filter by amount range\n    if (filters.amountRange !== 'all') {\n      filtered = filtered.filter(vendor => {\n        const vendorPOs = (purchaseOrdersData || []).filter(po => po.vendor_Id === vendor.id || po.Vendor_Id === vendor.id);\n        const vendorPendingAmount = vendorPOs.reduce((sum, po) => {\n          const overallStatus = getPOOverallStatus(po);\n          if (overallStatus === 'applied') {\n            return sum;\n          } else if (overallStatus === 'partial') {\n            const pendingItemsTotal = po.purchaseOrderItems.reduce((itemSum, item) => {\n              if (item.status !== 'applied') {\n                const itemTotal = (item.quantity || 0) * (item.pricePerUnit || 0);\n                return itemSum + itemTotal;\n              }\n              return itemSum;\n            }, 0);\n            return sum + pendingItemsTotal;\n          } else {\n            const poTotal = po.purchaseOrderItems.reduce((itemSum, item) => {\n              const itemTotal = (item.quantity || 0) * (item.pricePerUnit || 0);\n              return itemSum + itemTotal;\n            }, 0);\n            return sum + poTotal;\n          }\n        }, 0);\n        switch (filters.amountRange) {\n          case 'small':\n            return vendorPendingAmount > 0 && vendorPendingAmount <= 100000;\n          // Up to 100k\n          case 'medium':\n            return vendorPendingAmount > 100000 && vendorPendingAmount <= 500000;\n          // 100k-500k\n          case 'large':\n            return vendorPendingAmount > 500000;\n          // Above 500k\n          case 'zero':\n            return vendorPendingAmount === 0;\n          default:\n            return true;\n        }\n      });\n    }\n\n    // Filter by search term\n    if (filters.searchTerm) {\n      const term = filters.searchTerm.toLowerCase();\n      filtered = filtered.filter(vendor => {\n        // Search in vendor details\n        const vendorMatch = vendor.name.toLowerCase().includes(term) || vendor.email.toLowerCase().includes(term) || vendor.id.toLowerCase().includes(term);\n\n        // Search in PO IDs\n        const vendorPOs = (purchaseOrdersData || []).filter(po => po.vendor_Id === vendor.id || po.Vendor_Id === vendor.id);\n        const poMatch = vendorPOs.some(po => {\n          var _po$POID, _po$id, _po$remarks;\n          return ((_po$POID = po.POID) === null || _po$POID === void 0 ? void 0 : _po$POID.toString().toLowerCase().includes(term)) || ((_po$id = po.id) === null || _po$id === void 0 ? void 0 : _po$id.toString().toLowerCase().includes(term)) || ((_po$remarks = po.remarks) === null || _po$remarks === void 0 ? void 0 : _po$remarks.toLowerCase().includes(term));\n        });\n\n        // Search in product names\n        const productMatch = vendorPOs.some(po => po.purchaseOrderItems.some(item => {\n          var _window$productsData, _window$productsData$;\n          const productName = ((_window$productsData = window.productsData) === null || _window$productsData === void 0 ? void 0 : (_window$productsData$ = _window$productsData.find(p => p.id === item.product_Id)) === null || _window$productsData$ === void 0 ? void 0 : _window$productsData$.name) || '';\n          return productName.toLowerCase().includes(term);\n        }));\n        return vendorMatch || poMatch || productMatch;\n      });\n    }\n    return filtered;\n  };\n  const getFilteredPurchaseOrders = () => {\n    if (!purchaseOrdersData) return [];\n    let filtered = [...purchaseOrdersData];\n\n    // Filter by PO status\n    if (filters.status !== 'all') {\n      filtered = filtered.filter(po => {\n        const overallStatus = getPOOverallStatus(po);\n        switch (filters.status) {\n          case 'pending':\n            return overallStatus === 'pending';\n          case 'applied':\n            return overallStatus === 'applied';\n          case 'partial':\n            return overallStatus === 'partial';\n          case 'cancelled':\n            return overallStatus === 'cancelled';\n          default:\n            return true;\n        }\n      });\n    }\n\n    // Filter by amount range\n    if (filters.amountRange !== 'all') {\n      filtered = filtered.filter(po => {\n        const poTotal = po.purchaseOrderItems.reduce((sum, item) => {\n          const itemTotal = (item.quantity || 0) * (item.pricePerUnit || 0);\n          return sum + itemTotal;\n        }, 0);\n        switch (filters.amountRange) {\n          case 'small':\n            return poTotal <= 100000;\n          case 'medium':\n            return poTotal > 100000 && poTotal <= 500000;\n          case 'large':\n            return poTotal > 500000;\n          default:\n            return true;\n        }\n      });\n    }\n\n    // Filter by search term\n    if (filters.searchTerm) {\n      const term = filters.searchTerm.toLowerCase();\n      filtered = filtered.filter(po => {\n        var _po$POID2, _po$id2, _po$remarks2;\n        // Search in PO details\n        const poMatch = ((_po$POID2 = po.POID) === null || _po$POID2 === void 0 ? void 0 : _po$POID2.toString().toLowerCase().includes(term)) || ((_po$id2 = po.id) === null || _po$id2 === void 0 ? void 0 : _po$id2.toString().toLowerCase().includes(term)) || ((_po$remarks2 = po.remarks) === null || _po$remarks2 === void 0 ? void 0 : _po$remarks2.toLowerCase().includes(term));\n\n        // Search in vendor name\n        const vendor = vendorsData === null || vendorsData === void 0 ? void 0 : vendorsData.find(v => v.id === (po.vendor_Id || po.Vendor_Id));\n        const vendorMatch = vendor === null || vendor === void 0 ? void 0 : vendor.name.toLowerCase().includes(term);\n\n        // Search in products\n        const productMatch = po.purchaseOrderItems.some(item => {\n          var _window$productsData2;\n          const product = (_window$productsData2 = window.productsData) === null || _window$productsData2 === void 0 ? void 0 : _window$productsData2.find(p => p.id === item.product_Id);\n          return product === null || product === void 0 ? void 0 : product.name.toLowerCase().includes(term);\n        });\n        return poMatch || vendorMatch || productMatch;\n      });\n    }\n    return filtered;\n  };\n  const resetFilters = () => {\n    setFilters({\n      vendorType: 'all',\n      status: 'all',\n      searchTerm: '',\n      dateRange: 'all',\n      amountRange: 'all'\n    });\n  };\n  const getFilterCounts = () => {\n    if (!vendorsData || !purchaseOrdersData) return {};\n    const counts = {\n      total: vendorsData.length,\n      withPendingAmounts: 0,\n      fullyApplied: 0,\n      partiallyApplied: 0,\n      noPurchaseOrders: 0\n    };\n    vendorsData.forEach(vendor => {\n      const vendorPOs = purchaseOrdersData.filter(po => po.vendor_Id === vendor.id || po.Vendor_Id === vendor.id);\n      if (vendorPOs.length === 0) {\n        counts.noPurchaseOrders++;\n        return;\n      }\n      const vendorPendingAmount = vendorPOs.reduce((sum, po) => {\n        const overallStatus = getPOOverallStatus(po);\n        if (overallStatus === 'applied') {\n          return sum;\n        } else if (overallStatus === 'partial') {\n          const pendingItemsTotal = po.purchaseOrderItems.reduce((itemSum, item) => {\n            if (item.status !== 'applied') {\n              const itemTotal = (item.quantity || 0) * (item.pricePerUnit || 0);\n              return itemSum + itemTotal;\n            }\n            return itemSum;\n          }, 0);\n          return sum + pendingItemsTotal;\n        } else {\n          const poTotal = po.purchaseOrderItems.reduce((itemSum, item) => {\n            const itemTotal = (item.quantity || 0) * (item.pricePerUnit || 0);\n            return itemSum + itemTotal;\n          }, 0);\n          return sum + poTotal;\n        }\n      }, 0);\n      const hasPartialPOs = vendorPOs.some(po => getPOOverallStatus(po) === 'partial');\n      if (vendorPendingAmount > 0) {\n        counts.withPendingAmounts++;\n        if (hasPartialPOs) {\n          counts.partiallyApplied++;\n        }\n      } else {\n        counts.fullyApplied++;\n      }\n    });\n    return counts;\n  };\n  return {\n    filters,\n    setFilters,\n    getFilteredVendors,\n    getFilteredPurchaseOrders,\n    resetFilters,\n    getFilterCounts\n  };\n};\n_s(useAPFilters, \"nfnpo402rlAcST3YYwOO21vUAxo=\");","map":{"version":3,"names":["useState","getPOOverallStatus","useAPFilters","vendorsData","purchaseOrdersData","_s","filters","setFilters","vendorType","status","searchTerm","dateRange","amountRange","getFilteredVendors","filtered","filter","vendor","vendorPOs","po","vendor_Id","id","Vendor_Id","length","vendorPendingAmount","reduce","sum","overallStatus","pendingItemsTotal","purchaseOrderItems","itemSum","item","itemTotal","quantity","pricePerUnit","poTotal","hasAppliedPOs","some","hasPendingPOs","hasPartialPOs","term","toLowerCase","vendorMatch","name","includes","email","poMatch","_po$POID","_po$id","_po$remarks","POID","toString","remarks","productMatch","_window$productsData","_window$productsData$","productName","window","productsData","find","p","product_Id","getFilteredPurchaseOrders","_po$POID2","_po$id2","_po$remarks2","v","_window$productsData2","product","resetFilters","getFilterCounts","counts","total","withPendingAmounts","fullyApplied","partiallyApplied","noPurchaseOrders","forEach"],"sources":["C:/Users/Logic-Unit/my-account/src/components/AccountsPayable/AccountPayableHook/useAPFilters.jsx"],"sourcesContent":["// src/hooks/useAPFilters.js\r\nimport { useState } from 'react';\r\nimport { getPOOverallStatus } from '../../../AccountPayableUtil/apCalculations';\r\n\r\nexport const useAPFilters = (vendorsData, purchaseOrdersData) => {\r\n  const [filters, setFilters] = useState({\r\n    vendorType: 'all',\r\n    status: 'all',\r\n    searchTerm: '',\r\n    dateRange: 'all',\r\n    amountRange: 'all'\r\n  });\r\n\r\n  const getFilteredVendors = () => {\r\n    if (!vendorsData) return [];\r\n    \r\n    let filtered = [...vendorsData];\r\n\r\n    // Filter by vendor type\r\n    if (filters.vendorType !== 'all') {\r\n      filtered = filtered.filter(vendor => vendor.vendorType === filters.vendorType);\r\n    }\r\n\r\n    // Filter by status - based on actual PO statuses and amounts\r\n    if (filters.status !== 'all') {\r\n      filtered = filtered.filter(vendor => {\r\n        // Get all POs for this vendor\r\n        const vendorPOs = (purchaseOrdersData || []).filter(po => \r\n          po.vendor_Id === vendor.id || po.Vendor_Id === vendor.id\r\n        );\r\n\r\n        if (vendorPOs.length === 0) {\r\n          return filters.status === 'no_orders';\r\n        }\r\n\r\n        // Calculate pending amount for this vendor\r\n        const vendorPendingAmount = vendorPOs.reduce((sum, po) => {\r\n          const overallStatus = getPOOverallStatus(po);\r\n          \r\n          if (overallStatus === 'applied') {\r\n            return sum; // Skip fully applied POs\r\n          } else if (overallStatus === 'partial') {\r\n            // For partial POs, only calculate pending items\r\n            const pendingItemsTotal = po.purchaseOrderItems.reduce((itemSum, item) => {\r\n              if (item.status !== 'applied') {\r\n                const itemTotal = (item.quantity || 0) * (item.pricePerUnit || 0);\r\n                return itemSum + itemTotal;\r\n              }\r\n              return itemSum;\r\n            }, 0);\r\n            return sum + pendingItemsTotal;\r\n          } else {\r\n            // For fully pending POs, calculate all items\r\n            const poTotal = po.purchaseOrderItems.reduce((itemSum, item) => {\r\n              const itemTotal = (item.quantity || 0) * (item.pricePerUnit || 0);\r\n              return itemSum + itemTotal;\r\n            }, 0);\r\n            return sum + poTotal;\r\n          }\r\n        }, 0);\r\n\r\n        // Check PO statuses\r\n        const hasAppliedPOs = vendorPOs.some(po => getPOOverallStatus(po) === 'applied');\r\n        const hasPendingPOs = vendorPOs.some(po => getPOOverallStatus(po) === 'pending');\r\n        const hasPartialPOs = vendorPOs.some(po => getPOOverallStatus(po) === 'partial');\r\n\r\n        switch (filters.status) {\r\n          case 'pending':\r\n            return vendorPendingAmount > 0; // Has any pending amount\r\n          case 'applied':\r\n            return hasAppliedPOs && vendorPendingAmount === 0; // Only applied orders\r\n          case 'partial':\r\n            return hasPartialPOs; // Has partially applied orders\r\n          case 'overdue':\r\n            return vendorPendingAmount > 0; // Same as pending for now\r\n          case 'current':\r\n            return vendorPendingAmount > 0 && !hasPartialPOs; // Pending but not overdue\r\n          case 'paid_up':\r\n            return vendorPendingAmount === 0 && hasAppliedPOs; // All paid\r\n          case 'no_orders':\r\n            return vendorPOs.length === 0;\r\n          default:\r\n            return true;\r\n        }\r\n      });\r\n    }\r\n\r\n    // Filter by amount range\r\n    if (filters.amountRange !== 'all') {\r\n      filtered = filtered.filter(vendor => {\r\n        const vendorPOs = (purchaseOrdersData || []).filter(po => \r\n          po.vendor_Id === vendor.id || po.Vendor_Id === vendor.id\r\n        );\r\n\r\n        const vendorPendingAmount = vendorPOs.reduce((sum, po) => {\r\n          const overallStatus = getPOOverallStatus(po);\r\n          \r\n          if (overallStatus === 'applied') {\r\n            return sum;\r\n          } else if (overallStatus === 'partial') {\r\n            const pendingItemsTotal = po.purchaseOrderItems.reduce((itemSum, item) => {\r\n              if (item.status !== 'applied') {\r\n                const itemTotal = (item.quantity || 0) * (item.pricePerUnit || 0);\r\n                return itemSum + itemTotal;\r\n              }\r\n              return itemSum;\r\n            }, 0);\r\n            return sum + pendingItemsTotal;\r\n          } else {\r\n            const poTotal = po.purchaseOrderItems.reduce((itemSum, item) => {\r\n              const itemTotal = (item.quantity || 0) * (item.pricePerUnit || 0);\r\n              return itemSum + itemTotal;\r\n            }, 0);\r\n            return sum + poTotal;\r\n          }\r\n        }, 0);\r\n\r\n        switch (filters.amountRange) {\r\n          case 'small':\r\n            return vendorPendingAmount > 0 && vendorPendingAmount <= 100000; // Up to 100k\r\n          case 'medium':\r\n            return vendorPendingAmount > 100000 && vendorPendingAmount <= 500000; // 100k-500k\r\n          case 'large':\r\n            return vendorPendingAmount > 500000; // Above 500k\r\n          case 'zero':\r\n            return vendorPendingAmount === 0;\r\n          default:\r\n            return true;\r\n        }\r\n      });\r\n    }\r\n\r\n    // Filter by search term\r\n    if (filters.searchTerm) {\r\n      const term = filters.searchTerm.toLowerCase();\r\n      filtered = filtered.filter(vendor => {\r\n        // Search in vendor details\r\n        const vendorMatch = vendor.name.toLowerCase().includes(term) ||\r\n                           vendor.email.toLowerCase().includes(term) ||\r\n                           vendor.id.toLowerCase().includes(term);\r\n\r\n        // Search in PO IDs\r\n        const vendorPOs = (purchaseOrdersData || []).filter(po => \r\n          po.vendor_Id === vendor.id || po.Vendor_Id === vendor.id\r\n        );\r\n        const poMatch = vendorPOs.some(po => \r\n          po.POID?.toString().toLowerCase().includes(term) ||\r\n          po.id?.toString().toLowerCase().includes(term) ||\r\n          po.remarks?.toLowerCase().includes(term)\r\n        );\r\n\r\n        // Search in product names\r\n        const productMatch = vendorPOs.some(po =>\r\n          po.purchaseOrderItems.some(item => {\r\n            const productName = window.productsData?.find(p => \r\n              p.id === item.product_Id\r\n            )?.name || '';\r\n            return productName.toLowerCase().includes(term);\r\n          })\r\n        );\r\n\r\n        return vendorMatch || poMatch || productMatch;\r\n      });\r\n    }\r\n\r\n    return filtered;\r\n  };\r\n\r\n  const getFilteredPurchaseOrders = () => {\r\n    if (!purchaseOrdersData) return [];\r\n    \r\n    let filtered = [...purchaseOrdersData];\r\n\r\n    // Filter by PO status\r\n    if (filters.status !== 'all') {\r\n      filtered = filtered.filter(po => {\r\n        const overallStatus = getPOOverallStatus(po);\r\n        \r\n        switch (filters.status) {\r\n          case 'pending':\r\n            return overallStatus === 'pending';\r\n          case 'applied':\r\n            return overallStatus === 'applied';\r\n          case 'partial':\r\n            return overallStatus === 'partial';\r\n          case 'cancelled':\r\n            return overallStatus === 'cancelled';\r\n          default:\r\n            return true;\r\n        }\r\n      });\r\n    }\r\n\r\n    // Filter by amount range\r\n    if (filters.amountRange !== 'all') {\r\n      filtered = filtered.filter(po => {\r\n        const poTotal = po.purchaseOrderItems.reduce((sum, item) => {\r\n          const itemTotal = (item.quantity || 0) * (item.pricePerUnit || 0);\r\n          return sum + itemTotal;\r\n        }, 0);\r\n\r\n        switch (filters.amountRange) {\r\n          case 'small':\r\n            return poTotal <= 100000;\r\n          case 'medium':\r\n            return poTotal > 100000 && poTotal <= 500000;\r\n          case 'large':\r\n            return poTotal > 500000;\r\n          default:\r\n            return true;\r\n        }\r\n      });\r\n    }\r\n\r\n    // Filter by search term\r\n    if (filters.searchTerm) {\r\n      const term = filters.searchTerm.toLowerCase();\r\n      filtered = filtered.filter(po => {\r\n        // Search in PO details\r\n        const poMatch = po.POID?.toString().toLowerCase().includes(term) ||\r\n                       po.id?.toString().toLowerCase().includes(term) ||\r\n                       po.remarks?.toLowerCase().includes(term);\r\n\r\n        // Search in vendor name\r\n        const vendor = vendorsData?.find(v => v.id === (po.vendor_Id || po.Vendor_Id));\r\n        const vendorMatch = vendor?.name.toLowerCase().includes(term);\r\n\r\n        // Search in products\r\n        const productMatch = po.purchaseOrderItems.some(item => {\r\n          const product = window.productsData?.find(p => p.id === item.product_Id);\r\n          return product?.name.toLowerCase().includes(term);\r\n        });\r\n\r\n        return poMatch || vendorMatch || productMatch;\r\n      });\r\n    }\r\n\r\n    return filtered;\r\n  };\r\n\r\n  const resetFilters = () => {\r\n    setFilters({\r\n      vendorType: 'all',\r\n      status: 'all',\r\n      searchTerm: '',\r\n      dateRange: 'all',\r\n      amountRange: 'all'\r\n    });\r\n  };\r\n\r\n  const getFilterCounts = () => {\r\n    if (!vendorsData || !purchaseOrdersData) return {};\r\n\r\n    const counts = {\r\n      total: vendorsData.length,\r\n      withPendingAmounts: 0,\r\n      fullyApplied: 0,\r\n      partiallyApplied: 0,\r\n      noPurchaseOrders: 0\r\n    };\r\n\r\n    vendorsData.forEach(vendor => {\r\n      const vendorPOs = purchaseOrdersData.filter(po => \r\n        po.vendor_Id === vendor.id || po.Vendor_Id === vendor.id\r\n      );\r\n\r\n      if (vendorPOs.length === 0) {\r\n        counts.noPurchaseOrders++;\r\n        return;\r\n      }\r\n\r\n      const vendorPendingAmount = vendorPOs.reduce((sum, po) => {\r\n        const overallStatus = getPOOverallStatus(po);\r\n        \r\n        if (overallStatus === 'applied') {\r\n          return sum;\r\n        } else if (overallStatus === 'partial') {\r\n          const pendingItemsTotal = po.purchaseOrderItems.reduce((itemSum, item) => {\r\n            if (item.status !== 'applied') {\r\n              const itemTotal = (item.quantity || 0) * (item.pricePerUnit || 0);\r\n              return itemSum + itemTotal;\r\n            }\r\n            return itemSum;\r\n          }, 0);\r\n          return sum + pendingItemsTotal;\r\n        } else {\r\n          const poTotal = po.purchaseOrderItems.reduce((itemSum, item) => {\r\n            const itemTotal = (item.quantity || 0) * (item.pricePerUnit || 0);\r\n            return itemSum + itemTotal;\r\n          }, 0);\r\n          return sum + poTotal;\r\n        }\r\n      }, 0);\r\n\r\n      const hasPartialPOs = vendorPOs.some(po => getPOOverallStatus(po) === 'partial');\r\n\r\n      if (vendorPendingAmount > 0) {\r\n        counts.withPendingAmounts++;\r\n        if (hasPartialPOs) {\r\n          counts.partiallyApplied++;\r\n        }\r\n      } else {\r\n        counts.fullyApplied++;\r\n      }\r\n    });\r\n\r\n    return counts;\r\n  };\r\n\r\n  return {\r\n    filters,\r\n    setFilters,\r\n    getFilteredVendors,\r\n    getFilteredPurchaseOrders,\r\n    resetFilters,\r\n    getFilterCounts\r\n  };\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}