{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Logic-Unit\\\\my-account\\\\src\\\\components\\\\AccountsReceivable\\\\RecordPaymentModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { X, Calendar, DollarSign, CreditCard, FileText, AlertCircle } from 'lucide-react';\nimport { formatCurrency } from './AccountsReceivableUtils/formatters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecordPaymentModal = ({\n  invoiceId,\n  amount,\n  onClose,\n  onSubmit,\n  onPaymentComplete,\n  customerId,\n  total\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    date: new Date().toISOString().split('T')[0],\n    amount: '',\n    method: '',\n    account: '',\n    memo: ''\n  });\n  const [accounts, setAccounts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [isAlreadyPaid, setIsAlreadyPaid] = useState(false);\n  const [currentRemainingAmount, setCurrentRemainingAmount] = useState(amount);\n  const [originalTotalAmount, setOriginalTotalAmount] = useState(amount);\n\n  // Fetch the current remaining amount from localStorage\n  useEffect(() => {\n    const existingOrders = JSON.parse(localStorage.getItem('orders') || '[]');\n    const order = existingOrders.find(o => o.orderId === invoiceId || o.id === invoiceId);\n    if (order) {\n      // Calculate remaining based on payment history if remainingAmount is not set\n      let remaining = order.remainingAmount;\n      if (remaining === undefined || remaining === null) {\n        // If no remainingAmount field, calculate it from payments\n        const payments = JSON.parse(localStorage.getItem('payments') || '[]');\n        const orderPayments = payments.filter(p => p.orderId === invoiceId || p.invoiceId === invoiceId);\n        const totalPaid = orderPayments.reduce((sum, payment) => sum + payment.amount, 0);\n        remaining = Math.max(0, order.total - totalPaid);\n      }\n      setCurrentRemainingAmount(remaining);\n      setOriginalTotalAmount(order.total);\n\n      // Set the form amount to the remaining amount by default\n      setFormData(prev => ({\n        ...prev,\n        amount: remaining.toString()\n      }));\n\n      // Check if already paid\n      if (order.paid || order.paymentStatus === 'paid' || remaining <= 0) {\n        setIsAlreadyPaid(true);\n      }\n    } else {\n      // If no order found, use the amount prop\n      setCurrentRemainingAmount(amount);\n      setOriginalTotalAmount(amount);\n      setFormData(prev => ({\n        ...prev,\n        amount: amount.toString()\n      }));\n    }\n  }, [invoiceId, amount]);\n\n  // Fetch accounts on mount\n  useEffect(() => {\n    fetchAccounts();\n  }, []);\n  const fetchAccounts = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/api/accounts');\n      const data = await response.json();\n      const assetAccounts = data.filter(acct => acct.type === 'assets');\n      const accountMap = {};\n      assetAccounts.forEach(acct => accountMap[acct.id] = {\n        ...acct,\n        children: []\n      });\n      assetAccounts.forEach(acct => {\n        if (acct.parentId && accountMap[acct.parentId]) {\n          accountMap[acct.parentId].children.push(accountMap[acct.id]);\n        }\n      });\n      const tree = assetAccounts.filter(acct => !acct.parentId || !accountMap[acct.parentId]);\n      setAccounts(tree);\n    } catch (err) {\n      console.error('Failed to fetch accounts:', err);\n    }\n  };\n  const handleChange = (field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n    if (errors[field]) {\n      setErrors(prev => ({\n        ...prev,\n        [field]: ''\n      }));\n    }\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.date) {\n      newErrors.date = 'Payment date is required';\n    }\n    const paymentAmount = parseFloat(formData.amount);\n    if (!formData.amount || paymentAmount <= 0) {\n      newErrors.amount = 'Valid payment amount is required';\n    } else if (paymentAmount > currentRemainingAmount) {\n      newErrors.amount = `Payment cannot exceed remaining amount of ${formatCurrency(currentRemainingAmount)}`;\n    }\n    if (!formData.method) {\n      newErrors.method = 'Payment method is required';\n    }\n    if (!formData.account) {\n      newErrors.account = 'Deposit account is required';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = async () => {\n    if (isAlreadyPaid) {\n      setErrors({\n        general: 'This invoice has already been fully paid. No further payments allowed.'\n      });\n      return;\n    }\n    if (!validateForm()) return;\n    setLoading(true);\n    try {\n      const paymentAmount = parseFloat(formData.amount);\n      const newRemainingAmount = Math.max(0, currentRemainingAmount - paymentAmount);\n      const isFullPayment = newRemainingAmount <= 0;\n      const paymentStatus = isFullPayment ? 'paid' : 'partial';\n\n      // Create payment record\n      const paymentData = {\n        id: `PAY-${Date.now()}`,\n        customerId: customerId || null,\n        orderId: invoiceId,\n        date: formData.date,\n        amount: paymentAmount,\n        paymentMethod: formData.method,\n        accountId: formData.account,\n        accountName: getAccountNameById(formData.account, accounts) || 'Unknown Account',\n        accountType: getAccountTypeById(formData.account, accounts) || 'Not specified',\n        memo: formData.memo,\n        status: paymentStatus,\n        remainingAmount: newRemainingAmount,\n        createdAt: new Date().toISOString(),\n        createdBy: 'current_user'\n      };\n\n      // Save payment to localStorage\n      const existingPayments = JSON.parse(localStorage.getItem('payments') || '[]');\n      const updatedPayments = [...existingPayments, paymentData];\n      localStorage.setItem('payments', JSON.stringify(updatedPayments));\n\n      // Update order in localStorage\n      const existingOrders = JSON.parse(localStorage.getItem('orders') || '[]');\n      const orderIndex = existingOrders.findIndex(order => order.orderId === invoiceId || order.id === invoiceId);\n      if (orderIndex !== -1) {\n        existingOrders[orderIndex] = {\n          ...existingOrders[orderIndex],\n          paid: isFullPayment,\n          paymentStatus: paymentStatus,\n          lastPaymentDate: formData.date,\n          lastPaymentAmount: paymentAmount,\n          remainingAmount: newRemainingAmount,\n          paymentHistory: [...(existingOrders[orderIndex].paymentHistory || []), paymentData.id]\n        };\n        localStorage.setItem('orders', JSON.stringify(existingOrders));\n      }\n\n      // API Call\n      const apiUrl = `https://api-pos.hulmsolutions.com/POS/accountinghamid/bea876f9-b274-4cd2-9f86-d28953bee69d/orders/Paid/${invoiceId}`;\n      const payload = {\n        customerId: customerId,\n        orderId: invoiceId,\n        paid: isFullPayment,\n        billUnitId: \"2\",\n        billStatus: \"pending\"\n      };\n      const apiResponse = await fetch(apiUrl, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer $hAMID`\n        },\n        body: JSON.stringify(payload)\n      });\n      if (!apiResponse.ok) {\n        throw new Error(\"Failed to update order status in API\");\n      }\n\n      // Callbacks\n      if (onSubmit) {\n        onSubmit(paymentData, isFullPayment);\n      }\n      if (onPaymentComplete) {\n        onPaymentComplete(paymentData, isFullPayment);\n      }\n      const message = isFullPayment ? \"Payment recorded successfully. Invoice is now fully paid.\" : `Partial payment of ${formatCurrency(paymentAmount)} recorded. Remaining balance: ${formatCurrency(newRemainingAmount)}`;\n      console.log(message);\n      onClose();\n    } catch (error) {\n      console.error(\"Error recording payment:\", error);\n      setErrors({\n        general: \"Failed to record payment. Please try again.\"\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getAccountNameById = (accountId, accountList) => {\n    for (const account of accountList) {\n      if (account.id === accountId) {\n        return account.name;\n      }\n      if (account.children && account.children.length > 0) {\n        const foundInChildren = getAccountNameById(accountId, account.children);\n        if (foundInChildren) return foundInChildren;\n      }\n    }\n    return null;\n  };\n  const getAccountTypeById = (accountId, accountList) => {\n    for (const account of accountList) {\n      if (account.id === accountId) {\n        return account.type; // ← will return \"assets\", \"liabilities\", etc.\n      }\n      if (account.children && account.children.length > 0) {\n        const foundInChildren = getAccountTypeById(accountId, account.children);\n        if (foundInChildren) return foundInChildren;\n      }\n    }\n    return null;\n  };\n  const renderAccountOptions = (accountList, level = 0) => {\n    return accountList.map(account => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: account.id,\n        children: ['-'.repeat(level * 2), \" \", account.code, \" - \", account.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), account.children && account.children.length > 0 && renderAccountOptions(account.children, level + 1)]\n    }, account.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this));\n  };\n  const paymentAmount = parseFloat(formData.amount) || 0;\n  const remainingAmount = Math.max(0, currentRemainingAmount - paymentAmount);\n  const isFullPayment = remainingAmount <= 0 && paymentAmount > 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-xl shadow-2xl max-w-md w-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-6 py-4 border-b border-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold text-gray-900\",\n            children: \"Record a payment for this invoice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onClose,\n            className: \"text-gray-400 hover:text-gray-600 transition-colors\",\n            children: /*#__PURE__*/_jsxDEV(X, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-6 py-4 space-y-5\",\n        children: [errors.general && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3 bg-red-50 border border-red-200 rounded-lg flex items-start gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n            size: 20,\n            className: \"text-red-600 flex-shrink-0 mt-0.5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-red-700\",\n            children: errors.general\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this), currentRemainingAmount > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3 bg-blue-50 border border-blue-200 rounded-lg\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-blue-800\",\n            children: [\"Current remaining balance: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: formatCurrency(currentRemainingAmount)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 44\n            }, this), originalTotalAmount > currentRemainingAmount && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs ml-2\",\n              children: [\"(Original total: \", formatCurrency(originalTotalAmount), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"flex items-center gap-2 text-sm font-medium text-gray-700 mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(Calendar, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this), \"Date\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: formData.date,\n            onChange: e => handleChange('date', e.target.value),\n            className: `w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${errors.date ? 'border-red-500' : 'border-gray-300'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this), errors.date && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs text-red-600 mt-1\",\n            children: errors.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"flex items-center gap-2 text-sm font-medium text-gray-700 mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(DollarSign, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this), \"Amount\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"absolute left-3 top-1/2 -translate-y-1/2 text-gray-500 font-medium\",\n              children: \"Rs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              value: formData.amount,\n              onChange: e => handleChange('amount', e.target.value),\n              className: `w-full pl-10 pr-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${errors.amount ? 'border-red-500' : 'border-gray-300'}`,\n              placeholder: \"0.00\",\n              max: currentRemainingAmount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this), errors.amount && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs text-red-600 mt-1\",\n            children: errors.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 31\n          }, this), paymentAmount > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2 text-sm\",\n            children: isFullPayment ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-green-600 font-medium\",\n              children: \"Invoice will be fully paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-orange-600\",\n              children: [\"Partial payment - Remaining: \", formatCurrency(remainingAmount)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"flex items-center gap-2 text-sm font-medium text-gray-700 mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(CreditCard, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this), \"Method\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: formData.method,\n            onChange: e => handleChange('method', e.target.value),\n            className: `w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${errors.method ? 'border-red-500' : 'border-gray-300'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a payment method...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"cash\",\n              children: \"Cash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"check\",\n              children: \"Check\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"bank_transfer\",\n              children: \"Bank Transfer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"credit_card\",\n              children: \"Credit Card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"debit_card\",\n              children: \"Debit Card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"online\",\n              children: \"Online Payment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this), errors.method && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs text-red-600 mt-1\",\n            children: errors.method\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"flex items-center gap-2 text-sm font-medium text-gray-700 mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(FileText, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this), \"Account\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: formData.account,\n            onChange: e => handleChange('account', e.target.value),\n            className: `w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${errors.account ? 'border-red-500' : 'border-gray-300'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a payment account...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this), renderAccountOptions(accounts)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this), errors.account && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs text-red-600 mt-1\",\n            children: errors.account\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-500 mt-1\",\n            children: [\"Any account into which you deposit and withdraw funds from.\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              className: \"text-blue-600 hover:text-blue-700\",\n              children: \"Learn more\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-sm font-medium text-gray-700 mb-1 block\",\n            children: \"Memo / notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: formData.memo,\n            onChange: e => handleChange('memo', e.target.value),\n            rows: 3,\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",\n            placeholder: \"Add any additional notes...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-6 py-4 border-t border-gray-200 flex items-center justify-end gap-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          disabled: loading || !formData.amount || parseFloat(formData.amount) <= 0 || parseFloat(formData.amount) > currentRemainingAmount,\n          className: `px-6 py-2 rounded-lg font-medium transition-colors ${loading || !formData.amount || parseFloat(formData.amount) <= 0 || parseFloat(formData.amount) > currentRemainingAmount ? 'bg-gray-300 text-gray-500 cursor-not-allowed' : 'bg-blue-600 text-white hover:bg-blue-700'}`,\n          children: loading ? 'Processing...' : 'Submit'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 5\n  }, this);\n};\n_s(RecordPaymentModal, \"8LWCMDSvvtXzbkMYf5G6mu0o6pA=\");\n_c = RecordPaymentModal;\nexport default RecordPaymentModal;\nvar _c;\n$RefreshReg$(_c, \"RecordPaymentModal\");","map":{"version":3,"names":["React","useState","useEffect","X","Calendar","DollarSign","CreditCard","FileText","AlertCircle","formatCurrency","jsxDEV","_jsxDEV","RecordPaymentModal","invoiceId","amount","onClose","onSubmit","onPaymentComplete","customerId","total","_s","formData","setFormData","date","Date","toISOString","split","method","account","memo","accounts","setAccounts","loading","setLoading","errors","setErrors","isAlreadyPaid","setIsAlreadyPaid","currentRemainingAmount","setCurrentRemainingAmount","originalTotalAmount","setOriginalTotalAmount","existingOrders","JSON","parse","localStorage","getItem","order","find","o","orderId","id","remaining","remainingAmount","undefined","payments","orderPayments","filter","p","totalPaid","reduce","sum","payment","Math","max","prev","toString","paid","paymentStatus","fetchAccounts","response","fetch","data","json","assetAccounts","acct","type","accountMap","forEach","children","parentId","push","tree","err","console","error","handleChange","field","value","validateForm","newErrors","paymentAmount","parseFloat","Object","keys","length","handleSubmit","general","newRemainingAmount","isFullPayment","paymentData","now","paymentMethod","accountId","accountName","getAccountNameById","accountType","getAccountTypeById","status","createdAt","createdBy","existingPayments","updatedPayments","setItem","stringify","orderIndex","findIndex","lastPaymentDate","lastPaymentAmount","paymentHistory","apiUrl","payload","billUnitId","billStatus","apiResponse","headers","body","ok","Error","message","log","accountList","name","foundInChildren","renderAccountOptions","level","map","Fragment","repeat","code","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","size","onChange","e","target","step","placeholder","href","rows","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Logic-Unit/my-account/src/components/AccountsReceivable/RecordPaymentModal.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { X, Calendar, DollarSign, CreditCard, FileText, AlertCircle } from 'lucide-react';\r\nimport { formatCurrency } from './AccountsReceivableUtils/formatters';\r\n\r\nconst RecordPaymentModal = ({ invoiceId, amount, onClose, onSubmit, onPaymentComplete, customerId,total }) => {\r\n  const [formData, setFormData] = useState({\r\n    date: new Date().toISOString().split('T')[0],\r\n    amount: '',\r\n    method: '',\r\n    account: '',\r\n    memo: ''\r\n  });\r\n\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [isAlreadyPaid, setIsAlreadyPaid] = useState(false);\r\n  const [currentRemainingAmount, setCurrentRemainingAmount] = useState(amount);\r\n  const [originalTotalAmount, setOriginalTotalAmount] = useState(amount);\r\n\r\n  // Fetch the current remaining amount from localStorage\r\n  useEffect(() => {\r\n    const existingOrders = JSON.parse(localStorage.getItem('orders') || '[]');\r\n    const order = existingOrders.find(o => \r\n      o.orderId === invoiceId || o.id === invoiceId\r\n    );\r\n\r\n    if (order) {\r\n      // Calculate remaining based on payment history if remainingAmount is not set\r\n      let remaining = order.remainingAmount;\r\n      \r\n      if (remaining === undefined || remaining === null) {\r\n        // If no remainingAmount field, calculate it from payments\r\n        const payments = JSON.parse(localStorage.getItem('payments') || '[]');\r\n        const orderPayments = payments.filter(p => \r\n          p.orderId === invoiceId || p.invoiceId === invoiceId\r\n        );\r\n        \r\n        const totalPaid = orderPayments.reduce((sum, payment) => sum + payment.amount, 0);\r\n        remaining = Math.max(0, order.total - totalPaid);\r\n      }\r\n      \r\n      setCurrentRemainingAmount(remaining);\r\n      setOriginalTotalAmount(order.total);\r\n      \r\n      // Set the form amount to the remaining amount by default\r\n      setFormData(prev => ({ ...prev, amount: remaining.toString() }));\r\n      \r\n      // Check if already paid\r\n      if (order.paid || order.paymentStatus === 'paid' || remaining <= 0) {\r\n        setIsAlreadyPaid(true);\r\n      }\r\n    } else {\r\n      // If no order found, use the amount prop\r\n      setCurrentRemainingAmount(amount);\r\n      setOriginalTotalAmount(amount);\r\n      setFormData(prev => ({ ...prev, amount: amount.toString() }));\r\n    }\r\n  }, [invoiceId, amount]);\r\n\r\n  // Fetch accounts on mount\r\n  useEffect(() => {\r\n    fetchAccounts();\r\n  }, []);\r\n\r\n  const fetchAccounts = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8080/api/accounts');\r\n      const data = await response.json();\r\n\r\n      const assetAccounts = data.filter(acct => acct.type === 'assets');\r\n      const accountMap = {};\r\n      assetAccounts.forEach(acct => accountMap[acct.id] = { ...acct, children: [] });\r\n\r\n      assetAccounts.forEach(acct => {\r\n        if (acct.parentId && accountMap[acct.parentId]) {\r\n          accountMap[acct.parentId].children.push(accountMap[acct.id]);\r\n        }\r\n      });\r\n\r\n      const tree = assetAccounts.filter(acct => !acct.parentId || !accountMap[acct.parentId]);\r\n      setAccounts(tree);\r\n    } catch (err) {\r\n      console.error('Failed to fetch accounts:', err);\r\n    }\r\n  };\r\n\r\n  const handleChange = (field, value) => {\r\n    setFormData(prev => ({ ...prev, [field]: value }));\r\n    if (errors[field]) {\r\n      setErrors(prev => ({ ...prev, [field]: '' }));\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    \r\n    if (!formData.date) {\r\n      newErrors.date = 'Payment date is required';\r\n    }\r\n    \r\n    const paymentAmount = parseFloat(formData.amount);\r\n    if (!formData.amount || paymentAmount <= 0) {\r\n      newErrors.amount = 'Valid payment amount is required';\r\n    } else if (paymentAmount > currentRemainingAmount) {\r\n      newErrors.amount = `Payment cannot exceed remaining amount of ${formatCurrency(currentRemainingAmount)}`;\r\n    }\r\n    \r\n    if (!formData.method) {\r\n      newErrors.method = 'Payment method is required';\r\n    }\r\n    \r\n    if (!formData.account) {\r\n      newErrors.account = 'Deposit account is required';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (isAlreadyPaid) {\r\n      setErrors({\r\n        general: 'This invoice has already been fully paid. No further payments allowed.'\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!validateForm()) return;\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const paymentAmount = parseFloat(formData.amount);\r\n      const newRemainingAmount = Math.max(0, currentRemainingAmount - paymentAmount);\r\n      const isFullPayment = newRemainingAmount <= 0;\r\n      const paymentStatus = isFullPayment ? 'paid' : 'partial';\r\n\r\n      // Create payment record\r\n      const paymentData = {\r\n        id: `PAY-${Date.now()}`,\r\n        customerId: customerId || null,\r\n        orderId: invoiceId,\r\n        date: formData.date,\r\n        amount: paymentAmount,\r\n        paymentMethod: formData.method,\r\n        accountId: formData.account,\r\n        accountName: getAccountNameById(formData.account, accounts) || 'Unknown Account',\r\n        accountType: getAccountTypeById(formData.account, accounts) || 'Not specified',\r\n\r\n        memo: formData.memo,\r\n        status: paymentStatus,\r\n        remainingAmount: newRemainingAmount,\r\n        createdAt: new Date().toISOString(),\r\n        createdBy: 'current_user'\r\n      };\r\n\r\n      // Save payment to localStorage\r\n      const existingPayments = JSON.parse(localStorage.getItem('payments') || '[]');\r\n      const updatedPayments = [...existingPayments, paymentData];\r\n      localStorage.setItem('payments', JSON.stringify(updatedPayments));\r\n\r\n      // Update order in localStorage\r\n      const existingOrders = JSON.parse(localStorage.getItem('orders') || '[]');\r\n      const orderIndex = existingOrders.findIndex(order =>\r\n        order.orderId === invoiceId || order.id === invoiceId\r\n      );\r\n\r\n      if (orderIndex !== -1) {\r\n        existingOrders[orderIndex] = {\r\n          ...existingOrders[orderIndex],\r\n          paid: isFullPayment,\r\n          paymentStatus: paymentStatus,\r\n          lastPaymentDate: formData.date,\r\n          lastPaymentAmount: paymentAmount,\r\n          remainingAmount: newRemainingAmount,\r\n          paymentHistory: [\r\n            ...(existingOrders[orderIndex].paymentHistory || []),\r\n            paymentData.id\r\n          ]\r\n        };\r\n        localStorage.setItem('orders', JSON.stringify(existingOrders));\r\n      }\r\n\r\n      // API Call\r\n      const apiUrl = `https://api-pos.hulmsolutions.com/POS/accountinghamid/bea876f9-b274-4cd2-9f86-d28953bee69d/orders/Paid/${invoiceId}`;\r\n      const payload = {\r\n        customerId: customerId,\r\n        orderId: invoiceId,\r\n        paid: isFullPayment,\r\n        billUnitId: \"2\",\r\n        billStatus: \"pending\"\r\n      };\r\n\r\n      const apiResponse = await fetch(apiUrl, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\": `Bearer $hAMID`\r\n        },\r\n        body: JSON.stringify(payload)\r\n      });\r\n\r\n      if (!apiResponse.ok) {\r\n        throw new Error(\"Failed to update order status in API\");\r\n      }\r\n\r\n      // Callbacks\r\n      if (onSubmit) {\r\n        onSubmit(paymentData, isFullPayment);\r\n      }\r\n\r\n      if (onPaymentComplete) {\r\n        onPaymentComplete(paymentData, isFullPayment);\r\n      }\r\n\r\n      const message = isFullPayment\r\n        ? \"Payment recorded successfully. Invoice is now fully paid.\"\r\n        : `Partial payment of ${formatCurrency(paymentAmount)} recorded. Remaining balance: ${formatCurrency(newRemainingAmount)}`;\r\n\r\n      console.log(message);\r\n      onClose();\r\n    } catch (error) {\r\n      console.error(\"Error recording payment:\", error);\r\n      setErrors({ general: \"Failed to record payment. Please try again.\" });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getAccountNameById = (accountId, accountList) => {\r\n    for (const account of accountList) {\r\n      if (account.id === accountId) {\r\n        return account.name;\r\n      }\r\n      if (account.children && account.children.length > 0) {\r\n        const foundInChildren = getAccountNameById(accountId, account.children);\r\n        if (foundInChildren) return foundInChildren;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n  const getAccountTypeById = (accountId, accountList) => {\r\n  for (const account of accountList) {\r\n    if (account.id === accountId) {\r\n      return account.type; // ← will return \"assets\", \"liabilities\", etc.\r\n    }\r\n    if (account.children && account.children.length > 0) {\r\n      const foundInChildren = getAccountTypeById(accountId, account.children);\r\n      if (foundInChildren) return foundInChildren;\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\n\r\n  const renderAccountOptions = (accountList, level = 0) => {\r\n    return accountList.map(account => (\r\n      <React.Fragment key={account.id}>\r\n        <option value={account.id}>\r\n          {'-'.repeat(level * 2)} {account.code} - {account.name}\r\n        </option>\r\n        {account.children && account.children.length > 0 && (\r\n          renderAccountOptions(account.children, level + 1)\r\n        )}\r\n      </React.Fragment>\r\n    ));\r\n  };\r\n\r\n  const paymentAmount = parseFloat(formData.amount) || 0;\r\n  const remainingAmount = Math.max(0, currentRemainingAmount - paymentAmount);\r\n  const isFullPayment = remainingAmount <= 0 && paymentAmount > 0;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n      <div className=\"bg-white rounded-xl shadow-2xl max-w-md w-full\">\r\n        {/* Header */}\r\n        <div className=\"px-6 py-4 border-b border-gray-200\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <h2 className=\"text-xl font-semibold text-gray-900\">\r\n              Record a payment for this invoice\r\n            </h2>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"text-gray-400 hover:text-gray-600 transition-colors\"\r\n            >\r\n              <X size={24} />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Form Body */}\r\n        <div className=\"px-6 py-4 space-y-5\">\r\n          {errors.general && (\r\n            <div className=\"p-3 bg-red-50 border border-red-200 rounded-lg flex items-start gap-2\">\r\n              <AlertCircle size={20} className=\"text-red-600 flex-shrink-0 mt-0.5\" />\r\n              <span className=\"text-sm text-red-700\">{errors.general}</span>\r\n            </div>\r\n          )}\r\n\r\n          {/* Show current remaining amount */}\r\n          {currentRemainingAmount > 0 && (\r\n            <div className=\"p-3 bg-blue-50 border border-blue-200 rounded-lg\">\r\n              <p className=\"text-sm text-blue-800\">\r\n                Current remaining balance: <strong>{formatCurrency(currentRemainingAmount)}</strong>\r\n                {originalTotalAmount > currentRemainingAmount && (\r\n                  <span className=\"text-xs ml-2\">\r\n                    (Original total: {formatCurrency(originalTotalAmount)})\r\n                  </span>\r\n                )}\r\n              </p>\r\n            </div>\r\n          )}\r\n            \r\n          {/* Date Field */}\r\n          <div>\r\n            <label className=\"flex items-center gap-2 text-sm font-medium text-gray-700 mb-1\">\r\n              <Calendar size={16} />\r\n              Date\r\n            </label>\r\n            <input\r\n              type=\"date\"\r\n              value={formData.date}\r\n              onChange={(e) => handleChange('date', e.target.value)}\r\n              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${\r\n                errors.date ? 'border-red-500' : 'border-gray-300'\r\n              }`}\r\n            />\r\n            {errors.date && <span className=\"text-xs text-red-600 mt-1\">{errors.date}</span>}\r\n          </div>\r\n\r\n          {/* Amount Field */}\r\n          <div>\r\n            <label className=\"flex items-center gap-2 text-sm font-medium text-gray-700 mb-1\">\r\n              <DollarSign size={16} />\r\n              Amount\r\n            </label>\r\n            <div className=\"relative\">\r\n              <span className=\"absolute left-3 top-1/2 -translate-y-1/2 text-gray-500 font-medium\">\r\n                Rs\r\n              </span>\r\n              <input\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                value={formData.amount}\r\n                onChange={(e) => handleChange('amount', e.target.value)}\r\n                className={`w-full pl-10 pr-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${\r\n                  errors.amount ? 'border-red-500' : 'border-gray-300'\r\n                }`}\r\n                placeholder=\"0.00\"\r\n                max={currentRemainingAmount}\r\n              />\r\n            </div>\r\n            {errors.amount && <span className=\"text-xs text-red-600 mt-1\">{errors.amount}</span>}\r\n            \r\n            {paymentAmount > 0 && (\r\n              <div className=\"mt-2 text-sm\">\r\n                {isFullPayment ? (\r\n                  <span className=\"text-green-600 font-medium\">Invoice will be fully paid</span>\r\n                ) : (\r\n                  <span className=\"text-orange-600\">\r\n                    Partial payment - Remaining: {formatCurrency(remainingAmount)}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Payment Method */}\r\n          <div>\r\n            <label className=\"flex items-center gap-2 text-sm font-medium text-gray-700 mb-1\">\r\n              <CreditCard size={16} />\r\n              Method\r\n            </label>\r\n            <select\r\n              value={formData.method}\r\n              onChange={(e) => handleChange('method', e.target.value)}\r\n              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${\r\n                errors.method ? 'border-red-500' : 'border-gray-300'\r\n              }`}\r\n            >\r\n              <option value=\"\">Select a payment method...</option>\r\n              <option value=\"cash\">Cash</option>\r\n              <option value=\"check\">Check</option>\r\n              <option value=\"bank_transfer\">Bank Transfer</option>\r\n              <option value=\"credit_card\">Credit Card</option>\r\n              <option value=\"debit_card\">Debit Card</option>\r\n              <option value=\"online\">Online Payment</option>\r\n            </select>\r\n            {errors.method && <span className=\"text-xs text-red-600 mt-1\">{errors.method}</span>}\r\n          </div>\r\n\r\n          {/* Account */}\r\n          <div>\r\n            <label className=\"flex items-center gap-2 text-sm font-medium text-gray-700 mb-1\">\r\n              <FileText size={16} />\r\n              Account\r\n            </label>\r\n            <select\r\n              value={formData.account}\r\n              onChange={(e) => handleChange('account', e.target.value)}\r\n              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${\r\n                errors.account ? 'border-red-500' : 'border-gray-300'\r\n              }`}\r\n            >\r\n              <option value=\"\">Select a payment account...</option>\r\n              {renderAccountOptions(accounts)}\r\n            </select>\r\n            {errors.account && <span className=\"text-xs text-red-600 mt-1\">{errors.account}</span>}\r\n            <p className=\"text-xs text-gray-500 mt-1\">\r\n              Any account into which you deposit and withdraw funds from.{' '}\r\n              <a href=\"#\" className=\"text-blue-600 hover:text-blue-700\">Learn more</a>\r\n            </p>\r\n          </div>\r\n\r\n          {/* Memo */}\r\n          <div>\r\n            <label className=\"text-sm font-medium text-gray-700 mb-1 block\">\r\n              Memo / notes\r\n            </label>\r\n            <textarea\r\n              value={formData.memo}\r\n              onChange={(e) => handleChange('memo', e.target.value)}\r\n              rows={3}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n              placeholder=\"Add any additional notes...\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Footer */}\r\n        <div className=\"px-6 py-4 border-t border-gray-200 flex items-center justify-end gap-3\">\r\n          <button\r\n            onClick={onClose}\r\n            className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            onClick={handleSubmit}\r\n            disabled={loading || !formData.amount || parseFloat(formData.amount) <= 0 || parseFloat(formData.amount) > currentRemainingAmount}\r\n            className={`px-6 py-2 rounded-lg font-medium transition-colors ${\r\n              loading || !formData.amount || parseFloat(formData.amount) <= 0 || parseFloat(formData.amount) > currentRemainingAmount\r\n                ? 'bg-gray-300 text-gray-500 cursor-not-allowed'\r\n                : 'bg-blue-600 text-white hover:bg-blue-700'\r\n            }`}\r\n          >\r\n            {loading ? 'Processing...' : 'Submit'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecordPaymentModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}