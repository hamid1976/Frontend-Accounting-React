{"ast":null,"code":"// Helper function to flatten hierarchy for filtering\nexport const flattenAccounts = accounts => {\n  const result = [];\n  const flatten = items => {\n    items.forEach(item => {\n      result.push(item);\n      if (item.children && item.children.length > 0) {\n        flatten(item.children);\n      }\n    });\n  };\n  flatten(accounts);\n  return result;\n};\n\n// Filter accounts based on search and category\nexport const getFilteredAccounts = (flatAccounts, searchTerm, selectedCategory) => {\n  let filtered = flatAccounts;\n  if (searchTerm) {\n    filtered = filtered.filter(account => account.name.toLowerCase().includes(searchTerm.toLowerCase()) || account.code.includes(searchTerm) || account.description && account.description.toLowerCase().includes(searchTerm.toLowerCase()));\n  }\n  if (selectedCategory !== 'all') {\n    filtered = filtered.filter(account => account.type === selectedCategory);\n  }\n  return filtered;\n};\n\n// Build hierarchy from flat accounts (for display when not searching)\nexport const buildHierarchy = (accounts, parentId = null) => {\n  return accounts.filter(account => account.parentId === parentId).sort((a, b) => a.code.localeCompare(b.code)).map(account => ({\n    ...account,\n    children: buildHierarchy(accounts, account.id)\n  }));\n};","map":{"version":3,"names":["flattenAccounts","accounts","result","flatten","items","forEach","item","push","children","length","getFilteredAccounts","flatAccounts","searchTerm","selectedCategory","filtered","filter","account","name","toLowerCase","includes","code","description","type","buildHierarchy","parentId","sort","a","b","localeCompare","map","id"],"sources":["C:/Users/Logic-Unit/my-account/src/ChartsOfAccountUtils/accountHelpers.js"],"sourcesContent":["// Helper function to flatten hierarchy for filtering\r\nexport const flattenAccounts = (accounts) => {\r\n  const result = [];\r\n  const flatten = (items) => {\r\n    items.forEach(item => {\r\n      result.push(item);\r\n      if (item.children && item.children.length > 0) {\r\n        flatten(item.children);\r\n      }\r\n    });\r\n  };\r\n  flatten(accounts);\r\n  return result;\r\n};\r\n\r\n// Filter accounts based on search and category\r\nexport const getFilteredAccounts = (flatAccounts, searchTerm, selectedCategory) => {\r\n  let filtered = flatAccounts;\r\n\r\n  if (searchTerm) {\r\n    filtered = filtered.filter(account => \r\n      account.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      account.code.includes(searchTerm) ||\r\n      (account.description && account.description.toLowerCase().includes(searchTerm.toLowerCase()))\r\n    );\r\n  }\r\n\r\n  if (selectedCategory !== 'all') {\r\n    filtered = filtered.filter(account => account.type === selectedCategory);\r\n  }\r\n\r\n  return filtered;\r\n};\r\n\r\n// Build hierarchy from flat accounts (for display when not searching)\r\nexport const buildHierarchy = (accounts, parentId = null) => {\r\n  return accounts\r\n    .filter(account => account.parentId === parentId)\r\n    .sort((a, b) => a.code.localeCompare(b.code))\r\n    .map(account => ({\r\n      ...account,\r\n      children: buildHierarchy(accounts, account.id)\r\n    }));\r\n};"],"mappings":"AAAA;AACA,OAAO,MAAMA,eAAe,GAAIC,QAAQ,IAAK;EAC3C,MAAMC,MAAM,GAAG,EAAE;EACjB,MAAMC,OAAO,GAAIC,KAAK,IAAK;IACzBA,KAAK,CAACC,OAAO,CAACC,IAAI,IAAI;MACpBJ,MAAM,CAACK,IAAI,CAACD,IAAI,CAAC;MACjB,IAAIA,IAAI,CAACE,QAAQ,IAAIF,IAAI,CAACE,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;QAC7CN,OAAO,CAACG,IAAI,CAACE,QAAQ,CAAC;MACxB;IACF,CAAC,CAAC;EACJ,CAAC;EACDL,OAAO,CAACF,QAAQ,CAAC;EACjB,OAAOC,MAAM;AACf,CAAC;;AAED;AACA,OAAO,MAAMQ,mBAAmB,GAAGA,CAACC,YAAY,EAAEC,UAAU,EAAEC,gBAAgB,KAAK;EACjF,IAAIC,QAAQ,GAAGH,YAAY;EAE3B,IAAIC,UAAU,EAAE;IACdE,QAAQ,GAAGA,QAAQ,CAACC,MAAM,CAACC,OAAO,IAChCA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACP,UAAU,CAACM,WAAW,CAAC,CAAC,CAAC,IAC7DF,OAAO,CAACI,IAAI,CAACD,QAAQ,CAACP,UAAU,CAAC,IAChCI,OAAO,CAACK,WAAW,IAAIL,OAAO,CAACK,WAAW,CAACH,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACP,UAAU,CAACM,WAAW,CAAC,CAAC,CAC7F,CAAC;EACH;EAEA,IAAIL,gBAAgB,KAAK,KAAK,EAAE;IAC9BC,QAAQ,GAAGA,QAAQ,CAACC,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACM,IAAI,KAAKT,gBAAgB,CAAC;EAC1E;EAEA,OAAOC,QAAQ;AACjB,CAAC;;AAED;AACA,OAAO,MAAMS,cAAc,GAAGA,CAACtB,QAAQ,EAAEuB,QAAQ,GAAG,IAAI,KAAK;EAC3D,OAAOvB,QAAQ,CACZc,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACQ,QAAQ,KAAKA,QAAQ,CAAC,CAChDC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACN,IAAI,CAACQ,aAAa,CAACD,CAAC,CAACP,IAAI,CAAC,CAAC,CAC5CS,GAAG,CAACb,OAAO,KAAK;IACf,GAAGA,OAAO;IACVR,QAAQ,EAAEe,cAAc,CAACtB,QAAQ,EAAEe,OAAO,CAACc,EAAE;EAC/C,CAAC,CAAC,CAAC;AACP,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}