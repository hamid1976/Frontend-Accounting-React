{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Logic-Unit\\\\my-account\\\\src\\\\pages\\\\GeneralLedger.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { \n//   Book, \n//   Plus, \n//   Filter, \n//   Search, \n//   Calendar, \n//   FileText, \n//   Edit, \n//   Trash2, \n//   Save, \n//   X, \n//   AlertCircle,\n//   CheckCircle,\n//   DollarSign,\n//   TrendingUp,\n//   Eye,\n//   Download\n// } from 'lucide-react';\n\n// const GeneralLedger = () => {\n//   const [journalEntries, setJournalEntries] = useState([]);\n//   const [accounts, setAccounts] = useState([]);\n//   const [filteredEntries, setFilteredEntries] = useState([]);\n//   const [selectedEntry, setSelectedEntry] = useState(null);\n//   const [isAddingEntry, setIsAddingEntry] = useState(false);\n//   const [filters, setFilters] = useState({\n//     dateFrom: '',\n//     dateTo: '',\n//     accountId: '',\n//     transactionType: 'all',\n//     searchTerm: ''\n//   });\n//   const [trialBalance, setTrialBalance] = useState([]);\n//   const [showTrialBalance, setShowTrialBalance] = useState(false);\n//   const [newEntry, setNewEntry] = useState({\n//     date: new Date().toISOString().split('T')[0],\n//     description: '',\n//     reference: '',\n//     entries: [\n//       { accountId: '', debit: 0, credit: 0, description: '' },\n//       { accountId: '', debit: 0, credit: 0, description: '' }\n//     ]\n//   });\n\n//   // Sample Chart of Accounts\n//   const chartOfAccounts = [\n//     { id: '1111', code: '1111', name: 'Petty Cash', type: 'assets' },\n//     { id: '1112', code: '1112', name: 'Bank - Main Account', type: 'assets' },\n//     { id: '1120', code: '1120', name: 'Accounts Receivable', type: 'assets' },\n//     { id: '1130', code: '1130', name: 'Inventory', type: 'assets' },\n//     { id: '2110', code: '2110', name: 'Accounts Payable', type: 'liabilities' },\n//     { id: '2130', code: '2130', name: 'Sales Tax Payable', type: 'liabilities' },\n//     { id: '4100', code: '4100', name: 'Sales Revenue - Medical', type: 'revenue' },\n//     { id: '5100', code: '5100', name: 'Cost of Goods Sold', type: 'expenses' },\n//     { id: '5200', code: '5200', name: 'Purchase Expenses', type: 'expenses' },\n//     { id: '5210', code: '5210', name: 'Office Supplies', type: 'expenses' }\n//   ];\n\n//   useEffect(() => {\n//     setAccounts(chartOfAccounts);\n//     loadSampleJournalEntries();\n//   }, []);\n\n//   useEffect(() => {\n//     filterEntries();\n//   }, [journalEntries, filters]);\n\n//   const loadSampleJournalEntries = () => {\n//     const sampleEntries = [\n//       {\n//         id: 'JE001',\n//         date: '2025-01-15',\n//         description: 'POS Sale #POS001 - Medical products',\n//         reference: 'POS001',\n//         transactionType: 'automatic',\n//         source: 'POS',\n//         status: 'posted',\n//         entries: [\n//           { accountId: '1111', accountName: 'Petty Cash', debit: 60.50, credit: 0, description: 'Cash received from customer' },\n//           { accountId: '4100', accountName: 'Sales Revenue - Medical', debit: 0, credit: 55.00, description: 'Revenue from medical products' },\n//           { accountId: '2130', accountName: 'Sales Tax Payable', debit: 0, credit: 5.50, description: 'Sales tax collected' },\n//           { accountId: '5100', accountName: 'Cost of Goods Sold', debit: 33.00, credit: 0, description: 'Cost of products sold' },\n//           { accountId: '1130', accountName: 'Inventory', debit: 0, credit: 33.00, description: 'Inventory reduction' }\n//         ],\n//         totalDebit: 93.50,\n//         totalCredit: 93.50,\n//         createdAt: '2025-01-15T10:30:00Z'\n//       },\n//       {\n//         id: 'JE002',\n//         date: '2025-01-14',\n//         description: 'Purchase Order #PO002 - Medical inventory',\n//         reference: 'PO002',\n//         transactionType: 'automatic',\n//         source: 'Purchase',\n//         status: 'posted',\n//         entries: [\n//           { accountId: '1130', accountName: 'Inventory', debit: 350.00, credit: 0, description: 'Medical products purchased' },\n//           { accountId: '2110', accountName: 'Accounts Payable', debit: 0, credit: 350.00, description: 'Amount owed to Medical Supply Co.' }\n//         ],\n//         totalDebit: 350.00,\n//         totalCredit: 350.00,\n//         createdAt: '2025-01-14T14:20:00Z'\n//       },\n//       {\n//         id: 'JE003',\n//         date: '2025-01-13',\n//         description: 'Manual adjustment - Inventory count variance',\n//         reference: 'ADJ001',\n//         transactionType: 'manual',\n//         source: 'Manual',\n//         status: 'posted',\n//         entries: [\n//           { accountId: '1130', accountName: 'Inventory', debit: 25.00, credit: 0, description: 'Inventory adjustment - undercount' },\n//           { accountId: '5200', accountName: 'Purchase Expenses', debit: 0, credit: 25.00, description: 'Adjustment to purchase variance' }\n//         ],\n//         totalDebit: 25.00,\n//         totalCredit: 25.00,\n//         createdAt: '2025-01-13T16:45:00Z'\n//       },\n//       {\n//         id: 'JE004',\n//         date: '2025-01-15',\n//         description: 'POS Sale #POS002 - Medical products',\n//         reference: 'POS002',\n//         transactionType: 'automatic',\n//         source: 'POS',\n//         status: 'posted',\n//         entries: [\n//           { accountId: '1112', accountName: 'Bank - Main Account', debit: 85.00, credit: 0, description: 'Card payment received' },\n//           { accountId: '4100', accountName: 'Sales Revenue - Medical', debit: 0, credit: 77.27, description: 'Revenue from medical products' },\n//           { accountId: '2130', accountName: 'Sales Tax Payable', debit: 0, credit: 7.73, description: 'Sales tax collected' },\n//           { accountId: '5100', accountName: 'Cost of Goods Sold', debit: 46.36, credit: 0, description: 'Cost of products sold' },\n//           { accountId: '1130', accountName: 'Inventory', debit: 0, credit: 46.36, description: 'Inventory reduction' }\n//         ],\n//         totalDebit: 131.36,\n//         totalCredit: 131.36,\n//         createdAt: '2025-01-15T15:20:00Z'\n//       }\n//     ];\n\n//     setJournalEntries(sampleEntries);\n//   };\n\n//   const filterEntries = () => {\n//     let filtered = [...journalEntries];\n\n//     if (filters.dateFrom) {\n//       filtered = filtered.filter(entry => entry.date >= filters.dateFrom);\n//     }\n//     if (filters.dateTo) {\n//       filtered = filtered.filter(entry => entry.date <= filters.dateTo);\n//     }\n//     if (filters.accountId) {\n//       filtered = filtered.filter(entry => \n//         entry.entries.some(e => e.accountId === filters.accountId)\n//       );\n//     }\n//     if (filters.transactionType !== 'all') {\n//       filtered = filtered.filter(entry => entry.transactionType === filters.transactionType);\n//     }\n//     if (filters.searchTerm) {\n//       const term = filters.searchTerm.toLowerCase();\n//       filtered = filtered.filter(entry => \n//         entry.description.toLowerCase().includes(term) ||\n//         entry.reference.toLowerCase().includes(term) ||\n//         entry.entries.some(e => e.description.toLowerCase().includes(term))\n//       );\n//     }\n\n//     setFilteredEntries(filtered);\n//   };\n\n//   const generateTrialBalance = () => {\n//     const balances = {};\n\n//     // Initialize all accounts\n//     chartOfAccounts.forEach(account => {\n//       balances[account.id] = {\n//         accountId: account.id,\n//         accountCode: account.code,\n//         accountName: account.name,\n//         accountType: account.type,\n//         debit: 0,\n//         credit: 0,\n//         balance: 0\n//       };\n//     });\n\n//     // Calculate balances from journal entries\n//     journalEntries.forEach(entry => {\n//       if (entry.status === 'posted') {\n//         entry.entries.forEach(entryLine => {\n//           if (balances[entryLine.accountId]) {\n//             balances[entryLine.accountId].debit += entryLine.debit;\n//             balances[entryLine.accountId].credit += entryLine.credit;\n//           }\n//         });\n//       }\n//     });\n\n//     // Calculate net balances\n//     Object.values(balances).forEach(account => {\n//       if (account.accountType === 'assets' || account.accountType === 'expenses') {\n//         account.balance = account.debit - account.credit;\n//       } else {\n//         account.balance = account.credit - account.debit;\n//       }\n//     });\n\n//     const trialBalanceData = Object.values(balances)\n//       .filter(account => account.debit !== 0 || account.credit !== 0)\n//       .sort((a, b) => a.accountCode.localeCompare(b.accountCode));\n\n//     setTrialBalance(trialBalanceData);\n//     setShowTrialBalance(true);\n//   };\n\n//   const addEntryLine = () => {\n//     setNewEntry({\n//       ...newEntry,\n//       entries: [...newEntry.entries, { accountId: '', debit: 0, credit: 0, description: '' }]\n//     });\n//   };\n\n//   const removeEntryLine = (index) => {\n//     if (newEntry.entries.length > 2) {\n//       const updatedEntries = newEntry.entries.filter((_, i) => i !== index);\n//       setNewEntry({ ...newEntry, entries: updatedEntries });\n//     }\n//   };\n\n//   const updateEntryLine = (index, field, value) => {\n//     const updatedEntries = [...newEntry.entries];\n//     updatedEntries[index] = { ...updatedEntries[index], [field]: value };\n//     setNewEntry({ ...newEntry, entries: updatedEntries });\n//   };\n\n//   const calculateTotals = (entries) => {\n//     const totalDebit = entries.reduce((sum, entry) => sum + (parseFloat(entry.debit) || 0), 0);\n//     const totalCredit = entries.reduce((sum, entry) => sum + (parseFloat(entry.credit) || 0), 0);\n//     return { totalDebit, totalCredit };\n//   };\n\n//   const isBalanced = (entries) => {\n//     const { totalDebit, totalCredit } = calculateTotals(entries);\n//     return Math.abs(totalDebit - totalCredit) < 0.01;\n//   };\n\n//   const saveJournalEntry = () => {\n//     if (!newEntry.description || !newEntry.entries.every(e => e.accountId)) {\n//       alert('Please fill in all required fields');\n//       return;\n//     }\n\n//     if (!isBalanced(newEntry.entries)) {\n//       alert('Journal entry must be balanced - total debits must equal total credits');\n//       return;\n//     }\n\n//     const { totalDebit, totalCredit } = calculateTotals(newEntry.entries);\n\n//     // Add account names to entries\n//     const entriesWithNames = newEntry.entries.map(entry => ({\n//       ...entry,\n//       accountName: accounts.find(acc => acc.id === entry.accountId)?.name || '',\n//       debit: parseFloat(entry.debit) || 0,\n//       credit: parseFloat(entry.credit) || 0\n//     }));\n\n//     const journalEntry = {\n//       id: `JE${String(journalEntries.length + 1).padStart(3, '0')}`,\n//       date: newEntry.date,\n//       description: newEntry.description,\n//       reference: newEntry.reference || `MAN${Date.now()}`,\n//       transactionType: 'manual',\n//       source: 'Manual',\n//       status: 'posted',\n//       entries: entriesWithNames,\n//       totalDebit,\n//       totalCredit,\n//       createdAt: new Date().toISOString()\n//     };\n\n//     setJournalEntries([...journalEntries, journalEntry]);\n\n//     // Reset form\n//     setNewEntry({\n//       date: new Date().toISOString().split('T')[0],\n//       description: '',\n//       reference: '',\n//       entries: [\n//         { accountId: '', debit: 0, credit: 0, description: '' },\n//         { accountId: '', debit: 0, credit: 0, description: '' }\n//       ]\n//     });\n//     setIsAddingEntry(false);\n//   };\n\n//   const getAccountName = (accountId) => {\n//     const account = accounts.find(acc => acc.id === accountId);\n//     return account ? `${account.code} - ${account.name}` : '';\n//   };\n\n//   const { totalDebit, totalCredit } = calculateTotals(newEntry.entries);\n//   const entryIsBalanced = isBalanced(newEntry.entries);\n\n//   return (\n//     <div className=\"max-w-7xl mx-auto p-6 bg-white\">\n//       {/* Header */}\n//       <div className=\"mb-8\">\n//         <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\n//           <Book className=\"mr-3 text-emerald-600\" />\n//           General Ledger\n//         </h1>\n//         <p className=\"text-gray-600\">Real-time transaction recording and journal entry management</p>\n//       </div>\n\n//       {/* Quick Stats */}\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n//         <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-blue-600 text-sm font-medium\">Total Entries</p>\n//               <p className=\"text-2xl font-bold text-blue-900\">{journalEntries.length}</p>\n//             </div>\n//             <FileText className=\"text-blue-600\" size={24} />\n//           </div>\n//         </div>\n\n//         <div className=\"bg-green-50 p-4 rounded-lg border border-green-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-green-600 text-sm font-medium\">Automatic Entries</p>\n//               <p className=\"text-2xl font-bold text-green-900\">\n//                 {journalEntries.filter(e => e.transactionType === 'automatic').length}\n//               </p>\n//             </div>\n//             <TrendingUp className=\"text-green-600\" size={24} />\n//           </div>\n//         </div>\n\n//         <div className=\"bg-orange-50 p-4 rounded-lg border border-orange-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-orange-600 text-sm font-medium\">Manual Entries</p>\n//               <p className=\"text-2xl font-bold text-orange-900\">\n//                 {journalEntries.filter(e => e.transactionType === 'manual').length}\n//               </p>\n//             </div>\n//             <Edit className=\"text-orange-600\" size={24} />\n//           </div>\n//         </div>\n\n//         <div className=\"bg-purple-50 p-4 rounded-lg border border-purple-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-purple-600 text-sm font-medium\">Total Value</p>\n//               <p className=\"text-2xl font-bold text-purple-900\">\n//                 ${journalEntries.reduce((sum, entry) => sum + entry.totalDebit, 0).toFixed(2)}\n//               </p>\n//             </div>\n//             <DollarSign className=\"text-purple-600\" size={24} />\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Controls */}\n//       <div className=\"flex flex-wrap items-center justify-between gap-4 mb-6\">\n//         <div className=\"flex flex-wrap items-center gap-4\">\n//           {/* Date Filters */}\n//           <div className=\"flex items-center space-x-2\">\n//             <Calendar size={16} className=\"text-gray-400\" />\n//             <input\n//               type=\"date\"\n//               value={filters.dateFrom}\n//               onChange={(e) => setFilters({ ...filters, dateFrom: e.target.value })}\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               placeholder=\"From\"\n//             />\n//             <span className=\"text-gray-500\">to</span>\n//             <input\n//               type=\"date\"\n//               value={filters.dateTo}\n//               onChange={(e) => setFilters({ ...filters, dateTo: e.target.value })}\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               placeholder=\"To\"\n//             />\n//           </div>\n\n//           {/* Account Filter */}\n//           <div className=\"relative\">\n//             <Filter className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\n//             <select\n//               value={filters.accountId}\n//               onChange={(e) => setFilters({ ...filters, accountId: e.target.value })}\n//               className=\"pl-10 pr-8 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//             >\n//               <option value=\"\">All Accounts</option>\n//               {accounts.map(account => (\n//                 <option key={account.id} value={account.id}>\n//                   {account.code} - {account.name}\n//                 </option>\n//               ))}\n//             </select>\n//           </div>\n\n//           {/* Transaction Type Filter */}\n//           <select\n//             value={filters.transactionType}\n//             onChange={(e) => setFilters({ ...filters, transactionType: e.target.value })}\n//             className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//           >\n//             <option value=\"all\">All Types</option>\n//             <option value=\"automatic\">Automatic</option>\n//             <option value=\"manual\">Manual</option>\n//           </select>\n\n//           {/* Search */}\n//           <div className=\"relative\">\n//             <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search entries...\"\n//               value={filters.searchTerm}\n//               onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\n//               className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//             />\n//           </div>\n//         </div>\n\n//         <div className=\"flex space-x-3\">\n//           <button\n//             onClick={() => setIsAddingEntry(true)}\n//             className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\n//           >\n//             <Plus size={16} />\n//             <span>Add Entry</span>\n//           </button>\n//           <button\n//             onClick={generateTrialBalance}\n//             className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\"\n//           >\n//             <FileText size={16} />\n//             <span>Trial Balance</span>\n//           </button>\n//         </div>\n//       </div>\n\n//       {/* Journal Entry Form */}\n//       {isAddingEntry && (\n//         <div className=\"mb-8 p-6 bg-gray-50 rounded-lg border\">\n//           <h3 className=\"text-lg font-semibold mb-4\">Add Manual Journal Entry</h3>\n\n//           <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n//             <div>\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Date *</label>\n//               <input\n//                 type=\"date\"\n//                 value={newEntry.date}\n//                 onChange={(e) => setNewEntry({ ...newEntry, date: e.target.value })}\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               />\n//             </div>\n//             <div>\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Description *</label>\n//               <input\n//                 type=\"text\"\n//                 value={newEntry.description}\n//                 onChange={(e) => setNewEntry({ ...newEntry, description: e.target.value })}\n//                 placeholder=\"Enter description\"\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               />\n//             </div>\n//             <div>\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Reference</label>\n//               <input\n//                 type=\"text\"\n//                 value={newEntry.reference}\n//                 onChange={(e) => setNewEntry({ ...newEntry, reference: e.target.value })}\n//                 placeholder=\"Reference number\"\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               />\n//             </div>\n//           </div>\n\n//           {/* Entry Lines */}\n//           <div className=\"mb-4\">\n//             <label className=\"block text-sm font-medium text-gray-700 mb-2\">Journal Entry Lines</label>\n//             <div className=\"space-y-3\">\n//               {newEntry.entries.map((entry, index) => (\n//                 <div key={index} className=\"grid grid-cols-12 gap-2 items-center bg-white p-3 rounded border\">\n//                   <div className=\"col-span-4\">\n//                     <select\n//                       value={entry.accountId}\n//                       onChange={(e) => updateEntryLine(index, 'accountId', e.target.value)}\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                     >\n//                       <option value=\"\">Select Account</option>\n//                       {accounts.map(account => (\n//                         <option key={account.id} value={account.id}>\n//                           {account.code} - {account.name}\n//                         </option>\n//                       ))}\n//                     </select>\n//                   </div>\n//                   <div className=\"col-span-3\">\n//                     <input\n//                       type=\"text\"\n//                       value={entry.description}\n//                       onChange={(e) => updateEntryLine(index, 'description', e.target.value)}\n//                       placeholder=\"Description\"\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                     />\n//                   </div>\n//                   <div className=\"col-span-2\">\n//                     <input\n//                       type=\"number\"\n//                       step=\"0.01\"\n//                       value={entry.debit}\n//                       onChange={(e) => updateEntryLine(index, 'debit', e.target.value)}\n//                       placeholder=\"Debit\"\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                     />\n//                   </div>\n//                   <div className=\"col-span-2\">\n//                     <input\n//                       type=\"number\"\n//                       step=\"0.01\"\n//                       value={entry.credit}\n//                       onChange={(e) => updateEntryLine(index, 'credit', e.target.value)}\n//                       placeholder=\"Credit\"\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                     />\n//                   </div>\n//                   <div className=\"col-span-1\">\n//                     {newEntry.entries.length > 2 && (\n//                       <button\n//                         onClick={() => removeEntryLine(index)}\n//                         className=\"p-1 text-red-600 hover:bg-red-100 rounded\"\n//                       >\n//                         <Trash2 size={14} />\n//                       </button>\n//                     )}\n//                   </div>\n//                 </div>\n//               ))}\n//             </div>\n\n//             <div className=\"flex justify-between items-center mt-3\">\n//               <button\n//                 onClick={addEntryLine}\n//                 className=\"px-3 py-1 text-sm bg-gray-200 text-gray-700 rounded hover:bg-gray-300 flex items-center space-x-1\"\n//               >\n//                 <Plus size={14} />\n//                 <span>Add Line</span>\n//               </button>\n\n//               <div className=\"flex items-center space-x-4\">\n//                 <div className=\"text-sm\">\n//                   <span className=\"font-medium\">Total Debit: ${totalDebit.toFixed(2)}</span>\n//                   <span className=\"mx-2\">|</span>\n//                   <span className=\"font-medium\">Total Credit: ${totalCredit.toFixed(2)}</span>\n//                 </div>\n//                 {entryIsBalanced ? (\n//                   <div className=\"flex items-center text-green-600\">\n//                     <CheckCircle size={16} className=\"mr-1\" />\n//                     <span className=\"text-sm\">Balanced</span>\n//                   </div>\n//                 ) : (\n//                   <div className=\"flex items-center text-red-600\">\n//                     <AlertCircle size={16} className=\"mr-1\" />\n//                     <span className=\"text-sm\">Not Balanced</span>\n//                   </div>\n//                 )}\n//               </div>\n//             </div>\n//           </div>\n\n//           <div className=\"flex space-x-3\">\n//             <button\n//               onClick={saveJournalEntry}\n//               disabled={!entryIsBalanced}\n//               className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 disabled:bg-gray-400 flex items-center space-x-2\"\n//             >\n//               <Save size={16} />\n//               <span>Save Entry</span>\n//             </button>\n//             <button\n//               onClick={() => setIsAddingEntry(false)}\n//               className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\"\n//             >\n//               <X size={16} />\n//               <span>Cancel</span>\n//             </button>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Journal Entries Table */}\n//       <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//         <div className=\"px-6 py-4 border-b border-gray-200\">\n//           <h2 className=\"text-lg font-semibold text-gray-900\">Journal Entries</h2>\n//           <p className=\"text-sm text-gray-600 mt-1\">\n//             Showing {filteredEntries.length} of {journalEntries.length} entries\n//           </p>\n//         </div>\n\n//         <div className=\"overflow-x-auto\">\n//           <table className=\"w-full\">\n//             <thead className=\"bg-gray-50\">\n//               <tr>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Entry ID\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Date\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Description\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Reference\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Source\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Amount\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Status\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Actions\n//                 </th>\n//               </tr>\n//             </thead>\n//             <tbody className=\"bg-white divide-y divide-gray-200\">\n//               {filteredEntries.map((entry) => (\n//                 <tr key={entry.id} className=\"hover:bg-gray-50\">\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n//                     {entry.id}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                     {entry.date}\n//                   </td>\n//                   <td className=\"px-6 py-4 text-sm text-gray-900 max-w-xs truncate\">\n//                     {entry.description}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                     {entry.reference}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                       entry.transactionType === 'automatic' ? 'bg-green-100 text-green-800' : 'bg-orange-100 text-orange-800'\n//                     }`}>\n//                       {entry.source}\n//                     </span>\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                     ${entry.totalDebit.toFixed(2)}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                       entry.status === 'posted' ? 'bg-blue-100 text-blue-800' : 'bg-yellow-100 text-yellow-800'\n//                     }`}>\n//                       {entry.status}\n//                     </span>\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n//                     <button\n//                       onClick={() => setSelectedEntry(entry)}\n//                       className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\n//                     >\n//                       <Eye size={16} />\n//                     </button>\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </div>\n//       </div>\n\n//       {/* Entry Details Modal */}\n//       {selectedEntry && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <div className=\"flex items-center justify-between\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\n//                   Journal Entry Details - {selectedEntry.id}\n//                 </h3>\n//                 <button\n//                   onClick={() => setSelectedEntry(null)}\n//                   className=\"text-gray-400 hover:text-gray-600\"\n//                 >\n//                   <X size={20} />\n//                 </button>\n//               </div>\n//             </div>\n\n//             <div className=\"px-6 py-4\">\n//               {/* Entry Header */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\n//                 <div>\n//                   <label className=\"text-sm font-medium text-gray-500\">Date</label>\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.date}</p>\n//                 </div>\n//                 <div>\n//                   <label className=\"text-sm font-medium text-gray-500\">Reference</label>\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.reference}</p>\n//                 </div>\n//                 <div>\n//                   <label className=\"text-sm font-medium text-gray-500\">Description</label>\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.description}</p>\n//                 </div>\n//                 <div>\n//                   <label className=\"text-sm font-medium text-gray-500\">Source</label>\n//                   <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                     selectedEntry.transactionType === 'automatic' ? 'bg-green-100 text-green-800' : 'bg-orange-100 text-orange-800'\n//                   }`}>\n//                     {selectedEntry.source}\n//                   </span>\n//                 </div>\n//               </div>\n\n//               {/* Entry Lines */}\n//               <div className=\"mb-6\">\n//                 <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Account Entries</h4>\n//                 <div className=\"overflow-x-auto\">\n//                   <table className=\"w-full border border-gray-200 rounded\">\n//                     <thead className=\"bg-gray-50\">\n//                       <tr>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Account</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Description</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Debit</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Credit</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody className=\"divide-y divide-gray-200\">\n//                       {selectedEntry.entries.map((entryLine, index) => (\n//                         <tr key={index}>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900\">\n//                             {getAccountName(entryLine.accountId)}\n//                           </td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-600\">\n//                             {entryLine.description}\n//                           </td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">\n//                             {entryLine.debit > 0 ? `${entryLine.debit.toFixed(2)}` : '-'}\n//                           </td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">\n//                             {entryLine.credit > 0 ? `${entryLine.credit.toFixed(2)}` : '-'}\n//                           </td>\n//                         </tr>\n//                       ))}\n//                     </tbody>\n//                     <tfoot className=\"bg-gray-50\">\n//                       <tr>\n//                         <td colSpan=\"2\" className=\"px-4 py-2 text-sm font-medium text-gray-900\">\n//                           Totals:\n//                         </td>\n//                         <td className=\"px-4 py-2 text-sm font-bold text-gray-900 text-right\">\n//                           ${selectedEntry.totalDebit.toFixed(2)}\n//                         </td>\n//                         <td className=\"px-4 py-2 text-sm font-bold text-gray-900 text-right\">\n//                           ${selectedEntry.totalCredit.toFixed(2)}\n//                         </td>\n//                       </tr>\n//                     </tfoot>\n//                   </table>\n//                 </div>\n//               </div>\n\n//               {/* Entry Metadata */}\n//               <div className=\"text-xs text-gray-500\">\n//                 <p>Created: {new Date(selectedEntry.createdAt).toLocaleString()}</p>\n//                 <p>Status: {selectedEntry.status}</p>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Trial Balance Modal */}\n//       {showTrialBalance && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-lg max-w-5xl w-full max-h-[90vh] overflow-y-auto\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <div className=\"flex items-center justify-between\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\n//                   Trial Balance - As of {new Date().toLocaleDateString()}\n//                 </h3>\n//                 <div className=\"flex items-center space-x-2\">\n//                   <button\n//                     onClick={() => {\n//                       // Export functionality would go here\n//                       alert('Export functionality would be implemented here');\n//                     }}\n//                     className=\"px-3 py-1 bg-emerald-600 text-white rounded text-sm hover:bg-emerald-700 flex items-center space-x-1\"\n//                   >\n//                     <Download size={14} />\n//                     <span>Export</span>\n//                   </button>\n//                   <button\n//                     onClick={() => setShowTrialBalance(false)}\n//                     className=\"text-gray-400 hover:text-gray-600\"\n//                   >\n//                     <X size={20} />\n//                   </button>\n//                 </div>\n//               </div>\n//             </div>\n\n//             <div className=\"px-6 py-4\">\n//               <div className=\"overflow-x-auto\">\n//                 <table className=\"w-full\">\n//                   <thead className=\"bg-gray-50\">\n//                     <tr>\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Account Code\n//                       </th>\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Account Name\n//                       </th>\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Type\n//                       </th>\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Debit Total\n//                       </th>\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Credit Total\n//                       </th>\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Balance\n//                       </th>\n//                     </tr>\n//                   </thead>\n//                   <tbody className=\"bg-white divide-y divide-gray-200\">\n//                     {trialBalance.map((account) => (\n//                       <tr key={account.accountId}>\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n//                           {account.accountCode}\n//                         </td>\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                           {account.accountName}\n//                         </td>\n//                         <td className=\"px-4 py-4 whitespace-nowrap\">\n//                           <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                             account.accountType === 'assets' ? 'bg-green-100 text-green-800' :\n//                             account.accountType === 'liabilities' ? 'bg-red-100 text-red-800' :\n//                             account.accountType === 'equity' ? 'bg-blue-100 text-blue-800' :\n//                             account.accountType === 'revenue' ? 'bg-purple-100 text-purple-800' :\n//                             'bg-orange-100 text-orange-800'\n//                           }`}>\n//                             {account.accountType}\n//                           </span>\n//                         </td>\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n//                           ${account.debit.toFixed(2)}\n//                         </td>\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n//                           ${account.credit.toFixed(2)}\n//                         </td>\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-right\">\n//                           <span className={account.balance >= 0 ? 'text-green-600' : 'text-red-600'}>\n//                             ${Math.abs(account.balance).toFixed(2)}\n//                             {account.balance < 0 && ' (CR)'}\n//                           </span>\n//                         </td>\n//                       </tr>\n//                     ))}\n//                   </tbody>\n//                   <tfoot className=\"bg-gray-50\">\n//                     <tr>\n//                       <td colSpan=\"3\" className=\"px-4 py-3 text-sm font-bold text-gray-900\">\n//                         TOTALS:\n//                       </td>\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\n//                         ${trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toFixed(2)}\n//                       </td>\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\n//                         ${trialBalance.reduce((sum, acc) => sum + acc.credit, 0).toFixed(2)}\n//                       </td>\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\n//                         ${Math.abs(trialBalance.reduce((sum, acc) => sum + acc.balance, 0)).toFixed(2)}\n//                       </td>\n//                     </tr>\n//                   </tfoot>\n//                 </table>\n//               </div>\n\n//               {/* Trial Balance Validation */}\n//               <div className=\"mt-4 p-4 bg-green-50 border border-green-200 rounded-lg\">\n//                 <div className=\"flex items-center\">\n//                   <CheckCircle className=\"text-green-600 mr-2\" size={20} />\n//                   <div>\n//                     <h4 className=\"font-medium text-green-800\">Trial Balance is Balanced</h4>\n//                     <p className=\"text-sm text-green-700\">\n//                       Total Debits = Total Credits = ${trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toFixed(2)}\n//                     </p>\n//                   </div>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Integration Status */}\n//       <div className=\"mt-8 grid grid-cols-1 md:grid-cols-3 gap-4\">\n//         <div className=\"p-4 bg-green-50 border border-green-200 rounded-lg\">\n//           <div className=\"flex items-center mb-2\">\n//             <CheckCircle className=\"text-green-600 mr-2\" size={16} />\n//             <h4 className=\"font-medium text-green-800\">POS Integration</h4>\n//           </div>\n//           <p className=\"text-sm text-green-700\">\n//             All sales transactions automatically create journal entries\n//           </p>\n//         </div>\n\n//         <div className=\"p-4 bg-green-50 border border-green-200 rounded-lg\">\n//           <div className=\"flex items-center mb-2\">\n//             <CheckCircle className=\"text-green-600 mr-2\" size={16} />\n//             <h4 className=\"font-medium text-green-800\">Purchase Integration</h4>\n//           </div>\n//           <p className=\"text-sm text-green-700\">\n//             Purchase orders automatically update accounts payable and inventory\n//           </p>\n//         </div>\n\n//         <div className=\"p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n//           <div className=\"flex items-center mb-2\">\n//             <FileText className=\"text-blue-600 mr-2\" size={16} />\n//             <h4 className=\"font-medium text-blue-800\">Manual Entries</h4>\n//           </div>\n//           <p className=\"text-sm text-blue-700\">\n//             Add adjustments and corrections with full validation\n//           </p>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default GeneralLedger;\n\n// import React, { useState, useEffect } from 'react';\n// import { \n//   Book, \n//   Plus, \n//   Filter, \n//   Search, \n//   Calendar, \n//   FileText, \n//   Edit, \n//   Trash2, \n//   Save, \n//   X, \n//   AlertCircle,\n//   CheckCircle,\n//   DollarSign,\n//   TrendingUp,\n//   Eye,\n//   Download,\n//   RefreshCw\n// } from 'lucide-react';\n\n// const GeneralLedger = () => {\n//   const [journalEntries, setJournalEntries] = useState([]);\n//   const [accounts, setAccounts] = useState([]);\n//   const [filteredEntries, setFilteredEntries] = useState([]);\n//   const [selectedEntry, setSelectedEntry] = useState(null);\n//   const [isAddingEntry, setIsAddingEntry] = useState(false);\n//   const [loading, setLoading] = useState(false);\n//   const [filters, setFilters] = useState({\n//     dateFrom: '',\n//     dateTo: '',\n//     accountId: '',\n//     transactionType: 'all',\n//     searchTerm: ''\n//   });\n//   const [trialBalance, setTrialBalance] = useState([]);\n//   const [showTrialBalance, setShowTrialBalance] = useState(false);\n//   const [newEntry, setNewEntry] = useState({\n//     date: new Date().toISOString().split('T')[0],\n//     description: '',\n//     reference: '',\n//     entries: [\n//       { accountId: '', debit: 0, credit: 0, description: '' },\n//       { accountId: '', debit: 0, credit: 0, description: '' }\n//     ]\n//   });\n\n//   // Chart of Accounts\n//   const chartOfAccounts = [\n//     { id: '1111', code: '1111', name: 'Petty Cash', type: 'assets' },\n//     { id: '1112', code: '1112', name: 'Bank - Main Account', type: 'assets' },\n//     { id: '1120', code: '1120', name: 'Accounts Receivable', type: 'assets' },\n//     { id: '1130', code: '1130', name: 'Inventory', type: 'assets' },\n//     { id: '2110', code: '2110', name: 'Accounts Payable', type: 'liabilities' },\n//     { id: '2130', code: '2130', name: 'Sales Tax Payable', type: 'liabilities' },\n//     { id: '4100', code: '4100', name: 'Sales Revenue', type: 'revenue' },\n//     { id: '4110', code: '4110', name: 'Electronics Sales', type: 'revenue' },\n//     { id: '5100', code: '5100', name: 'Cost of Goods Sold', type: 'expenses' },\n//     { id: '5200', code: '5200', name: 'Purchase Expenses', type: 'expenses' }\n//   ];\n\n//   // API Configuration\n//   const API_BASE_URL = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/orders?start=0&size=200';\n\n//   useEffect(() => {\n//     setAccounts(chartOfAccounts);\n//     loadJournalEntriesFromAPI();\n//   }, []);\n\n//   useEffect(() => {\n//     filterEntries();\n//   }, [journalEntries, filters]);\n\n//   // Fetch Sales Orders from API and convert to Journal Entries\n//   const loadJournalEntriesFromAPI = async () => {\n//     setLoading(true);\n//     try {\n//       const response = await fetch(`${API_BASE_URL}/orders?start=0&size=200`);\n//       const salesOrders = await response.json();\n\n//       // Convert sales orders to journal entries\n//       const journalEntriesFromSales = salesOrders.map(order => convertSalesOrderToJournalEntry(order));\n\n//       // Load any manual journal entries from localStorage\n//       const manualEntries = JSON.parse(localStorage.getItem('manualJournalEntries') || '[]');\n\n//       // Combine both types of entries\n//       const allEntries = [...journalEntriesFromSales, ...manualEntries];\n\n//       setJournalEntries(allEntries);\n//     } catch (error) {\n//       console.error('Error loading sales orders:', error);\n//       // Fallback to sample data if API fails\n//       loadSampleJournalEntries();\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   // Convert Sales Order to Journal Entry\n//   const convertSalesOrderToJournalEntry = (order) => {\n//     const entries = [];\n//     const subTotal = order.subTotal || 0;\n//     const taxAmount = order.taxAmount || 0;\n//     const total = order.total || 0;\n\n//     // Determine payment method - if paid, assume cash/bank\n//     if (order.paid && order.status === 'Closed') {\n//       // Cash/Bank Account (Debit)\n//       entries.push({\n//         accountId: '1111', // Petty Cash (assume cash payment)\n//         accountName: 'Petty Cash',\n//         debit: total,\n//         credit: 0,\n//         description: `Cash received from sale Order #${order.orderId}`\n//       });\n//     } else if (!order.paid) {\n//       // Accounts Receivable (Debit) for unpaid orders\n//       entries.push({\n//         accountId: '1120',\n//         accountName: 'Accounts Receivable',\n//         debit: total,\n//         credit: 0,\n//         description: `Credit sale Order #${order.orderId}`\n//       });\n//     }\n\n//     // Sales Revenue (Credit)\n//     if (subTotal > 0) {\n//       entries.push({\n//         accountId: '4110', // Electronics Sales\n//         accountName: 'Electronics Sales',\n//         debit: 0,\n//         credit: subTotal,\n//         description: `Revenue from Order #${order.orderId}`\n//       });\n//     }\n\n//     // Sales Tax Payable (Credit)\n//     if (taxAmount > 0) {\n//       entries.push({\n//         accountId: '2130',\n//         accountName: 'Sales Tax Payable',\n//         debit: 0,\n//         credit: taxAmount,\n//         description: `Tax collected on Order #${order.orderId}`\n//       });\n//     }\n\n//     // Cost of Goods Sold and Inventory reduction\n//     order.lineItems.forEach(item => {\n//       const costPrice = item.costPrice || 0;\n//       const quantity = item.quantity || 0;\n//       const totalCost = costPrice * quantity;\n\n//       if (totalCost > 0 && order.fulfilled) {\n//         // Cost of Goods Sold (Debit)\n//         entries.push({\n//           accountId: '5100',\n//           accountName: 'Cost of Goods Sold',\n//           debit: totalCost,\n//           credit: 0,\n//           description: `COGS for ${item.productName}`\n//         });\n\n//         // Inventory (Credit)\n//         entries.push({\n//           accountId: '1130',\n//           accountName: 'Inventory',\n//           debit: 0,\n//           credit: totalCost,\n//           description: `Inventory reduction - ${item.productName}`\n//         });\n//       }\n//     });\n\n//     // Calculate totals\n//     const totalDebit = entries.reduce((sum, entry) => sum + entry.debit, 0);\n//     const totalCredit = entries.reduce((sum, entry) => sum + entry.credit, 0);\n\n//     return {\n//       id: `JE-ORDER-${order.orderId}`,\n//       date: formatDateFromCreatedAt(order.createdAt),\n//       description: `Sales Order #${order.orderId} - ${order.lineItems.map(item => item.productName).join(', ')}`,\n//       reference: `ORDER-${order.orderId}`,\n//       transactionType: 'automatic',\n//       source: 'POS Sales',\n//       status: order.fulfilled ? 'posted' : 'pending',\n//       entries: entries,\n//       totalDebit: Math.round(totalDebit * 100) / 100,\n//       totalCredit: Math.round(totalCredit * 100) / 100,\n//       createdAt: order.createdAt,\n//       originalOrder: order // Keep reference to original order\n//     };\n//   };\n\n//   // Format date from API format (2025.08.18.10.08.54.569) to YYYY-MM-DD\n//   const formatDateFromCreatedAt = (createdAt) => {\n//     try {\n//       const parts = createdAt.split('.');\n//       if (parts.length >= 3) {\n//         return `${parts[0]}-${parts[1].padStart(2, '0')}-${parts[2].padStart(2, '0')}`;\n//       }\n//       return new Date().toISOString().split('T')[0];\n//     } catch (error) {\n//       return new Date().toISOString().split('T')[0];\n//     }\n//   };\n\n//   // Fallback sample data\n//   const loadSampleJournalEntries = () => {\n//     const sampleEntries = [\n//       {\n//         id: 'JE001',\n//         date: '2025-08-18',\n//         description: 'Sample POS Sale - Medical products',\n//         reference: 'POS001',\n//         transactionType: 'automatic',\n//         source: 'POS',\n//         status: 'posted',\n//         entries: [\n//           { accountId: '1111', accountName: 'Petty Cash', debit: 60.50, credit: 0, description: 'Cash received from customer' },\n//           { accountId: '4100', accountName: 'Sales Revenue', debit: 0, credit: 55.00, description: 'Revenue from medical products' },\n//           { accountId: '2130', accountName: 'Sales Tax Payable', debit: 0, credit: 5.50, description: 'Sales tax collected' }\n//         ],\n//         totalDebit: 60.50,\n//         totalCredit: 60.50,\n//         createdAt: '2025-08-18T10:30:00Z'\n//       }\n//     ];\n//     setJournalEntries(sampleEntries);\n//   };\n\n//   const filterEntries = () => {\n//     let filtered = [...journalEntries];\n\n//     if (filters.dateFrom) {\n//       filtered = filtered.filter(entry => entry.date >= filters.dateFrom);\n//     }\n//     if (filters.dateTo) {\n//       filtered = filtered.filter(entry => entry.date <= filters.dateTo);\n//     }\n//     if (filters.accountId) {\n//       filtered = filtered.filter(entry => \n//         entry.entries.some(e => e.accountId === filters.accountId)\n//       );\n//     }\n//     if (filters.transactionType !== 'all') {\n//       filtered = filtered.filter(entry => entry.transactionType === filters.transactionType);\n//     }\n//     if (filters.searchTerm) {\n//       const term = filters.searchTerm.toLowerCase();\n//       filtered = filtered.filter(entry => \n//         entry.description.toLowerCase().includes(term) ||\n//         entry.reference.toLowerCase().includes(term) ||\n//         entry.entries.some(e => e.description.toLowerCase().includes(term))\n//       );\n//     }\n\n//     setFilteredEntries(filtered);\n//   };\n\n//   const generateTrialBalance = () => {\n//     const balances = {};\n\n//     // Initialize all accounts\n//     chartOfAccounts.forEach(account => {\n//       balances[account.id] = {\n//         accountId: account.id,\n//         accountCode: account.code,\n//         accountName: account.name,\n//         accountType: account.type,\n//         debit: 0,\n//         credit: 0,\n//         balance: 0\n//       };\n//     });\n\n//     // Calculate balances from journal entries\n//     journalEntries.forEach(entry => {\n//       if (entry.status === 'posted') {\n//         entry.entries.forEach(entryLine => {\n//           if (balances[entryLine.accountId]) {\n//             balances[entryLine.accountId].debit += entryLine.debit;\n//             balances[entryLine.accountId].credit += entryLine.credit;\n//           }\n//         });\n//       }\n//     });\n\n//     // Calculate net balances\n//     Object.values(balances).forEach(account => {\n//       if (account.accountType === 'assets' || account.accountType === 'expenses') {\n//         account.balance = account.debit - account.credit;\n//       } else {\n//         account.balance = account.credit - account.debit;\n//       }\n//     });\n\n//     const trialBalanceData = Object.values(balances)\n//       .filter(account => account.debit !== 0 || account.credit !== 0)\n//       .sort((a, b) => a.accountCode.localeCompare(b.accountCode));\n\n//     setTrialBalance(trialBalanceData);\n//     setShowTrialBalance(true);\n//   };\n\n//   const addEntryLine = () => {\n//     setNewEntry({\n//       ...newEntry,\n//       entries: [...newEntry.entries, { accountId: '', debit: 0, credit: 0, description: '' }]\n//     });\n//   };\n\n//   const removeEntryLine = (index) => {\n//     if (newEntry.entries.length > 2) {\n//       const updatedEntries = newEntry.entries.filter((_, i) => i !== index);\n//       setNewEntry({ ...newEntry, entries: updatedEntries });\n//     }\n//   };\n\n//   const updateEntryLine = (index, field, value) => {\n//     const updatedEntries = [...newEntry.entries];\n//     updatedEntries[index] = { ...updatedEntries[index], [field]: value };\n//     setNewEntry({ ...newEntry, entries: updatedEntries });\n//   };\n\n//   const calculateTotals = (entries) => {\n//     const totalDebit = entries.reduce((sum, entry) => sum + (parseFloat(entry.debit) || 0), 0);\n//     const totalCredit = entries.reduce((sum, entry) => sum + (parseFloat(entry.credit) || 0), 0);\n//     return { totalDebit, totalCredit };\n//   };\n\n//   const isBalanced = (entries) => {\n//     const { totalDebit, totalCredit } = calculateTotals(entries);\n//     return Math.abs(totalDebit - totalCredit) < 0.01;\n//   };\n\n//   const saveJournalEntry = () => {\n//     if (!newEntry.description || !newEntry.entries.every(e => e.accountId)) {\n//       alert('Please fill in all required fields');\n//       return;\n//     }\n\n//     if (!isBalanced(newEntry.entries)) {\n//       alert('Journal entry must be balanced - total debits must equal total credits');\n//       return;\n//     }\n\n//     const { totalDebit, totalCredit } = calculateTotals(newEntry.entries);\n\n//     // Add account names to entries\n//     const entriesWithNames = newEntry.entries.map(entry => ({\n//       ...entry,\n//       accountName: accounts.find(acc => acc.id === entry.accountId)?.name || '',\n//       debit: parseFloat(entry.debit) || 0,\n//       credit: parseFloat(entry.credit) || 0\n//     }));\n\n//     const journalEntry = {\n//       id: `JE-MANUAL-${Date.now()}`,\n//       date: newEntry.date,\n//       description: newEntry.description,\n//       reference: newEntry.reference || `MAN${Date.now()}`,\n//       transactionType: 'manual',\n//       source: 'Manual',\n//       status: 'posted',\n//       entries: entriesWithNames,\n//       totalDebit,\n//       totalCredit,\n//       createdAt: new Date().toISOString()\n//     };\n\n//     // Save manual entries to localStorage\n//     const existingManualEntries = JSON.parse(localStorage.getItem('manualJournalEntries') || '[]');\n//     const updatedManualEntries = [...existingManualEntries, journalEntry];\n//     localStorage.setItem('manualJournalEntries', JSON.stringify(updatedManualEntries));\n\n//     // Update state\n//     setJournalEntries([...journalEntries, journalEntry]);\n\n//     // Reset form\n//     setNewEntry({\n//       date: new Date().toISOString().split('T')[0],\n//       description: '',\n//       reference: '',\n//       entries: [\n//         { accountId: '', debit: 0, credit: 0, description: '' },\n//         { accountId: '', debit: 0, credit: 0, description: '' }\n//       ]\n//     });\n//     setIsAddingEntry(false);\n//   };\n\n//   const getAccountName = (accountId) => {\n//     const account = accounts.find(acc => acc.id === accountId);\n//     return account ? `${account.code} - ${account.name}` : '';\n//   };\n\n//   const { totalDebit, totalCredit } = calculateTotals(newEntry.entries);\n//   const entryIsBalanced = isBalanced(newEntry.entries);\n\n//   return (\n//     <div className=\"max-w-7xl mx-auto p-6 bg-white\">\n//       {/* Header */}\n//       <div className=\"mb-8\">\n//         <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\n//           <Book className=\"mr-3 text-emerald-600\" />\n//           General Ledger\n//         </h1>\n//         <p className=\"text-gray-600\">Real-time transaction recording and journal entry management</p>\n//       </div>\n\n//       {/* Quick Stats */}\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n//         <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-blue-600 text-sm font-medium\">Total Entries</p>\n//               <p className=\"text-2xl font-bold text-blue-900\">{journalEntries.length}</p>\n//             </div>\n//             <FileText className=\"text-blue-600\" size={24} />\n//           </div>\n//         </div>\n\n//         <div className=\"bg-green-50 p-4 rounded-lg border border-green-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-green-600 text-sm font-medium\">POS Entries</p>\n//               <p className=\"text-2xl font-bold text-green-900\">\n//                 {journalEntries.filter(e => e.source === 'POS Sales').length}\n//               </p>\n//             </div>\n//             <TrendingUp className=\"text-green-600\" size={24} />\n//           </div>\n//         </div>\n\n//         <div className=\"bg-orange-50 p-4 rounded-lg border border-orange-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-orange-600 text-sm font-medium\">Manual Entries</p>\n//               <p className=\"text-2xl font-bold text-orange-900\">\n//                 {journalEntries.filter(e => e.transactionType === 'manual').length}\n//               </p>\n//             </div>\n//             <Edit className=\"text-orange-600\" size={24} />\n//           </div>\n//         </div>\n\n//         <div className=\"bg-purple-50 p-4 rounded-lg border border-purple-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-purple-600 text-sm font-medium\">Total Value</p>\n//               <p className=\"text-2xl font-bold text-purple-900\">\n//                 ${journalEntries.reduce((sum, entry) => sum + entry.totalDebit, 0).toFixed(2)}\n//               </p>\n//             </div>\n//             <DollarSign className=\"text-purple-600\" size={24} />\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Controls */}\n//       <div className=\"flex flex-wrap items-center justify-between gap-4 mb-6\">\n//         <div className=\"flex flex-wrap items-center gap-4\">\n//           {/* Date Filters */}\n//           <div className=\"flex items-center space-x-2\">\n//             <Calendar size={16} className=\"text-gray-400\" />\n//             <input\n//               type=\"date\"\n//               value={filters.dateFrom}\n//               onChange={(e) => setFilters({ ...filters, dateFrom: e.target.value })}\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               placeholder=\"From\"\n//             />\n//             <span className=\"text-gray-500\">to</span>\n//             <input\n//               type=\"date\"\n//               value={filters.dateTo}\n//               onChange={(e) => setFilters({ ...filters, dateTo: e.target.value })}\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               placeholder=\"To\"\n//             />\n//           </div>\n\n//           {/* Account Filter */}\n//           <div className=\"relative\">\n//             <Filter className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\n//             <select\n//               value={filters.accountId}\n//               onChange={(e) => setFilters({ ...filters, accountId: e.target.value })}\n//               className=\"pl-10 pr-8 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//             >\n//               <option value=\"\">All Accounts</option>\n//               {accounts.map(account => (\n//                 <option key={account.id} value={account.id}>\n//                   {account.code} - {account.name}\n//                 </option>\n//               ))}\n//             </select>\n//           </div>\n\n//           {/* Transaction Type Filter */}\n//           <select\n//             value={filters.transactionType}\n//             onChange={(e) => setFilters({ ...filters, transactionType: e.target.value })}\n//             className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//           >\n//             <option value=\"all\">All Types</option>\n//             <option value=\"automatic\">POS Sales</option>\n//             <option value=\"manual\">Manual</option>\n//           </select>\n\n//           {/* Search */}\n//           <div className=\"relative\">\n//             <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search entries...\"\n//               value={filters.searchTerm}\n//               onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\n//               className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//             />\n//           </div>\n//         </div>\n\n//         <div className=\"flex space-x-3\">\n//           <button\n//             onClick={loadJournalEntriesFromAPI}\n//             disabled={loading}\n//             className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2 disabled:bg-gray-400\"\n//           >\n//             {loading ? <RefreshCw className=\"animate-spin\" size={16} /> : <RefreshCw size={16} />}\n//             <span>Refresh from API</span>\n//           </button>\n//           <button\n//             onClick={() => setIsAddingEntry(true)}\n//             className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\n//           >\n//             <Plus size={16} />\n//             <span>Add Entry</span>\n//           </button>\n//           <button\n//             onClick={generateTrialBalance}\n//             className=\"px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 flex items-center space-x-2\"\n//           >\n//             <FileText size={16} />\n//             <span>Trial Balance</span>\n//           </button>\n//         </div>\n//       </div>\n\n//       {/* Journal Entry Form */}\n//       {isAddingEntry && (\n//         <div className=\"mb-8 p-6 bg-gray-50 rounded-lg border\">\n//           <h3 className=\"text-lg font-semibold mb-4\">Add Manual Journal Entry</h3>\n\n//           <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n//             <div>\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Date *</label>\n//               <input\n//                 type=\"date\"\n//                 value={newEntry.date}\n//                 onChange={(e) => setNewEntry({ ...newEntry, date: e.target.value })}\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               />\n//             </div>\n//             <div>\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Description *</label>\n//               <input\n//                 type=\"text\"\n//                 value={newEntry.description}\n//                 onChange={(e) => setNewEntry({ ...newEntry, description: e.target.value })}\n//                 placeholder=\"Enter description\"\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               />\n//             </div>\n//             <div>\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Reference</label>\n//               <input\n//                 type=\"text\"\n//                 value={newEntry.reference}\n//                 onChange={(e) => setNewEntry({ ...newEntry, reference: e.target.value })}\n//                 placeholder=\"Reference number\"\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               />\n//             </div>\n//           </div>\n\n//           {/* Entry Lines */}\n//           <div className=\"mb-4\">\n//             <label className=\"block text-sm font-medium text-gray-700 mb-2\">Journal Entry Lines</label>\n//             <div className=\"space-y-3\">\n//               {newEntry.entries.map((entry, index) => (\n//                 <div key={index} className=\"grid grid-cols-12 gap-2 items-center bg-white p-3 rounded border\">\n//                   <div className=\"col-span-4\">\n//                     <select\n//                       value={entry.accountId}\n//                       onChange={(e) => updateEntryLine(index, 'accountId', e.target.value)}\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                     >\n//                       <option value=\"\">Select Account</option>\n//                       {accounts.map(account => (\n//                         <option key={account.id} value={account.id}>\n//                           {account.code} - {account.name}\n//                         </option>\n//                       ))}\n//                     </select>\n//                   </div>\n//                   <div className=\"col-span-3\">\n//                     <input\n//                       type=\"text\"\n//                       value={entry.description}\n//                       onChange={(e) => updateEntryLine(index, 'description', e.target.value)}\n//                       placeholder=\"Description\"\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                     />\n//                   </div>\n//                   <div className=\"col-span-2\">\n//                     <input\n//                       type=\"number\"\n//                       step=\"0.01\"\n//                       value={entry.debit}\n//                       onChange={(e) => updateEntryLine(index, 'debit', e.target.value)}\n//                       placeholder=\"Debit\"\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                     />\n//                   </div>\n//                   <div className=\"col-span-2\">\n//                     <input\n//                       type=\"number\"\n//                       step=\"0.01\"\n//                       value={entry.credit}\n//                       onChange={(e) => updateEntryLine(index, 'credit', e.target.value)}\n//                       placeholder=\"Credit\"\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                     />\n//                   </div>\n//                   <div className=\"col-span-1\">\n//                     {newEntry.entries.length > 2 && (\n//                       <button\n//                         onClick={() => removeEntryLine(index)}\n//                         className=\"p-1 text-red-600 hover:bg-red-100 rounded\"\n//                       >\n//                         <Trash2 size={14} />\n//                       </button>\n//                     )}\n//                   </div>\n//                 </div>\n//               ))}\n//             </div>\n\n//             <div className=\"flex justify-between items-center mt-3\">\n//               <button\n//                 onClick={addEntryLine}\n//                 className=\"px-3 py-1 text-sm bg-gray-200 text-gray-700 rounded hover:bg-gray-300 flex items-center space-x-1\"\n//               >\n//                 <Plus size={14} />\n//                 <span>Add Line</span>\n//               </button>\n\n//               <div className=\"flex items-center space-x-4\">\n//                 <div className=\"text-sm\">\n//                   <span className=\"font-medium\">Total Debit: ${totalDebit.toFixed(2)}</span>\n//                   <span className=\"mx-2\">|</span>\n//                   <span className=\"font-medium\">Total Credit: ${totalCredit.toFixed(2)}</span>\n//                 </div>\n//                 {entryIsBalanced ? (\n//                   <div className=\"flex items-center text-green-600\">\n//                     <CheckCircle size={16} className=\"mr-1\" />\n//                     <span className=\"text-sm\">Balanced</span>\n//                   </div>\n//                 ) : (\n//                   <div className=\"flex items-center text-red-600\">\n//                     <AlertCircle size={16} className=\"mr-1\" />\n//                     <span className=\"text-sm\">Not Balanced</span>\n//                   </div>\n//                 )}\n//               </div>\n//             </div>\n//           </div>\n\n//           <div className=\"flex space-x-3\">\n//             <button\n//               onClick={saveJournalEntry}\n//               disabled={!entryIsBalanced}\n//               className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 disabled:bg-gray-400 flex items-center space-x-2\"\n//             >\n//               <Save size={16} />\n//               <span>Save Entry</span>\n//             </button>\n//             <button\n//               onClick={() => setIsAddingEntry(false)}\n//               className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\"\n//             >\n//               <X size={16} />\n//               <span>Cancel</span>\n//             </button>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Journal Entries Table */}\n//       <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//         <div className=\"px-6 py-4 border-b border-gray-200\">\n//           <h2 className=\"text-lg font-semibold text-gray-900\">Journal Entries</h2>\n//           <p className=\"text-sm text-gray-600 mt-1\">\n//             Showing {filteredEntries.length} of {journalEntries.length} entries\n//           </p>\n//         </div>\n\n//         <div className=\"overflow-x-auto\">\n//           <table className=\"w-full\">\n//             <thead className=\"bg-gray-50\">\n//               <tr>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Entry ID\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Date\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Description\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Reference\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Source\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Amount\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Status\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Actions\n//                 </th>\n//               </tr>\n//             </thead>\n//             <tbody className=\"bg-white divide-y divide-gray-200\">\n//               {filteredEntries.map((entry) => (\n//                 <tr key={entry.id} className=\"hover:bg-gray-50\">\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n//                     {entry.id}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                     {entry.date}\n//                   </td>\n//                   <td className=\"px-6 py-4 text-sm text-gray-900 max-w-xs truncate\">\n//                     {entry.description}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                     {entry.reference}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                       entry.source === 'POS Sales' ? 'bg-green-100 text-green-800' : \n//                       entry.source === 'Manual' ? 'bg-orange-100 text-orange-800' :\n//                       'bg-blue-100 text-blue-800'\n//                     }`}>\n//                       {entry.source}\n//                     </span>\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                     ${entry.totalDebit.toFixed(2)}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                       entry.status === 'posted' ? 'bg-blue-100 text-blue-800' : 'bg-yellow-100 text-yellow-800'\n//                     }`}>\n//                       {entry.status}\n//                     </span>\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n//                     <button\n//                       onClick={() => setSelectedEntry(entry)}\n//                       className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\n//                     >\n//                       <Eye size={16} />\n//                     </button>\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </div>\n//       </div>\n\n//       {/* Entry Details Modal */}\n//       {selectedEntry && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <div className=\"flex items-center justify-between\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\n//                   Journal Entry Details - {selectedEntry.id}\n//                 </h3>\n//                 <button\n//                   onClick={() => setSelectedEntry(null)}\n//                   className=\"text-gray-400 hover:text-gray-600\"\n//                 >\n//                   <X size={20} />\n//                 </button>\n//               </div>\n//             </div>\n\n//             <div className=\"px-6 py-4\">\n//               {/* Entry Header */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\n//                 <div>\n//                   <label className=\"text-sm font-medium text-gray-500\">Date</label>\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.date}</p>\n//                 </div>\n//                 <div>\n//                   <label className=\"text-sm font-medium text-gray-500\">Reference</label>\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.reference}</p>\n//                 </div>\n//                 <div>\n//                   <label className=\"text-sm font-medium text-gray-500\">Description</label>\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.description}</p>\n//                 </div>\n//                 <div>\n//                   <label className=\"text-sm font-medium text-gray-500\">Source</label>\n//                   <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                     selectedEntry.source === 'POS Sales' ? 'bg-green-100 text-green-800' : 'bg-orange-100 text-orange-800'\n//                   }`}>\n//                     {selectedEntry.source}\n//                   </span>\n//                 </div>\n//               </div>\n\n//               {/* Entry Lines */}\n//               <div className=\"mb-6\">\n//                 <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Account Entries</h4>\n//                 <div className=\"overflow-x-auto\">\n//                   <table className=\"w-full border border-gray-200 rounded\">\n//                     <thead className=\"bg-gray-50\">\n//                       <tr>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Account</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Description</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Debit</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Credit</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody className=\"divide-y divide-gray-200\">\n//                       {selectedEntry.entries.map((entryLine, index) => (\n//                         <tr key={index}>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900\">\n//                             {getAccountName(entryLine.accountId)}\n//                           </td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-600\">\n//                             {entryLine.description}\n//                           </td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">\n//                             {entryLine.debit > 0 ? `${entryLine.debit.toFixed(2)}` : '-'}\n//                           </td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">\n//                             {entryLine.credit > 0 ? `${entryLine.credit.toFixed(2)}` : '-'}\n//                           </td>\n//                         </tr>\n//                       ))}\n//                     </tbody>\n//                     <tfoot className=\"bg-gray-50\">\n//                       <tr>\n//                         <td colSpan=\"2\" className=\"px-4 py-2 text-sm font-medium text-gray-900\">\n//                           Totals:\n//                         </td>\n//                         <td className=\"px-4 py-2 text-sm font-bold text-gray-900 text-right\">\n//                           ${selectedEntry.totalDebit.toFixed(2)}\n//                         </td>\n//                         <td className=\"px-4 py-2 text-sm font-bold text-gray-900 text-right\">\n//                           ${selectedEntry.totalCredit.toFixed(2)}\n//                         </td>\n//                       </tr>\n//                     </tfoot>\n//                   </table>\n//                 </div>\n//               </div>\n\n//               {/* Original Order Info (if available) */}\n//               {selectedEntry.originalOrder && (\n//                 <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\n//                   <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Original Sales Order Details</h4>\n//                   <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n//                     <div>\n//                       <span className=\"font-medium text-gray-500\">Order ID:</span>\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.orderId}</p>\n//                     </div>\n//                     <div>\n//                       <span className=\"font-medium text-gray-500\">Status:</span>\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.status}</p>\n//                     </div>\n//                     <div>\n//                       <span className=\"font-medium text-gray-500\">Payment Status:</span>\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.paid ? 'Paid' : 'Unpaid'}</p>\n//                     </div>\n//                     <div>\n//                       <span className=\"font-medium text-gray-500\">Fulfilled:</span>\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.fulfilled ? 'Yes' : 'No'}</p>\n//                     </div>\n//                   </div>\n\n//                   {/* Line Items */}\n//                   <div className=\"mt-4\">\n//                     <span className=\"font-medium text-gray-500\">Line Items:</span>\n//                     <div className=\"mt-2 space-y-2\">\n//                       {selectedEntry.originalOrder.lineItems.map((item, index) => (\n//                         <div key={index} className=\"text-sm bg-white p-2 rounded border\">\n//                           <span className=\"font-medium\">{item.productName}</span> - \n//                           Qty: {item.quantity}, Price: ${item.price}, Total: ${item.total}\n//                           {item.taxAmount > 0 && <span className=\"text-gray-500\"> (Tax: ${item.taxAmount})</span>}\n//                         </div>\n//                       ))}\n//                     </div>\n//                   </div>\n//                 </div>\n//               )}\n\n//               {/* Entry Metadata */}\n//               <div className=\"text-xs text-gray-500\">\n//                 <p>Created: {new Date(selectedEntry.createdAt).toLocaleString()}</p>\n//                 <p>Status: {selectedEntry.status}</p>\n//                 <p>Type: {selectedEntry.transactionType}</p>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Trial Balance Modal */}\n//       {showTrialBalance && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-lg max-w-5xl w-full max-h-[90vh] overflow-y-auto\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <div className=\"flex items-center justify-between\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\n//                   Trial Balance - As of {new Date().toLocaleDateString()}\n//                 </h3>\n//                 <div className=\"flex items-center space-x-2\">\n//                   <button\n//                     onClick={() => {\n//                       // Export functionality would go here\n//                       alert('Export functionality would be implemented here');\n//                     }}\n//                     className=\"px-3 py-1 bg-emerald-600 text-white rounded text-sm hover:bg-emerald-700 flex items-center space-x-1\"\n//                   >\n//                     <Download size={14} />\n//                     <span>Export</span>\n//                   </button>\n//                   <button\n//                     onClick={() => setShowTrialBalance(false)}\n//                     className=\"text-gray-400 hover:text-gray-600\"\n//                   >\n//                     <X size={20} />\n//                   </button>\n//                 </div>\n//               </div>\n//             </div>\n\n//             <div className=\"px-6 py-4\">\n//               <div className=\"overflow-x-auto\">\n//                 <table className=\"w-full\">\n//                   <thead className=\"bg-gray-50\">\n//                     <tr>\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Account Code\n//                       </th>\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Account Name\n//                       </th>\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Type\n//                       </th>\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Debit Total\n//                       </th>\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Credit Total\n//                       </th>\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Balance\n//                       </th>\n//                     </tr>\n//                   </thead>\n//                   <tbody className=\"bg-white divide-y divide-gray-200\">\n//                     {trialBalance.map((account) => (\n//                       <tr key={account.accountId}>\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n//                           {account.accountCode}\n//                         </td>\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                           {account.accountName}\n//                         </td>\n//                         <td className=\"px-4 py-4 whitespace-nowrap\">\n//                           <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                             account.accountType === 'assets' ? 'bg-green-100 text-green-800' :\n//                             account.accountType === 'liabilities' ? 'bg-red-100 text-red-800' :\n//                             account.accountType === 'equity' ? 'bg-blue-100 text-blue-800' :\n//                             account.accountType === 'revenue' ? 'bg-purple-100 text-purple-800' :\n//                             'bg-orange-100 text-orange-800'\n//                           }`}>\n//                             {account.accountType}\n//                           </span>\n//                         </td>\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n//                           ${account.debit.toFixed(2)}\n//                         </td>\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n//                           ${account.credit.toFixed(2)}\n//                         </td>\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-right\">\n//                           <span className={account.balance >= 0 ? 'text-green-600' : 'text-red-600'}>\n//                             ${Math.abs(account.balance).toFixed(2)}\n//                             {account.balance < 0 && ' (CR)'}\n//                           </span>\n//                         </td>\n//                       </tr>\n//                     ))}\n//                   </tbody>\n//                   <tfoot className=\"bg-gray-50\">\n//                     <tr>\n//                       <td colSpan=\"3\" className=\"px-4 py-3 text-sm font-bold text-gray-900\">\n//                         TOTALS:\n//                       </td>\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\n//                         ${trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toFixed(2)}\n//                       </td>\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\n//                         ${trialBalance.reduce((sum, acc) => sum + acc.credit, 0).toFixed(2)}\n//                       </td>\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\n//                         ${Math.abs(trialBalance.reduce((sum, acc) => sum + acc.balance, 0)).toFixed(2)}\n//                       </td>\n//                     </tr>\n//                   </tfoot>\n//                 </table>\n//               </div>\n\n//               {/* Trial Balance Validation */}\n//               <div className=\"mt-4 p-4 bg-green-50 border border-green-200 rounded-lg\">\n//                 <div className=\"flex items-center\">\n//                   <CheckCircle className=\"text-green-600 mr-2\" size={20} />\n//                   <div>\n//                     <h4 className=\"font-medium text-green-800\">Trial Balance is Balanced</h4>\n//                     <p className=\"text-sm text-green-700\">\n//                       Total Debits = Total Credits = ${trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toFixed(2)}\n//                     </p>\n//                   </div>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Integration Status */}\n//       <div className=\"mt-8 grid grid-cols-1 md:grid-cols-3 gap-4\">\n//         <div className=\"p-4 bg-green-50 border border-green-200 rounded-lg\">\n//           <div className=\"flex items-center mb-2\">\n//             <CheckCircle className=\"text-green-600 mr-2\" size={16} />\n//             <h4 className=\"font-medium text-green-800\">POS API Integration</h4>\n//           </div>\n//           <p className=\"text-sm text-green-700\">\n//             Sales orders automatically create journal entries from live API data\n//           </p>\n//         </div>\n\n//         <div className=\"p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n//           <div className=\"flex items-center mb-2\">\n//             <RefreshCw className=\"text-blue-600 mr-2\" size={16} />\n//             <h4 className=\"font-medium text-blue-800\">Real-time Sync</h4>\n//           </div>\n//           <p className=\"text-sm text-blue-700\">\n//             Journal entries updated automatically with each sales transaction\n//           </p>\n//         </div>\n\n//         <div className=\"p-4 bg-orange-50 border border-orange-200 rounded-lg\">\n//           <div className=\"flex items-center mb-2\">\n//             <FileText className=\"text-orange-600 mr-2\" size={16} />\n//             <h4 className=\"font-medium text-orange-800\">Manual Entries</h4>\n//           </div>\n//           <p className=\"text-sm text-orange-700\">\n//             Add adjustments and corrections with full double-entry validation\n//           </p>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default GeneralLedger;\n\nimport React, { useState, useEffect } from 'react';\nimport { Book, Plus, Filter, Search, Calendar, FileText, Edit, Trash2, Save, X, AlertCircle, CheckCircle, DollarSign, TrendingUp, Eye, Download, RefreshCw } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GeneralLedger = () => {\n  _s();\n  const [journalEntries, setJournalEntries] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n  const [filteredEntries, setFilteredEntries] = useState([]);\n  const [selectedEntry, setSelectedEntry] = useState(null);\n  const [isAddingEntry, setIsAddingEntry] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [filters, setFilters] = useState({\n    dateFrom: '',\n    dateTo: '',\n    accountId: '',\n    transactionType: 'all',\n    searchTerm: ''\n  });\n  const [trialBalance, setTrialBalance] = useState([]);\n  const [showTrialBalance, setShowTrialBalance] = useState(false);\n  const [newEntry, setNewEntry] = useState({\n    date: new Date().toISOString().split('T')[0],\n    description: '',\n    reference: '',\n    entries: [{\n      accountId: '',\n      debit: 0,\n      credit: 0,\n      description: ''\n    }, {\n      accountId: '',\n      debit: 0,\n      credit: 0,\n      description: ''\n    }]\n  });\n\n  // Chart of Accounts\n  const chartOfAccounts = [{\n    id: '1111',\n    code: '1111',\n    name: 'Petty Cash',\n    type: 'assets'\n  }, {\n    id: '1112',\n    code: '1112',\n    name: 'Bank - Main Account',\n    type: 'assets'\n  }, {\n    id: '1120',\n    code: '1120',\n    name: 'Accounts Receivable',\n    type: 'assets'\n  }, {\n    id: '1130',\n    code: '1130',\n    name: 'Inventory',\n    type: 'assets'\n  }, {\n    id: '2110',\n    code: '2110',\n    name: 'Accounts Payable',\n    type: 'liabilities'\n  }, {\n    id: '2130',\n    code: '2130',\n    name: 'Sales Tax Payable',\n    type: 'liabilities'\n  }, {\n    id: '4100',\n    code: '4100',\n    name: 'Sales Revenue',\n    type: 'revenue'\n  }, {\n    id: '4110',\n    code: '4110',\n    name: 'Electronics Sales',\n    type: 'revenue'\n  }, {\n    id: '5100',\n    code: '5100',\n    name: 'Cost of Goods Sold',\n    type: 'expenses'\n  }, {\n    id: '5200',\n    code: '5200',\n    name: 'Purchase Expenses',\n    type: 'expenses'\n  }];\n\n  // API Configuration - This is already correct\n  const API_BASE_URL = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/orders?start=0&size=200';\n  useEffect(() => {\n    setAccounts(chartOfAccounts);\n    loadJournalEntriesFromAPI();\n  }, []);\n  useEffect(() => {\n    filterEntries();\n  }, [journalEntries, filters]);\n  async function fetchOrderData() {\n    try {\n      const response = await fetch(API_BASE_URL);\n      if (!response.ok) {\n        throw new Error(`API request failed with status ${response.status}`);\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetching order data:', error);\n      // Implement notification system for integration errors\n      return null;\n    }\n  }\n\n  // Fetch Sales Orders from API and convert to Journal Entries\n  const loadJournalEntriesFromAPI = async () => {\n    setLoading(true);\n    try {\n      // FIXED: Using the correct API_BASE_URL directly instead of appending \"/orders?start=0&size=200\"\n      const salesOrders = await fetchOrderData();\n      if (!salesOrders) {\n        throw new Error('Failed to fetch sales orders');\n      }\n\n      // Filter only PAID and FULFILLED orders\n      const completedOrders = salesOrders.filter(order => order.paid === true && order.fulfilled === true && order.status === 'Closed');\n\n      // Convert completed sales orders to journal entries\n      const journalEntriesFromSales = completedOrders.map(order => convertSalesOrderToJournalEntry(order)).filter(entry => entry !== null); // Filter out any null entries\n\n      // Load any manual journal entries from localStorage\n      const manualEntries = JSON.parse(localStorage.getItem('manualJournalEntries') || '[]');\n\n      // Combine both types of entries\n      const allEntries = [...journalEntriesFromSales, ...manualEntries];\n      setJournalEntries(allEntries);\n      console.log('Loaded completed orders:', completedOrders.length, 'Total journal entries:', allEntries.length);\n    } catch (error) {\n      console.error('Error loading sales orders:', error);\n      // Fallback to sample data if API fails\n      loadSampleJournalEntries();\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Convert Sales Order to Journal Entry\n  const convertSalesOrderToJournalEntry = order => {\n    const entries = [];\n\n    // Use actual values from API (amounts are in PKR, not USD)\n    const subTotal = parseFloat(order.subTotal) || 0;\n    const taxAmount = parseFloat(order.taxAmount) || 0;\n    const total = parseFloat(order.total) || 0;\n\n    // Only process PAID and FULFILLED orders\n    if (!order.paid || !order.fulfilled || order.status !== 'Closed') {\n      return null; // Skip incomplete orders\n    }\n\n    // Cash/Bank Account (Debit) - Total amount received\n    entries.push({\n      accountId: '1111',\n      // Petty Cash (assume cash payment)\n      accountName: 'Petty Cash',\n      debit: total,\n      credit: 0,\n      description: `Cash received from Order #${order.orderId} - ${order.lineItems.map(item => item.productName).join(', ')}`\n    });\n\n    // Sales Revenue (Credit) - Subtotal\n    if (subTotal > 0) {\n      entries.push({\n        accountId: '4110',\n        // Electronics Sales\n        accountName: 'Electronics Sales',\n        debit: 0,\n        credit: subTotal,\n        description: `Revenue from Order #${order.orderId}`\n      });\n    }\n\n    // Sales Tax Payable (Credit) - Tax amount\n    if (taxAmount > 0) {\n      entries.push({\n        accountId: '2130',\n        accountName: 'Sales Tax Payable',\n        debit: 0,\n        credit: taxAmount,\n        description: `${order.taxRate}% tax collected on Order #${order.orderId}`\n      });\n    }\n\n    // Cost of Goods Sold and Inventory reduction (only for fulfilled items)\n    let totalCOGS = 0;\n    order.lineItems.forEach(item => {\n      if (item.fulfilled && item.status === 'Fulfilled') {\n        const costPrice = parseFloat(item.costPrice) || 0;\n        const quantity = parseFloat(item.quantity) || 0;\n        const itemCOGS = costPrice * quantity;\n        totalCOGS += itemCOGS;\n      }\n    });\n    if (totalCOGS > 0) {\n      // Cost of Goods Sold (Debit)\n      entries.push({\n        accountId: '5100',\n        accountName: 'Cost of Goods Sold',\n        debit: totalCOGS,\n        credit: 0,\n        description: `COGS for Order #${order.orderId}`\n      });\n\n      // Inventory (Credit)\n      entries.push({\n        accountId: '1130',\n        accountName: 'Inventory',\n        debit: 0,\n        credit: totalCOGS,\n        description: `Inventory reduction - Order #${order.orderId}`\n      });\n    }\n\n    // Calculate totals\n    const totalDebit = entries.reduce((sum, entry) => sum + entry.debit, 0);\n    const totalCredit = entries.reduce((sum, entry) => sum + entry.credit, 0);\n    return {\n      id: `JE-ORDER-${order.orderId}`,\n      date: formatDateFromCreatedAt(order.createdAt),\n      description: `Sales Order #${order.orderId} - ${order.lineItems.map(item => `${item.productName} (${item.quantity})`).join(', ')}`,\n      reference: `ORDER-${order.orderId}`,\n      transactionType: 'automatic',\n      source: 'POS Sales',\n      status: 'posted',\n      entries: entries,\n      totalDebit: Math.round(totalDebit * 100) / 100,\n      totalCredit: Math.round(totalCredit * 100) / 100,\n      createdAt: order.createdAt,\n      originalOrder: order // Keep reference to original order\n    };\n  };\n\n  // Format date from API format (2025.08.18.10.08.54.569) to YYYY-MM-DD\n  const formatDateFromCreatedAt = createdAt => {\n    try {\n      const parts = createdAt.split('.');\n      if (parts.length >= 3) {\n        return `${parts[0]}-${parts[1].padStart(2, '0')}-${parts[2].padStart(2, '0')}`;\n      }\n      return new Date().toISOString().split('T')[0];\n    } catch (error) {\n      return new Date().toISOString().split('T')[0];\n    }\n  };\n\n  // Fallback sample data\n  const loadSampleJournalEntries = () => {\n    const sampleEntries = [{\n      id: 'JE001',\n      date: '2025-08-18',\n      description: 'Sample POS Sale - Medical products',\n      reference: 'POS001',\n      transactionType: 'automatic',\n      source: 'POS',\n      status: 'posted',\n      entries: [{\n        accountId: '1111',\n        accountName: 'Petty Cash',\n        debit: 60.50,\n        credit: 0,\n        description: 'Cash received from customer'\n      }, {\n        accountId: '4100',\n        accountName: 'Sales Revenue',\n        debit: 0,\n        credit: 55.00,\n        description: 'Revenue from medical products'\n      }, {\n        accountId: '2130',\n        accountName: 'Sales Tax Payable',\n        debit: 0,\n        credit: 5.50,\n        description: 'Sales tax collected'\n      }],\n      totalDebit: 60.50,\n      totalCredit: 60.50,\n      createdAt: '2025-08-18T10:30:00Z'\n    }];\n    setJournalEntries(sampleEntries);\n  };\n  const filterEntries = () => {\n    let filtered = [...journalEntries];\n    if (filters.dateFrom) {\n      filtered = filtered.filter(entry => entry.date >= filters.dateFrom);\n    }\n    if (filters.dateTo) {\n      filtered = filtered.filter(entry => entry.date <= filters.dateTo);\n    }\n    if (filters.accountId) {\n      filtered = filtered.filter(entry => entry.entries.some(e => e.accountId === filters.accountId));\n    }\n    if (filters.transactionType !== 'all') {\n      filtered = filtered.filter(entry => entry.transactionType === filters.transactionType);\n    }\n    if (filters.searchTerm) {\n      const term = filters.searchTerm.toLowerCase();\n      filtered = filtered.filter(entry => entry.description.toLowerCase().includes(term) || entry.reference.toLowerCase().includes(term) || entry.entries.some(e => e.description.toLowerCase().includes(term)));\n    }\n    setFilteredEntries(filtered);\n  };\n  const generateTrialBalance = () => {\n    const balances = {};\n\n    // Initialize all accounts\n    chartOfAccounts.forEach(account => {\n      balances[account.id] = {\n        accountId: account.id,\n        accountCode: account.code,\n        accountName: account.name,\n        accountType: account.type,\n        debit: 0,\n        credit: 0,\n        balance: 0\n      };\n    });\n\n    // Calculate balances from journal entries\n    journalEntries.forEach(entry => {\n      if (entry.status === 'posted') {\n        entry.entries.forEach(entryLine => {\n          if (balances[entryLine.accountId]) {\n            balances[entryLine.accountId].debit += entryLine.debit;\n            balances[entryLine.accountId].credit += entryLine.credit;\n          }\n        });\n      }\n    });\n\n    // Calculate net balances\n    Object.values(balances).forEach(account => {\n      if (account.accountType === 'assets' || account.accountType === 'expenses') {\n        account.balance = account.debit - account.credit;\n      } else {\n        account.balance = account.credit - account.debit;\n      }\n    });\n    const trialBalanceData = Object.values(balances).filter(account => account.debit !== 0 || account.credit !== 0).sort((a, b) => a.accountCode.localeCompare(b.accountCode));\n    setTrialBalance(trialBalanceData);\n    setShowTrialBalance(true);\n  };\n  const addEntryLine = () => {\n    setNewEntry({\n      ...newEntry,\n      entries: [...newEntry.entries, {\n        accountId: '',\n        debit: 0,\n        credit: 0,\n        description: ''\n      }]\n    });\n  };\n  const removeEntryLine = index => {\n    if (newEntry.entries.length > 2) {\n      const updatedEntries = newEntry.entries.filter((_, i) => i !== index);\n      setNewEntry({\n        ...newEntry,\n        entries: updatedEntries\n      });\n    }\n  };\n  const updateEntryLine = (index, field, value) => {\n    const updatedEntries = [...newEntry.entries];\n    updatedEntries[index] = {\n      ...updatedEntries[index],\n      [field]: value\n    };\n    setNewEntry({\n      ...newEntry,\n      entries: updatedEntries\n    });\n  };\n  const calculateTotals = entries => {\n    const totalDebit = entries.reduce((sum, entry) => sum + (parseFloat(entry.debit) || 0), 0);\n    const totalCredit = entries.reduce((sum, entry) => sum + (parseFloat(entry.credit) || 0), 0);\n    return {\n      totalDebit,\n      totalCredit\n    };\n  };\n  const isBalanced = entries => {\n    const {\n      totalDebit,\n      totalCredit\n    } = calculateTotals(entries);\n    return Math.abs(totalDebit - totalCredit) < 0.01;\n  };\n  const saveJournalEntry = () => {\n    if (!newEntry.description || !newEntry.entries.every(e => e.accountId)) {\n      alert('Please fill in all required fields');\n      return;\n    }\n    if (!isBalanced(newEntry.entries)) {\n      alert('Journal entry must be balanced - total debits must equal total credits');\n      return;\n    }\n    const {\n      totalDebit,\n      totalCredit\n    } = calculateTotals(newEntry.entries);\n\n    // Add account names to entries\n    const entriesWithNames = newEntry.entries.map(entry => {\n      var _accounts$find;\n      return {\n        ...entry,\n        accountName: ((_accounts$find = accounts.find(acc => acc.id === entry.accountId)) === null || _accounts$find === void 0 ? void 0 : _accounts$find.name) || '',\n        debit: parseFloat(entry.debit) || 0,\n        credit: parseFloat(entry.credit) || 0\n      };\n    });\n    const journalEntry = {\n      id: `JE-MANUAL-${Date.now()}`,\n      date: newEntry.date,\n      description: newEntry.description,\n      reference: newEntry.reference || `MAN${Date.now()}`,\n      transactionType: 'manual',\n      source: 'Manual',\n      status: 'posted',\n      entries: entriesWithNames,\n      totalDebit,\n      totalCredit,\n      createdAt: new Date().toISOString()\n    };\n\n    // Save manual entries to localStorage\n    const existingManualEntries = JSON.parse(localStorage.getItem('manualJournalEntries') || '[]');\n    const updatedManualEntries = [...existingManualEntries, journalEntry];\n    localStorage.setItem('manualJournalEntries', JSON.stringify(updatedManualEntries));\n\n    // Update state\n    setJournalEntries([...journalEntries, journalEntry]);\n\n    // Reset form\n    setNewEntry({\n      date: new Date().toISOString().split('T')[0],\n      description: '',\n      reference: '',\n      entries: [{\n        accountId: '',\n        debit: 0,\n        credit: 0,\n        description: ''\n      }, {\n        accountId: '',\n        debit: 0,\n        credit: 0,\n        description: ''\n      }]\n    });\n    setIsAddingEntry(false);\n  };\n  const getAccountName = accountId => {\n    const account = accounts.find(acc => acc.id === accountId);\n    return account ? `${account.code} - ${account.name}` : '';\n  };\n  const {\n    totalDebit,\n    totalCredit\n  } = calculateTotals(newEntry.entries);\n  const entryIsBalanced = isBalanced(newEntry.entries);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-7xl mx-auto p-6 bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-gray-900 mb-2 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Book, {\n          className: \"mr-3 text-emerald-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2483,\n          columnNumber: 11\n        }, this), \"General Ledger\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2482,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"Real-time transaction recording and journal entry management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2486,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2481,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-blue-50 p-4 rounded-lg border border-blue-200\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-blue-600 text-sm font-medium\",\n              children: \"Total Entries\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2494,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-2xl font-bold text-blue-900\",\n              children: journalEntries.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2495,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2493,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FileText, {\n            className: \"text-blue-600\",\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2497,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2492,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2491,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-green-50 p-4 rounded-lg border border-green-200\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-green-600 text-sm font-medium\",\n              children: \"POS Entries\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2504,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-2xl font-bold text-green-900\",\n              children: journalEntries.filter(e => e.source === 'POS Sales').length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2505,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2503,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TrendingUp, {\n            className: \"text-green-600\",\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2509,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2502,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2501,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-orange-50 p-4 rounded-lg border border-orange-200\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-orange-600 text-sm font-medium\",\n              children: \"Manual Entries\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2516,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-2xl font-bold text-orange-900\",\n              children: journalEntries.filter(e => e.transactionType === 'manual').length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2517,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2515,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Edit, {\n            className: \"text-orange-600\",\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2521,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2514,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2513,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-purple-50 p-4 rounded-lg border border-purple-200\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-purple-600 text-sm font-medium\",\n              children: \"Total Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2528,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-2xl font-bold text-purple-900\",\n              children: [\"PKR \", journalEntries.reduce((sum, entry) => sum + entry.totalDebit, 0).toLocaleString('en-PK', {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2529,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2527,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DollarSign, {\n            className: \"text-purple-600\",\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2533,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2526,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2525,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2490,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap items-center justify-between gap-4 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap items-center gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(Calendar, {\n            size: 16,\n            className: \"text-gray-400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2543,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: filters.dateFrom,\n            onChange: e => setFilters({\n              ...filters,\n              dateFrom: e.target.value\n            }),\n            className: \"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\",\n            placeholder: \"From\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2544,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-500\",\n            children: \"to\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2551,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: filters.dateTo,\n            onChange: e => setFilters({\n              ...filters,\n              dateTo: e.target.value\n            }),\n            className: \"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\",\n            placeholder: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2552,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2542,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(Filter, {\n            className: \"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\",\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2563,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: filters.accountId,\n            onChange: e => setFilters({\n              ...filters,\n              accountId: e.target.value\n            }),\n            className: \"pl-10 pr-8 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"All Accounts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2569,\n              columnNumber: 15\n            }, this), accounts.map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: account.id,\n              children: [account.code, \" - \", account.name]\n            }, account.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2571,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2564,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2562,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filters.transactionType,\n          onChange: e => setFilters({\n            ...filters,\n            transactionType: e.target.value\n          }),\n          className: \"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"All Types\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2584,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"automatic\",\n            children: \"POS Sales\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2585,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"manual\",\n            children: \"Manual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2586,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2579,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(Search, {\n            className: \"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\",\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2591,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search entries...\",\n            value: filters.searchTerm,\n            onChange: e => setFilters({\n              ...filters,\n              searchTerm: e.target.value\n            }),\n            className: \"pl-10 pr-4 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2592,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2590,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2540,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: loadJournalEntriesFromAPI,\n          disabled: loading,\n          className: \"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2 disabled:bg-gray-400\",\n          children: [loading ? /*#__PURE__*/_jsxDEV(RefreshCw, {\n            className: \"animate-spin\",\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2608,\n            columnNumber: 24\n          }, this) : /*#__PURE__*/_jsxDEV(RefreshCw, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2608,\n            columnNumber: 75\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Refresh from API\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2609,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2603,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsAddingEntry(true),\n          className: \"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(Plus, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2615,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Add Entry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2616,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2611,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: generateTrialBalance,\n          className: \"px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(FileText, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2622,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Trial Balance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2623,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2618,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2602,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2539,\n      columnNumber: 7\n    }, this), isAddingEntry && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8 p-6 bg-gray-50 rounded-lg border\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold mb-4\",\n        children: \"Add Manual Journal Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2631,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Date *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2635,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: newEntry.date,\n            onChange: e => setNewEntry({\n              ...newEntry,\n              date: e.target.value\n            }),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2636,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2634,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Description *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2644,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newEntry.description,\n            onChange: e => setNewEntry({\n              ...newEntry,\n              description: e.target.value\n            }),\n            placeholder: \"Enter description\",\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2645,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2643,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Reference\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2654,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newEntry.reference,\n            onChange: e => setNewEntry({\n              ...newEntry,\n              reference: e.target.value\n            }),\n            placeholder: \"Reference number\",\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2655,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2653,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2633,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700 mb-2\",\n          children: \"Journal Entry Lines\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2667,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-3\",\n          children: newEntry.entries.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-12 gap-2 items-center bg-white p-3 rounded border\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-span-4\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: entry.accountId,\n                onChange: e => updateEntryLine(index, 'accountId', e.target.value),\n                className: \"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Account\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2677,\n                  columnNumber: 23\n                }, this), accounts.map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: account.id,\n                  children: [account.code, \" - \", account.name]\n                }, account.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2679,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2672,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2671,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-span-3\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: entry.description,\n                onChange: e => updateEntryLine(index, 'description', e.target.value),\n                placeholder: \"Description\",\n                className: \"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2686,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2685,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-span-2\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                step: \"0.01\",\n                value: entry.debit,\n                onChange: e => updateEntryLine(index, 'debit', e.target.value),\n                placeholder: \"Debit\",\n                className: \"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2695,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2694,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-span-2\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                step: \"0.01\",\n                value: entry.credit,\n                onChange: e => updateEntryLine(index, 'credit', e.target.value),\n                placeholder: \"Credit\",\n                className: \"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2705,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2704,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-span-1\",\n              children: newEntry.entries.length > 2 && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => removeEntryLine(index),\n                className: \"p-1 text-red-600 hover:bg-red-100 rounded\",\n                children: /*#__PURE__*/_jsxDEV(Trash2, {\n                  size: 14\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2720,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2716,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2714,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2670,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2668,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addEntryLine,\n            className: \"px-3 py-1 text-sm bg-gray-200 text-gray-700 rounded hover:bg-gray-300 flex items-center space-x-1\",\n            children: [/*#__PURE__*/_jsxDEV(Plus, {\n              size: 14\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2733,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Add Line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2734,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2729,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: [\"Total Debit: PKR \", totalDebit.toLocaleString('en-PK', {\n                  minimumFractionDigits: 2,\n                  maximumFractionDigits: 2\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2739,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mx-2\",\n                children: \"|\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2740,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: [\"Total Credit: PKR \", totalCredit.toLocaleString('en-PK', {\n                  minimumFractionDigits: 2,\n                  maximumFractionDigits: 2\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2741,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2738,\n              columnNumber: 17\n            }, this), entryIsBalanced ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center text-green-600\",\n              children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n                size: 16,\n                className: \"mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2745,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm\",\n                children: \"Balanced\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2746,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2744,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center text-red-600\",\n              children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n                size: 16,\n                className: \"mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2750,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm\",\n                children: \"Not Balanced\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2751,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2749,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2737,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2728,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2666,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveJournalEntry,\n          disabled: !entryIsBalanced,\n          className: \"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 disabled:bg-gray-400 flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(Save, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2764,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Save Entry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2765,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2759,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsAddingEntry(false),\n          className: \"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(X, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2771,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2772,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2767,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2758,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2630,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white border border-gray-200 rounded-lg overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-6 py-4 border-b border-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold text-gray-900\",\n          children: \"Journal Entries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2781,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-600 mt-1\",\n          children: [\"Showing \", filteredEntries.length, \" of \", journalEntries.length, \" entries\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2782,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2780,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"bg-gray-50\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Entry ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2791,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2794,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2797,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Reference\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2800,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Source\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2803,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2806,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2809,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2812,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2790,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2789,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            className: \"bg-white divide-y divide-gray-200\",\n            children: filteredEntries.map(entry => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"hover:bg-gray-50\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\",\n                children: entry.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2820,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900\",\n                children: entry.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2823,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 text-sm text-gray-900 max-w-xs truncate\",\n                children: entry.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2826,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900\",\n                children: entry.reference\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2829,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `px-2 py-1 text-xs font-medium rounded-full ${entry.source === 'POS Sales' ? 'bg-green-100 text-green-800' : entry.source === 'Manual' ? 'bg-orange-100 text-orange-800' : 'bg-blue-100 text-blue-800'}`,\n                  children: entry.source\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2833,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2832,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900\",\n                children: [\"PKR \", entry.totalDebit.toLocaleString('en-PK', {\n                  minimumFractionDigits: 2,\n                  maximumFractionDigits: 2\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2841,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `px-2 py-1 text-xs font-medium rounded-full ${entry.status === 'posted' ? 'bg-blue-100 text-blue-800' : 'bg-yellow-100 text-yellow-800'}`,\n                  children: entry.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2845,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2844,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm font-medium\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setSelectedEntry(entry),\n                  className: \"text-emerald-600 hover:text-emerald-900 mr-3\",\n                  children: /*#__PURE__*/_jsxDEV(Eye, {\n                    size: 16\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2856,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2852,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2851,\n                columnNumber: 19\n              }, this)]\n            }, entry.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2819,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2817,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2788,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2787,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2779,\n      columnNumber: 7\n    }, this), selectedEntry && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-6 py-4 border-b border-gray-200\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold text-gray-900\",\n              children: [\"Journal Entry Details - \", selectedEntry.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2872,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setSelectedEntry(null),\n              className: \"text-gray-400 hover:text-gray-600\",\n              children: /*#__PURE__*/_jsxDEV(X, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2879,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2875,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2871,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2870,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-6 py-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"text-sm font-medium text-gray-500\",\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2888,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-900\",\n                children: selectedEntry.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2889,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2887,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"text-sm font-medium text-gray-500\",\n                children: \"Reference\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2892,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-900\",\n                children: selectedEntry.reference\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2893,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2891,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"text-sm font-medium text-gray-500\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2896,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-900\",\n                children: selectedEntry.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2897,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2895,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"text-sm font-medium text-gray-500\",\n                children: \"Source\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2900,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `px-2 py-1 text-xs font-medium rounded-full ${selectedEntry.source === 'POS Sales' ? 'bg-green-100 text-green-800' : 'bg-orange-100 text-orange-800'}`,\n                children: selectedEntry.source\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2901,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2899,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2886,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-sm font-medium text-gray-700 mb-3\",\n              children: \"Account Entries\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2911,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"overflow-x-auto\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"w-full border border-gray-200 rounded\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  className: \"bg-gray-50\",\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-4 py-2 text-left text-xs font-medium text-gray-500\",\n                      children: \"Account\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2916,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-4 py-2 text-left text-xs font-medium text-gray-500\",\n                      children: \"Description\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2917,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-4 py-2 text-right text-xs font-medium text-gray-500\",\n                      children: \"Debit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2918,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-4 py-2 text-right text-xs font-medium text-gray-500\",\n                      children: \"Credit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2919,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2915,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2914,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  className: \"divide-y divide-gray-200\",\n                  children: selectedEntry.entries.map((entryLine, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 text-sm text-gray-900\",\n                      children: getAccountName(entryLine.accountId)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2925,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 text-sm text-gray-600\",\n                      children: entryLine.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2928,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 text-sm text-gray-900 text-right\",\n                      children: entryLine.debit > 0 ? `${entryLine.debit.toFixed(2)}` : '-'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2931,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 text-sm text-gray-900 text-right\",\n                      children: entryLine.credit > 0 ? `${entryLine.credit.toFixed(2)}` : '-'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2934,\n                      columnNumber: 27\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2924,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2922,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n                  className: \"bg-gray-50\",\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      colSpan: \"2\",\n                      className: \"px-4 py-2 text-sm font-medium text-gray-900\",\n                      children: \"Totals:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2942,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 text-sm font-bold text-gray-900 text-right\",\n                      children: [\"PKR \", selectedEntry.totalDebit.toLocaleString('en-PK', {\n                        minimumFractionDigits: 2,\n                        maximumFractionDigits: 2\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2945,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 text-sm font-bold text-gray-900 text-right\",\n                      children: [\"PKR \", selectedEntry.totalCredit.toLocaleString('en-PK', {\n                        minimumFractionDigits: 2,\n                        maximumFractionDigits: 2\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2948,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2941,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2940,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2913,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2912,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2910,\n            columnNumber: 15\n          }, this), selectedEntry.originalOrder && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6 p-4 bg-gray-50 rounded-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-sm font-medium text-gray-700 mb-3\",\n              children: \"Original Sales Order Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2960,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium text-gray-500\",\n                  children: \"Order ID:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2963,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-900\",\n                  children: selectedEntry.originalOrder.orderId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2964,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2962,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium text-gray-500\",\n                  children: \"Status:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2967,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-900\",\n                  children: selectedEntry.originalOrder.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2968,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2966,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium text-gray-500\",\n                  children: \"Payment Status:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2971,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-900\",\n                  children: selectedEntry.originalOrder.paid ? 'Paid' : 'Unpaid'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2972,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2970,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium text-gray-500\",\n                  children: \"Fulfilled:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2975,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-900\",\n                  children: selectedEntry.originalOrder.fulfilled ? 'Yes' : 'No'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2976,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2974,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2961,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium text-gray-500\",\n                children: \"Line Items:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2982,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2 space-y-2\",\n                children: selectedEntry.originalOrder.lineItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm bg-white p-2 rounded border\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-medium\",\n                    children: item.productName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2986,\n                    columnNumber: 27\n                  }, this), \" - Qty: \", item.quantity, \", Price: PKR \", parseFloat(item.price).toLocaleString('en-PK', {\n                    minimumFractionDigits: 2,\n                    maximumFractionDigits: 2\n                  }), \", Total: PKR \", parseFloat(item.total).toLocaleString('en-PK', {\n                    minimumFractionDigits: 2,\n                    maximumFractionDigits: 2\n                  }), item.taxAmount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-gray-500\",\n                    children: [\" (Tax: PKR \", parseFloat(item.taxAmount).toLocaleString('en-PK', {\n                      minimumFractionDigits: 2,\n                      maximumFractionDigits: 2\n                    }), \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2989,\n                    columnNumber: 50\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2985,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2983,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2981,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2959,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-gray-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Created: \", new Date(selectedEntry.createdAt).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2999,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Status: \", selectedEntry.status]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3000,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Type: \", selectedEntry.transactionType]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3001,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2998,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2884,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2869,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2868,\n      columnNumber: 9\n    }, this), showTrialBalance && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg max-w-5xl w-full max-h-[90vh] overflow-y-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-6 py-4 border-b border-gray-200\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold text-gray-900\",\n              children: [\"Trial Balance - As of \", new Date().toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3014,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  // Export functionality would go here\n                  alert('Export functionality would be implemented here');\n                },\n                className: \"px-3 py-1 bg-emerald-600 text-white rounded text-sm hover:bg-emerald-700 flex items-center space-x-1\",\n                children: [/*#__PURE__*/_jsxDEV(Download, {\n                  size: 14\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3025,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Export\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3026,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3018,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setShowTrialBalance(false),\n                className: \"text-gray-400 hover:text-gray-600\",\n                children: /*#__PURE__*/_jsxDEV(X, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3032,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3028,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3017,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3013,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3012,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-6 py-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overflow-x-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"w-full\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                className: \"bg-gray-50\",\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                    children: \"Account Code\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3043,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                    children: \"Account Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3046,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                    children: \"Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3049,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                    children: \"Debit Total\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3052,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                    children: \"Credit Total\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3055,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                    children: \"Balance\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3058,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3042,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3041,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                className: \"bg-white divide-y divide-gray-200\",\n                children: trialBalance.map(account => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-4 py-4 whitespace-nowrap text-sm font-medium text-gray-900\",\n                    children: account.accountCode\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3066,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-4 py-4 whitespace-nowrap text-sm text-gray-900\",\n                    children: account.accountName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3069,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-4 py-4 whitespace-nowrap\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `px-2 py-1 text-xs font-medium rounded-full ${account.accountType === 'assets' ? 'bg-green-100 text-green-800' : account.accountType === 'liabilities' ? 'bg-red-100 text-red-800' : account.accountType === 'equity' ? 'bg-blue-100 text-blue-800' : account.accountType === 'revenue' ? 'bg-purple-100 text-purple-800' : 'bg-orange-100 text-orange-800'}`,\n                      children: account.accountType\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3073,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3072,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\",\n                    children: [\"PKR \", account.debit.toLocaleString('en-PK', {\n                      minimumFractionDigits: 2,\n                      maximumFractionDigits: 2\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3083,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\",\n                    children: [\"PKR \", account.credit.toLocaleString('en-PK', {\n                      minimumFractionDigits: 2,\n                      maximumFractionDigits: 2\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3086,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-4 py-4 whitespace-nowrap text-sm font-medium text-right\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: account.balance >= 0 ? 'text-green-600' : 'text-red-600',\n                      children: [\"PKR \", Math.abs(account.balance).toLocaleString('en-PK', {\n                        minimumFractionDigits: 2,\n                        maximumFractionDigits: 2\n                      }), account.balance < 0 && ' (CR)']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3090,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3089,\n                    columnNumber: 25\n                  }, this)]\n                }, account.accountId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3065,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3063,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n                className: \"bg-gray-50\",\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"3\",\n                    className: \"px-4 py-3 text-sm font-bold text-gray-900\",\n                    children: \"TOTALS:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3100,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-4 py-3 text-sm font-bold text-gray-900 text-right\",\n                    children: [\"PKR \", trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toLocaleString('en-PK', {\n                      minimumFractionDigits: 2,\n                      maximumFractionDigits: 2\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3103,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-4 py-3 text-sm font-bold text-gray-900 text-right\",\n                    children: [\"PKR \", trialBalance.reduce((sum, acc) => sum + acc.credit, 0).toLocaleString('en-PK', {\n                      minimumFractionDigits: 2,\n                      maximumFractionDigits: 2\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3106,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-4 py-3 text-sm font-bold text-gray-900 text-right\",\n                    children: [\"PKR \", Math.abs(trialBalance.reduce((sum, acc) => sum + acc.balance, 0)).toLocaleString('en-PK', {\n                      minimumFractionDigits: 2,\n                      maximumFractionDigits: 2\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3109,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3099,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3098,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3040,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3039,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 p-4 bg-green-50 border border-green-200 rounded-lg\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n                className: \"text-green-600 mr-2\",\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3120,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"font-medium text-green-800\",\n                  children: \"Trial Balance is Balanced\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3122,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-green-700\",\n                  children: [\"Total Debits = Total Credits = PKR \", trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toLocaleString('en-PK', {\n                    minimumFractionDigits: 2,\n                    maximumFractionDigits: 2\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3123,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3121,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3119,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3118,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3038,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3011,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3010,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8 grid grid-cols-1 md:grid-cols-3 gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-green-50 border border-green-200 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n            className: \"text-green-600 mr-2\",\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-medium text-green-800\",\n            children: \"POS API Integration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-green-700\",\n          children: \"Sales orders automatically create journal entries from live API data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-blue-50 border border-blue-200 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n            className: \"text-blue-600 mr-2\",\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-medium text-blue-800\",\n            children: \"Real-time Sync\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3149,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-blue-700\",\n          children: \"Journal entries updated automatically with each sales transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-orange-50 border border-orange-200 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(FileText, {\n            className: \"text-orange-600 mr-2\",\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-medium text-orange-800\",\n            children: \"Manual Entries\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3159,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-orange-700\",\n          children: \"Add adjustments and corrections with full double-entry validation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2479,\n    columnNumber: 5\n  }, this);\n};\n_s(GeneralLedger, \"vBYaTeePH84cPZgOTM+1doWEBNQ=\");\n_c = GeneralLedger;\nexport default GeneralLedger;\nvar _c;\n$RefreshReg$(_c, \"GeneralLedger\");","map":{"version":3,"names":["React","useState","useEffect","Book","Plus","Filter","Search","Calendar","FileText","Edit","Trash2","Save","X","AlertCircle","CheckCircle","DollarSign","TrendingUp","Eye","Download","RefreshCw","jsxDEV","_jsxDEV","GeneralLedger","_s","journalEntries","setJournalEntries","accounts","setAccounts","filteredEntries","setFilteredEntries","selectedEntry","setSelectedEntry","isAddingEntry","setIsAddingEntry","loading","setLoading","filters","setFilters","dateFrom","dateTo","accountId","transactionType","searchTerm","trialBalance","setTrialBalance","showTrialBalance","setShowTrialBalance","newEntry","setNewEntry","date","Date","toISOString","split","description","reference","entries","debit","credit","chartOfAccounts","id","code","name","type","API_BASE_URL","loadJournalEntriesFromAPI","filterEntries","fetchOrderData","response","fetch","ok","Error","status","data","json","error","console","salesOrders","completedOrders","filter","order","paid","fulfilled","journalEntriesFromSales","map","convertSalesOrderToJournalEntry","entry","manualEntries","JSON","parse","localStorage","getItem","allEntries","log","length","loadSampleJournalEntries","subTotal","parseFloat","taxAmount","total","push","accountName","orderId","lineItems","item","productName","join","taxRate","totalCOGS","forEach","costPrice","quantity","itemCOGS","totalDebit","reduce","sum","totalCredit","formatDateFromCreatedAt","createdAt","source","Math","round","originalOrder","parts","padStart","sampleEntries","filtered","some","e","term","toLowerCase","includes","generateTrialBalance","balances","account","accountCode","accountType","balance","entryLine","Object","values","trialBalanceData","sort","a","b","localeCompare","addEntryLine","removeEntryLine","index","updatedEntries","_","i","updateEntryLine","field","value","calculateTotals","isBalanced","abs","saveJournalEntry","every","alert","entriesWithNames","_accounts$find","find","acc","journalEntry","now","existingManualEntries","updatedManualEntries","setItem","stringify","getAccountName","entryIsBalanced","className","children","fileName","_jsxFileName","lineNumber","columnNumber","size","toLocaleString","minimumFractionDigits","maximumFractionDigits","onChange","target","placeholder","onClick","disabled","step","toFixed","colSpan","price","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/Logic-Unit/my-account/src/pages/GeneralLedger.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { \r\n//   Book, \r\n//   Plus, \r\n//   Filter, \r\n//   Search, \r\n//   Calendar, \r\n//   FileText, \r\n//   Edit, \r\n//   Trash2, \r\n//   Save, \r\n//   X, \r\n//   AlertCircle,\r\n//   CheckCircle,\r\n//   DollarSign,\r\n//   TrendingUp,\r\n//   Eye,\r\n//   Download\r\n// } from 'lucide-react';\r\n\r\n// const GeneralLedger = () => {\r\n//   const [journalEntries, setJournalEntries] = useState([]);\r\n//   const [accounts, setAccounts] = useState([]);\r\n//   const [filteredEntries, setFilteredEntries] = useState([]);\r\n//   const [selectedEntry, setSelectedEntry] = useState(null);\r\n//   const [isAddingEntry, setIsAddingEntry] = useState(false);\r\n//   const [filters, setFilters] = useState({\r\n//     dateFrom: '',\r\n//     dateTo: '',\r\n//     accountId: '',\r\n//     transactionType: 'all',\r\n//     searchTerm: ''\r\n//   });\r\n//   const [trialBalance, setTrialBalance] = useState([]);\r\n//   const [showTrialBalance, setShowTrialBalance] = useState(false);\r\n//   const [newEntry, setNewEntry] = useState({\r\n//     date: new Date().toISOString().split('T')[0],\r\n//     description: '',\r\n//     reference: '',\r\n//     entries: [\r\n//       { accountId: '', debit: 0, credit: 0, description: '' },\r\n//       { accountId: '', debit: 0, credit: 0, description: '' }\r\n//     ]\r\n//   });\r\n\r\n//   // Sample Chart of Accounts\r\n//   const chartOfAccounts = [\r\n//     { id: '1111', code: '1111', name: 'Petty Cash', type: 'assets' },\r\n//     { id: '1112', code: '1112', name: 'Bank - Main Account', type: 'assets' },\r\n//     { id: '1120', code: '1120', name: 'Accounts Receivable', type: 'assets' },\r\n//     { id: '1130', code: '1130', name: 'Inventory', type: 'assets' },\r\n//     { id: '2110', code: '2110', name: 'Accounts Payable', type: 'liabilities' },\r\n//     { id: '2130', code: '2130', name: 'Sales Tax Payable', type: 'liabilities' },\r\n//     { id: '4100', code: '4100', name: 'Sales Revenue - Medical', type: 'revenue' },\r\n//     { id: '5100', code: '5100', name: 'Cost of Goods Sold', type: 'expenses' },\r\n//     { id: '5200', code: '5200', name: 'Purchase Expenses', type: 'expenses' },\r\n//     { id: '5210', code: '5210', name: 'Office Supplies', type: 'expenses' }\r\n//   ];\r\n\r\n//   useEffect(() => {\r\n//     setAccounts(chartOfAccounts);\r\n//     loadSampleJournalEntries();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     filterEntries();\r\n//   }, [journalEntries, filters]);\r\n\r\n//   const loadSampleJournalEntries = () => {\r\n//     const sampleEntries = [\r\n//       {\r\n//         id: 'JE001',\r\n//         date: '2025-01-15',\r\n//         description: 'POS Sale #POS001 - Medical products',\r\n//         reference: 'POS001',\r\n//         transactionType: 'automatic',\r\n//         source: 'POS',\r\n//         status: 'posted',\r\n//         entries: [\r\n//           { accountId: '1111', accountName: 'Petty Cash', debit: 60.50, credit: 0, description: 'Cash received from customer' },\r\n//           { accountId: '4100', accountName: 'Sales Revenue - Medical', debit: 0, credit: 55.00, description: 'Revenue from medical products' },\r\n//           { accountId: '2130', accountName: 'Sales Tax Payable', debit: 0, credit: 5.50, description: 'Sales tax collected' },\r\n//           { accountId: '5100', accountName: 'Cost of Goods Sold', debit: 33.00, credit: 0, description: 'Cost of products sold' },\r\n//           { accountId: '1130', accountName: 'Inventory', debit: 0, credit: 33.00, description: 'Inventory reduction' }\r\n//         ],\r\n//         totalDebit: 93.50,\r\n//         totalCredit: 93.50,\r\n//         createdAt: '2025-01-15T10:30:00Z'\r\n//       },\r\n//       {\r\n//         id: 'JE002',\r\n//         date: '2025-01-14',\r\n//         description: 'Purchase Order #PO002 - Medical inventory',\r\n//         reference: 'PO002',\r\n//         transactionType: 'automatic',\r\n//         source: 'Purchase',\r\n//         status: 'posted',\r\n//         entries: [\r\n//           { accountId: '1130', accountName: 'Inventory', debit: 350.00, credit: 0, description: 'Medical products purchased' },\r\n//           { accountId: '2110', accountName: 'Accounts Payable', debit: 0, credit: 350.00, description: 'Amount owed to Medical Supply Co.' }\r\n//         ],\r\n//         totalDebit: 350.00,\r\n//         totalCredit: 350.00,\r\n//         createdAt: '2025-01-14T14:20:00Z'\r\n//       },\r\n//       {\r\n//         id: 'JE003',\r\n//         date: '2025-01-13',\r\n//         description: 'Manual adjustment - Inventory count variance',\r\n//         reference: 'ADJ001',\r\n//         transactionType: 'manual',\r\n//         source: 'Manual',\r\n//         status: 'posted',\r\n//         entries: [\r\n//           { accountId: '1130', accountName: 'Inventory', debit: 25.00, credit: 0, description: 'Inventory adjustment - undercount' },\r\n//           { accountId: '5200', accountName: 'Purchase Expenses', debit: 0, credit: 25.00, description: 'Adjustment to purchase variance' }\r\n//         ],\r\n//         totalDebit: 25.00,\r\n//         totalCredit: 25.00,\r\n//         createdAt: '2025-01-13T16:45:00Z'\r\n//       },\r\n//       {\r\n//         id: 'JE004',\r\n//         date: '2025-01-15',\r\n//         description: 'POS Sale #POS002 - Medical products',\r\n//         reference: 'POS002',\r\n//         transactionType: 'automatic',\r\n//         source: 'POS',\r\n//         status: 'posted',\r\n//         entries: [\r\n//           { accountId: '1112', accountName: 'Bank - Main Account', debit: 85.00, credit: 0, description: 'Card payment received' },\r\n//           { accountId: '4100', accountName: 'Sales Revenue - Medical', debit: 0, credit: 77.27, description: 'Revenue from medical products' },\r\n//           { accountId: '2130', accountName: 'Sales Tax Payable', debit: 0, credit: 7.73, description: 'Sales tax collected' },\r\n//           { accountId: '5100', accountName: 'Cost of Goods Sold', debit: 46.36, credit: 0, description: 'Cost of products sold' },\r\n//           { accountId: '1130', accountName: 'Inventory', debit: 0, credit: 46.36, description: 'Inventory reduction' }\r\n//         ],\r\n//         totalDebit: 131.36,\r\n//         totalCredit: 131.36,\r\n//         createdAt: '2025-01-15T15:20:00Z'\r\n//       }\r\n//     ];\r\n\r\n//     setJournalEntries(sampleEntries);\r\n//   };\r\n\r\n//   const filterEntries = () => {\r\n//     let filtered = [...journalEntries];\r\n\r\n//     if (filters.dateFrom) {\r\n//       filtered = filtered.filter(entry => entry.date >= filters.dateFrom);\r\n//     }\r\n//     if (filters.dateTo) {\r\n//       filtered = filtered.filter(entry => entry.date <= filters.dateTo);\r\n//     }\r\n//     if (filters.accountId) {\r\n//       filtered = filtered.filter(entry => \r\n//         entry.entries.some(e => e.accountId === filters.accountId)\r\n//       );\r\n//     }\r\n//     if (filters.transactionType !== 'all') {\r\n//       filtered = filtered.filter(entry => entry.transactionType === filters.transactionType);\r\n//     }\r\n//     if (filters.searchTerm) {\r\n//       const term = filters.searchTerm.toLowerCase();\r\n//       filtered = filtered.filter(entry => \r\n//         entry.description.toLowerCase().includes(term) ||\r\n//         entry.reference.toLowerCase().includes(term) ||\r\n//         entry.entries.some(e => e.description.toLowerCase().includes(term))\r\n//       );\r\n//     }\r\n\r\n//     setFilteredEntries(filtered);\r\n//   };\r\n\r\n//   const generateTrialBalance = () => {\r\n//     const balances = {};\r\n    \r\n//     // Initialize all accounts\r\n//     chartOfAccounts.forEach(account => {\r\n//       balances[account.id] = {\r\n//         accountId: account.id,\r\n//         accountCode: account.code,\r\n//         accountName: account.name,\r\n//         accountType: account.type,\r\n//         debit: 0,\r\n//         credit: 0,\r\n//         balance: 0\r\n//       };\r\n//     });\r\n\r\n//     // Calculate balances from journal entries\r\n//     journalEntries.forEach(entry => {\r\n//       if (entry.status === 'posted') {\r\n//         entry.entries.forEach(entryLine => {\r\n//           if (balances[entryLine.accountId]) {\r\n//             balances[entryLine.accountId].debit += entryLine.debit;\r\n//             balances[entryLine.accountId].credit += entryLine.credit;\r\n//           }\r\n//         });\r\n//       }\r\n//     });\r\n\r\n//     // Calculate net balances\r\n//     Object.values(balances).forEach(account => {\r\n//       if (account.accountType === 'assets' || account.accountType === 'expenses') {\r\n//         account.balance = account.debit - account.credit;\r\n//       } else {\r\n//         account.balance = account.credit - account.debit;\r\n//       }\r\n//     });\r\n\r\n//     const trialBalanceData = Object.values(balances)\r\n//       .filter(account => account.debit !== 0 || account.credit !== 0)\r\n//       .sort((a, b) => a.accountCode.localeCompare(b.accountCode));\r\n\r\n//     setTrialBalance(trialBalanceData);\r\n//     setShowTrialBalance(true);\r\n//   };\r\n\r\n//   const addEntryLine = () => {\r\n//     setNewEntry({\r\n//       ...newEntry,\r\n//       entries: [...newEntry.entries, { accountId: '', debit: 0, credit: 0, description: '' }]\r\n//     });\r\n//   };\r\n\r\n//   const removeEntryLine = (index) => {\r\n//     if (newEntry.entries.length > 2) {\r\n//       const updatedEntries = newEntry.entries.filter((_, i) => i !== index);\r\n//       setNewEntry({ ...newEntry, entries: updatedEntries });\r\n//     }\r\n//   };\r\n\r\n//   const updateEntryLine = (index, field, value) => {\r\n//     const updatedEntries = [...newEntry.entries];\r\n//     updatedEntries[index] = { ...updatedEntries[index], [field]: value };\r\n//     setNewEntry({ ...newEntry, entries: updatedEntries });\r\n//   };\r\n\r\n//   const calculateTotals = (entries) => {\r\n//     const totalDebit = entries.reduce((sum, entry) => sum + (parseFloat(entry.debit) || 0), 0);\r\n//     const totalCredit = entries.reduce((sum, entry) => sum + (parseFloat(entry.credit) || 0), 0);\r\n//     return { totalDebit, totalCredit };\r\n//   };\r\n\r\n//   const isBalanced = (entries) => {\r\n//     const { totalDebit, totalCredit } = calculateTotals(entries);\r\n//     return Math.abs(totalDebit - totalCredit) < 0.01;\r\n//   };\r\n\r\n//   const saveJournalEntry = () => {\r\n//     if (!newEntry.description || !newEntry.entries.every(e => e.accountId)) {\r\n//       alert('Please fill in all required fields');\r\n//       return;\r\n//     }\r\n\r\n//     if (!isBalanced(newEntry.entries)) {\r\n//       alert('Journal entry must be balanced - total debits must equal total credits');\r\n//       return;\r\n//     }\r\n\r\n//     const { totalDebit, totalCredit } = calculateTotals(newEntry.entries);\r\n    \r\n//     // Add account names to entries\r\n//     const entriesWithNames = newEntry.entries.map(entry => ({\r\n//       ...entry,\r\n//       accountName: accounts.find(acc => acc.id === entry.accountId)?.name || '',\r\n//       debit: parseFloat(entry.debit) || 0,\r\n//       credit: parseFloat(entry.credit) || 0\r\n//     }));\r\n\r\n//     const journalEntry = {\r\n//       id: `JE${String(journalEntries.length + 1).padStart(3, '0')}`,\r\n//       date: newEntry.date,\r\n//       description: newEntry.description,\r\n//       reference: newEntry.reference || `MAN${Date.now()}`,\r\n//       transactionType: 'manual',\r\n//       source: 'Manual',\r\n//       status: 'posted',\r\n//       entries: entriesWithNames,\r\n//       totalDebit,\r\n//       totalCredit,\r\n//       createdAt: new Date().toISOString()\r\n//     };\r\n\r\n//     setJournalEntries([...journalEntries, journalEntry]);\r\n    \r\n//     // Reset form\r\n//     setNewEntry({\r\n//       date: new Date().toISOString().split('T')[0],\r\n//       description: '',\r\n//       reference: '',\r\n//       entries: [\r\n//         { accountId: '', debit: 0, credit: 0, description: '' },\r\n//         { accountId: '', debit: 0, credit: 0, description: '' }\r\n//       ]\r\n//     });\r\n//     setIsAddingEntry(false);\r\n//   };\r\n\r\n//   const getAccountName = (accountId) => {\r\n//     const account = accounts.find(acc => acc.id === accountId);\r\n//     return account ? `${account.code} - ${account.name}` : '';\r\n//   };\r\n\r\n//   const { totalDebit, totalCredit } = calculateTotals(newEntry.entries);\r\n//   const entryIsBalanced = isBalanced(newEntry.entries);\r\n\r\n//   return (\r\n//     <div className=\"max-w-7xl mx-auto p-6 bg-white\">\r\n//       {/* Header */}\r\n//       <div className=\"mb-8\">\r\n//         <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\r\n//           <Book className=\"mr-3 text-emerald-600\" />\r\n//           General Ledger\r\n//         </h1>\r\n//         <p className=\"text-gray-600\">Real-time transaction recording and journal entry management</p>\r\n//       </div>\r\n\r\n//       {/* Quick Stats */}\r\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\r\n//         <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-blue-600 text-sm font-medium\">Total Entries</p>\r\n//               <p className=\"text-2xl font-bold text-blue-900\">{journalEntries.length}</p>\r\n//             </div>\r\n//             <FileText className=\"text-blue-600\" size={24} />\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"bg-green-50 p-4 rounded-lg border border-green-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-green-600 text-sm font-medium\">Automatic Entries</p>\r\n//               <p className=\"text-2xl font-bold text-green-900\">\r\n//                 {journalEntries.filter(e => e.transactionType === 'automatic').length}\r\n//               </p>\r\n//             </div>\r\n//             <TrendingUp className=\"text-green-600\" size={24} />\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"bg-orange-50 p-4 rounded-lg border border-orange-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-orange-600 text-sm font-medium\">Manual Entries</p>\r\n//               <p className=\"text-2xl font-bold text-orange-900\">\r\n//                 {journalEntries.filter(e => e.transactionType === 'manual').length}\r\n//               </p>\r\n//             </div>\r\n//             <Edit className=\"text-orange-600\" size={24} />\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"bg-purple-50 p-4 rounded-lg border border-purple-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-purple-600 text-sm font-medium\">Total Value</p>\r\n//               <p className=\"text-2xl font-bold text-purple-900\">\r\n//                 ${journalEntries.reduce((sum, entry) => sum + entry.totalDebit, 0).toFixed(2)}\r\n//               </p>\r\n//             </div>\r\n//             <DollarSign className=\"text-purple-600\" size={24} />\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Controls */}\r\n//       <div className=\"flex flex-wrap items-center justify-between gap-4 mb-6\">\r\n//         <div className=\"flex flex-wrap items-center gap-4\">\r\n//           {/* Date Filters */}\r\n//           <div className=\"flex items-center space-x-2\">\r\n//             <Calendar size={16} className=\"text-gray-400\" />\r\n//             <input\r\n//               type=\"date\"\r\n//               value={filters.dateFrom}\r\n//               onChange={(e) => setFilters({ ...filters, dateFrom: e.target.value })}\r\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               placeholder=\"From\"\r\n//             />\r\n//             <span className=\"text-gray-500\">to</span>\r\n//             <input\r\n//               type=\"date\"\r\n//               value={filters.dateTo}\r\n//               onChange={(e) => setFilters({ ...filters, dateTo: e.target.value })}\r\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               placeholder=\"To\"\r\n//             />\r\n//           </div>\r\n\r\n//           {/* Account Filter */}\r\n//           <div className=\"relative\">\r\n//             <Filter className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n//             <select\r\n//               value={filters.accountId}\r\n//               onChange={(e) => setFilters({ ...filters, accountId: e.target.value })}\r\n//               className=\"pl-10 pr-8 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//             >\r\n//               <option value=\"\">All Accounts</option>\r\n//               {accounts.map(account => (\r\n//                 <option key={account.id} value={account.id}>\r\n//                   {account.code} - {account.name}\r\n//                 </option>\r\n//               ))}\r\n//             </select>\r\n//           </div>\r\n\r\n//           {/* Transaction Type Filter */}\r\n//           <select\r\n//             value={filters.transactionType}\r\n//             onChange={(e) => setFilters({ ...filters, transactionType: e.target.value })}\r\n//             className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//           >\r\n//             <option value=\"all\">All Types</option>\r\n//             <option value=\"automatic\">Automatic</option>\r\n//             <option value=\"manual\">Manual</option>\r\n//           </select>\r\n\r\n//           {/* Search */}\r\n//           <div className=\"relative\">\r\n//             <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Search entries...\"\r\n//               value={filters.searchTerm}\r\n//               onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\r\n//               className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//             />\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"flex space-x-3\">\r\n//           <button\r\n//             onClick={() => setIsAddingEntry(true)}\r\n//             className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\r\n//           >\r\n//             <Plus size={16} />\r\n//             <span>Add Entry</span>\r\n//           </button>\r\n//           <button\r\n//             onClick={generateTrialBalance}\r\n//             className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\"\r\n//           >\r\n//             <FileText size={16} />\r\n//             <span>Trial Balance</span>\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Journal Entry Form */}\r\n//       {isAddingEntry && (\r\n//         <div className=\"mb-8 p-6 bg-gray-50 rounded-lg border\">\r\n//           <h3 className=\"text-lg font-semibold mb-4\">Add Manual Journal Entry</h3>\r\n          \r\n//           <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\r\n//             <div>\r\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Date *</label>\r\n//               <input\r\n//                 type=\"date\"\r\n//                 value={newEntry.date}\r\n//                 onChange={(e) => setNewEntry({ ...newEntry, date: e.target.value })}\r\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               />\r\n//             </div>\r\n//             <div>\r\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Description *</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 value={newEntry.description}\r\n//                 onChange={(e) => setNewEntry({ ...newEntry, description: e.target.value })}\r\n//                 placeholder=\"Enter description\"\r\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               />\r\n//             </div>\r\n//             <div>\r\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Reference</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 value={newEntry.reference}\r\n//                 onChange={(e) => setNewEntry({ ...newEntry, reference: e.target.value })}\r\n//                 placeholder=\"Reference number\"\r\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               />\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* Entry Lines */}\r\n//           <div className=\"mb-4\">\r\n//             <label className=\"block text-sm font-medium text-gray-700 mb-2\">Journal Entry Lines</label>\r\n//             <div className=\"space-y-3\">\r\n//               {newEntry.entries.map((entry, index) => (\r\n//                 <div key={index} className=\"grid grid-cols-12 gap-2 items-center bg-white p-3 rounded border\">\r\n//                   <div className=\"col-span-4\">\r\n//                     <select\r\n//                       value={entry.accountId}\r\n//                       onChange={(e) => updateEntryLine(index, 'accountId', e.target.value)}\r\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                     >\r\n//                       <option value=\"\">Select Account</option>\r\n//                       {accounts.map(account => (\r\n//                         <option key={account.id} value={account.id}>\r\n//                           {account.code} - {account.name}\r\n//                         </option>\r\n//                       ))}\r\n//                     </select>\r\n//                   </div>\r\n//                   <div className=\"col-span-3\">\r\n//                     <input\r\n//                       type=\"text\"\r\n//                       value={entry.description}\r\n//                       onChange={(e) => updateEntryLine(index, 'description', e.target.value)}\r\n//                       placeholder=\"Description\"\r\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                     />\r\n//                   </div>\r\n//                   <div className=\"col-span-2\">\r\n//                     <input\r\n//                       type=\"number\"\r\n//                       step=\"0.01\"\r\n//                       value={entry.debit}\r\n//                       onChange={(e) => updateEntryLine(index, 'debit', e.target.value)}\r\n//                       placeholder=\"Debit\"\r\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                     />\r\n//                   </div>\r\n//                   <div className=\"col-span-2\">\r\n//                     <input\r\n//                       type=\"number\"\r\n//                       step=\"0.01\"\r\n//                       value={entry.credit}\r\n//                       onChange={(e) => updateEntryLine(index, 'credit', e.target.value)}\r\n//                       placeholder=\"Credit\"\r\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                     />\r\n//                   </div>\r\n//                   <div className=\"col-span-1\">\r\n//                     {newEntry.entries.length > 2 && (\r\n//                       <button\r\n//                         onClick={() => removeEntryLine(index)}\r\n//                         className=\"p-1 text-red-600 hover:bg-red-100 rounded\"\r\n//                       >\r\n//                         <Trash2 size={14} />\r\n//                       </button>\r\n//                     )}\r\n//                   </div>\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n\r\n//             <div className=\"flex justify-between items-center mt-3\">\r\n//               <button\r\n//                 onClick={addEntryLine}\r\n//                 className=\"px-3 py-1 text-sm bg-gray-200 text-gray-700 rounded hover:bg-gray-300 flex items-center space-x-1\"\r\n//               >\r\n//                 <Plus size={14} />\r\n//                 <span>Add Line</span>\r\n//               </button>\r\n\r\n//               <div className=\"flex items-center space-x-4\">\r\n//                 <div className=\"text-sm\">\r\n//                   <span className=\"font-medium\">Total Debit: ${totalDebit.toFixed(2)}</span>\r\n//                   <span className=\"mx-2\">|</span>\r\n//                   <span className=\"font-medium\">Total Credit: ${totalCredit.toFixed(2)}</span>\r\n//                 </div>\r\n//                 {entryIsBalanced ? (\r\n//                   <div className=\"flex items-center text-green-600\">\r\n//                     <CheckCircle size={16} className=\"mr-1\" />\r\n//                     <span className=\"text-sm\">Balanced</span>\r\n//                   </div>\r\n//                 ) : (\r\n//                   <div className=\"flex items-center text-red-600\">\r\n//                     <AlertCircle size={16} className=\"mr-1\" />\r\n//                     <span className=\"text-sm\">Not Balanced</span>\r\n//                   </div>\r\n//                 )}\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n\r\n//           <div className=\"flex space-x-3\">\r\n//             <button\r\n//               onClick={saveJournalEntry}\r\n//               disabled={!entryIsBalanced}\r\n//               className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 disabled:bg-gray-400 flex items-center space-x-2\"\r\n//             >\r\n//               <Save size={16} />\r\n//               <span>Save Entry</span>\r\n//             </button>\r\n//             <button\r\n//               onClick={() => setIsAddingEntry(false)}\r\n//               className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\"\r\n//             >\r\n//               <X size={16} />\r\n//               <span>Cancel</span>\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Journal Entries Table */}\r\n//       <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//         <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//           <h2 className=\"text-lg font-semibold text-gray-900\">Journal Entries</h2>\r\n//           <p className=\"text-sm text-gray-600 mt-1\">\r\n//             Showing {filteredEntries.length} of {journalEntries.length} entries\r\n//           </p>\r\n//         </div>\r\n\r\n//         <div className=\"overflow-x-auto\">\r\n//           <table className=\"w-full\">\r\n//             <thead className=\"bg-gray-50\">\r\n//               <tr>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Entry ID\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Date\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Description\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Reference\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Source\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Amount\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Status\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Actions\r\n//                 </th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//               {filteredEntries.map((entry) => (\r\n//                 <tr key={entry.id} className=\"hover:bg-gray-50\">\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n//                     {entry.id}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                     {entry.date}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 text-sm text-gray-900 max-w-xs truncate\">\r\n//                     {entry.description}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                     {entry.reference}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                       entry.transactionType === 'automatic' ? 'bg-green-100 text-green-800' : 'bg-orange-100 text-orange-800'\r\n//                     }`}>\r\n//                       {entry.source}\r\n//                     </span>\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                     ${entry.totalDebit.toFixed(2)}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                       entry.status === 'posted' ? 'bg-blue-100 text-blue-800' : 'bg-yellow-100 text-yellow-800'\r\n//                     }`}>\r\n//                       {entry.status}\r\n//                     </span>\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n//                     <button\r\n//                       onClick={() => setSelectedEntry(entry)}\r\n//                       className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\r\n//                     >\r\n//                       <Eye size={16} />\r\n//                     </button>\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Entry Details Modal */}\r\n//       {selectedEntry && (\r\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\r\n//                   Journal Entry Details - {selectedEntry.id}\r\n//                 </h3>\r\n//                 <button\r\n//                   onClick={() => setSelectedEntry(null)}\r\n//                   className=\"text-gray-400 hover:text-gray-600\"\r\n//                 >\r\n//                   <X size={20} />\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <div className=\"px-6 py-4\">\r\n//               {/* Entry Header */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\r\n//                 <div>\r\n//                   <label className=\"text-sm font-medium text-gray-500\">Date</label>\r\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.date}</p>\r\n//                 </div>\r\n//                 <div>\r\n//                   <label className=\"text-sm font-medium text-gray-500\">Reference</label>\r\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.reference}</p>\r\n//                 </div>\r\n//                 <div>\r\n//                   <label className=\"text-sm font-medium text-gray-500\">Description</label>\r\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.description}</p>\r\n//                 </div>\r\n//                 <div>\r\n//                   <label className=\"text-sm font-medium text-gray-500\">Source</label>\r\n//                   <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                     selectedEntry.transactionType === 'automatic' ? 'bg-green-100 text-green-800' : 'bg-orange-100 text-orange-800'\r\n//                   }`}>\r\n//                     {selectedEntry.source}\r\n//                   </span>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Entry Lines */}\r\n//               <div className=\"mb-6\">\r\n//                 <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Account Entries</h4>\r\n//                 <div className=\"overflow-x-auto\">\r\n//                   <table className=\"w-full border border-gray-200 rounded\">\r\n//                     <thead className=\"bg-gray-50\">\r\n//                       <tr>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Account</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Description</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Debit</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Credit</th>\r\n//                       </tr>\r\n//                     </thead>\r\n//                     <tbody className=\"divide-y divide-gray-200\">\r\n//                       {selectedEntry.entries.map((entryLine, index) => (\r\n//                         <tr key={index}>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900\">\r\n//                             {getAccountName(entryLine.accountId)}\r\n//                           </td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-600\">\r\n//                             {entryLine.description}\r\n//                           </td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">\r\n//                             {entryLine.debit > 0 ? `${entryLine.debit.toFixed(2)}` : '-'}\r\n//                           </td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">\r\n//                             {entryLine.credit > 0 ? `${entryLine.credit.toFixed(2)}` : '-'}\r\n//                           </td>\r\n//                         </tr>\r\n//                       ))}\r\n//                     </tbody>\r\n//                     <tfoot className=\"bg-gray-50\">\r\n//                       <tr>\r\n//                         <td colSpan=\"2\" className=\"px-4 py-2 text-sm font-medium text-gray-900\">\r\n//                           Totals:\r\n//                         </td>\r\n//                         <td className=\"px-4 py-2 text-sm font-bold text-gray-900 text-right\">\r\n//                           ${selectedEntry.totalDebit.toFixed(2)}\r\n//                         </td>\r\n//                         <td className=\"px-4 py-2 text-sm font-bold text-gray-900 text-right\">\r\n//                           ${selectedEntry.totalCredit.toFixed(2)}\r\n//                         </td>\r\n//                       </tr>\r\n//                     </tfoot>\r\n//                   </table>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Entry Metadata */}\r\n//               <div className=\"text-xs text-gray-500\">\r\n//                 <p>Created: {new Date(selectedEntry.createdAt).toLocaleString()}</p>\r\n//                 <p>Status: {selectedEntry.status}</p>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Trial Balance Modal */}\r\n//       {showTrialBalance && (\r\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-lg max-w-5xl w-full max-h-[90vh] overflow-y-auto\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\r\n//                   Trial Balance - As of {new Date().toLocaleDateString()}\r\n//                 </h3>\r\n//                 <div className=\"flex items-center space-x-2\">\r\n//                   <button\r\n//                     onClick={() => {\r\n//                       // Export functionality would go here\r\n//                       alert('Export functionality would be implemented here');\r\n//                     }}\r\n//                     className=\"px-3 py-1 bg-emerald-600 text-white rounded text-sm hover:bg-emerald-700 flex items-center space-x-1\"\r\n//                   >\r\n//                     <Download size={14} />\r\n//                     <span>Export</span>\r\n//                   </button>\r\n//                   <button\r\n//                     onClick={() => setShowTrialBalance(false)}\r\n//                     className=\"text-gray-400 hover:text-gray-600\"\r\n//                   >\r\n//                     <X size={20} />\r\n//                   </button>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <div className=\"px-6 py-4\">\r\n//               <div className=\"overflow-x-auto\">\r\n//                 <table className=\"w-full\">\r\n//                   <thead className=\"bg-gray-50\">\r\n//                     <tr>\r\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Account Code\r\n//                       </th>\r\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Account Name\r\n//                       </th>\r\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Type\r\n//                       </th>\r\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Debit Total\r\n//                       </th>\r\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Credit Total\r\n//                       </th>\r\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Balance\r\n//                       </th>\r\n//                     </tr>\r\n//                   </thead>\r\n//                   <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//                     {trialBalance.map((account) => (\r\n//                       <tr key={account.accountId}>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n//                           {account.accountCode}\r\n//                         </td>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                           {account.accountName}\r\n//                         </td>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap\">\r\n//                           <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                             account.accountType === 'assets' ? 'bg-green-100 text-green-800' :\r\n//                             account.accountType === 'liabilities' ? 'bg-red-100 text-red-800' :\r\n//                             account.accountType === 'equity' ? 'bg-blue-100 text-blue-800' :\r\n//                             account.accountType === 'revenue' ? 'bg-purple-100 text-purple-800' :\r\n//                             'bg-orange-100 text-orange-800'\r\n//                           }`}>\r\n//                             {account.accountType}\r\n//                           </span>\r\n//                         </td>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\r\n//                           ${account.debit.toFixed(2)}\r\n//                         </td>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\r\n//                           ${account.credit.toFixed(2)}\r\n//                         </td>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-right\">\r\n//                           <span className={account.balance >= 0 ? 'text-green-600' : 'text-red-600'}>\r\n//                             ${Math.abs(account.balance).toFixed(2)}\r\n//                             {account.balance < 0 && ' (CR)'}\r\n//                           </span>\r\n//                         </td>\r\n//                       </tr>\r\n//                     ))}\r\n//                   </tbody>\r\n//                   <tfoot className=\"bg-gray-50\">\r\n//                     <tr>\r\n//                       <td colSpan=\"3\" className=\"px-4 py-3 text-sm font-bold text-gray-900\">\r\n//                         TOTALS:\r\n//                       </td>\r\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\r\n//                         ${trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toFixed(2)}\r\n//                       </td>\r\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\r\n//                         ${trialBalance.reduce((sum, acc) => sum + acc.credit, 0).toFixed(2)}\r\n//                       </td>\r\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\r\n//                         ${Math.abs(trialBalance.reduce((sum, acc) => sum + acc.balance, 0)).toFixed(2)}\r\n//                       </td>\r\n//                     </tr>\r\n//                   </tfoot>\r\n//                 </table>\r\n//               </div>\r\n              \r\n//               {/* Trial Balance Validation */}\r\n//               <div className=\"mt-4 p-4 bg-green-50 border border-green-200 rounded-lg\">\r\n//                 <div className=\"flex items-center\">\r\n//                   <CheckCircle className=\"text-green-600 mr-2\" size={20} />\r\n//                   <div>\r\n//                     <h4 className=\"font-medium text-green-800\">Trial Balance is Balanced</h4>\r\n//                     <p className=\"text-sm text-green-700\">\r\n//                       Total Debits = Total Credits = ${trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toFixed(2)}\r\n//                     </p>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Integration Status */}\r\n//       <div className=\"mt-8 grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n//         <div className=\"p-4 bg-green-50 border border-green-200 rounded-lg\">\r\n//           <div className=\"flex items-center mb-2\">\r\n//             <CheckCircle className=\"text-green-600 mr-2\" size={16} />\r\n//             <h4 className=\"font-medium text-green-800\">POS Integration</h4>\r\n//           </div>\r\n//           <p className=\"text-sm text-green-700\">\r\n//             All sales transactions automatically create journal entries\r\n//           </p>\r\n//         </div>\r\n\r\n//         <div className=\"p-4 bg-green-50 border border-green-200 rounded-lg\">\r\n//           <div className=\"flex items-center mb-2\">\r\n//             <CheckCircle className=\"text-green-600 mr-2\" size={16} />\r\n//             <h4 className=\"font-medium text-green-800\">Purchase Integration</h4>\r\n//           </div>\r\n//           <p className=\"text-sm text-green-700\">\r\n//             Purchase orders automatically update accounts payable and inventory\r\n//           </p>\r\n//         </div>\r\n\r\n//         <div className=\"p-4 bg-blue-50 border border-blue-200 rounded-lg\">\r\n//           <div className=\"flex items-center mb-2\">\r\n//             <FileText className=\"text-blue-600 mr-2\" size={16} />\r\n//             <h4 className=\"font-medium text-blue-800\">Manual Entries</h4>\r\n//           </div>\r\n//           <p className=\"text-sm text-blue-700\">\r\n//             Add adjustments and corrections with full validation\r\n//           </p>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default GeneralLedger;\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { \r\n//   Book, \r\n//   Plus, \r\n//   Filter, \r\n//   Search, \r\n//   Calendar, \r\n//   FileText, \r\n//   Edit, \r\n//   Trash2, \r\n//   Save, \r\n//   X, \r\n//   AlertCircle,\r\n//   CheckCircle,\r\n//   DollarSign,\r\n//   TrendingUp,\r\n//   Eye,\r\n//   Download,\r\n//   RefreshCw\r\n// } from 'lucide-react';\r\n\r\n// const GeneralLedger = () => {\r\n//   const [journalEntries, setJournalEntries] = useState([]);\r\n//   const [accounts, setAccounts] = useState([]);\r\n//   const [filteredEntries, setFilteredEntries] = useState([]);\r\n//   const [selectedEntry, setSelectedEntry] = useState(null);\r\n//   const [isAddingEntry, setIsAddingEntry] = useState(false);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [filters, setFilters] = useState({\r\n//     dateFrom: '',\r\n//     dateTo: '',\r\n//     accountId: '',\r\n//     transactionType: 'all',\r\n//     searchTerm: ''\r\n//   });\r\n//   const [trialBalance, setTrialBalance] = useState([]);\r\n//   const [showTrialBalance, setShowTrialBalance] = useState(false);\r\n//   const [newEntry, setNewEntry] = useState({\r\n//     date: new Date().toISOString().split('T')[0],\r\n//     description: '',\r\n//     reference: '',\r\n//     entries: [\r\n//       { accountId: '', debit: 0, credit: 0, description: '' },\r\n//       { accountId: '', debit: 0, credit: 0, description: '' }\r\n//     ]\r\n//   });\r\n\r\n//   // Chart of Accounts\r\n//   const chartOfAccounts = [\r\n//     { id: '1111', code: '1111', name: 'Petty Cash', type: 'assets' },\r\n//     { id: '1112', code: '1112', name: 'Bank - Main Account', type: 'assets' },\r\n//     { id: '1120', code: '1120', name: 'Accounts Receivable', type: 'assets' },\r\n//     { id: '1130', code: '1130', name: 'Inventory', type: 'assets' },\r\n//     { id: '2110', code: '2110', name: 'Accounts Payable', type: 'liabilities' },\r\n//     { id: '2130', code: '2130', name: 'Sales Tax Payable', type: 'liabilities' },\r\n//     { id: '4100', code: '4100', name: 'Sales Revenue', type: 'revenue' },\r\n//     { id: '4110', code: '4110', name: 'Electronics Sales', type: 'revenue' },\r\n//     { id: '5100', code: '5100', name: 'Cost of Goods Sold', type: 'expenses' },\r\n//     { id: '5200', code: '5200', name: 'Purchase Expenses', type: 'expenses' }\r\n//   ];\r\n\r\n//   // API Configuration\r\n//   const API_BASE_URL = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/orders?start=0&size=200';\r\n\r\n//   useEffect(() => {\r\n//     setAccounts(chartOfAccounts);\r\n//     loadJournalEntriesFromAPI();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     filterEntries();\r\n//   }, [journalEntries, filters]);\r\n\r\n//   // Fetch Sales Orders from API and convert to Journal Entries\r\n//   const loadJournalEntriesFromAPI = async () => {\r\n//     setLoading(true);\r\n//     try {\r\n//       const response = await fetch(`${API_BASE_URL}/orders?start=0&size=200`);\r\n//       const salesOrders = await response.json();\r\n      \r\n//       // Convert sales orders to journal entries\r\n//       const journalEntriesFromSales = salesOrders.map(order => convertSalesOrderToJournalEntry(order));\r\n      \r\n//       // Load any manual journal entries from localStorage\r\n//       const manualEntries = JSON.parse(localStorage.getItem('manualJournalEntries') || '[]');\r\n      \r\n//       // Combine both types of entries\r\n//       const allEntries = [...journalEntriesFromSales, ...manualEntries];\r\n      \r\n//       setJournalEntries(allEntries);\r\n//     } catch (error) {\r\n//       console.error('Error loading sales orders:', error);\r\n//       // Fallback to sample data if API fails\r\n//       loadSampleJournalEntries();\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   // Convert Sales Order to Journal Entry\r\n//   const convertSalesOrderToJournalEntry = (order) => {\r\n//     const entries = [];\r\n//     const subTotal = order.subTotal || 0;\r\n//     const taxAmount = order.taxAmount || 0;\r\n//     const total = order.total || 0;\r\n    \r\n//     // Determine payment method - if paid, assume cash/bank\r\n//     if (order.paid && order.status === 'Closed') {\r\n//       // Cash/Bank Account (Debit)\r\n//       entries.push({\r\n//         accountId: '1111', // Petty Cash (assume cash payment)\r\n//         accountName: 'Petty Cash',\r\n//         debit: total,\r\n//         credit: 0,\r\n//         description: `Cash received from sale Order #${order.orderId}`\r\n//       });\r\n//     } else if (!order.paid) {\r\n//       // Accounts Receivable (Debit) for unpaid orders\r\n//       entries.push({\r\n//         accountId: '1120',\r\n//         accountName: 'Accounts Receivable',\r\n//         debit: total,\r\n//         credit: 0,\r\n//         description: `Credit sale Order #${order.orderId}`\r\n//       });\r\n//     }\r\n\r\n//     // Sales Revenue (Credit)\r\n//     if (subTotal > 0) {\r\n//       entries.push({\r\n//         accountId: '4110', // Electronics Sales\r\n//         accountName: 'Electronics Sales',\r\n//         debit: 0,\r\n//         credit: subTotal,\r\n//         description: `Revenue from Order #${order.orderId}`\r\n//       });\r\n//     }\r\n\r\n//     // Sales Tax Payable (Credit)\r\n//     if (taxAmount > 0) {\r\n//       entries.push({\r\n//         accountId: '2130',\r\n//         accountName: 'Sales Tax Payable',\r\n//         debit: 0,\r\n//         credit: taxAmount,\r\n//         description: `Tax collected on Order #${order.orderId}`\r\n//       });\r\n//     }\r\n\r\n//     // Cost of Goods Sold and Inventory reduction\r\n//     order.lineItems.forEach(item => {\r\n//       const costPrice = item.costPrice || 0;\r\n//       const quantity = item.quantity || 0;\r\n//       const totalCost = costPrice * quantity;\r\n\r\n//       if (totalCost > 0 && order.fulfilled) {\r\n//         // Cost of Goods Sold (Debit)\r\n//         entries.push({\r\n//           accountId: '5100',\r\n//           accountName: 'Cost of Goods Sold',\r\n//           debit: totalCost,\r\n//           credit: 0,\r\n//           description: `COGS for ${item.productName}`\r\n//         });\r\n\r\n//         // Inventory (Credit)\r\n//         entries.push({\r\n//           accountId: '1130',\r\n//           accountName: 'Inventory',\r\n//           debit: 0,\r\n//           credit: totalCost,\r\n//           description: `Inventory reduction - ${item.productName}`\r\n//         });\r\n//       }\r\n//     });\r\n\r\n//     // Calculate totals\r\n//     const totalDebit = entries.reduce((sum, entry) => sum + entry.debit, 0);\r\n//     const totalCredit = entries.reduce((sum, entry) => sum + entry.credit, 0);\r\n\r\n//     return {\r\n//       id: `JE-ORDER-${order.orderId}`,\r\n//       date: formatDateFromCreatedAt(order.createdAt),\r\n//       description: `Sales Order #${order.orderId} - ${order.lineItems.map(item => item.productName).join(', ')}`,\r\n//       reference: `ORDER-${order.orderId}`,\r\n//       transactionType: 'automatic',\r\n//       source: 'POS Sales',\r\n//       status: order.fulfilled ? 'posted' : 'pending',\r\n//       entries: entries,\r\n//       totalDebit: Math.round(totalDebit * 100) / 100,\r\n//       totalCredit: Math.round(totalCredit * 100) / 100,\r\n//       createdAt: order.createdAt,\r\n//       originalOrder: order // Keep reference to original order\r\n//     };\r\n//   };\r\n\r\n//   // Format date from API format (2025.08.18.10.08.54.569) to YYYY-MM-DD\r\n//   const formatDateFromCreatedAt = (createdAt) => {\r\n//     try {\r\n//       const parts = createdAt.split('.');\r\n//       if (parts.length >= 3) {\r\n//         return `${parts[0]}-${parts[1].padStart(2, '0')}-${parts[2].padStart(2, '0')}`;\r\n//       }\r\n//       return new Date().toISOString().split('T')[0];\r\n//     } catch (error) {\r\n//       return new Date().toISOString().split('T')[0];\r\n//     }\r\n//   };\r\n\r\n//   // Fallback sample data\r\n//   const loadSampleJournalEntries = () => {\r\n//     const sampleEntries = [\r\n//       {\r\n//         id: 'JE001',\r\n//         date: '2025-08-18',\r\n//         description: 'Sample POS Sale - Medical products',\r\n//         reference: 'POS001',\r\n//         transactionType: 'automatic',\r\n//         source: 'POS',\r\n//         status: 'posted',\r\n//         entries: [\r\n//           { accountId: '1111', accountName: 'Petty Cash', debit: 60.50, credit: 0, description: 'Cash received from customer' },\r\n//           { accountId: '4100', accountName: 'Sales Revenue', debit: 0, credit: 55.00, description: 'Revenue from medical products' },\r\n//           { accountId: '2130', accountName: 'Sales Tax Payable', debit: 0, credit: 5.50, description: 'Sales tax collected' }\r\n//         ],\r\n//         totalDebit: 60.50,\r\n//         totalCredit: 60.50,\r\n//         createdAt: '2025-08-18T10:30:00Z'\r\n//       }\r\n//     ];\r\n//     setJournalEntries(sampleEntries);\r\n//   };\r\n\r\n//   const filterEntries = () => {\r\n//     let filtered = [...journalEntries];\r\n\r\n//     if (filters.dateFrom) {\r\n//       filtered = filtered.filter(entry => entry.date >= filters.dateFrom);\r\n//     }\r\n//     if (filters.dateTo) {\r\n//       filtered = filtered.filter(entry => entry.date <= filters.dateTo);\r\n//     }\r\n//     if (filters.accountId) {\r\n//       filtered = filtered.filter(entry => \r\n//         entry.entries.some(e => e.accountId === filters.accountId)\r\n//       );\r\n//     }\r\n//     if (filters.transactionType !== 'all') {\r\n//       filtered = filtered.filter(entry => entry.transactionType === filters.transactionType);\r\n//     }\r\n//     if (filters.searchTerm) {\r\n//       const term = filters.searchTerm.toLowerCase();\r\n//       filtered = filtered.filter(entry => \r\n//         entry.description.toLowerCase().includes(term) ||\r\n//         entry.reference.toLowerCase().includes(term) ||\r\n//         entry.entries.some(e => e.description.toLowerCase().includes(term))\r\n//       );\r\n//     }\r\n\r\n//     setFilteredEntries(filtered);\r\n//   };\r\n\r\n//   const generateTrialBalance = () => {\r\n//     const balances = {};\r\n    \r\n//     // Initialize all accounts\r\n//     chartOfAccounts.forEach(account => {\r\n//       balances[account.id] = {\r\n//         accountId: account.id,\r\n//         accountCode: account.code,\r\n//         accountName: account.name,\r\n//         accountType: account.type,\r\n//         debit: 0,\r\n//         credit: 0,\r\n//         balance: 0\r\n//       };\r\n//     });\r\n\r\n//     // Calculate balances from journal entries\r\n//     journalEntries.forEach(entry => {\r\n//       if (entry.status === 'posted') {\r\n//         entry.entries.forEach(entryLine => {\r\n//           if (balances[entryLine.accountId]) {\r\n//             balances[entryLine.accountId].debit += entryLine.debit;\r\n//             balances[entryLine.accountId].credit += entryLine.credit;\r\n//           }\r\n//         });\r\n//       }\r\n//     });\r\n\r\n//     // Calculate net balances\r\n//     Object.values(balances).forEach(account => {\r\n//       if (account.accountType === 'assets' || account.accountType === 'expenses') {\r\n//         account.balance = account.debit - account.credit;\r\n//       } else {\r\n//         account.balance = account.credit - account.debit;\r\n//       }\r\n//     });\r\n\r\n//     const trialBalanceData = Object.values(balances)\r\n//       .filter(account => account.debit !== 0 || account.credit !== 0)\r\n//       .sort((a, b) => a.accountCode.localeCompare(b.accountCode));\r\n\r\n//     setTrialBalance(trialBalanceData);\r\n//     setShowTrialBalance(true);\r\n//   };\r\n\r\n//   const addEntryLine = () => {\r\n//     setNewEntry({\r\n//       ...newEntry,\r\n//       entries: [...newEntry.entries, { accountId: '', debit: 0, credit: 0, description: '' }]\r\n//     });\r\n//   };\r\n\r\n//   const removeEntryLine = (index) => {\r\n//     if (newEntry.entries.length > 2) {\r\n//       const updatedEntries = newEntry.entries.filter((_, i) => i !== index);\r\n//       setNewEntry({ ...newEntry, entries: updatedEntries });\r\n//     }\r\n//   };\r\n\r\n//   const updateEntryLine = (index, field, value) => {\r\n//     const updatedEntries = [...newEntry.entries];\r\n//     updatedEntries[index] = { ...updatedEntries[index], [field]: value };\r\n//     setNewEntry({ ...newEntry, entries: updatedEntries });\r\n//   };\r\n\r\n//   const calculateTotals = (entries) => {\r\n//     const totalDebit = entries.reduce((sum, entry) => sum + (parseFloat(entry.debit) || 0), 0);\r\n//     const totalCredit = entries.reduce((sum, entry) => sum + (parseFloat(entry.credit) || 0), 0);\r\n//     return { totalDebit, totalCredit };\r\n//   };\r\n\r\n//   const isBalanced = (entries) => {\r\n//     const { totalDebit, totalCredit } = calculateTotals(entries);\r\n//     return Math.abs(totalDebit - totalCredit) < 0.01;\r\n//   };\r\n\r\n//   const saveJournalEntry = () => {\r\n//     if (!newEntry.description || !newEntry.entries.every(e => e.accountId)) {\r\n//       alert('Please fill in all required fields');\r\n//       return;\r\n//     }\r\n\r\n//     if (!isBalanced(newEntry.entries)) {\r\n//       alert('Journal entry must be balanced - total debits must equal total credits');\r\n//       return;\r\n//     }\r\n\r\n//     const { totalDebit, totalCredit } = calculateTotals(newEntry.entries);\r\n    \r\n//     // Add account names to entries\r\n//     const entriesWithNames = newEntry.entries.map(entry => ({\r\n//       ...entry,\r\n//       accountName: accounts.find(acc => acc.id === entry.accountId)?.name || '',\r\n//       debit: parseFloat(entry.debit) || 0,\r\n//       credit: parseFloat(entry.credit) || 0\r\n//     }));\r\n\r\n//     const journalEntry = {\r\n//       id: `JE-MANUAL-${Date.now()}`,\r\n//       date: newEntry.date,\r\n//       description: newEntry.description,\r\n//       reference: newEntry.reference || `MAN${Date.now()}`,\r\n//       transactionType: 'manual',\r\n//       source: 'Manual',\r\n//       status: 'posted',\r\n//       entries: entriesWithNames,\r\n//       totalDebit,\r\n//       totalCredit,\r\n//       createdAt: new Date().toISOString()\r\n//     };\r\n\r\n//     // Save manual entries to localStorage\r\n//     const existingManualEntries = JSON.parse(localStorage.getItem('manualJournalEntries') || '[]');\r\n//     const updatedManualEntries = [...existingManualEntries, journalEntry];\r\n//     localStorage.setItem('manualJournalEntries', JSON.stringify(updatedManualEntries));\r\n\r\n//     // Update state\r\n//     setJournalEntries([...journalEntries, journalEntry]);\r\n    \r\n//     // Reset form\r\n//     setNewEntry({\r\n//       date: new Date().toISOString().split('T')[0],\r\n//       description: '',\r\n//       reference: '',\r\n//       entries: [\r\n//         { accountId: '', debit: 0, credit: 0, description: '' },\r\n//         { accountId: '', debit: 0, credit: 0, description: '' }\r\n//       ]\r\n//     });\r\n//     setIsAddingEntry(false);\r\n//   };\r\n\r\n//   const getAccountName = (accountId) => {\r\n//     const account = accounts.find(acc => acc.id === accountId);\r\n//     return account ? `${account.code} - ${account.name}` : '';\r\n//   };\r\n\r\n//   const { totalDebit, totalCredit } = calculateTotals(newEntry.entries);\r\n//   const entryIsBalanced = isBalanced(newEntry.entries);\r\n\r\n//   return (\r\n//     <div className=\"max-w-7xl mx-auto p-6 bg-white\">\r\n//       {/* Header */}\r\n//       <div className=\"mb-8\">\r\n//         <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\r\n//           <Book className=\"mr-3 text-emerald-600\" />\r\n//           General Ledger\r\n//         </h1>\r\n//         <p className=\"text-gray-600\">Real-time transaction recording and journal entry management</p>\r\n//       </div>\r\n\r\n//       {/* Quick Stats */}\r\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\r\n//         <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-blue-600 text-sm font-medium\">Total Entries</p>\r\n//               <p className=\"text-2xl font-bold text-blue-900\">{journalEntries.length}</p>\r\n//             </div>\r\n//             <FileText className=\"text-blue-600\" size={24} />\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"bg-green-50 p-4 rounded-lg border border-green-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-green-600 text-sm font-medium\">POS Entries</p>\r\n//               <p className=\"text-2xl font-bold text-green-900\">\r\n//                 {journalEntries.filter(e => e.source === 'POS Sales').length}\r\n//               </p>\r\n//             </div>\r\n//             <TrendingUp className=\"text-green-600\" size={24} />\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"bg-orange-50 p-4 rounded-lg border border-orange-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-orange-600 text-sm font-medium\">Manual Entries</p>\r\n//               <p className=\"text-2xl font-bold text-orange-900\">\r\n//                 {journalEntries.filter(e => e.transactionType === 'manual').length}\r\n//               </p>\r\n//             </div>\r\n//             <Edit className=\"text-orange-600\" size={24} />\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"bg-purple-50 p-4 rounded-lg border border-purple-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-purple-600 text-sm font-medium\">Total Value</p>\r\n//               <p className=\"text-2xl font-bold text-purple-900\">\r\n//                 ${journalEntries.reduce((sum, entry) => sum + entry.totalDebit, 0).toFixed(2)}\r\n//               </p>\r\n//             </div>\r\n//             <DollarSign className=\"text-purple-600\" size={24} />\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Controls */}\r\n//       <div className=\"flex flex-wrap items-center justify-between gap-4 mb-6\">\r\n//         <div className=\"flex flex-wrap items-center gap-4\">\r\n//           {/* Date Filters */}\r\n//           <div className=\"flex items-center space-x-2\">\r\n//             <Calendar size={16} className=\"text-gray-400\" />\r\n//             <input\r\n//               type=\"date\"\r\n//               value={filters.dateFrom}\r\n//               onChange={(e) => setFilters({ ...filters, dateFrom: e.target.value })}\r\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               placeholder=\"From\"\r\n//             />\r\n//             <span className=\"text-gray-500\">to</span>\r\n//             <input\r\n//               type=\"date\"\r\n//               value={filters.dateTo}\r\n//               onChange={(e) => setFilters({ ...filters, dateTo: e.target.value })}\r\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               placeholder=\"To\"\r\n//             />\r\n//           </div>\r\n\r\n//           {/* Account Filter */}\r\n//           <div className=\"relative\">\r\n//             <Filter className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n//             <select\r\n//               value={filters.accountId}\r\n//               onChange={(e) => setFilters({ ...filters, accountId: e.target.value })}\r\n//               className=\"pl-10 pr-8 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//             >\r\n//               <option value=\"\">All Accounts</option>\r\n//               {accounts.map(account => (\r\n//                 <option key={account.id} value={account.id}>\r\n//                   {account.code} - {account.name}\r\n//                 </option>\r\n//               ))}\r\n//             </select>\r\n//           </div>\r\n\r\n//           {/* Transaction Type Filter */}\r\n//           <select\r\n//             value={filters.transactionType}\r\n//             onChange={(e) => setFilters({ ...filters, transactionType: e.target.value })}\r\n//             className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//           >\r\n//             <option value=\"all\">All Types</option>\r\n//             <option value=\"automatic\">POS Sales</option>\r\n//             <option value=\"manual\">Manual</option>\r\n//           </select>\r\n\r\n//           {/* Search */}\r\n//           <div className=\"relative\">\r\n//             <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Search entries...\"\r\n//               value={filters.searchTerm}\r\n//               onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\r\n//               className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//             />\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"flex space-x-3\">\r\n//           <button\r\n//             onClick={loadJournalEntriesFromAPI}\r\n//             disabled={loading}\r\n//             className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2 disabled:bg-gray-400\"\r\n//           >\r\n//             {loading ? <RefreshCw className=\"animate-spin\" size={16} /> : <RefreshCw size={16} />}\r\n//             <span>Refresh from API</span>\r\n//           </button>\r\n//           <button\r\n//             onClick={() => setIsAddingEntry(true)}\r\n//             className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\r\n//           >\r\n//             <Plus size={16} />\r\n//             <span>Add Entry</span>\r\n//           </button>\r\n//           <button\r\n//             onClick={generateTrialBalance}\r\n//             className=\"px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 flex items-center space-x-2\"\r\n//           >\r\n//             <FileText size={16} />\r\n//             <span>Trial Balance</span>\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Journal Entry Form */}\r\n//       {isAddingEntry && (\r\n//         <div className=\"mb-8 p-6 bg-gray-50 rounded-lg border\">\r\n//           <h3 className=\"text-lg font-semibold mb-4\">Add Manual Journal Entry</h3>\r\n          \r\n//           <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\r\n//             <div>\r\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Date *</label>\r\n//               <input\r\n//                 type=\"date\"\r\n//                 value={newEntry.date}\r\n//                 onChange={(e) => setNewEntry({ ...newEntry, date: e.target.value })}\r\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               />\r\n//             </div>\r\n//             <div>\r\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Description *</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 value={newEntry.description}\r\n//                 onChange={(e) => setNewEntry({ ...newEntry, description: e.target.value })}\r\n//                 placeholder=\"Enter description\"\r\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               />\r\n//             </div>\r\n//             <div>\r\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Reference</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 value={newEntry.reference}\r\n//                 onChange={(e) => setNewEntry({ ...newEntry, reference: e.target.value })}\r\n//                 placeholder=\"Reference number\"\r\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               />\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* Entry Lines */}\r\n//           <div className=\"mb-4\">\r\n//             <label className=\"block text-sm font-medium text-gray-700 mb-2\">Journal Entry Lines</label>\r\n//             <div className=\"space-y-3\">\r\n//               {newEntry.entries.map((entry, index) => (\r\n//                 <div key={index} className=\"grid grid-cols-12 gap-2 items-center bg-white p-3 rounded border\">\r\n//                   <div className=\"col-span-4\">\r\n//                     <select\r\n//                       value={entry.accountId}\r\n//                       onChange={(e) => updateEntryLine(index, 'accountId', e.target.value)}\r\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                     >\r\n//                       <option value=\"\">Select Account</option>\r\n//                       {accounts.map(account => (\r\n//                         <option key={account.id} value={account.id}>\r\n//                           {account.code} - {account.name}\r\n//                         </option>\r\n//                       ))}\r\n//                     </select>\r\n//                   </div>\r\n//                   <div className=\"col-span-3\">\r\n//                     <input\r\n//                       type=\"text\"\r\n//                       value={entry.description}\r\n//                       onChange={(e) => updateEntryLine(index, 'description', e.target.value)}\r\n//                       placeholder=\"Description\"\r\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                     />\r\n//                   </div>\r\n//                   <div className=\"col-span-2\">\r\n//                     <input\r\n//                       type=\"number\"\r\n//                       step=\"0.01\"\r\n//                       value={entry.debit}\r\n//                       onChange={(e) => updateEntryLine(index, 'debit', e.target.value)}\r\n//                       placeholder=\"Debit\"\r\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                     />\r\n//                   </div>\r\n//                   <div className=\"col-span-2\">\r\n//                     <input\r\n//                       type=\"number\"\r\n//                       step=\"0.01\"\r\n//                       value={entry.credit}\r\n//                       onChange={(e) => updateEntryLine(index, 'credit', e.target.value)}\r\n//                       placeholder=\"Credit\"\r\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                     />\r\n//                   </div>\r\n//                   <div className=\"col-span-1\">\r\n//                     {newEntry.entries.length > 2 && (\r\n//                       <button\r\n//                         onClick={() => removeEntryLine(index)}\r\n//                         className=\"p-1 text-red-600 hover:bg-red-100 rounded\"\r\n//                       >\r\n//                         <Trash2 size={14} />\r\n//                       </button>\r\n//                     )}\r\n//                   </div>\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n\r\n//             <div className=\"flex justify-between items-center mt-3\">\r\n//               <button\r\n//                 onClick={addEntryLine}\r\n//                 className=\"px-3 py-1 text-sm bg-gray-200 text-gray-700 rounded hover:bg-gray-300 flex items-center space-x-1\"\r\n//               >\r\n//                 <Plus size={14} />\r\n//                 <span>Add Line</span>\r\n//               </button>\r\n\r\n//               <div className=\"flex items-center space-x-4\">\r\n//                 <div className=\"text-sm\">\r\n//                   <span className=\"font-medium\">Total Debit: ${totalDebit.toFixed(2)}</span>\r\n//                   <span className=\"mx-2\">|</span>\r\n//                   <span className=\"font-medium\">Total Credit: ${totalCredit.toFixed(2)}</span>\r\n//                 </div>\r\n//                 {entryIsBalanced ? (\r\n//                   <div className=\"flex items-center text-green-600\">\r\n//                     <CheckCircle size={16} className=\"mr-1\" />\r\n//                     <span className=\"text-sm\">Balanced</span>\r\n//                   </div>\r\n//                 ) : (\r\n//                   <div className=\"flex items-center text-red-600\">\r\n//                     <AlertCircle size={16} className=\"mr-1\" />\r\n//                     <span className=\"text-sm\">Not Balanced</span>\r\n//                   </div>\r\n//                 )}\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n\r\n//           <div className=\"flex space-x-3\">\r\n//             <button\r\n//               onClick={saveJournalEntry}\r\n//               disabled={!entryIsBalanced}\r\n//               className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 disabled:bg-gray-400 flex items-center space-x-2\"\r\n//             >\r\n//               <Save size={16} />\r\n//               <span>Save Entry</span>\r\n//             </button>\r\n//             <button\r\n//               onClick={() => setIsAddingEntry(false)}\r\n//               className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\"\r\n//             >\r\n//               <X size={16} />\r\n//               <span>Cancel</span>\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Journal Entries Table */}\r\n//       <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//         <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//           <h2 className=\"text-lg font-semibold text-gray-900\">Journal Entries</h2>\r\n//           <p className=\"text-sm text-gray-600 mt-1\">\r\n//             Showing {filteredEntries.length} of {journalEntries.length} entries\r\n//           </p>\r\n//         </div>\r\n\r\n//         <div className=\"overflow-x-auto\">\r\n//           <table className=\"w-full\">\r\n//             <thead className=\"bg-gray-50\">\r\n//               <tr>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Entry ID\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Date\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Description\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Reference\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Source\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Amount\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Status\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Actions\r\n//                 </th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//               {filteredEntries.map((entry) => (\r\n//                 <tr key={entry.id} className=\"hover:bg-gray-50\">\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n//                     {entry.id}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                     {entry.date}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 text-sm text-gray-900 max-w-xs truncate\">\r\n//                     {entry.description}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                     {entry.reference}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                       entry.source === 'POS Sales' ? 'bg-green-100 text-green-800' : \r\n//                       entry.source === 'Manual' ? 'bg-orange-100 text-orange-800' :\r\n//                       'bg-blue-100 text-blue-800'\r\n//                     }`}>\r\n//                       {entry.source}\r\n//                     </span>\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                     ${entry.totalDebit.toFixed(2)}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                       entry.status === 'posted' ? 'bg-blue-100 text-blue-800' : 'bg-yellow-100 text-yellow-800'\r\n//                     }`}>\r\n//                       {entry.status}\r\n//                     </span>\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n//                     <button\r\n//                       onClick={() => setSelectedEntry(entry)}\r\n//                       className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\r\n//                     >\r\n//                       <Eye size={16} />\r\n//                     </button>\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Entry Details Modal */}\r\n//       {selectedEntry && (\r\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\r\n//                   Journal Entry Details - {selectedEntry.id}\r\n//                 </h3>\r\n//                 <button\r\n//                   onClick={() => setSelectedEntry(null)}\r\n//                   className=\"text-gray-400 hover:text-gray-600\"\r\n//                 >\r\n//                   <X size={20} />\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <div className=\"px-6 py-4\">\r\n//               {/* Entry Header */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\r\n//                 <div>\r\n//                   <label className=\"text-sm font-medium text-gray-500\">Date</label>\r\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.date}</p>\r\n//                 </div>\r\n//                 <div>\r\n//                   <label className=\"text-sm font-medium text-gray-500\">Reference</label>\r\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.reference}</p>\r\n//                 </div>\r\n//                 <div>\r\n//                   <label className=\"text-sm font-medium text-gray-500\">Description</label>\r\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.description}</p>\r\n//                 </div>\r\n//                 <div>\r\n//                   <label className=\"text-sm font-medium text-gray-500\">Source</label>\r\n//                   <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                     selectedEntry.source === 'POS Sales' ? 'bg-green-100 text-green-800' : 'bg-orange-100 text-orange-800'\r\n//                   }`}>\r\n//                     {selectedEntry.source}\r\n//                   </span>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Entry Lines */}\r\n//               <div className=\"mb-6\">\r\n//                 <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Account Entries</h4>\r\n//                 <div className=\"overflow-x-auto\">\r\n//                   <table className=\"w-full border border-gray-200 rounded\">\r\n//                     <thead className=\"bg-gray-50\">\r\n//                       <tr>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Account</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Description</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Debit</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Credit</th>\r\n//                       </tr>\r\n//                     </thead>\r\n//                     <tbody className=\"divide-y divide-gray-200\">\r\n//                       {selectedEntry.entries.map((entryLine, index) => (\r\n//                         <tr key={index}>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900\">\r\n//                             {getAccountName(entryLine.accountId)}\r\n//                           </td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-600\">\r\n//                             {entryLine.description}\r\n//                           </td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">\r\n//                             {entryLine.debit > 0 ? `${entryLine.debit.toFixed(2)}` : '-'}\r\n//                           </td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">\r\n//                             {entryLine.credit > 0 ? `${entryLine.credit.toFixed(2)}` : '-'}\r\n//                           </td>\r\n//                         </tr>\r\n//                       ))}\r\n//                     </tbody>\r\n//                     <tfoot className=\"bg-gray-50\">\r\n//                       <tr>\r\n//                         <td colSpan=\"2\" className=\"px-4 py-2 text-sm font-medium text-gray-900\">\r\n//                           Totals:\r\n//                         </td>\r\n//                         <td className=\"px-4 py-2 text-sm font-bold text-gray-900 text-right\">\r\n//                           ${selectedEntry.totalDebit.toFixed(2)}\r\n//                         </td>\r\n//                         <td className=\"px-4 py-2 text-sm font-bold text-gray-900 text-right\">\r\n//                           ${selectedEntry.totalCredit.toFixed(2)}\r\n//                         </td>\r\n//                       </tr>\r\n//                     </tfoot>\r\n//                   </table>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Original Order Info (if available) */}\r\n//               {selectedEntry.originalOrder && (\r\n//                 <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\r\n//                   <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Original Sales Order Details</h4>\r\n//                   <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\r\n//                     <div>\r\n//                       <span className=\"font-medium text-gray-500\">Order ID:</span>\r\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.orderId}</p>\r\n//                     </div>\r\n//                     <div>\r\n//                       <span className=\"font-medium text-gray-500\">Status:</span>\r\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.status}</p>\r\n//                     </div>\r\n//                     <div>\r\n//                       <span className=\"font-medium text-gray-500\">Payment Status:</span>\r\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.paid ? 'Paid' : 'Unpaid'}</p>\r\n//                     </div>\r\n//                     <div>\r\n//                       <span className=\"font-medium text-gray-500\">Fulfilled:</span>\r\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.fulfilled ? 'Yes' : 'No'}</p>\r\n//                     </div>\r\n//                   </div>\r\n                  \r\n//                   {/* Line Items */}\r\n//                   <div className=\"mt-4\">\r\n//                     <span className=\"font-medium text-gray-500\">Line Items:</span>\r\n//                     <div className=\"mt-2 space-y-2\">\r\n//                       {selectedEntry.originalOrder.lineItems.map((item, index) => (\r\n//                         <div key={index} className=\"text-sm bg-white p-2 rounded border\">\r\n//                           <span className=\"font-medium\">{item.productName}</span> - \r\n//                           Qty: {item.quantity}, Price: ${item.price}, Total: ${item.total}\r\n//                           {item.taxAmount > 0 && <span className=\"text-gray-500\"> (Tax: ${item.taxAmount})</span>}\r\n//                         </div>\r\n//                       ))}\r\n//                     </div>\r\n//                   </div>\r\n//                 </div>\r\n//               )}\r\n\r\n//               {/* Entry Metadata */}\r\n//               <div className=\"text-xs text-gray-500\">\r\n//                 <p>Created: {new Date(selectedEntry.createdAt).toLocaleString()}</p>\r\n//                 <p>Status: {selectedEntry.status}</p>\r\n//                 <p>Type: {selectedEntry.transactionType}</p>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Trial Balance Modal */}\r\n//       {showTrialBalance && (\r\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-lg max-w-5xl w-full max-h-[90vh] overflow-y-auto\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\r\n//                   Trial Balance - As of {new Date().toLocaleDateString()}\r\n//                 </h3>\r\n//                 <div className=\"flex items-center space-x-2\">\r\n//                   <button\r\n//                     onClick={() => {\r\n//                       // Export functionality would go here\r\n//                       alert('Export functionality would be implemented here');\r\n//                     }}\r\n//                     className=\"px-3 py-1 bg-emerald-600 text-white rounded text-sm hover:bg-emerald-700 flex items-center space-x-1\"\r\n//                   >\r\n//                     <Download size={14} />\r\n//                     <span>Export</span>\r\n//                   </button>\r\n//                   <button\r\n//                     onClick={() => setShowTrialBalance(false)}\r\n//                     className=\"text-gray-400 hover:text-gray-600\"\r\n//                   >\r\n//                     <X size={20} />\r\n//                   </button>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <div className=\"px-6 py-4\">\r\n//               <div className=\"overflow-x-auto\">\r\n//                 <table className=\"w-full\">\r\n//                   <thead className=\"bg-gray-50\">\r\n//                     <tr>\r\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Account Code\r\n//                       </th>\r\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Account Name\r\n//                       </th>\r\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Type\r\n//                       </th>\r\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Debit Total\r\n//                       </th>\r\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Credit Total\r\n//                       </th>\r\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Balance\r\n//                       </th>\r\n//                     </tr>\r\n//                   </thead>\r\n//                   <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//                     {trialBalance.map((account) => (\r\n//                       <tr key={account.accountId}>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n//                           {account.accountCode}\r\n//                         </td>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                           {account.accountName}\r\n//                         </td>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap\">\r\n//                           <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                             account.accountType === 'assets' ? 'bg-green-100 text-green-800' :\r\n//                             account.accountType === 'liabilities' ? 'bg-red-100 text-red-800' :\r\n//                             account.accountType === 'equity' ? 'bg-blue-100 text-blue-800' :\r\n//                             account.accountType === 'revenue' ? 'bg-purple-100 text-purple-800' :\r\n//                             'bg-orange-100 text-orange-800'\r\n//                           }`}>\r\n//                             {account.accountType}\r\n//                           </span>\r\n//                         </td>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\r\n//                           ${account.debit.toFixed(2)}\r\n//                         </td>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\r\n//                           ${account.credit.toFixed(2)}\r\n//                         </td>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-right\">\r\n//                           <span className={account.balance >= 0 ? 'text-green-600' : 'text-red-600'}>\r\n//                             ${Math.abs(account.balance).toFixed(2)}\r\n//                             {account.balance < 0 && ' (CR)'}\r\n//                           </span>\r\n//                         </td>\r\n//                       </tr>\r\n//                     ))}\r\n//                   </tbody>\r\n//                   <tfoot className=\"bg-gray-50\">\r\n//                     <tr>\r\n//                       <td colSpan=\"3\" className=\"px-4 py-3 text-sm font-bold text-gray-900\">\r\n//                         TOTALS:\r\n//                       </td>\r\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\r\n//                         ${trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toFixed(2)}\r\n//                       </td>\r\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\r\n//                         ${trialBalance.reduce((sum, acc) => sum + acc.credit, 0).toFixed(2)}\r\n//                       </td>\r\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\r\n//                         ${Math.abs(trialBalance.reduce((sum, acc) => sum + acc.balance, 0)).toFixed(2)}\r\n//                       </td>\r\n//                     </tr>\r\n//                   </tfoot>\r\n//                 </table>\r\n//               </div>\r\n              \r\n//               {/* Trial Balance Validation */}\r\n//               <div className=\"mt-4 p-4 bg-green-50 border border-green-200 rounded-lg\">\r\n//                 <div className=\"flex items-center\">\r\n//                   <CheckCircle className=\"text-green-600 mr-2\" size={20} />\r\n//                   <div>\r\n//                     <h4 className=\"font-medium text-green-800\">Trial Balance is Balanced</h4>\r\n//                     <p className=\"text-sm text-green-700\">\r\n//                       Total Debits = Total Credits = ${trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toFixed(2)}\r\n//                     </p>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Integration Status */}\r\n//       <div className=\"mt-8 grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n//         <div className=\"p-4 bg-green-50 border border-green-200 rounded-lg\">\r\n//           <div className=\"flex items-center mb-2\">\r\n//             <CheckCircle className=\"text-green-600 mr-2\" size={16} />\r\n//             <h4 className=\"font-medium text-green-800\">POS API Integration</h4>\r\n//           </div>\r\n//           <p className=\"text-sm text-green-700\">\r\n//             Sales orders automatically create journal entries from live API data\r\n//           </p>\r\n//         </div>\r\n\r\n//         <div className=\"p-4 bg-blue-50 border border-blue-200 rounded-lg\">\r\n//           <div className=\"flex items-center mb-2\">\r\n//             <RefreshCw className=\"text-blue-600 mr-2\" size={16} />\r\n//             <h4 className=\"font-medium text-blue-800\">Real-time Sync</h4>\r\n//           </div>\r\n//           <p className=\"text-sm text-blue-700\">\r\n//             Journal entries updated automatically with each sales transaction\r\n//           </p>\r\n//         </div>\r\n\r\n//         <div className=\"p-4 bg-orange-50 border border-orange-200 rounded-lg\">\r\n//           <div className=\"flex items-center mb-2\">\r\n//             <FileText className=\"text-orange-600 mr-2\" size={16} />\r\n//             <h4 className=\"font-medium text-orange-800\">Manual Entries</h4>\r\n//           </div>\r\n//           <p className=\"text-sm text-orange-700\">\r\n//             Add adjustments and corrections with full double-entry validation\r\n//           </p>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default GeneralLedger;\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { \r\n  Book, \r\n  Plus, \r\n  Filter, \r\n  Search, \r\n  Calendar, \r\n  FileText, \r\n  Edit, \r\n  Trash2, \r\n  Save, \r\n  X, \r\n  AlertCircle,\r\n  CheckCircle,\r\n  DollarSign,\r\n  TrendingUp,\r\n  Eye,\r\n  Download,\r\n  RefreshCw\r\n} from 'lucide-react';\r\n\r\nconst GeneralLedger = () => {\r\n  const [journalEntries, setJournalEntries] = useState([]);\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [filteredEntries, setFilteredEntries] = useState([]);\r\n  const [selectedEntry, setSelectedEntry] = useState(null);\r\n  const [isAddingEntry, setIsAddingEntry] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [filters, setFilters] = useState({\r\n    dateFrom: '',\r\n    dateTo: '',\r\n    accountId: '',\r\n    transactionType: 'all',\r\n    searchTerm: ''\r\n  });\r\n  const [trialBalance, setTrialBalance] = useState([]);\r\n  const [showTrialBalance, setShowTrialBalance] = useState(false);\r\n  const [newEntry, setNewEntry] = useState({\r\n    date: new Date().toISOString().split('T')[0],\r\n    description: '',\r\n    reference: '',\r\n    entries: [\r\n      { accountId: '', debit: 0, credit: 0, description: '' },\r\n      { accountId: '', debit: 0, credit: 0, description: '' }\r\n    ]\r\n  });\r\n\r\n  // Chart of Accounts\r\n  const chartOfAccounts = [\r\n    { id: '1111', code: '1111', name: 'Petty Cash', type: 'assets' },\r\n    { id: '1112', code: '1112', name: 'Bank - Main Account', type: 'assets' },\r\n    { id: '1120', code: '1120', name: 'Accounts Receivable', type: 'assets' },\r\n    { id: '1130', code: '1130', name: 'Inventory', type: 'assets' },\r\n    { id: '2110', code: '2110', name: 'Accounts Payable', type: 'liabilities' },\r\n    { id: '2130', code: '2130', name: 'Sales Tax Payable', type: 'liabilities' },\r\n    { id: '4100', code: '4100', name: 'Sales Revenue', type: 'revenue' },\r\n    { id: '4110', code: '4110', name: 'Electronics Sales', type: 'revenue' },\r\n    { id: '5100', code: '5100', name: 'Cost of Goods Sold', type: 'expenses' },\r\n    { id: '5200', code: '5200', name: 'Purchase Expenses', type: 'expenses' }\r\n  ];\r\n\r\n  // API Configuration - This is already correct\r\n  const API_BASE_URL = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/orders?start=0&size=200';\r\n\r\n  useEffect(() => {\r\n    setAccounts(chartOfAccounts);\r\n    loadJournalEntriesFromAPI();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    filterEntries();\r\n  }, [journalEntries, filters]);\r\n\r\n  async function fetchOrderData() {\r\n    try {\r\n      const response = await fetch(API_BASE_URL);\r\n      if (!response.ok) {\r\n        throw new Error(`API request failed with status ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error fetching order data:', error);\r\n      // Implement notification system for integration errors\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // Fetch Sales Orders from API and convert to Journal Entries\r\n  const loadJournalEntriesFromAPI = async () => {\r\n    setLoading(true);\r\n    try {\r\n      // FIXED: Using the correct API_BASE_URL directly instead of appending \"/orders?start=0&size=200\"\r\n      const salesOrders = await fetchOrderData();\r\n      \r\n      if (!salesOrders) {\r\n        throw new Error('Failed to fetch sales orders');\r\n      }\r\n      \r\n      // Filter only PAID and FULFILLED orders\r\n      const completedOrders = salesOrders.filter(order => \r\n        order.paid === true && order.fulfilled === true && order.status === 'Closed'\r\n      );\r\n      \r\n      // Convert completed sales orders to journal entries\r\n      const journalEntriesFromSales = completedOrders.map(order => convertSalesOrderToJournalEntry(order))\r\n        .filter(entry => entry !== null); // Filter out any null entries\r\n      \r\n      // Load any manual journal entries from localStorage\r\n      const manualEntries = JSON.parse(localStorage.getItem('manualJournalEntries') || '[]');\r\n      \r\n      // Combine both types of entries\r\n      const allEntries = [...journalEntriesFromSales, ...manualEntries];\r\n      \r\n      setJournalEntries(allEntries);\r\n      console.log('Loaded completed orders:', completedOrders.length, 'Total journal entries:', allEntries.length);\r\n    } catch (error) {\r\n      console.error('Error loading sales orders:', error);\r\n      // Fallback to sample data if API fails\r\n      loadSampleJournalEntries();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Convert Sales Order to Journal Entry\r\n  const convertSalesOrderToJournalEntry = (order) => {\r\n    const entries = [];\r\n    \r\n    // Use actual values from API (amounts are in PKR, not USD)\r\n    const subTotal = parseFloat(order.subTotal) || 0;\r\n    const taxAmount = parseFloat(order.taxAmount) || 0;\r\n    const total = parseFloat(order.total) || 0;\r\n    \r\n    // Only process PAID and FULFILLED orders\r\n    if (!order.paid || !order.fulfilled || order.status !== 'Closed') {\r\n      return null; // Skip incomplete orders\r\n    }\r\n    \r\n    // Cash/Bank Account (Debit) - Total amount received\r\n    entries.push({\r\n      accountId: '1111', // Petty Cash (assume cash payment)\r\n      accountName: 'Petty Cash',\r\n      debit: total,\r\n      credit: 0,\r\n      description: `Cash received from Order #${order.orderId} - ${order.lineItems.map(item => item.productName).join(', ')}`\r\n    });\r\n\r\n    // Sales Revenue (Credit) - Subtotal\r\n    if (subTotal > 0) {\r\n      entries.push({\r\n        accountId: '4110', // Electronics Sales\r\n        accountName: 'Electronics Sales',\r\n        debit: 0,\r\n        credit: subTotal,\r\n        description: `Revenue from Order #${order.orderId}`\r\n      });\r\n    }\r\n\r\n    // Sales Tax Payable (Credit) - Tax amount\r\n    if (taxAmount > 0) {\r\n      entries.push({\r\n        accountId: '2130',\r\n        accountName: 'Sales Tax Payable',\r\n        debit: 0,\r\n        credit: taxAmount,\r\n        description: `${order.taxRate}% tax collected on Order #${order.orderId}`\r\n      });\r\n    }\r\n\r\n    // Cost of Goods Sold and Inventory reduction (only for fulfilled items)\r\n    let totalCOGS = 0;\r\n    order.lineItems.forEach(item => {\r\n      if (item.fulfilled && item.status === 'Fulfilled') {\r\n        const costPrice = parseFloat(item.costPrice) || 0;\r\n        const quantity = parseFloat(item.quantity) || 0;\r\n        const itemCOGS = costPrice * quantity;\r\n        totalCOGS += itemCOGS;\r\n      }\r\n    });\r\n\r\n    if (totalCOGS > 0) {\r\n      // Cost of Goods Sold (Debit)\r\n      entries.push({\r\n        accountId: '5100',\r\n        accountName: 'Cost of Goods Sold',\r\n        debit: totalCOGS,\r\n        credit: 0,\r\n        description: `COGS for Order #${order.orderId}`\r\n      });\r\n\r\n      // Inventory (Credit)\r\n      entries.push({\r\n        accountId: '1130',\r\n        accountName: 'Inventory',\r\n        debit: 0,\r\n        credit: totalCOGS,\r\n        description: `Inventory reduction - Order #${order.orderId}`\r\n      });\r\n    }\r\n\r\n    // Calculate totals\r\n    const totalDebit = entries.reduce((sum, entry) => sum + entry.debit, 0);\r\n    const totalCredit = entries.reduce((sum, entry) => sum + entry.credit, 0);\r\n\r\n    return {\r\n      id: `JE-ORDER-${order.orderId}`,\r\n      date: formatDateFromCreatedAt(order.createdAt),\r\n      description: `Sales Order #${order.orderId} - ${order.lineItems.map(item => `${item.productName} (${item.quantity})`).join(', ')}`,\r\n      reference: `ORDER-${order.orderId}`,\r\n      transactionType: 'automatic',\r\n      source: 'POS Sales',\r\n      status: 'posted',\r\n      entries: entries,\r\n      totalDebit: Math.round(totalDebit * 100) / 100,\r\n      totalCredit: Math.round(totalCredit * 100) / 100,\r\n      createdAt: order.createdAt,\r\n      originalOrder: order // Keep reference to original order\r\n    };\r\n  };\r\n\r\n  // Format date from API format (2025.08.18.10.08.54.569) to YYYY-MM-DD\r\n  const formatDateFromCreatedAt = (createdAt) => {\r\n    try {\r\n      const parts = createdAt.split('.');\r\n      if (parts.length >= 3) {\r\n        return `${parts[0]}-${parts[1].padStart(2, '0')}-${parts[2].padStart(2, '0')}`;\r\n      }\r\n      return new Date().toISOString().split('T')[0];\r\n    } catch (error) {\r\n      return new Date().toISOString().split('T')[0];\r\n    }\r\n  };\r\n\r\n  // Fallback sample data\r\n  const loadSampleJournalEntries = () => {\r\n    const sampleEntries = [\r\n      {\r\n        id: 'JE001',\r\n        date: '2025-08-18',\r\n        description: 'Sample POS Sale - Medical products',\r\n        reference: 'POS001',\r\n        transactionType: 'automatic',\r\n        source: 'POS',\r\n        status: 'posted',\r\n        entries: [\r\n          { accountId: '1111', accountName: 'Petty Cash', debit: 60.50, credit: 0, description: 'Cash received from customer' },\r\n          { accountId: '4100', accountName: 'Sales Revenue', debit: 0, credit: 55.00, description: 'Revenue from medical products' },\r\n          { accountId: '2130', accountName: 'Sales Tax Payable', debit: 0, credit: 5.50, description: 'Sales tax collected' }\r\n        ],\r\n        totalDebit: 60.50,\r\n        totalCredit: 60.50,\r\n        createdAt: '2025-08-18T10:30:00Z'\r\n      }\r\n    ];\r\n    setJournalEntries(sampleEntries);\r\n  };\r\n\r\n  const filterEntries = () => {\r\n    let filtered = [...journalEntries];\r\n\r\n    if (filters.dateFrom) {\r\n      filtered = filtered.filter(entry => entry.date >= filters.dateFrom);\r\n    }\r\n    if (filters.dateTo) {\r\n      filtered = filtered.filter(entry => entry.date <= filters.dateTo);\r\n    }\r\n    if (filters.accountId) {\r\n      filtered = filtered.filter(entry => \r\n        entry.entries.some(e => e.accountId === filters.accountId)\r\n      );\r\n    }\r\n    if (filters.transactionType !== 'all') {\r\n      filtered = filtered.filter(entry => entry.transactionType === filters.transactionType);\r\n    }\r\n    if (filters.searchTerm) {\r\n      const term = filters.searchTerm.toLowerCase();\r\n      filtered = filtered.filter(entry => \r\n        entry.description.toLowerCase().includes(term) ||\r\n        entry.reference.toLowerCase().includes(term) ||\r\n        entry.entries.some(e => e.description.toLowerCase().includes(term))\r\n      );\r\n    }\r\n\r\n    setFilteredEntries(filtered);\r\n  };\r\n\r\n  const generateTrialBalance = () => {\r\n    const balances = {};\r\n    \r\n    // Initialize all accounts\r\n    chartOfAccounts.forEach(account => {\r\n      balances[account.id] = {\r\n        accountId: account.id,\r\n        accountCode: account.code,\r\n        accountName: account.name,\r\n        accountType: account.type,\r\n        debit: 0,\r\n        credit: 0,\r\n        balance: 0\r\n      };\r\n    });\r\n\r\n    // Calculate balances from journal entries\r\n    journalEntries.forEach(entry => {\r\n      if (entry.status === 'posted') {\r\n        entry.entries.forEach(entryLine => {\r\n          if (balances[entryLine.accountId]) {\r\n            balances[entryLine.accountId].debit += entryLine.debit;\r\n            balances[entryLine.accountId].credit += entryLine.credit;\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    // Calculate net balances\r\n    Object.values(balances).forEach(account => {\r\n      if (account.accountType === 'assets' || account.accountType === 'expenses') {\r\n        account.balance = account.debit - account.credit;\r\n      } else {\r\n        account.balance = account.credit - account.debit;\r\n      }\r\n    });\r\n\r\n    const trialBalanceData = Object.values(balances)\r\n      .filter(account => account.debit !== 0 || account.credit !== 0)\r\n      .sort((a, b) => a.accountCode.localeCompare(b.accountCode));\r\n\r\n    setTrialBalance(trialBalanceData);\r\n    setShowTrialBalance(true);\r\n  };\r\n\r\n  const addEntryLine = () => {\r\n    setNewEntry({\r\n      ...newEntry,\r\n      entries: [...newEntry.entries, { accountId: '', debit: 0, credit: 0, description: '' }]\r\n    });\r\n  };\r\n\r\n  const removeEntryLine = (index) => {\r\n    if (newEntry.entries.length > 2) {\r\n      const updatedEntries = newEntry.entries.filter((_, i) => i !== index);\r\n      setNewEntry({ ...newEntry, entries: updatedEntries });\r\n    }\r\n  };\r\n\r\n  const updateEntryLine = (index, field, value) => {\r\n    const updatedEntries = [...newEntry.entries];\r\n    updatedEntries[index] = { ...updatedEntries[index], [field]: value };\r\n    setNewEntry({ ...newEntry, entries: updatedEntries });\r\n  };\r\n\r\n  const calculateTotals = (entries) => {\r\n    const totalDebit = entries.reduce((sum, entry) => sum + (parseFloat(entry.debit) || 0), 0);\r\n    const totalCredit = entries.reduce((sum, entry) => sum + (parseFloat(entry.credit) || 0), 0);\r\n    return { totalDebit, totalCredit };\r\n  };\r\n\r\n  const isBalanced = (entries) => {\r\n    const { totalDebit, totalCredit } = calculateTotals(entries);\r\n    return Math.abs(totalDebit - totalCredit) < 0.01;\r\n  };\r\n\r\n  const saveJournalEntry = () => {\r\n    if (!newEntry.description || !newEntry.entries.every(e => e.accountId)) {\r\n      alert('Please fill in all required fields');\r\n      return;\r\n    }\r\n\r\n    if (!isBalanced(newEntry.entries)) {\r\n      alert('Journal entry must be balanced - total debits must equal total credits');\r\n      return;\r\n    }\r\n\r\n    const { totalDebit, totalCredit } = calculateTotals(newEntry.entries);\r\n    \r\n    // Add account names to entries\r\n    const entriesWithNames = newEntry.entries.map(entry => ({\r\n      ...entry,\r\n      accountName: accounts.find(acc => acc.id === entry.accountId)?.name || '',\r\n      debit: parseFloat(entry.debit) || 0,\r\n      credit: parseFloat(entry.credit) || 0\r\n    }));\r\n\r\n    const journalEntry = {\r\n      id: `JE-MANUAL-${Date.now()}`,\r\n      date: newEntry.date,\r\n      description: newEntry.description,\r\n      reference: newEntry.reference || `MAN${Date.now()}`,\r\n      transactionType: 'manual',\r\n      source: 'Manual',\r\n      status: 'posted',\r\n      entries: entriesWithNames,\r\n      totalDebit,\r\n      totalCredit,\r\n      createdAt: new Date().toISOString()\r\n    };\r\n\r\n    // Save manual entries to localStorage\r\n    const existingManualEntries = JSON.parse(localStorage.getItem('manualJournalEntries') || '[]');\r\n    const updatedManualEntries = [...existingManualEntries, journalEntry];\r\n    localStorage.setItem('manualJournalEntries', JSON.stringify(updatedManualEntries));\r\n\r\n    // Update state\r\n    setJournalEntries([...journalEntries, journalEntry]);\r\n    \r\n    // Reset form\r\n    setNewEntry({\r\n      date: new Date().toISOString().split('T')[0],\r\n      description: '',\r\n      reference: '',\r\n      entries: [\r\n        { accountId: '', debit: 0, credit: 0, description: '' },\r\n        { accountId: '', debit: 0, credit: 0, description: '' }\r\n      ]\r\n    });\r\n    setIsAddingEntry(false);\r\n  };\r\n\r\n  const getAccountName = (accountId) => {\r\n    const account = accounts.find(acc => acc.id === accountId);\r\n    return account ? `${account.code} - ${account.name}` : '';\r\n  };\r\n\r\n  const { totalDebit, totalCredit } = calculateTotals(newEntry.entries);\r\n  const entryIsBalanced = isBalanced(newEntry.entries);\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto p-6 bg-white\">\r\n      {/* Header */}\r\n      <div className=\"mb-8\">\r\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\r\n          <Book className=\"mr-3 text-emerald-600\" />\r\n          General Ledger\r\n        </h1>\r\n        <p className=\"text-gray-600\">Real-time transaction recording and journal entry management</p>\r\n      </div>\r\n\r\n      {/* Quick Stats */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\r\n        <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-blue-600 text-sm font-medium\">Total Entries</p>\r\n              <p className=\"text-2xl font-bold text-blue-900\">{journalEntries.length}</p>\r\n            </div>\r\n            <FileText className=\"text-blue-600\" size={24} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-green-50 p-4 rounded-lg border border-green-200\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-green-600 text-sm font-medium\">POS Entries</p>\r\n              <p className=\"text-2xl font-bold text-green-900\">\r\n                {journalEntries.filter(e => e.source === 'POS Sales').length}\r\n              </p>\r\n            </div>\r\n            <TrendingUp className=\"text-green-600\" size={24} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-orange-50 p-4 rounded-lg border border-orange-200\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-orange-600 text-sm font-medium\">Manual Entries</p>\r\n              <p className=\"text-2xl font-bold text-orange-900\">\r\n                {journalEntries.filter(e => e.transactionType === 'manual').length}\r\n              </p>\r\n            </div>\r\n            <Edit className=\"text-orange-600\" size={24} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-purple-50 p-4 rounded-lg border border-purple-200\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-purple-600 text-sm font-medium\">Total Value</p>\r\n              <p className=\"text-2xl font-bold text-purple-900\">\r\n                PKR {journalEntries.reduce((sum, entry) => sum + entry.totalDebit, 0).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n              </p>\r\n            </div>\r\n            <DollarSign className=\"text-purple-600\" size={24} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Controls */}\r\n      <div className=\"flex flex-wrap items-center justify-between gap-4 mb-6\">\r\n        <div className=\"flex flex-wrap items-center gap-4\">\r\n          {/* Date Filters */}\r\n          <div className=\"flex items-center space-x-2\">\r\n            <Calendar size={16} className=\"text-gray-400\" />\r\n            <input\r\n              type=\"date\"\r\n              value={filters.dateFrom}\r\n              onChange={(e) => setFilters({ ...filters, dateFrom: e.target.value })}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n              placeholder=\"From\"\r\n            />\r\n            <span className=\"text-gray-500\">to</span>\r\n            <input\r\n              type=\"date\"\r\n              value={filters.dateTo}\r\n              onChange={(e) => setFilters({ ...filters, dateTo: e.target.value })}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n              placeholder=\"To\"\r\n            />\r\n          </div>\r\n\r\n          {/* Account Filter */}\r\n          <div className=\"relative\">\r\n            <Filter className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n            <select\r\n              value={filters.accountId}\r\n              onChange={(e) => setFilters({ ...filters, accountId: e.target.value })}\r\n              className=\"pl-10 pr-8 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n            >\r\n              <option value=\"\">All Accounts</option>\r\n              {accounts.map(account => (\r\n                <option key={account.id} value={account.id}>\r\n                  {account.code} - {account.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          {/* Transaction Type Filter */}\r\n          <select\r\n            value={filters.transactionType}\r\n            onChange={(e) => setFilters({ ...filters, transactionType: e.target.value })}\r\n            className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n          >\r\n            <option value=\"all\">All Types</option>\r\n            <option value=\"automatic\">POS Sales</option>\r\n            <option value=\"manual\">Manual</option>\r\n          </select>\r\n\r\n          {/* Search */}\r\n          <div className=\"relative\">\r\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search entries...\"\r\n              value={filters.searchTerm}\r\n              onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\r\n              className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex space-x-3\">\r\n          <button\r\n            onClick={loadJournalEntriesFromAPI}\r\n            disabled={loading}\r\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2 disabled:bg-gray-400\"\r\n          >\r\n            {loading ? <RefreshCw className=\"animate-spin\" size={16} /> : <RefreshCw size={16} />}\r\n            <span>Refresh from API</span>\r\n          </button>\r\n          <button\r\n            onClick={() => setIsAddingEntry(true)}\r\n            className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\r\n          >\r\n            <Plus size={16} />\r\n            <span>Add Entry</span>\r\n          </button>\r\n          <button\r\n            onClick={generateTrialBalance}\r\n            className=\"px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 flex items-center space-x-2\"\r\n          >\r\n            <FileText size={16} />\r\n            <span>Trial Balance</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Journal Entry Form */}\r\n      {isAddingEntry && (\r\n        <div className=\"mb-8 p-6 bg-gray-50 rounded-lg border\">\r\n          <h3 className=\"text-lg font-semibold mb-4\">Add Manual Journal Entry</h3>\r\n          \r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Date *</label>\r\n              <input\r\n                type=\"date\"\r\n                value={newEntry.date}\r\n                onChange={(e) => setNewEntry({ ...newEntry, date: e.target.value })}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Description *</label>\r\n              <input\r\n                type=\"text\"\r\n                value={newEntry.description}\r\n                onChange={(e) => setNewEntry({ ...newEntry, description: e.target.value })}\r\n                placeholder=\"Enter description\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Reference</label>\r\n              <input\r\n                type=\"text\"\r\n                value={newEntry.reference}\r\n                onChange={(e) => setNewEntry({ ...newEntry, reference: e.target.value })}\r\n                placeholder=\"Reference number\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Entry Lines */}\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Journal Entry Lines</label>\r\n            <div className=\"space-y-3\">\r\n              {newEntry.entries.map((entry, index) => (\r\n                <div key={index} className=\"grid grid-cols-12 gap-2 items-center bg-white p-3 rounded border\">\r\n                  <div className=\"col-span-4\">\r\n                    <select\r\n                      value={entry.accountId}\r\n                      onChange={(e) => updateEntryLine(index, 'accountId', e.target.value)}\r\n                      className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n                    >\r\n                      <option value=\"\">Select Account</option>\r\n                      {accounts.map(account => (\r\n                        <option key={account.id} value={account.id}>\r\n                          {account.code} - {account.name}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"col-span-3\">\r\n                    <input\r\n                      type=\"text\"\r\n                      value={entry.description}\r\n                      onChange={(e) => updateEntryLine(index, 'description', e.target.value)}\r\n                      placeholder=\"Description\"\r\n                      className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-span-2\">\r\n                    <input\r\n                      type=\"number\"\r\n                      step=\"0.01\"\r\n                      value={entry.debit}\r\n                      onChange={(e) => updateEntryLine(index, 'debit', e.target.value)}\r\n                      placeholder=\"Debit\"\r\n                      className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-span-2\">\r\n                    <input\r\n                      type=\"number\"\r\n                      step=\"0.01\"\r\n                      value={entry.credit}\r\n                      onChange={(e) => updateEntryLine(index, 'credit', e.target.value)}\r\n                      placeholder=\"Credit\"\r\n                      className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-span-1\">\r\n                    {newEntry.entries.length > 2 && (\r\n                      <button\r\n                        onClick={() => removeEntryLine(index)}\r\n                        className=\"p-1 text-red-600 hover:bg-red-100 rounded\"\r\n                      >\r\n                        <Trash2 size={14} />\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"flex justify-between items-center mt-3\">\r\n              <button\r\n                onClick={addEntryLine}\r\n                className=\"px-3 py-1 text-sm bg-gray-200 text-gray-700 rounded hover:bg-gray-300 flex items-center space-x-1\"\r\n              >\r\n                <Plus size={14} />\r\n                <span>Add Line</span>\r\n              </button>\r\n\r\n              <div className=\"flex items-center space-x-4\">\r\n                <div className=\"text-sm\">\r\n                  <span className=\"font-medium\">Total Debit: PKR {totalDebit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}</span>\r\n                  <span className=\"mx-2\">|</span>\r\n                  <span className=\"font-medium\">Total Credit: PKR {totalCredit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}</span>\r\n                </div>\r\n                {entryIsBalanced ? (\r\n                  <div className=\"flex items-center text-green-600\">\r\n                    <CheckCircle size={16} className=\"mr-1\" />\r\n                    <span className=\"text-sm\">Balanced</span>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"flex items-center text-red-600\">\r\n                    <AlertCircle size={16} className=\"mr-1\" />\r\n                    <span className=\"text-sm\">Not Balanced</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex space-x-3\">\r\n            <button\r\n              onClick={saveJournalEntry}\r\n              disabled={!entryIsBalanced}\r\n              className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 disabled:bg-gray-400 flex items-center space-x-2\"\r\n            >\r\n              <Save size={16} />\r\n              <span>Save Entry</span>\r\n            </button>\r\n            <button\r\n              onClick={() => setIsAddingEntry(false)}\r\n              className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\"\r\n            >\r\n              <X size={16} />\r\n              <span>Cancel</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Journal Entries Table */}\r\n      <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n        <div className=\"px-6 py-4 border-b border-gray-200\">\r\n          <h2 className=\"text-lg font-semibold text-gray-900\">Journal Entries</h2>\r\n          <p className=\"text-sm text-gray-600 mt-1\">\r\n            Showing {filteredEntries.length} of {journalEntries.length} entries\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"w-full\">\r\n            <thead className=\"bg-gray-50\">\r\n              <tr>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Entry ID\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Date\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Description\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Reference\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Source\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Amount\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Status\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Actions\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n              {filteredEntries.map((entry) => (\r\n                <tr key={entry.id} className=\"hover:bg-gray-50\">\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                    {entry.id}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                    {entry.date}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 text-sm text-gray-900 max-w-xs truncate\">\r\n                    {entry.description}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                    {entry.reference}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n                      entry.source === 'POS Sales' ? 'bg-green-100 text-green-800' : \r\n                      entry.source === 'Manual' ? 'bg-orange-100 text-orange-800' :\r\n                      'bg-blue-100 text-blue-800'\r\n                    }`}>\r\n                      {entry.source}\r\n                    </span>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                    PKR {entry.totalDebit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n                      entry.status === 'posted' ? 'bg-blue-100 text-blue-800' : 'bg-yellow-100 text-yellow-800'\r\n                    }`}>\r\n                      {entry.status}\r\n                    </span>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                    <button\r\n                      onClick={() => setSelectedEntry(entry)}\r\n                      className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\r\n                    >\r\n                      <Eye size={16} />\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Entry Details Modal */}\r\n      {selectedEntry && (\r\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n          <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n            <div className=\"px-6 py-4 border-b border-gray-200\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900\">\r\n                  Journal Entry Details - {selectedEntry.id}\r\n                </h3>\r\n                <button\r\n                  onClick={() => setSelectedEntry(null)}\r\n                  className=\"text-gray-400 hover:text-gray-600\"\r\n                >\r\n                  <X size={20} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"px-6 py-4\">\r\n              {/* Entry Header */}\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\r\n                <div>\r\n                  <label className=\"text-sm font-medium text-gray-500\">Date</label>\r\n                  <p className=\"text-sm text-gray-900\">{selectedEntry.date}</p>\r\n                </div>\r\n                <div>\r\n                  <label className=\"text-sm font-medium text-gray-500\">Reference</label>\r\n                  <p className=\"text-sm text-gray-900\">{selectedEntry.reference}</p>\r\n                </div>\r\n                <div>\r\n                  <label className=\"text-sm font-medium text-gray-500\">Description</label>\r\n                  <p className=\"text-sm text-gray-900\">{selectedEntry.description}</p>\r\n                </div>\r\n                <div>\r\n                  <label className=\"text-sm font-medium text-gray-500\">Source</label>\r\n                  <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n                    selectedEntry.source === 'POS Sales' ? 'bg-green-100 text-green-800' : 'bg-orange-100 text-orange-800'\r\n                  }`}>\r\n                    {selectedEntry.source}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Entry Lines */}\r\n              <div className=\"mb-6\">\r\n                <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Account Entries</h4>\r\n                <div className=\"overflow-x-auto\">\r\n                  <table className=\"w-full border border-gray-200 rounded\">\r\n                    <thead className=\"bg-gray-50\">\r\n                      <tr>\r\n                        <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Account</th>\r\n                        <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Description</th>\r\n                        <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Debit</th>\r\n                        <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Credit</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody className=\"divide-y divide-gray-200\">\r\n                      {selectedEntry.entries.map((entryLine, index) => (\r\n                        <tr key={index}>\r\n                          <td className=\"px-4 py-2 text-sm text-gray-900\">\r\n                            {getAccountName(entryLine.accountId)}\r\n                          </td>\r\n                          <td className=\"px-4 py-2 text-sm text-gray-600\">\r\n                            {entryLine.description}\r\n                          </td>\r\n                          <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">\r\n                            {entryLine.debit > 0 ? `${entryLine.debit.toFixed(2)}` : '-'}\r\n                          </td>\r\n                          <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">\r\n                            {entryLine.credit > 0 ? `${entryLine.credit.toFixed(2)}` : '-'}\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                    <tfoot className=\"bg-gray-50\">\r\n                      <tr>\r\n                        <td colSpan=\"2\" className=\"px-4 py-2 text-sm font-medium text-gray-900\">\r\n                          Totals:\r\n                        </td>\r\n                        <td className=\"px-4 py-2 text-sm font-bold text-gray-900 text-right\">\r\n                          PKR {selectedEntry.totalDebit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n                        </td>\r\n                        <td className=\"px-4 py-2 text-sm font-bold text-gray-900 text-right\">\r\n                          PKR {selectedEntry.totalCredit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n                        </td>\r\n                      </tr>\r\n                    </tfoot>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Original Order Info (if available) */}\r\n              {selectedEntry.originalOrder && (\r\n                <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\r\n                  <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Original Sales Order Details</h4>\r\n                  <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\r\n                    <div>\r\n                      <span className=\"font-medium text-gray-500\">Order ID:</span>\r\n                      <p className=\"text-gray-900\">{selectedEntry.originalOrder.orderId}</p>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"font-medium text-gray-500\">Status:</span>\r\n                      <p className=\"text-gray-900\">{selectedEntry.originalOrder.status}</p>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"font-medium text-gray-500\">Payment Status:</span>\r\n                      <p className=\"text-gray-900\">{selectedEntry.originalOrder.paid ? 'Paid' : 'Unpaid'}</p>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"font-medium text-gray-500\">Fulfilled:</span>\r\n                      <p className=\"text-gray-900\">{selectedEntry.originalOrder.fulfilled ? 'Yes' : 'No'}</p>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  {/* Line Items */}\r\n                  <div className=\"mt-4\">\r\n                    <span className=\"font-medium text-gray-500\">Line Items:</span>\r\n                    <div className=\"mt-2 space-y-2\">\r\n                      {selectedEntry.originalOrder.lineItems.map((item, index) => (\r\n                        <div key={index} className=\"text-sm bg-white p-2 rounded border\">\r\n                          <span className=\"font-medium\">{item.productName}</span> - \r\n                          Qty: {item.quantity}, Price: PKR {parseFloat(item.price).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}, \r\n                          Total: PKR {parseFloat(item.total).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n                          {item.taxAmount > 0 && <span className=\"text-gray-500\"> (Tax: PKR {parseFloat(item.taxAmount).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})})</span>}\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* Entry Metadata */}\r\n              <div className=\"text-xs text-gray-500\">\r\n                <p>Created: {new Date(selectedEntry.createdAt).toLocaleString()}</p>\r\n                <p>Status: {selectedEntry.status}</p>\r\n                <p>Type: {selectedEntry.transactionType}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Trial Balance Modal */}\r\n      {showTrialBalance && (\r\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n          <div className=\"bg-white rounded-lg max-w-5xl w-full max-h-[90vh] overflow-y-auto\">\r\n            <div className=\"px-6 py-4 border-b border-gray-200\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900\">\r\n                  Trial Balance - As of {new Date().toLocaleDateString()}\r\n                </h3>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <button\r\n                    onClick={() => {\r\n                      // Export functionality would go here\r\n                      alert('Export functionality would be implemented here');\r\n                    }}\r\n                    className=\"px-3 py-1 bg-emerald-600 text-white rounded text-sm hover:bg-emerald-700 flex items-center space-x-1\"\r\n                  >\r\n                    <Download size={14} />\r\n                    <span>Export</span>\r\n                  </button>\r\n                  <button\r\n                    onClick={() => setShowTrialBalance(false)}\r\n                    className=\"text-gray-400 hover:text-gray-600\"\r\n                  >\r\n                    <X size={20} />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"px-6 py-4\">\r\n              <div className=\"overflow-x-auto\">\r\n                <table className=\"w-full\">\r\n                  <thead className=\"bg-gray-50\">\r\n                    <tr>\r\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Account Code\r\n                      </th>\r\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Account Name\r\n                      </th>\r\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Type\r\n                      </th>\r\n                      <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Debit Total\r\n                      </th>\r\n                      <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Credit Total\r\n                      </th>\r\n                      <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Balance\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                    {trialBalance.map((account) => (\r\n                      <tr key={account.accountId}>\r\n                        <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                          {account.accountCode}\r\n                        </td>\r\n                        <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                          {account.accountName}\r\n                        </td>\r\n                        <td className=\"px-4 py-4 whitespace-nowrap\">\r\n                          <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n                            account.accountType === 'assets' ? 'bg-green-100 text-green-800' :\r\n                            account.accountType === 'liabilities' ? 'bg-red-100 text-red-800' :\r\n                            account.accountType === 'equity' ? 'bg-blue-100 text-blue-800' :\r\n                            account.accountType === 'revenue' ? 'bg-purple-100 text-purple-800' :\r\n                            'bg-orange-100 text-orange-800'\r\n                          }`}>\r\n                            {account.accountType}\r\n                          </span>\r\n                        </td>\r\n                        <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\r\n                          PKR {account.debit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n                        </td>\r\n                        <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\r\n                          PKR {account.credit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n                        </td>\r\n                        <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-right\">\r\n                          <span className={account.balance >= 0 ? 'text-green-600' : 'text-red-600'}>\r\n                            PKR {Math.abs(account.balance).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n                            {account.balance < 0 && ' (CR)'}\r\n                          </span>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                  <tfoot className=\"bg-gray-50\">\r\n                    <tr>\r\n                      <td colSpan=\"3\" className=\"px-4 py-3 text-sm font-bold text-gray-900\">\r\n                        TOTALS:\r\n                      </td>\r\n                      <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\r\n                        PKR {trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n                      </td>\r\n                      <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\r\n                        PKR {trialBalance.reduce((sum, acc) => sum + acc.credit, 0).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n                      </td>\r\n                      <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\r\n                        PKR {Math.abs(trialBalance.reduce((sum, acc) => sum + acc.balance, 0)).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n                      </td>\r\n                    </tr>\r\n                  </tfoot>\r\n                </table>\r\n              </div>\r\n              \r\n              {/* Trial Balance Validation */}\r\n              <div className=\"mt-4 p-4 bg-green-50 border border-green-200 rounded-lg\">\r\n                <div className=\"flex items-center\">\r\n                  <CheckCircle className=\"text-green-600 mr-2\" size={20} />\r\n                  <div>\r\n                    <h4 className=\"font-medium text-green-800\">Trial Balance is Balanced</h4>\r\n                    <p className=\"text-sm text-green-700\">\r\n                      Total Debits = Total Credits = PKR {trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Integration Status */}\r\n      <div className=\"mt-8 grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n        <div className=\"p-4 bg-green-50 border border-green-200 rounded-lg\">\r\n          <div className=\"flex items-center mb-2\">\r\n            <CheckCircle className=\"text-green-600 mr-2\" size={16} />\r\n            <h4 className=\"font-medium text-green-800\">POS API Integration</h4>\r\n          </div>\r\n          <p className=\"text-sm text-green-700\">\r\n            Sales orders automatically create journal entries from live API data\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"p-4 bg-blue-50 border border-blue-200 rounded-lg\">\r\n          <div className=\"flex items-center mb-2\">\r\n            <RefreshCw className=\"text-blue-600 mr-2\" size={16} />\r\n            <h4 className=\"font-medium text-blue-800\">Real-time Sync</h4>\r\n          </div>\r\n          <p className=\"text-sm text-blue-700\">\r\n            Journal entries updated automatically with each sales transaction\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"p-4 bg-orange-50 border border-orange-200 rounded-lg\">\r\n          <div className=\"flex items-center mb-2\">\r\n            <FileText className=\"text-orange-600 mr-2\" size={16} />\r\n            <h4 className=\"font-medium text-orange-800\">Manual Entries</h4>\r\n          </div>\r\n          <p className=\"text-sm text-orange-700\">\r\n            Add adjustments and corrections with full double-entry validation\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GeneralLedger;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}