{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Logic-Unit\\\\my-account\\\\src\\\\pages\\\\AccountsReceivable.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { \n//   Users, \n//   DollarSign, \n//   CreditCard, \n//   AlertTriangle, \n//   Clock, \n//   Plus, \n//   Search, \n//   Filter, \n//   Eye, \n//   Edit, \n//   Download,\n//   CheckCircle,\n//   XCircle,\n//   Calendar,\n//   FileText,\n//   TrendingUp,\n//   Mail,\n//   Phone\n// } from 'lucide-react';\n// import CreateInvoiceModal from '../components/CreateInvoiceModal';\n// import InvoiceModal from '../components/InvoiceModal';\n\n// const AccountsReceivable = () => {\n//   const [customers, setCustomers] = useState([]);\n//   const [invoices, setInvoices] = useState([]);\n//   const [payments, setPayments] = useState([]);\n//   const [selectedCustomer, setSelectedCustomer] = useState(null);\n//   const [activeTab, setActiveTab] = useState('overview');\n//   const [viewInvoice, setViewInvoice] = useState(null);\n\n//   const [filters, setFilters] = useState({\n//     customerType: 'all',\n//     status: 'all',\n//     dateRange: '30',\n//     searchTerm: ''\n//   });\n//   const handleCreateInvoice = () => {\n//   // Find the customer name for the invoice\n//   const customer = customers.find(c => c.id === newInvoice.customerId);\n//   if (!customer) {\n//     alert('Please select a customer');\n//     return;\n//   }\n//   // Generate a new invoice ID (simple example)\n//   const nextId = `INV-${new Date().getFullYear()}-${String(invoices.length + 1).padStart(3, '0')}`;\n//   const invoiceTotal = calculateInvoiceTotal();\n\n//   const newInvoiceData = {\n//     id: nextId,\n//     customerId: customer.id,\n//     customerName: customer.name,\n//     date: new Date().toISOString().slice(0, 10),\n//     dueDate: newInvoice.dueDate,\n//     amount: invoiceTotal,\n//     paid: 0,\n//     balance: invoiceTotal,\n//     status: 'outstanding',\n//     daysOverdue: 0,\n//     paymentTerms: customer.paymentTerms,\n//     items: newInvoice.items,\n//     notes: newInvoice.notes,\n//     source: 'manual'\n//   };\n\n//   // Append to invoices\n//   setInvoices(prev => [...prev, newInvoiceData]);\n\n//   // Optionally update customer AR data (totalOwed, invoiceCount, etc.)\n//   setCustomers(prev =>\n//     prev.map(c =>\n//       c.id === customer.id\n//         ? {\n//             ...c,\n//             totalOwed: c.totalOwed + invoiceTotal,\n//             invoiceCount: c.invoiceCount + 1\n//           }\n//         : c\n//     )\n//   );\n\n//   // Reset the form\n//   setNewInvoice({\n//     customerId: '',\n//     dueDate: '',\n//     items: [{ description: '', quantity: 1, price: 0, total: 0 }],\n//     notes: ''\n//   });\n\n//   setShowInvoiceForm(false);\n//   alert('Invoice created successfully!');\n// };\n\n//   // const handleCreateInvoice = (invoice) => {\n//   //   setInvoices(prev => [\n//   //     {\n//   //       ...invoice,\n//   //       id: `INV-${new Date().getFullYear()}-${String(prev.length + 1).padStart(3, '0')}`\n//   //     },\n//   //     ...prev\n//   //   ]);\n//   // };\n\n//   const [showInvoiceForm, setShowInvoiceForm] = useState(false);\n//   const [newInvoice, setNewInvoice] = useState({\n//     customerId: '',\n//     dueDate: '',\n//     items: [{ description: '', quantity: 1, price: 0, total: 0 }],\n//     notes: ''\n//   });\n\n//   useEffect(() => {\n//     loadSampleData();\n//   }, []);\n\n//   const loadSampleData = () => {\n//     // Sample Customers with AR data\n//     const sampleCustomers = [\n//       {\n//         id: 'CUST001',\n//         name: 'Al Noor Medical Center',\n//         email: 'finance@alnoor.com',\n//         phone: '+966-11-123-4567',\n//         address: 'King Fahd Road, Riyadh',\n//         customerType: 'corporate',\n//         creditLimit: 50000,\n//         paymentTerms: 30,\n//         totalOwed: 15750.00,\n//         overdueAmount: 5250.00,\n//         lastPayment: '2025-01-10',\n//         creditStatus: 'good',\n//         accountBalance: -15750.00,\n//         invoiceCount: 8,\n//         avgPaymentDays: 25\n//       },\n//       {\n//         id: 'CUST002',\n//         name: 'Dr. Ahmed Clinic',\n//         email: 'dr.ahmed@clinic.com',\n//         phone: '+966-12-987-6543',\n//         address: 'Prince Sultan Street, Jeddah',\n//         customerType: 'small_business',\n//         creditLimit: 20000,\n//         paymentTerms: 15,\n//         totalOwed: 8900.00,\n//         overdueAmount: 2100.00,\n//         lastPayment: '2025-01-12',\n//         creditStatus: 'watch',\n//         accountBalance: -8900.00,\n//         invoiceCount: 5,\n//         avgPaymentDays: 18\n//       },\n//       {\n//         id: 'CUST003',\n//         name: 'Pharmacy Plus Chain',\n//         email: 'accounts@pharmacyplus.sa',\n//         phone: '+966-13-555-0123',\n//         address: 'Al Khobar, Eastern Province',\n//         customerType: 'corporate',\n//         creditLimit: 75000,\n//         paymentTerms: 45,\n//         totalOwed: 32100.00,\n//         overdueAmount: 0,\n//         lastPayment: '2025-01-14',\n//         creditStatus: 'excellent',\n//         accountBalance: -32100.00,\n//         invoiceCount: 12,\n//         avgPaymentDays: 35\n//       },\n//       {\n//         id: 'CUST004',\n//         name: 'Walk-in Customer',\n//         email: 'cash@pos.system',\n//         phone: '+966-50-000-0000',\n//         address: 'Point of Sale',\n//         customerType: 'cash',\n//         creditLimit: 0,\n//         paymentTerms: 0,\n//         totalOwed: 0,\n//         overdueAmount: 0,\n//         lastPayment: '2025-01-15',\n//         creditStatus: 'cash_only',\n//         accountBalance: 0,\n//         invoiceCount: 0,\n//         avgPaymentDays: 0\n//       }\n//     ];\n\n//     // Sample Invoices\n//     const sampleInvoices = [\n//       {\n//         id: 'INV-2025-001',\n//         customerId: 'CUST001',\n//         customerName: 'Al Noor Medical Center',\n//         date: '2025-01-15',\n//         dueDate: '2025-02-14',\n//         amount: 5250.00,\n//         paid: 0,\n//         balance: 5250.00,\n//         status: 'outstanding',\n//         daysOverdue: 0,\n//         paymentTerms: 30,\n//         items: [\n//           { description: 'A2A 25MG TAB', quantity: 100, price: 15.00, total: 1500.00 },\n//           { description: 'AALBUMIN 50ML', quantity: 150, price: 25.00, total: 3750.00 }\n//         ],\n//         notes: 'Monthly medical supplies order',\n//         source: 'manual'\n//       },\n//       {\n//         id: 'INV-2025-002',\n//         customerId: 'CUST002',\n//         customerName: 'Dr. Ahmed Clinic',\n//         date: '2025-01-10',\n//         dueDate: '2025-01-25',\n//         amount: 2100.00,\n//         paid: 0,\n//         balance: 2100.00,\n//         status: 'overdue',\n//         daysOverdue: 5,\n//         paymentTerms: 15,\n//         items: [\n//           { description: 'ABAKTAL INJ', quantity: 50, price: 30.00, total: 1500.00 },\n//           { description: 'AARAM PLUS', quantity: 20, price: 30.00, total: 600.00 }\n//         ],\n//         notes: 'Urgent medical supplies',\n//         source: 'pos'\n//       },\n//       {\n//         id: 'POS-2025-003',\n//         customerId: 'CUST001',\n//         customerName: 'Al Noor Medical Center',\n//         date: '2025-01-12',\n//         dueDate: '2025-02-11',\n//         amount: 1850.00,\n//         paid: 1850.00,\n//         balance: 0,\n//         status: 'paid',\n//         daysOverdue: 0,\n//         paymentTerms: 30,\n//         items: [\n//           { description: 'Medical supplies - POS Sale', quantity: 1, price: 1850.00, total: 1850.00 }\n//         ],\n//         notes: 'Direct POS sale - Credit account',\n//         source: 'pos'\n//       }\n//     ];\n\n//     // Sample Payments\n//     const samplePayments = [\n//       {\n//         id: 'PAY001',\n//         customerId: 'CUST001',\n//         customerName: 'Al Noor Medical Center',\n//         invoiceId: 'POS-2025-003',\n//         date: '2025-01-14',\n//         amount: 1850.00,\n//         method: 'bank_transfer',\n//         reference: 'TXN123456789',\n//         status: 'cleared',\n//         notes: 'Payment for POS sale'\n//       },\n//       {\n//         id: 'PAY002',\n//         customerId: 'CUST003',\n//         customerName: 'Pharmacy Plus Chain',\n//         invoiceId: 'INV-2024-045',\n//         date: '2025-01-12',\n//         amount: 15600.00,\n//         method: 'check',\n//         reference: 'CHK-789123',\n//         status: 'cleared',\n//         notes: 'December invoice payment'\n//       }\n//     ];\n\n//     setCustomers(sampleCustomers);\n//     setInvoices(sampleInvoices);\n//     setPayments(samplePayments);\n//   };\n\n//   const calculateARSummary = () => {\n//     const totalAR = customers.reduce((sum, customer) => sum + customer.totalOwed, 0);\n//     const totalOverdue = customers.reduce((sum, customer) => sum + customer.overdueAmount, 0);\n//     const customersWithBalance = customers.filter(customer => customer.totalOwed > 0).length;\n//     const avgDaysOutstanding = customers.reduce((sum, customer) => sum + customer.avgPaymentDays, 0) / customers.length;\n\n//     return {\n//       totalAR,\n//       totalOverdue,\n//       customersWithBalance,\n//       avgDaysOutstanding: Math.round(avgDaysOutstanding)\n//     };\n//   };\n\n//   const getAgingData = () => {\n//     const aging = {\n//       current: 0,\n//       days30: 0,\n//       days60: 0,\n//       days90: 0,\n//       over90: 0\n//     };\n\n//     invoices.forEach(invoice => {\n//       if (invoice.status === 'paid') return;\n\n//       const daysPastDue = invoice.daysOverdue || 0;\n\n//       if (daysPastDue <= 0) {\n//         aging.current += invoice.balance;\n//       } else if (daysPastDue <= 30) {\n//         aging.days30 += invoice.balance;\n//       } else if (daysPastDue <= 60) {\n//         aging.days60 += invoice.balance;\n//       } else if (daysPastDue <= 90) {\n//         aging.days90 += invoice.balance;\n//       } else {\n//         aging.over90 += invoice.balance;\n//       }\n//     });\n\n//     return aging;\n//   };\n\n//   const getFilteredCustomers = () => {\n//     let filtered = [...customers];\n\n//     if (filters.customerType !== 'all') {\n//       filtered = filtered.filter(customer => customer.customerType === filters.customerType);\n//     }\n\n//     if (filters.status !== 'all') {\n//       filtered = filtered.filter(customer => {\n//         if (filters.status === 'overdue') return customer.overdueAmount > 0;\n//         if (filters.status === 'current') return customer.totalOwed > 0 && customer.overdueAmount === 0;\n//         if (filters.status === 'paid_up') return customer.totalOwed === 0;\n//         return true;\n//       });\n//     }\n\n//     if (filters.searchTerm) {\n//       const term = filters.searchTerm.toLowerCase();\n//       filtered = filtered.filter(customer =>\n//         customer.name.toLowerCase().includes(term) ||\n//         customer.email.toLowerCase().includes(term) ||\n//         customer.id.toLowerCase().includes(term)\n//       );\n//     }\n\n//     return filtered;\n//   };\n\n//   const getCreditStatusColor = (status) => {\n//     switch (status) {\n//       case 'excellent': return 'bg-green-100 text-green-800';\n//       case 'good': return 'bg-blue-100 text-blue-800';\n//       case 'watch': return 'bg-yellow-100 text-yellow-800';\n//       case 'hold': return 'bg-red-100 text-red-800';\n//       case 'cash_only': return 'bg-gray-100 text-gray-800';\n//       default: return 'bg-gray-100 text-gray-800';\n//     }\n//   };\n\n//   const getInvoiceStatusColor = (status) => {\n//     switch (status) {\n//       case 'paid': return 'bg-green-100 text-green-800';\n//       case 'outstanding': return 'bg-blue-100 text-blue-800';\n//       case 'overdue': return 'bg-red-100 text-red-800';\n//       case 'partial': return 'bg-yellow-100 text-yellow-800';\n//       default: return 'bg-gray-100 text-gray-800';\n//     }\n//   };\n\n//   const addInvoiceItem = () => {\n//     setNewInvoice({\n//       ...newInvoice,\n//       items: [...newInvoice.items, { description: '', quantity: 1, price: 0, total: 0 }]\n//     });\n//   };\n\n//   const updateInvoiceItem = (index, field, value) => {\n//     const updatedItems = [...newInvoice.items];\n//     updatedItems[index] = { ...updatedItems[index], [field]: value };\n\n//     if (field === 'quantity' || field === 'price') {\n//       updatedItems[index].total = updatedItems[index].quantity * updatedItems[index].price;\n//     }\n\n//     setNewInvoice({ ...newInvoice, items: updatedItems });\n//   };\n\n//   const calculateInvoiceTotal = () => {\n//     return newInvoice.items.reduce((sum, item) => sum + item.total, 0);\n//   };\n\n//   const summary = calculateARSummary();\n//   const aging = getAgingData();\n//   const filteredCustomers = getFilteredCustomers();\n\n//   return (\n//     <div className=\"max-w-7xl mx-auto p-6 bg-white\">\n//       {/* Header */}\n//       <div className=\"mb-8\">\n//         <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\n//           <CreditCard className=\"mr-3 text-emerald-600\" />\n//           Accounts Receivable\n//         </h1>\n//         <p className=\"text-gray-600\">Manage customer invoicing, payments, and credit limits</p>\n//       </div>\n\n//       {/* Summary Cards */}\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n//         <div className=\"bg-blue-50 p-6 rounded-lg border border-blue-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-blue-600 text-sm font-medium\">Total A/R</p>\n//               <p className=\"text-2xl font-bold text-blue-900\">${summary.totalAR.toFixed(2)}</p>\n//             </div>\n//             <DollarSign className=\"text-blue-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-blue-700 mt-2\">{summary.customersWithBalance} customers with balances</p>\n//         </div>\n\n//         <div className=\"bg-red-50 p-6 rounded-lg border border-red-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-red-600 text-sm font-medium\">Overdue Amount</p>\n//               <p className=\"text-2xl font-bold text-red-900\">${summary.totalOverdue.toFixed(2)}</p>\n//             </div>\n//             <AlertTriangle className=\"text-red-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-red-700 mt-2\">\n//             {((summary.totalOverdue / summary.totalAR) * 100).toFixed(1)}% of total A/R\n//           </p>\n//         </div>\n\n//         <div className=\"bg-green-50 p-6 rounded-lg border border-green-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-green-600 text-sm font-medium\">Avg. Days Outstanding</p>\n//               <p className=\"text-2xl font-bold text-green-900\">{summary.avgDaysOutstanding}</p>\n//             </div>\n//             <Clock className=\"text-green-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-green-700 mt-2\">Collection performance</p>\n//         </div>\n\n//         <div className=\"bg-purple-50 p-6 rounded-lg border border-purple-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-purple-600 text-sm font-medium\">Active Customers</p>\n//               <p className=\"text-2xl font-bold text-purple-900\">{customers.length}</p>\n//             </div>\n//             <Users className=\"text-purple-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-purple-700 mt-2\">Total customer accounts</p>\n//         </div>\n//       </div>\n\n//       {/* Tabs */}\n//       <div className=\"mb-6\">\n//         <div className=\"border-b border-gray-200\">\n//           <nav className=\"-mb-px flex space-x-8\">\n//             {[\n//               { id: 'overview', name: 'Customer Overview', icon: Users },\n//               { id: 'invoices', name: 'Invoices', icon: FileText },\n//               { id: 'aging', name: 'Aging Report', icon: Clock },\n//               { id: 'payments', name: 'Payments', icon: CheckCircle }\n//             ].map((tab) => (\n//               <button\n//                 key={tab.id}\n//                 onClick={() => setActiveTab(tab.id)}\n//                 className={`flex items-center py-2 px-1 border-b-2 font-medium text-sm ${\n//                   activeTab === tab.id\n//                     ? 'border-emerald-500 text-emerald-600'\n//                     : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n//                 }`}\n//               >\n//                 <tab.icon className=\"mr-2\" size={16} />\n//                 {tab.name}\n//               </button>\n//             ))}\n//           </nav>\n//         </div>\n//       </div>\n\n//       {/* Tab Content */}\n//       {activeTab === 'overview' && (\n//         <div>\n//           {/* Filters */}\n//           <div className=\"flex flex-wrap items-center gap-4 mb-6\">\n//             <div className=\"relative\">\n//               <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\n//               <input\n//                 type=\"text\"\n//                 placeholder=\"Search customers...\"\n//                 value={filters.searchTerm}\n//                 onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\n//                 className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               />\n//             </div>\n\n//             <select\n//               value={filters.customerType}\n//               onChange={(e) => setFilters({ ...filters, customerType: e.target.value })}\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//             >\n//               <option value=\"all\">All Customer Types</option>\n//               <option value=\"corporate\">Corporate</option>\n//               <option value=\"small_business\">Small Business</option>\n//               <option value=\"individual\">Individual</option>\n//               <option value=\"cash\">Cash Only</option>\n//             </select>\n\n//             <select\n//               value={filters.status}\n//               onChange={(e) => setFilters({ ...filters, status: e.target.value })}\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//             >\n//               <option value=\"all\">All Statuses</option>\n//               <option value=\"current\">Current</option>\n//               <option value=\"overdue\">Overdue</option>\n//               <option value=\"paid_up\">Paid Up</option>\n//             </select>\n\n//             <button\n//               onClick={() => setShowInvoiceForm(true)}\n//               className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\n//             >\n//               <Plus size={16} />\n//               <span>New Invoice</span>\n//             </button>\n//           </div>\n\n//           {/* Customer List */}\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//             <div className=\"overflow-x-auto\">\n//               <table className=\"w-full\">\n//                 <thead className=\"bg-gray-50\">\n//                   <tr>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Customer\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Type\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Credit Limit\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Balance\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Overdue\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Credit Status\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Last Payment\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Actions\n//                     </th>\n//                   </tr>\n//                 </thead>\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\n//                   {filteredCustomers.map((customer) => (\n//                     <tr key={customer.id} className=\"hover:bg-gray-50\">\n//                       <td className=\"px-6 py-4\">\n//                         <div>\n//                           <div className=\"text-sm font-medium text-gray-900\">{customer.name}</div>\n//                           <div className=\"text-sm text-gray-500\">{customer.id}</div>\n//                           <div className=\"text-xs text-gray-400 flex items-center mt-1\">\n//                             <Mail className=\"mr-1\" size={12} />\n//                             {customer.email}\n//                           </div>\n//                         </div>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-gray-100 text-gray-800\">\n//                           {customer.customerType.replace('_', ' ')}\n//                         </span>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         ${customer.creditLimit.toLocaleString()}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <div className=\"text-sm font-medium text-gray-900\">\n//                           ${customer.totalOwed.toFixed(2)}\n//                         </div>\n//                         <div className=\"text-xs text-gray-500\">\n//                           {customer.invoiceCount} invoices\n//                         </div>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         {customer.overdueAmount > 0 ? (\n//                           <span className=\"text-red-600 font-medium\">\n//                             ${customer.overdueAmount.toFixed(2)}\n//                           </span>\n//                         ) : (\n//                           <span className=\"text-green-600\">$0.00</span>\n//                         )}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(customer.creditStatus)}`}>\n//                           {customer.creditStatus.replace('_', ' ')}\n//                         </span>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {customer.lastPayment}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n//                         <button\n//                           onClick={() => setSelectedCustomer(customer)}\n//                           className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\n//                         >\n//                           <Eye size={16} />\n//                         </button>\n//                         <button className=\"text-blue-600 hover:text-blue-900\">\n//                           <Edit size={16} />\n//                         </button>\n//                       </td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {activeTab === 'aging' && (\n//         <div>\n//           <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n//             {/* Aging Summary */}\n//             <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n//               <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Aging Summary</h3>\n//               <div className=\"space-y-4\">\n//                 <div className=\"flex justify-between items-center p-3 bg-green-50 rounded\">\n//                   <span className=\"font-medium text-green-800\">Current (0-30 days)</span>\n//                   <span className=\"font-bold text-green-900\">${aging.current.toFixed(2)}</span>\n//                 </div>\n//                 <div className=\"flex justify-between items-center p-3 bg-yellow-50 rounded\">\n//                   <span className=\"font-medium text-yellow-800\">31-60 days</span>\n//                   <span className=\"font-bold text-yellow-900\">${aging.days30.toFixed(2)}</span>\n//                 </div>\n//                 <div className=\"flex justify-between items-center p-3 bg-orange-50 rounded\">\n//                   <span className=\"font-medium text-orange-800\">61-90 days</span>\n//                   <span className=\"font-bold text-orange-900\">${aging.days60.toFixed(2)}</span>\n//                 </div>\n//                 <div className=\"flex justify-between items-center p-3 bg-red-50 rounded\">\n//                   <span className=\"font-medium text-red-800\">Over 90 days</span>\n//                   <span className=\"font-bold text-red-900\">${aging.over90.toFixed(2)}</span>\n//                 </div>\n//               </div>\n//               <div className=\"mt-4 pt-4 border-t\">\n//                 <div className=\"flex justify-between items-center\">\n//                   <span className=\"text-lg font-semibold text-gray-900\">Total Outstanding</span>\n//                   <span className=\"text-xl font-bold text-gray-900\">\n//                     ${(aging.current + aging.days30 + aging.days60 + aging.days90 + aging.over90).toFixed(2)}\n//                   </span>\n//                 </div>\n//               </div>\n//             </div>\n\n//             {/* Collection Priority */}\n//             <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n//               <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Collection Priority</h3>\n//               <div className=\"space-y-3\">\n//                 {customers\n//                   .filter(customer => customer.overdueAmount > 0)\n//                   .sort((a, b) => b.overdueAmount - a.overdueAmount)\n//                   .slice(0, 5)\n//                   .map((customer, index) => (\n//                     <div key={customer.id} className=\"flex items-center justify-between p-3 bg-red-50 rounded\">\n//                       <div>\n//                         <div className=\"font-medium text-gray-900\">{customer.name}</div>\n//                         <div className=\"text-sm text-gray-500\">\n//                           Last payment: {customer.lastPayment}\n//                         </div>\n//                       </div>\n//                       <div className=\"text-right\">\n//                         <div className=\"font-bold text-red-900\">${customer.overdueAmount.toFixed(2)}</div>\n//                         <div className=\"text-xs text-red-700\">#{index + 1} Priority</div>\n//                       </div>\n//                     </div>\n//                   ))}\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {activeTab === 'invoices' && (\n//         <div>\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <h3 className=\"text-lg font-semibold text-gray-900\">Recent Invoices</h3>\n//             </div>\n//             <div className=\"overflow-x-auto\">\n//               <table className=\"w-full\">\n//                 <thead className=\"bg-gray-50\">\n//                   <tr>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Invoice #\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Customer\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Date\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Due Date\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Amount\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Balance\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Status\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Actions\n//                     </th>\n//                   </tr>\n//                 </thead>\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\n//                   {invoices.map((invoice) => (\n//                     <tr key={invoice.id} className=\"hover:bg-gray-50\">\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <div className=\"text-sm font-medium text-gray-900\">{invoice.id}</div>\n//                         <div className=\"text-xs text-gray-500\">{invoice.source}</div>\n//                       </td>\n//                       <td className=\"px-6 py-4\">\n//                         <div className=\"text-sm font-medium text-gray-900\">{invoice.customerName}</div>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {invoice.date}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {invoice.dueDate}\n//                         {invoice.daysOverdue > 0 && (\n//                           <div className=\"text-xs text-red-600\">\n//                             {invoice.daysOverdue} days overdue\n//                           </div>\n//                         )}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         ${invoice.amount.toFixed(2)}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n//                         {invoice.balance > 0 ? (\n//                           <span className=\"text-red-600\">${invoice.balance.toFixed(2)}</span>\n//                         ) : (\n//                           <span className=\"text-green-600\">$0.00</span>\n//                         )}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${getInvoiceStatusColor(invoice.status)}`}>\n//                           {invoice.status}\n//                         </span>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n//                           <button\n//                               className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\n//                               onClick={() => setViewInvoice(invoice)}\n//                             >\n//                               <Eye size={16} />\n//                             </button>\n//                         <button className=\"text-blue-600 hover:text-blue-900\">\n//                           <Download size={16} />\n//                         </button>\n//                       </td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           </div>\n//           {/* View Invoice Modal */}\n//           <InvoiceModal\n//             invoice={viewInvoice}\n//             onClose={() => setViewInvoice(null)}\n//           />\n//         </div>\n//       )}\n\n//       {/* Create Invoice Modal */}\n//       {showInvoiceForm && (\n//         <CreateInvoiceModal\n//           customers={customers}\n//           onClose={() => setShowInvoiceForm(false)}\n//           onCreate={handleCreateInvoice}\n//         />\n\n//       )}\n\n//       {activeTab === 'payments' && (\n//         <div>\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <h3 className=\"text-lg font-semibold text-gray-900\">Recent Payments</h3>\n//             </div>\n//             <div className=\"overflow-x-auto\">\n//               <table className=\"w-full\">\n//                 <thead className=\"bg-gray-50\">\n//                   <tr>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Payment ID\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Customer\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Invoice\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Date\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Amount\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Method\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Status\n//                     </th>\n//                   </tr>\n//                 </thead>\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\n//                   {payments.map((payment) => (\n//                     <tr key={payment.id} className=\"hover:bg-gray-50\">\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n//                         {payment.id}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {payment.customerName}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {payment.invoiceId}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {payment.date}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         ${payment.amount.toFixed(2)}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-blue-100 text-blue-800\">\n//                           {payment.method.replace('_', ' ')}\n//                         </span>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                           payment.status === 'cleared' ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n//                         }`}>\n//                           {payment.status}\n//                         </span>\n//                       </td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Customer Detail Modal */}\n//       {selectedCustomer && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <div className=\"flex items-center justify-between\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\n//                   Customer Details - {selectedCustomer.name}\n//                 </h3>\n//                 <button\n//                   onClick={() => setSelectedCustomer(null)}\n//                   className=\"text-gray-400 hover:text-gray-600\"\n//                 >\n//                   <XCircle size={20} />\n//                 </button>\n//               </div>\n//             </div>\n\n//             <div className=\"px-6 py-4\">\n//               {/* Customer Info Grid */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n//                 <div className=\"space-y-4\">\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer ID</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.id}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Email</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.email}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Phone</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.phone}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Address</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.address}</p>\n//                   </div>\n//                 </div>\n\n//                 <div className=\"space-y-4\">\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer Type</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.customerType.replace('_', ' ')}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Limit</label>\n//                     <p className=\"text-sm text-gray-900\">${selectedCustomer.creditLimit.toLocaleString()}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Payment Terms</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.paymentTerms} days</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Status</label>\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(selectedCustomer.creditStatus)}`}>\n//                       {selectedCustomer.creditStatus.replace('_', ' ')}\n//                     </span>\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Financial Summary */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n//                 <div className=\"bg-blue-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-blue-600\">Current Balance</div>\n//                   <div className=\"text-xl font-bold text-blue-900\">\n//                     ${selectedCustomer.totalOwed.toFixed(2)}\n//                   </div>\n//                 </div>\n//                 <div className=\"bg-red-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-red-600\">Overdue Amount</div>\n//                   <div className=\"text-xl font-bold text-red-900\">\n//                     ${selectedCustomer.overdueAmount.toFixed(2)}\n//                   </div>\n//                 </div>\n//                 <div className=\"bg-green-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-green-600\">Credit Available</div>\n//                   <div className=\"text-xl font-bold text-green-900\">\n//                     ${(selectedCustomer.creditLimit - selectedCustomer.totalOwed).toFixed(2)}\n//                   </div>\n//                 </div>\n//                 <div className=\"bg-purple-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-purple-600\">Avg Payment Days</div>\n//                   <div className=\"text-xl font-bold text-purple-900\">\n//                     {selectedCustomer.avgPaymentDays}\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Customer Invoices */}\n//               <div className=\"mb-6\">\n//                 <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Customer Invoices</h4>\n//                 <div className=\"overflow-x-auto\">\n//                   <table className=\"w-full border border-gray-200 rounded\">\n//                     <thead className=\"bg-gray-50\">\n//                       <tr>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Invoice</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Date</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Due Date</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Amount</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Balance</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Status</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody className=\"divide-y divide-gray-200\">\n//                       {invoices\n//                         .filter(inv => inv.customerId === selectedCustomer.id)\n//                         .map((invoice) => (\n//                           <tr key={invoice.id}>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{invoice.id}</td>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{invoice.date}</td>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{invoice.dueDate}</td>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">${invoice.amount.toFixed(2)}</td>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">${invoice.balance.toFixed(2)}</td>\n//                             <td className=\"px-4 py-2\">\n//                               <span className={`px-2 py-1 text-xs font-medium rounded-full ${getInvoiceStatusColor(invoice.status)}`}>\n//                                 {invoice.status}\n//                               </span>\n//                             </td>\n//                           </tr>\n//                         ))}\n//                     </tbody>\n//                   </table>\n//                 </div>\n//               </div>\n\n//               {/* Action Buttons */}\n//               <div className=\"flex space-x-3\">\n//                 <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\n//                   <Plus size={16} />\n//                   <span>New Invoice</span>\n//                 </button>\n//                 <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\n//                   <CheckCircle size={16} />\n//                   <span>Record Payment</span>\n//                 </button>\n//                 <button className=\"px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 flex items-center space-x-2\">\n//                   <Mail size={16} />\n//                   <span>Send Statement</span>\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* New Invoice Form */}\n//       {showInvoiceForm && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <div className=\"flex items-center justify-between\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">Create New Invoice</h3>\n//                 <button\n//                   onClick={() => setShowInvoiceForm(false)}\n//                   className=\"text-gray-400 hover:text-gray-600\"\n//                 >\n//                   <XCircle size={20} />\n//                 </button>\n//               </div>\n//             </div>\n\n//             <div className=\"px-6 py-4\">\n//               {/* Invoice Header */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\n//                 <div>\n//                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">Customer *</label>\n//                   <select\n//                     value={newInvoice.customerId}\n//                     onChange={(e) => setNewInvoice({ ...newInvoice, customerId: e.target.value })}\n//                     className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//                   >\n//                     <option value=\"\">Select Customer</option>\n//                     {customers.filter(c => c.customerType !== 'cash').map(customer => (\n//                       <option key={customer.id} value={customer.id}>\n//                         {customer.name} ({customer.id})\n//                       </option>\n//                     ))}\n//                   </select>\n//                 </div>\n//                 <div>\n//                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">Due Date *</label>\n//                   <input\n//                     type=\"date\"\n//                     value={newInvoice.dueDate}\n//                     onChange={(e) => setNewInvoice({ ...newInvoice, dueDate: e.target.value })}\n//                     className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//                   />\n//                 </div>\n//               </div>\n\n//               {/* Invoice Items */}\n//               <div className=\"mb-6\">\n//                 <label className=\"block text-sm font-medium text-gray-700 mb-2\">Invoice Items</label>\n//                 <div className=\"space-y-3\">\n//                   {newInvoice.items.map((item, index) => (\n//                     <div key={index} className=\"grid grid-cols-12 gap-2 items-center bg-gray-50 p-3 rounded\">\n//                       <div className=\"col-span-5\">\n//                         <input\n//                           type=\"text\"\n//                           value={item.description}\n//                           onChange={(e) => updateInvoiceItem(index, 'description', e.target.value)}\n//                           placeholder=\"Item description\"\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                         />\n//                       </div>\n//                       <div className=\"col-span-2\">\n//                         <input\n//                           type=\"number\"\n//                           value={item.quantity}\n//                           onChange={(e) => updateInvoiceItem(index, 'quantity', parseFloat(e.target.value) || 0)}\n//                           placeholder=\"Qty\"\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                         />\n//                       </div>\n//                       <div className=\"col-span-2\">\n//                         <input\n//                           type=\"number\"\n//                           step=\"0.01\"\n//                           value={item.price}\n//                           onChange={(e) => updateInvoiceItem(index, 'price', parseFloat(e.target.value) || 0)}\n//                           placeholder=\"Price\"\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                         />\n//                       </div>\n//                       <div className=\"col-span-2\">\n//                         <input\n//                           type=\"number\"\n//                           step=\"0.01\"\n//                           value={item.total}\n//                           readOnly\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm bg-gray-100\"\n//                         />\n//                       </div>\n//                       <div className=\"col-span-1\">\n//                         {newInvoice.items.length > 1 && (\n//                           <button\n//                             onClick={() => {\n//                               const updatedItems = newInvoice.items.filter((_, i) => i !== index);\n//                               setNewInvoice({ ...newInvoice, items: updatedItems });\n//                             }}\n//                             className=\"p-1 text-red-600 hover:bg-red-100 rounded\"\n//                           >\n//                             <XCircle size={14} />\n//                           </button>\n//                         )}\n//                       </div>\n//                     </div>\n//                   ))}\n//                 </div>\n\n//                 <div className=\"flex justify-between items-center mt-3\">\n//                   <button\n//                     onClick={addInvoiceItem}\n//                     className=\"px-3 py-1 text-sm bg-emerald-100 text-emerald-700 rounded hover:bg-emerald-200 flex items-center space-x-1\"\n//                   >\n//                     <Plus size={14} />\n//                     <span>Add Item</span>\n//                   </button>\n\n//                   <div className=\"text-lg font-semibold\">\n//                     Total: ${calculateInvoiceTotal().toFixed(2)}\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Notes */}\n//               <div className=\"mb-6\">\n//                 <label className=\"block text-sm font-medium text-gray-700 mb-1\">Notes</label>\n//                 <textarea\n//                   value={newInvoice.notes}\n//                   onChange={(e) => setNewInvoice({ ...newInvoice, notes: e.target.value })}\n//                   rows={3}\n//                   placeholder=\"Additional notes...\"\n//                   className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//                 />\n//               </div>\n\n//               {/* Action Buttons */}\n//               <div className=\"flex space-x-3\">\n//                 <button\n//                   onClick={() => {\n//                     handleCreateInvoice()\n\n//                     // Save invoice logic would go here\n//                     alert('Invoice created successfully!');\n//                   //  setShowInvoiceForm(false);\n//                   }}\n//                   className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\n//                 >\n//                   <CheckCircle size={16} />\n//                   <span>Create Invoice</span>\n//                 </button>\n//                 <button\n//                   onClick={() => setShowInvoiceForm(false)}\n//                   className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\"\n//                 >\n//                   <XCircle size={16} />\n//                   <span>Cancel</span>\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Integration Status */}\n//       <div className=\"mt-8 p-6 bg-green-50 border border-green-200 rounded-lg\">\n//         <div className=\"flex items-center mb-4\">\n//           <CheckCircle className=\"text-green-600 mr-2\" size={20} />\n//           <h3 className=\"font-medium text-green-800\">POS Integration Active</h3>\n//         </div>\n//         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm text-green-700\">\n//           <div>\n//             <strong>Credit Sales:</strong> Automatically create AR entries when customers buy on credit in POS\n//           </div>\n//           <div>\n//             <strong>Customer Limits:</strong> POS checks credit limits before allowing credit sales\n//           </div>\n//           <div>\n//             <strong>Real-time Updates:</strong> Customer balances update instantly with each transaction\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AccountsReceivable;\n\n//correct\n// import React, { useState, useEffect } from 'react';\n// import { \n//   Users, \n//   DollarSign, \n//   CreditCard, \n//   AlertTriangle, \n//   Clock, \n//   Plus, \n//   Search, \n//   Filter, \n//   Eye, \n//   Edit, \n//   Download,\n//   CheckCircle,\n//   XCircle,\n//   Calendar,\n//   FileText,\n//   TrendingUp,\n//   Mail,\n//   Phone,\n//   Printer,\n//   Send\n// } from 'lucide-react';\n\n// const AccountsReceivable = () => {\n//   const [customers, setCustomers] = useState([]);\n//   const [invoices, setInvoices] = useState([]);\n//   const [payments, setPayments] = useState([]);\n//   const [selectedCustomer, setSelectedCustomer] = useState(null);\n//   const [activeTab, setActiveTab] = useState('overview');\n//   const [viewInvoice, setViewInvoice] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const [salesOrders, setSalesOrders] = useState([]);\n\n//   const [filters, setFilters] = useState({\n//     customerType: 'all',\n//     status: 'all',\n//     dateRange: '30',\n//     searchTerm: ''\n//   });\n\n//   const [showInvoiceForm, setShowInvoiceForm] = useState(false);\n//   const [newInvoice, setNewInvoice] = useState({\n//     customerId: '',\n//     dueDate: '',\n//     items: [{ description: '', quantity: 1, price: 0, total: 0 }],\n//     notes: ''\n//   });\n\n//   // API Configuration\n//   const API_BASE_URL_SALES = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/orders?start=0&size=200';\n//   const API_CUSTOMERS='https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/customers?status=Active';\n//   // Fetch sales orders from API\n//   const fetchSalesOrders = async () => {\n//     setLoading(true);\n//     try {\n//       const response = await fetch(API_BASE_URL_SALES, {\n//         method: 'GET',\n//         headers: {\n//           'Authorization': 'Bearer Hamid',\n//           'Content-Type': 'application/json',\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`API request failed with status ${response.status}`);\n//       }\n\n//       const data = await response.json();\n//       setSalesOrders(data);\n//       processARData(data);\n//     } catch (error) {\n//       console.error('Error fetching sales orders:', error);\n//       // Load sample data as fallback\n//       loadSampleData();\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   // Fetch both sales orders and customers from API\n// const fetchData = async () => {\n//   setLoading(true);\n//   try {\n//     // Fetch both data sources in parallel\n//     const [ordersResponse, customersResponse] = await Promise.all([\n//       fetch(API_BASE_URL_SALES, {\n//         method: 'GET',\n//         headers: {\n//           'Authorization': 'Bearer Hamid',\n//           'Content-Type': 'application/json',\n//         },\n//       }),\n//       fetch(API_CUSTOMERS, {\n//         method: 'GET',\n//         headers: {\n//           'Authorization': 'Bearer Hamid',\n//           'Content-Type': 'application/json',\n//         },\n//       })\n//     ]);\n\n//     if (!ordersResponse.ok || !customersResponse.ok) {\n//       throw new Error(`API request failed with status ${ordersResponse.status}/${customersResponse.status}`);\n//     }\n\n//     const ordersData = await ordersResponse.json();\n//     const customersData = await customersResponse.json();\n\n//     setSalesOrders(ordersData);\n//     processARData(ordersData, customersData);\n//   } catch (error) {\n//     console.error('Error fetching data:', error);\n//     // Load sample data as fallback\n//     loadSampleData();\n//   } finally {\n//     setLoading(false);\n//   }\n// };\n\n//   // // Process API data to create AR entries\n//   const processARData = (orders) => {\n//     // Group orders by customer and create customer records\n//     const customerMap = new Map();\n//     const invoiceList = [];\n//     const paymentList = [];\n\n//     orders.forEach(order => {\n//       // Skip draft orders\n//       if (order.draft) return;\n\n//       // Extract customer info (using orderId as customer identifier for now)\n//       const customerId = order.customerId || `CUST-${order.orderId}`;\n\n//       if (!customerMap.has(customerId)) {\n//         customerMap.set(customerId, {\n//           id: customerId,\n//           name: order.customerName || `Customer ${customers}`,\n//           email: order.customerEmail || 'customer@example.com',\n//           phone: order.customerPhone || '+966-50-000-0000',\n//           address: order.customerAddress || 'Saudi Arabia',\n//           customerType: order.paymentMethod === 'cash' ? 'cash' : 'credit',\n//           creditLimit: 50000, // Default credit limit\n//           paymentTerms: 30,\n//           totalOwed: 0,\n//           overdueAmount: 0,\n//           lastPayment: null,\n//           creditStatus: 'good',\n//           accountBalance: 0,\n//           invoiceCount: 0,\n//           avgPaymentDays: 0\n//         });\n//       }\n//       console.log('customerMap',customerMap);\n\n//       // Create invoice from order\n//       const invoice = {\n//         id: `INV-${order.orderId}`,\n//         customerId: customerId,\n//         customerName: order.customerName || `Customer ${customerId}`,\n//         date: formatDate(order.createdAt),\n//         dueDate: calculateDueDate(order.createdAt, 30),\n//         amount: parseFloat(order.total) || 0,\n//         paid: order.paid ? parseFloat(order.total) : 0,\n//         balance: order.paid ? 0 : parseFloat(order.total) || 0,\n//         status: order.paid ? 'paid' : (isOverdue(order.createdAt, 30) ? 'overdue' : 'outstanding'),\n//         daysOverdue: calculateDaysOverdue(order.createdAt, 30),\n//         paymentTerms: 30,\n//         items: order.lineItems?.map(item => ({\n//           description: item.productName,\n//           quantity: item.quantity,\n//           price: item.price,\n//           total: item.total\n//         })) || [],\n//         notes: order.notes || '',\n//         source: 'pos'\n//       };\n\n//       invoiceList.push(invoice);\n\n//       // Update customer totals\n//       const customer = customerMap.get(customerId);\n//       if (!order.paid) {\n//         customer.totalOwed += invoice.balance;\n//         if (invoice.status === 'overdue') {\n//           customer.overdueAmount += invoice.balance;\n//         }\n//       }\n//       customer.invoiceCount++;\n\n//       // Create payment record if paid\n//       if (order.unpaid) {\n//         paymentList.push({\n//           id: `PAY-${order.orderId}`,\n//           customerId: customerId,\n//           customerName: order.customerName || `Customer ${customerId}`,\n//           invoiceId: invoice.id,\n//           date: formatDate(order.createdAt),\n//           amount: parseFloat(order.total),\n//           method: order.paymentMethod || 'cash',\n//           reference: `TXN-${order.orderId}`,\n//           status: 'cleared',\n//           notes: 'POS payment'\n//         });\n\n//         customer.lastPayment = formatDate(order.createdAt);\n//       }\n//     });\n\n//     // Update credit status based on outstanding amounts\n//     customerMap.forEach(customer => {\n//       const utilizationRate = customer.totalOwed / customer.creditLimit;\n//       if (customer.overdueAmount > 0) {\n//         customer.creditStatus = 'watch';\n//       } else if (utilizationRate > 0.8) {\n//         customer.creditStatus = 'watch';\n//       } else if (utilizationRate > 0.5) {\n//         customer.creditStatus = 'good';\n//       } else {\n//         customer.creditStatus = 'excellent';\n//       }\n//     });\n\n//     setCustomers(Array.from(customerMap.values()));\n//     setInvoices(invoiceList);\n//     setPayments(paymentList);\n//   };\n\n//   // Helper functions\n//   const formatDate = (dateString) => {\n//     if (!dateString) return new Date().toISOString().split('T')[0];\n\n//     // Handle the format \"2025.08.18.10.08.54.569\"\n//     const parts = dateString.split('.');\n//     if (parts.length >= 3) {\n//       return `${parts[0]}-${parts[1].padStart(2, '0')}-${parts[2].padStart(2, '0')}`;\n//     }\n//     return new Date().toISOString().split('T')[0];\n//   };\n\n//   const calculateDueDate = (createdAt, terms) => {\n//     const date = new Date(formatDate(createdAt));\n//     date.setDate(date.getDate() + terms);\n//     return date.toISOString().split('T')[0];\n//   };\n\n//   const isOverdue = (createdAt, terms) => {\n//     const dueDate = new Date(calculateDueDate(createdAt, terms));\n//     return dueDate < new Date();\n//   };\n\n//   const calculateDaysOverdue = (createdAt, terms) => {\n//     const dueDate = new Date(calculateDueDate(createdAt, terms));\n//     const today = new Date();\n//     if (dueDate >= today) return 0;\n\n//     const diffTime = Math.abs(today - dueDate);\n//     return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n//   };\n\n//   useEffect(() => {\n//     fetchData();\n//   }, []);\n\n//   const loadSampleData = () => {\n//     // Fallback sample data\n//     const sampleCustomers = [\n//       {\n//         id: 'CUST001',\n//         name: 'Al Noor Medical Center',\n//         email: 'finance@alnoor.com',\n//         phone: '+966-11-123-4567',\n//         address: 'King Fahd Road, Riyadh',\n//         customerType: 'corporate',\n//         creditLimit: 50000,\n//         paymentTerms: 30,\n//         totalOwed: 15750.00,\n//         overdueAmount: 5250.00,\n//         lastPayment: '2025-01-10',\n//         creditStatus: 'good',\n//         accountBalance: -15750.00,\n//         invoiceCount: 8,\n//         avgPaymentDays: 25\n//       },\n//       {\n//         id: 'CUST002',\n//         name: 'Dr. Ahmed Clinic',\n//         email: 'dr.ahmed@clinic.com',\n//         phone: '+966-12-987-6543',\n//         address: 'Prince Sultan Street, Jeddah',\n//         customerType: 'small_business',\n//         creditLimit: 20000,\n//         paymentTerms: 15,\n//         totalOwed: 8900.00,\n//         overdueAmount: 2100.00,\n//         lastPayment: '2025-01-12',\n//         creditStatus: 'watch',\n//         accountBalance: -8900.00,\n//         invoiceCount: 5,\n//         avgPaymentDays: 18\n//       },\n//       {\n//         id: 'CUST003',\n//         name: 'Pharmacy Plus Chain',\n//         email: 'accounts@pharmacyplus.sa',\n//         phone: '+966-13-555-0123',\n//         address: 'Al Khobar, Eastern Province',\n//         customerType: 'corporate',\n//         creditLimit: 75000,\n//         paymentTerms: 45,\n//         totalOwed: 32100.00,\n//         overdueAmount: 0,\n//         lastPayment: '2025-01-14',\n//         creditStatus: 'excellent',\n//         accountBalance: -32100.00,\n//         invoiceCount: 12,\n//         avgPaymentDays: 35\n//       },\n//       {\n//         id: 'CUST004',\n//         name: 'Walk-in Customer',\n//         email: 'cash@pos.system',\n//         phone: '+966-50-000-0000',\n//         address: 'Point of Sale',\n//         customerType: 'cash',\n//         creditLimit: 0,\n//         paymentTerms: 0,\n//         totalOwed: 0,\n//         overdueAmount: 0,\n//         lastPayment: '2025-01-15',\n//         creditStatus: 'cash_only',\n//         accountBalance: 0,\n//         invoiceCount: 0,\n//         avgPaymentDays: 0\n//       }\n//     ];\n\n//     const sampleInvoices = [\n//       {\n//         id: 'INV-2025-001',\n//         customerId: 'CUST001',\n//         customerName: 'Al Noor Medical Center',\n//         date: '2025-01-15',\n//         dueDate: '2025-02-14',\n//         amount: 5250.00,\n//         paid: 0,\n//         balance: 5250.00,\n//         status: 'outstanding',\n//         daysOverdue: 0,\n//         paymentTerms: 30,\n//         items: [\n//           { description: 'A2A 25MG TAB', quantity: 100, price: 15.00, total: 1500.00 },\n//           { description: 'AALBUMIN 50ML', quantity: 150, price: 25.00, total: 3750.00 }\n//         ],\n//         notes: 'Monthly medical supplies order',\n//         source: 'manual'\n//       },\n//       {\n//         id: 'INV-2025-002',\n//         customerId: 'CUST002',\n//         customerName: 'Dr. Ahmed Clinic',\n//         date: '2025-01-10',\n//         dueDate: '2025-01-25',\n//         amount: 2100.00,\n//         paid: 0,\n//         balance: 2100.00,\n//         status: 'overdue',\n//         daysOverdue: 5,\n//         paymentTerms: 15,\n//         items: [\n//           { description: 'ABAKTAL INJ', quantity: 50, price: 30.00, total: 1500.00 },\n//           { description: 'AARAM PLUS', quantity: 20, price: 30.00, total: 600.00 }\n//         ],\n//         notes: 'Urgent medical supplies',\n//         source: 'pos'\n//       },\n//       {\n//         id: 'POS-2025-003',\n//         customerId: 'CUST001',\n//         customerName: 'Al Noor Medical Center',\n//         date: '2025-01-12',\n//         dueDate: '2025-02-11',\n//         amount: 1850.00,\n//         paid: 1850.00,\n//         balance: 0,\n//         status: 'paid',\n//         daysOverdue: 0,\n//         paymentTerms: 30,\n//         items: [\n//           { description: 'Medical supplies - POS Sale', quantity: 1, price: 1850.00, total: 1850.00 }\n//         ],\n//         notes: 'Direct POS sale - Credit account',\n//         source: 'pos'\n//       }\n//     ];\n\n//     const samplePayments = [\n//       {\n//         id: 'PAY001',\n//         customerId: 'CUST001',\n//         customerName: 'Al Noor Medical Center',\n//         invoiceId: 'POS-2025-003',\n//         date: '2025-01-14',\n//         amount: 1850.00,\n//         method: 'bank_transfer',\n//         reference: 'TXN123456789',\n//         status: 'cleared',\n//         notes: 'Payment for POS sale'\n//       },\n//       {\n//         id: 'PAY002',\n//         customerId: 'CUST003',\n//         customerName: 'Pharmacy Plus Chain',\n//         invoiceId: 'INV-2024-045',\n//         date: '2025-01-12',\n//         amount: 15600.00,\n//         method: 'check',\n//         reference: 'CHK-789123',\n//         status: 'cleared',\n//         notes: 'December invoice payment'\n//       }\n//     ];\n\n//     setCustomers(sampleCustomers);\n//     setInvoices(sampleInvoices);\n//     setPayments(samplePayments);\n//   };\n\n//   const calculateARSummary = () => {\n//     const totalAR = customers.reduce((sum, customer) => sum + customer.totalOwed, 0);\n//     const totalOverdue = customers.reduce((sum, customer) => sum + customer.overdueAmount, 0);\n//     const customersWithBalance = customers.filter(customer => customer.totalOwed > 0).length;\n//     const avgDaysOutstanding = customers.length > 0 \n//       ? customers.reduce((sum, customer) => sum + customer.avgPaymentDays, 0) / customers.length \n//       : 0;\n\n//     return {\n//       totalAR,\n//       totalOverdue,\n//       customersWithBalance,\n//       avgDaysOutstanding: Math.round(avgDaysOutstanding)\n//     };\n//   };\n\n//   const getAgingData = () => {\n//     const aging = {\n//       current: 0,\n//       days30: 0,\n//       days60: 0,\n//       days90: 0,\n//       over90: 0\n//     };\n\n//     invoices.forEach(invoice => {\n//       if (invoice.status === 'paid') return;\n\n//       const daysPastDue = invoice.daysOverdue || 0;\n\n//       if (daysPastDue <= 0) {\n//         aging.current += invoice.balance;\n//       } else if (daysPastDue <= 30) {\n//         aging.days30 += invoice.balance;\n//       } else if (daysPastDue <= 60) {\n//         aging.days60 += invoice.balance;\n//       } else if (daysPastDue <= 90) {\n//         aging.days90 += invoice.balance;\n//       } else {\n//         aging.over90 += invoice.balance;\n//       }\n//     });\n\n//     return aging;\n//   };\n\n//   const getFilteredCustomers = () => {\n//     let filtered = [...customers];\n\n//     if (filters.customerType !== 'all') {\n//       filtered = filtered.filter(customer => customer.customerType === filters.customerType);\n//     }\n\n//     if (filters.status !== 'all') {\n//       filtered = filtered.filter(customer => {\n//         if (filters.status === 'overdue') return customer.overdueAmount > 0;\n//         if (filters.status === 'current') return customer.totalOwed > 0 && customer.overdueAmount === 0;\n//         if (filters.status === 'paid_up') return customer.totalOwed === 0;\n//         return true;\n//       });\n//     }\n\n//     if (filters.searchTerm) {\n//       const term = filters.searchTerm.toLowerCase();\n//       filtered = filtered.filter(customer =>\n//         customer.name.toLowerCase().includes(term) ||\n//         customer.email.toLowerCase().includes(term) ||\n//         customer.id.toLowerCase().includes(term)\n//       );\n//     }\n\n//     return filtered;\n//   };\n\n//   const getCreditStatusColor = (status) => {\n//     switch (status) {\n//       case 'excellent': return 'bg-green-100 text-green-800';\n//       case 'good': return 'bg-blue-100 text-blue-800';\n//       case 'watch': return 'bg-yellow-100 text-yellow-800';\n//       case 'hold': return 'bg-red-100 text-red-800';\n//       case 'cash_only': return 'bg-gray-100 text-gray-800';\n//       default: return 'bg-gray-100 text-gray-800';\n//     }\n//   };\n\n//   const getInvoiceStatusColor = (status) => {\n//     switch (status) {\n//       case 'paid': return 'bg-green-100 text-green-800';\n//       case 'outstanding': return 'bg-blue-100 text-blue-800';\n//       case 'overdue': return 'bg-red-100 text-red-800';\n//       case 'partial': return 'bg-yellow-100 text-yellow-800';\n//       default: return 'bg-gray-100 text-gray-800';\n//     }\n//   };\n\n//   const handleCreateInvoice = () => {\n//     const customer = customers.find(c => c.id === newInvoice.customerId);\n//     if (!customer) {\n//       alert('Please select a customer');\n//       return;\n//     }\n\n//     const nextId = `INV-${new Date().getFullYear()}-${String(invoices.length + 1).padStart(3, '0')}`;\n//     const invoiceTotal = calculateInvoiceTotal();\n\n//     const newInvoiceData = {\n//       id: nextId,\n//       customerId: customer.id,\n//       customerName: customer.name,\n//       date: new Date().toISOString().slice(0, 10),\n//       dueDate: newInvoice.dueDate,\n//       amount: invoiceTotal,\n//       paid: 0,\n//       balance: invoiceTotal,\n//       status: 'outstanding',\n//       daysOverdue: 0,\n//       paymentTerms: customer.paymentTerms,\n//       items: newInvoice.items,\n//       notes: newInvoice.notes,\n//       source: 'manual'\n//     };\n\n//     setInvoices(prev => [...prev, newInvoiceData]);\n\n//     setCustomers(prev =>\n//       prev.map(c =>\n//         c.id === customer.id\n//           ? {\n//               ...c,\n//               totalOwed: c.totalOwed + invoiceTotal,\n//               invoiceCount: c.invoiceCount + 1\n//             }\n//           : c\n//       )\n//     );\n\n//     setNewInvoice({\n//       customerId: '',\n//       dueDate: '',\n//       items: [{ description: '', quantity: 1, price: 0, total: 0 }],\n//       notes: ''\n//     });\n\n//     setShowInvoiceForm(false);\n//     alert('Invoice created successfully!');\n//   };\n\n//   const addInvoiceItem = () => {\n//     setNewInvoice({\n//       ...newInvoice,\n//       items: [...newInvoice.items, { description: '', quantity: 1, price: 0, total: 0 }]\n//     });\n//   };\n\n//   const updateInvoiceItem = (index, field, value) => {\n//     const updatedItems = [...newInvoice.items];\n//     updatedItems[index] = { ...updatedItems[index], [field]: value };\n\n//     if (field === 'quantity' || field === 'price') {\n//       updatedItems[index].total = updatedItems[index].quantity * updatedItems[index].price;\n//     }\n\n//     setNewInvoice({ ...newInvoice, items: updatedItems });\n//   };\n\n//   const calculateInvoiceTotal = () => {\n//     return newInvoice.items.reduce((sum, item) => sum + item.total, 0);\n//   };\n\n//   const summary = calculateARSummary();\n//   const aging = getAgingData();\n//   const filteredCustomers = getFilteredCustomers();\n\n//   // Render Invoices Tab\n//   const renderInvoicesTab = () => (\n//     <div>\n//       <div className=\"mb-6 flex justify-between items-center\">\n//         <div className=\"flex items-center space-x-4\">\n//           <div className=\"relative\">\n//             <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search invoices...\"\n//               className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//             />\n//           </div>\n//           <select className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\">\n//             <option value=\"all\">All Statuses</option>\n//             <option value=\"outstanding\">Outstanding</option>\n//             <option value=\"overdue\">Overdue</option>\n//             <option value=\"paid\">Paid</option>\n//           </select>\n//         </div>\n//         <button\n//           onClick={() => setShowInvoiceForm(true)}\n//           className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\n//         >\n//           <Plus size={16} />\n//           <span>New Invoice</span>\n//         </button>\n//       </div>\n\n//       <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//         <table className=\"w-full\">\n//           <thead className=\"bg-gray-50\">\n//             <tr>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Invoice</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Customer</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Due Date</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Amount</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Balance</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n//             </tr>\n//           </thead>\n//           <tbody className=\"divide-y divide-gray-200\">\n//             {invoices.map((invoice) => (\n//               <tr key={invoice.id} className=\"hover:bg-gray-50\">\n//                 <td className=\"px-6 py-4\">\n//                   <div className=\"text-sm font-medium text-gray-900\">{invoice.id}</div>\n//                   <div className=\"text-xs text-gray-500\">{invoice.source}</div>\n//                 </td>\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">{invoice.customerName}</td>\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">{invoice.date}</td>\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">\n//                   {invoice.dueDate}\n//                   {invoice.daysOverdue > 0 && (\n//                     <div className=\"text-xs text-red-600\">\n//                       {invoice.daysOverdue} days overdue\n//                     </div>\n//                   )}\n//                 </td>\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">${invoice.amount.toFixed(2)}</td>\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">${invoice.balance.toFixed(2)}</td>\n//                 <td className=\"px-6 py-4\">\n//                   <span className={`px-2 py-1 text-xs font-medium rounded-full ${getInvoiceStatusColor(invoice.status)}`}>\n//                     {invoice.status}\n//                   </span>\n//                 </td>\n//                 <td className=\"px-6 py-4 text-sm font-medium\">\n//                   <button\n//                     onClick={() => setViewInvoice(invoice)}\n//                     className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\n//                   >\n//                     <Eye size={16} />\n//                   </button>\n//                   <button className=\"text-blue-600 hover:text-blue-900\">\n//                     <Edit size={16} />\n//                   </button>\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       </div>\n//     </div>\n//   );\n\n//   // Render Aging Report Tab\n//   const renderAgingTab = () => (\n//     <div>\n//       <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4 mb-8\">\n//         <div className=\"bg-green-50 p-4 rounded-lg border border-green-200\">\n//           <div className=\"text-sm font-medium text-green-600\">Current (0-30)</div>\n//           <div className=\"text-xl font-bold text-green-900\">${aging.current.toFixed(2)}</div>\n//         </div>\n//         <div className=\"bg-yellow-50 p-4 rounded-lg border border-yellow-200\">\n//           <div className=\"text-sm font-medium text-yellow-600\">31-60 Days</div>\n//           <div className=\"text-xl font-bold text-yellow-900\">${aging.days30.toFixed(2)}</div>\n//         </div>\n//         <div className=\"bg-orange-50 p-4 rounded-lg border border-orange-200\">\n//           <div className=\"text-sm font-medium text-orange-600\">61-90 Days</div>\n//           <div className=\"text-xl font-bold text-orange-900\">${aging.days60.toFixed(2)}</div>\n//         </div>\n//         <div className=\"bg-red-50 p-4 rounded-lg border border-red-200\">\n//           <div className=\"text-sm font-medium text-red-600\">91-120 Days</div>\n//           <div className=\"text-xl font-bold text-red-900\">${aging.days90.toFixed(2)}</div>\n//         </div>\n//         <div className=\"bg-gray-50 p-4 rounded-lg border border-gray-200\">\n//           <div className=\"text-sm font-medium text-gray-600\">Over 120 Days</div>\n//           <div className=\"text-xl font-bold text-gray-900\">${aging.over90.toFixed(2)}</div>\n//         </div>\n//       </div>\n\n//       <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//         <table className=\"w-full\">\n//           <thead className=\"bg-gray-50\">\n//             <tr>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Customer</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Current</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">31-60</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">61-90</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">91-120</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">120+</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Total</th>\n//             </tr>\n//           </thead>\n//           <tbody className=\"divide-y divide-gray-200\">\n//             {customers.filter(c => c.totalOwed > 0).map((customer) => {\n//               const customerInvoices = invoices.filter(inv => inv.customerId === customer.id && inv.status !== 'paid');\n//               const customerAging = {current: 0, days30: 0, days60: 0, days90: 0, over90: 0};\n\n//               customerInvoices.forEach(invoice => {\n//                 const days = invoice.daysOverdue || 0;\n//                 if (days <= 0) customerAging.current += invoice.balance;\n//                 else if (days <= 30) customerAging.days30 += invoice.balance;\n//                 else if (days <= 60) customerAging.days60 += invoice.balance;\n//                 else if (days <= 90) customerAging.days90 += invoice.balance;\n//                 else customerAging.over90 += invoice.balance;\n//               });\n\n//               return (\n//                 <tr key={customer.id} className=\"hover:bg-gray-50\">\n//                   <td className=\"px-6 py-4\">\n//                     <div className=\"text-sm font-medium text-gray-900\">{customer.name}</div>\n//                     <div className=\"text-xs text-gray-500\">{customer.id}</div>\n//                   </td>\n//                   <td className=\"px-6 py-4 text-sm text-gray-900\">${customerAging.current.toFixed(2)}</td>\n//                   <td className=\"px-6 py-4 text-sm text-gray-900\">${customerAging.days30.toFixed(2)}</td>\n//                   <td className=\"px-6 py-4 text-sm text-gray-900\">${customerAging.days60.toFixed(2)}</td>\n//                   <td className=\"px-6 py-4 text-sm text-gray-900\">${customerAging.days90.toFixed(2)}</td>\n//                   <td className=\"px-6 py-4 text-sm text-gray-900\">${customerAging.over90.toFixed(2)}</td>\n//                   <td className=\"px-6 py-4 text-sm font-medium text-gray-900\">${customer.totalOwed.toFixed(2)}</td>\n//                 </tr>\n//               );\n//             })}\n//           </tbody>\n//         </table>\n//       </div>\n//     </div>\n//   );\n\n//   // Render Payments Tab\n//   const renderPaymentsTab = () => (\n//     <div>\n//       <div className=\"mb-6 flex justify-between items-center\">\n//         <div className=\"flex items-center space-x-4\">\n//           <div className=\"relative\">\n//             <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search payments...\"\n//               className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//             />\n//           </div>\n//           <select className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\">\n//             <option value=\"all\">All Methods</option>\n//             <option value=\"cash\">Cash</option>\n//             <option value=\"check\">Check</option>\n//             <option value=\"bank_transfer\">Bank Transfer</option>\n//             <option value=\"credit_card\">Credit Card</option>\n//           </select>\n//         </div>\n//         <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\n//           <Plus size={16} />\n//           <span>Record Payment</span>\n//         </button>\n//       </div>\n\n//       <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//         <table className=\"w-full\">\n//           <thead className=\"bg-gray-50\">\n//             <tr>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Payment ID</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Customer</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Invoice</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Amount</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Method</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Reference</th>\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\n//             </tr>\n//           </thead>\n//           <tbody className=\"divide-y divide-gray-200\">\n//             {payments.map((payment) => (\n//               <tr key={payment.id} className=\"hover:bg-gray-50\">\n//                 <td className=\"px-6 py-4 text-sm font-medium text-gray-900\">{payment.id}</td>\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">{payment.customerName}</td>\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">{payment.invoiceId}</td>\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">{payment.date}</td>\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">${payment.amount.toFixed(2)}</td>\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">{payment.method.replace('_', ' ')}</td>\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">{payment.reference}</td>\n//                 <td className=\"px-6 py-4\">\n//                   <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                     payment.status === 'cleared' ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n//                   }`}>\n//                     {payment.status}\n//                   </span>\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       </div>\n//     </div>\n//   );\n\n//   return (\n//     <div className=\"max-w-7xl mx-auto p-6 bg-white\">\n//       {/* Header */}\n//       <div className=\"mb-8\">\n//         <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\n//           <CreditCard className=\"mr-3 text-emerald-600\" />\n//           Accounts Receivable\n//         </h1>\n//         <p className=\"text-gray-600\">Manage customer invoicing, payments, and credit limits</p>\n//       </div>\n\n//       {/* Summary Cards */}\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n//         <div className=\"bg-blue-50 p-6 rounded-lg border border-blue-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-blue-600 text-sm font-medium\">Total A/R</p>\n//               <p className=\"text-2xl font-bold text-blue-900\">${summary.totalAR.toFixed(2)}</p>\n//             </div>\n//             <DollarSign className=\"text-blue-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-blue-700 mt-2\">{summary.customersWithBalance} customers with balances</p>\n//         </div>\n\n//         <div className=\"bg-red-50 p-6 rounded-lg border border-red-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-red-600 text-sm font-medium\">Overdue Amount</p>\n//               <p className=\"text-2xl font-bold text-red-900\">${summary.totalOverdue.toFixed(2)}</p>\n//             </div>\n//             <AlertTriangle className=\"text-red-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-red-700 mt-2\">\n//             {summary.totalAR > 0 ? ((summary.totalOverdue / summary.totalAR) * 100).toFixed(1) : 0}% of total A/R\n//           </p>\n//         </div>\n\n//         <div className=\"bg-green-50 p-6 rounded-lg border border-green-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-green-600 text-sm font-medium\">Avg. Days Outstanding</p>\n//               <p className=\"text-2xl font-bold text-green-900\">{summary.avgDaysOutstanding}</p>\n//             </div>\n//             <Clock className=\"text-green-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-green-700 mt-2\">Collection performance</p>\n//         </div>\n\n//         <div className=\"bg-purple-50 p-6 rounded-lg border border-purple-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-purple-600 text-sm font-medium\">Active Customers</p>\n//               <p className=\"text-2xl font-bold text-purple-900\">{customers.length}</p>\n//             </div>\n//             <Users className=\"text-purple-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-purple-700 mt-2\">Total customer accounts</p>\n//         </div>\n//       </div>\n\n//       {/* Tabs */}\n//       <div className=\"mb-6\">\n//         <div className=\"border-b border-gray-200\">\n//           <nav className=\"-mb-px flex space-x-8\">\n//             {[\n//               { id: 'overview', name: 'Customer Overview', icon: Users },\n//               { id: 'invoices', name: 'Invoices', icon: FileText },\n//               { id: 'aging', name: 'Aging Report', icon: Clock },\n//               { id: 'payments', name: 'Payments', icon: CheckCircle }\n//             ].map((tab) => (\n//               <button\n//                 key={tab.id}\n//                 onClick={() => setActiveTab(tab.id)}\n//                 className={`flex items-center py-2 px-1 border-b-2 font-medium text-sm ${\n//                   activeTab === tab.id\n//                     ? 'border-emerald-500 text-emerald-600'\n//                     : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n//                 }`}\n//               >\n//                 <tab.icon className=\"mr-2\" size={16} />\n//                 {tab.name}\n//               </button>\n//             ))}\n//           </nav>\n//         </div>\n//       </div>\n\n//       {/* Tab Content */}\n//       {activeTab === 'overview' && (\n//         <div>\n//           {/* Filters */}\n//           <div className=\"flex flex-wrap items-center gap-4 mb-6\">\n//             <div className=\"relative\">\n//               <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\n//               <input\n//                 type=\"text\"\n//                 placeholder=\"Search customers...\"\n//                 value={filters.searchTerm}\n//                 onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\n//                 className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               />\n//             </div>\n\n//             <select\n//               value={filters.customerType}\n//               onChange={(e) => setFilters({ ...filters, customerType: e.target.value })}\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//             >\n//               <option value=\"all\">All Customer Types</option>\n//               <option value=\"corporate\">Corporate</option>\n//               <option value=\"small_business\">Small Business</option>\n//               <option value=\"credit\">Credit</option>\n//               <option value=\"cash\">Cash Only</option>\n//             </select>\n\n//             <select\n//               value={filters.status}\n//               onChange={(e) => setFilters({ ...filters, status: e.target.value })}\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//             >\n//               <option value=\"all\">All Statuses</option>\n//               <option value=\"current\">Current</option>\n//               <option value=\"overdue\">Overdue</option>\n//               <option value=\"paid_up\">Paid Up</option>\n//             </select>\n\n//             <button\n//               onClick={() => setShowInvoiceForm(true)}\n//               className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\n//             >\n//               <Plus size={16} />\n//               <span>New Invoice</span>\n//             </button>\n//           </div>\n\n//           {/* Customer List */}\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//             <div className=\"overflow-x-auto\">\n//               <table className=\"w-full\">\n//                 <thead className=\"bg-gray-50\">\n//                   <tr>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Customer\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Type\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Credit Limit\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Balance\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Overdue\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Credit Status\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Last Payment\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Actions\n//                     </th>\n//                   </tr>\n//                 </thead>\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\n//                   {loading ? (\n//                     <tr>\n//                       <td colSpan=\"8\" className=\"px-6 py-4 text-center text-gray-500\">\n//                         Loading data from API...\n//                       </td>\n//                     </tr>\n//                   ) : (\n//                     filteredCustomers.map((customer) => (\n//                       <tr key={customer.id} className=\"hover:bg-gray-50\">\n//                         <td className=\"px-6 py-4\">\n//                           <div>\n//                             <div className=\"text-sm font-medium text-gray-900\">{customer.name}</div>\n//                             <div className=\"text-sm text-gray-500\">{customer.id}</div>\n//                             <div className=\"text-xs text-gray-400 flex items-center mt-1\">\n//                               <Mail className=\"mr-1\" size={12} />\n//                               {customer.email}\n//                             </div>\n//                           </div>\n//                         </td>\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\n//                           <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-gray-100 text-gray-800\">\n//                             {customer.customerType.replace('_', ' ')}\n//                           </span>\n//                         </td>\n//                         <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                           ${customer.creditLimit.toLocaleString()}\n//                         </td>\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\n//                           <div className=\"text-sm font-medium text-gray-900\">\n//                             ${customer.totalOwed.toFixed(2)}\n//                           </div>\n//                           <div className=\"text-xs text-gray-500\">\n//                             {customer.invoiceCount} invoices\n//                           </div>\n//                         </td>\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\n//                           {customer.overdueAmount > 0 ? (\n//                             <span className=\"text-red-600 font-medium\">\n//                               ${customer.overdueAmount.toFixed(2)}\n//                             </span>\n//                           ) : (\n//                             <span className=\"text-green-600\">$0.00</span>\n//                           )}\n//                         </td>\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\n//                           <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(customer.creditStatus)}`}>\n//                             {customer.creditStatus.replace('_', ' ')}\n//                           </span>\n//                         </td>\n//                         <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                           {customer.lastPayment || 'N/A'}\n//                         </td>\n//                         <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n//                           <button\n//                             onClick={() => setSelectedCustomer(customer)}\n//                             className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\n//                           >\n//                             <Eye size={16} />\n//                           </button>\n//                           <button className=\"text-blue-600 hover:text-blue-900\">\n//                             <Edit size={16} />\n//                           </button>\n//                         </td>\n//                       </tr>\n//                     ))\n//                   )}\n//                 </tbody>\n//               </table>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {activeTab === 'invoices' && renderInvoicesTab()}\n//       {activeTab === 'aging' && renderAgingTab()}\n//       {activeTab === 'payments' && renderPaymentsTab()}\n\n//       {/* Customer Detail Modal */}\n//       {selectedCustomer && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <div className=\"flex items-center justify-between\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\n//                   Customer Details - {selectedCustomer.name}\n//                 </h3>\n//                 <button\n//                   onClick={() => setSelectedCustomer(null)}\n//                   className=\"text-gray-400 hover:text-gray-600\"\n//                 >\n//                   <XCircle size={20} />\n//                 </button>\n//               </div>\n//             </div>\n\n//             <div className=\"px-6 py-4\">\n//               {/* Customer Info Grid */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n//                 <div className=\"space-y-4\">\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer ID</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.id}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Email</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.email}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Phone</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.phone}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Address</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.address}</p>\n//                   </div>\n//                 </div>\n\n//                 <div className=\"space-y-4\">\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer Type</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.customerType.replace('_', ' ')}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Limit</label>\n//                     <p className=\"text-sm text-gray-900\">${selectedCustomer.creditLimit.toLocaleString()}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Payment Terms</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.paymentTerms} days</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Status</label>\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(selectedCustomer.creditStatus)}`}>\n//                       {selectedCustomer.creditStatus.replace('_', ' ')}\n//                     </span>\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Financial Summary */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n//                 <div className=\"bg-blue-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-blue-600\">Current Balance</div>\n//                   <div className=\"text-xl font-bold text-blue-900\">\n//                     ${selectedCustomer.totalOwed.toFixed(2)}\n//                   </div>\n//                 </div>\n//                 <div className=\"bg-red-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-red-600\">Overdue Amount</div>\n//                   <div className=\"text-xl font-bold text-red-900\">\n//                     ${selectedCustomer.overdueAmount.toFixed(2)}\n//                   </div>\n//                 </div>\n//                 <div className=\"bg-green-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-green-600\">Credit Available</div>\n//                   <div className=\"text-xl font-bold text-green-900\">\n//                     ${(selectedCustomer.creditLimit - selectedCustomer.totalOwed).toFixed(2)}\n//                   </div>\n//                 </div>\n//                 <div className=\"bg-purple-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-purple-600\">Avg Payment Days</div>\n//                   <div className=\"text-xl font-bold text-purple-900\">\n//                     {selectedCustomer.avgPaymentDays}\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Customer Invoices */}\n//               <div className=\"mb-6\">\n//                 <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Customer Invoices</h4>\n//                 <div className=\"overflow-x-auto\">\n//                   <table className=\"w-full border border-gray-200 rounded\">\n//                     <thead className=\"bg-gray-50\">\n//                       <tr>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Invoice</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Date</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Due Date</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Amount</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Balance</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Status</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody className=\"divide-y divide-gray-200\">\n//                       {invoices\n//                         .filter(inv => inv.customerId === selectedCustomer.id)\n//                         .map((invoice) => (\n//                           <tr key={invoice.id}>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{invoice.id}</td>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{invoice.date}</td>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{invoice.dueDate}</td>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">${invoice.amount.toFixed(2)}</td>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">${invoice.balance.toFixed(2)}</td>\n//                             <td className=\"px-4 py-2\">\n//                               <span className={`px-2 py-1 text-xs font-medium rounded-full ${getInvoiceStatusColor(invoice.status)}`}>\n//                                 {invoice.status}\n//                               </span>\n//                             </td>\n//                           </tr>\n//                         ))}\n//                     </tbody>\n//                   </table>\n//                 </div>\n//               </div>\n\n//               {/* Action Buttons */}\n//               <div className=\"flex space-x-3\">\n//                 <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\n//                   <Plus size={16} />\n//                   <span>New Invoice</span>\n//                 </button>\n//                 <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\n//                   <CheckCircle size={16} />\n//                   <span>Record Payment</span>\n//                 </button>\n//                 <button className=\"px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 flex items-center space-x-2\">\n//                   <Mail size={16} />\n//                   <span>Send Statement</span>\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Invoice Detail Modal */}\n//       {viewInvoice && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-lg max-w-3xl w-full max-h-[90vh] overflow-y-auto\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <div className=\"flex items-center justify-between\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\n//                   Invoice Details - {viewInvoice.id}\n//                 </h3>\n//                 <button\n//                   onClick={() => setViewInvoice(null)}\n//                   className=\"text-gray-400 hover:text-gray-600\"\n//                 >\n//                   <XCircle size={20} />\n//                 </button>\n//               </div>\n//             </div>\n\n//             <div className=\"px-6 py-4\">\n//               {/* Invoice Header */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n//                 <div>\n//                   <h4 className=\"font-semibold text-gray-900 mb-3\">Invoice Information</h4>\n//                   <div className=\"space-y-2\">\n//                     <div><span className=\"text-gray-500\">Invoice ID:</span> {viewInvoice.id}</div>\n//                     <div><span className=\"text-gray-500\">Date:</span> {viewInvoice.date}</div>\n//                     <div><span className=\"text-gray-500\">Due Date:</span> {viewInvoice.dueDate}</div>\n//                     <div><span className=\"text-gray-500\">Payment Terms:</span> {viewInvoice.paymentTerms} days</div>\n//                     <div><span className=\"text-gray-500\">Source:</span> {viewInvoice.source}</div>\n//                   </div>\n//                 </div>\n//                 <div>\n//                   <h4 className=\"font-semibold text-gray-900 mb-3\">Customer Information</h4>\n//                   <div className=\"space-y-2\">\n//                     <div><span className=\"text-gray-500\">Customer:</span> {viewInvoice.customerName}</div>\n//                     <div><span className=\"text-gray-500\">Customer ID:</span> {viewInvoice.customerId}</div>\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Invoice Items */}\n//               <div className=\"mb-6\">\n//                 <h4 className=\"font-semibold text-gray-900 mb-3\">Invoice Items</h4>\n//                 <div className=\"overflow-x-auto\">\n//                   <table className=\"w-full border border-gray-200 rounded\">\n//                     <thead className=\"bg-gray-50\">\n//                       <tr>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Description</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Quantity</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Price</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Total</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody className=\"divide-y divide-gray-200\">\n//                       {viewInvoice.items.map((item, index) => (\n//                         <tr key={index}>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900\">{item.description}</td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{item.quantity}</td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">${item.price.toFixed(2)}</td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">${item.total.toFixed(2)}</td>\n//                         </tr>\n//                       ))}\n//                     </tbody>\n//                   </table>\n//                 </div>\n//               </div>\n\n//           {/* Invoice Summary */}\n// <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n//   <div className=\"bg-blue-50 p-4 rounded-lg\">\n//     <div className=\"text-sm font-medium text-blue-600\">Invoice Amount</div>\n//     <div className=\"text-xl font-bold text-blue-900\">${viewInvoice.amount.toFixed(2)}</div>\n//   </div>\n//   <div className=\"bg-green-50 p-4 rounded-lg\">\n//     <div className=\"text-sm font-medium text-green-600\">Amount Paid</div>\n//     <div className=\"text-xl font-bold text-green-900\">${viewInvoice.paid.toFixed(2)}</div>\n//   </div>\n//   <div className=\"bg-red-50 p-4 rounded-lg\">\n//     <div className=\"text-sm font-medium text-red-600\">Balance Due</div>\n//     <div className=\"text-xl font-bold text-red-900\">${viewInvoice.balance.toFixed(2)}</div>\n//   </div>\n// </div>\n\n// {/* Invoice Status and Days Information */}\n// <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\n//   <div className=\"bg-gray-50 p-4 rounded-lg\">\n//     <div className=\"text-sm font-medium text-gray-600\">Invoice Status</div>\n//     <span className={`inline-block mt-1 px-3 py-1 text-sm font-medium rounded-full ${getInvoiceStatusColor(viewInvoice.status)}`}>\n//       {viewInvoice.status.charAt(0).toUpperCase() + viewInvoice.status.slice(1)}\n//     </span>\n//   </div>\n//   <div className=\"bg-gray-50 p-4 rounded-lg\">\n//     <div className=\"text-sm font-medium text-gray-600\">\n//       {viewInvoice.status === 'overdue' ? 'Days Overdue' : 'Days Until Due'}\n//     </div>\n//     <div className={`text-xl font-bold ${viewInvoice.status === 'overdue' ? 'text-red-900' : 'text-gray-900'}`}>\n//       {viewInvoice.status === 'overdue' ? viewInvoice.daysOverdue : \n//        Math.max(0, Math.ceil((new Date(viewInvoice.dueDate) - new Date()) / (1000 * 60 * 60 * 24)))}\n//     </div>\n//   </div>\n// </div>\n\n// {/* Notes */}\n// {viewInvoice.notes && (\n//   <div className=\"mb-6\">\n//     <h4 className=\"font-semibold text-gray-900 mb-2\">Notes</h4>\n//     <p className=\"text-sm text-gray-700 bg-gray-50 p-3 rounded border\">{viewInvoice.notes}</p>\n//   </div>\n// )}\n\n// {/* Payment History for this Invoice */}\n// <div className=\"mb-6\">\n//   <h4 className=\"font-semibold text-gray-900 mb-3\">Payment History</h4>\n//   {payments.filter(payment => payment.invoiceId === viewInvoice.id).length > 0 ? (\n//     <div className=\"overflow-x-auto\">\n//       <table className=\"w-full border border-gray-200 rounded\">\n//         <thead className=\"bg-gray-50\">\n//           <tr>\n//             <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Date</th>\n//             <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Amount</th>\n//             <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Method</th>\n//             <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Reference</th>\n//             <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Status</th>\n//           </tr>\n//         </thead>\n//         <tbody className=\"divide-y divide-gray-200\">\n//           {payments\n//             .filter(payment => payment.invoiceId === viewInvoice.id)\n//             .map((payment) => (\n//               <tr key={payment.id}>\n//                 <td className=\"px-4 py-2 text-sm text-gray-900\">{payment.date}</td>\n//                 <td className=\"px-4 py-2 text-sm text-gray-900\">${payment.amount.toFixed(2)}</td>\n//                 <td className=\"px-4 py-2 text-sm text-gray-900\">{payment.method.replace('_', ' ')}</td>\n//                 <td className=\"px-4 py-2 text-sm text-gray-900\">{payment.reference}</td>\n//                 <td className=\"px-4 py-2\">\n//                   <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                     payment.status === 'cleared' ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n//                   }`}>\n//                     {payment.status}\n//                   </span>\n//                 </td>\n//               </tr>\n//             ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   ) : (\n//     <div className=\"text-sm text-gray-500 bg-gray-50 p-4 rounded border text-center\">\n//       No payments recorded for this invoice\n//     </div>\n//   )}\n// </div>\n\n// {/* Customer Credit Information */}\n// <div className=\"mb-6 bg-blue-50 p-4 rounded-lg border border-blue-200\">\n//   <h4 className=\"font-semibold text-blue-900 mb-3\">Customer Credit Information</h4>\n//   <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\n//     <div>\n//       <span className=\"text-blue-700 font-medium\">Credit Limit:</span>\n//       <div className=\"text-blue-900 font-bold\">\n//         ${customers.find(c => c.id === viewInvoice.customerId)?.creditLimit.toLocaleString() || 'N/A'}\n//       </div>\n//     </div>\n//     <div>\n//       <span className=\"text-blue-700 font-medium\">Total Outstanding:</span>\n//       <div className=\"text-blue-900 font-bold\">\n//         ${customers.find(c => c.id === viewInvoice.customerId)?.totalOwed.toFixed(2) || '0.00'}\n//       </div>\n//     </div>\n//     <div>\n//       <span className=\"text-blue-700 font-medium\">Credit Available:</span>\n//       <div className=\"text-blue-900 font-bold\">\n//         ${((customers.find(c => c.id === viewInvoice.customerId)?.creditLimit || 0) - \n//             (customers.find(c => c.id === viewInvoice.customerId)?.totalOwed || 0)).toFixed(2)}\n//       </div>\n//     </div>\n//   </div>\n// </div>\n// {/* Action Buttons */}\n// <div className=\"flex flex-wrap gap-3\">\n//   <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2 transition-colors\">\n//     <CheckCircle size={16} />\n//     <span>Record Payment</span>\n//   </button>\n//   <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2 transition-colors\">\n//     <Mail size={16} />\n//     <span>Email Invoice</span>\n//   </button>\n//   <button className=\"px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 flex items-center space-x-2 transition-colors\">\n//     <Printer size={16} />\n//     <span>Print Invoice</span>\n//   </button>\n//   <button className=\"px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 flex items-center space-x-2 transition-colors\">\n//     <Download size={16} />\n//     <span>Download PDF</span>\n//   </button>\n//   <button className=\"px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 flex items-center space-x-2 transition-colors\">\n//     <Send size={16} />\n//     <span>Send Reminder</span>\n//   </button>\n//   {viewInvoice.balance > 0 && (\n//     <button className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 flex items-center space-x-2 transition-colors\">\n//       <AlertTriangle size={16} />\n//       <span>Mark Overdue</span>\n//     </button>\n//   )}\n// </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* New Invoice Form */}\n//       {showInvoiceForm && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <div className=\"flex items-center justify-between\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">Create New Invoice</h3>\n//                 <button\n//                   onClick={() => setShowInvoiceForm(false)}\n//                   className=\"text-gray-400 hover:text-gray-600\"\n//                 >\n//                   <XCircle size={20} />\n//                 </button>\n//               </div>\n//             </div>\n\n//             <div className=\"px-6 py-4\">\n//               {/* Invoice Header */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\n//                 <div>\n//                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">Customer *</label>\n//                   <select\n//                     value={newInvoice.customerId}\n//                     onChange={(e) => setNewInvoice({ ...newInvoice, customerId: e.target.value })}\n//                     className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//                   >\n//                     <option value=\"\">Select Customer</option>\n//                     {customers.filter(c => c.customerType !== 'cash').map(customer => (\n//                       <option key={customer.id} value={customer.id}>\n//                         {customer.name} ({customer.id})\n//                       </option>\n//                     ))}\n//                   </select>\n//                 </div>\n//                 <div>\n//                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">Due Date *</label>\n//                   <input\n//                     type=\"date\"\n//                     value={newInvoice.dueDate}\n//                     onChange={(e) => setNewInvoice({ ...newInvoice, dueDate: e.target.value })}\n//                     className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//                   />\n//                 </div>\n//               </div>\n\n//               {/* Invoice Items */}\n//               <div className=\"mb-6\">\n//                 <label className=\"block text-sm font-medium text-gray-700 mb-2\">Invoice Items</label>\n//                 <div className=\"space-y-3\">\n//                   {newInvoice.items.map((item, index) => (\n//                     <div key={index} className=\"grid grid-cols-12 gap-2 items-center bg-gray-50 p-3 rounded\">\n//                       <div className=\"col-span-5\">\n//                         <input\n//                           type=\"text\"\n//                           value={item.description}\n//                           onChange={(e) => updateInvoiceItem(index, 'description', e.target.value)}\n//                           placeholder=\"Item description\"\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                         />\n//                       </div>\n//                       <div className=\"col-span-2\">\n//                         <input\n//                           type=\"number\"\n//                           value={item.quantity}\n//                           onChange={(e) => updateInvoiceItem(index, 'quantity', parseFloat(e.target.value) || 0)}\n//                           placeholder=\"Qty\"\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                         />\n//                       </div>\n//                       <div className=\"col-span-2\">\n//                         <input\n//                           type=\"number\"\n//                           step=\"0.01\"\n//                           value={item.price}\n//                           onChange={(e) => updateInvoiceItem(index, 'price', parseFloat(e.target.value) || 0)}\n//                           placeholder=\"Price\"\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                         />\n//                       </div>\n//                       <div className=\"col-span-2\">\n//                         <input\n//                           type=\"number\"\n//                           step=\"0.01\"\n//                           value={item.total}\n//                           readOnly\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm bg-gray-100\"\n//                         />\n//                       </div>\n//                       <div className=\"col-span-1\">\n//                         {newInvoice.items.length > 1 && (\n//                           <button\n//                             onClick={() => {\n//                               const updatedItems = newInvoice.items.filter((_, i) => i !== index);\n//                               setNewInvoice({ ...newInvoice, items: updatedItems });\n//                             }}\n//                             className=\"p-1 text-red-600 hover:bg-red-100 rounded\"\n//                           >\n//                             <XCircle size={14} />\n//                           </button>\n//                         )}\n//                       </div>\n//                     </div>\n//                   ))}\n//                 </div>\n\n//                 <div className=\"flex justify-between items-center mt-3\">\n//                   <button\n//                     onClick={addInvoiceItem}\n//                     className=\"px-3 py-1 text-sm bg-emerald-100 text-emerald-700 rounded hover:bg-emerald-200 flex items-center space-x-1\"\n//                   >\n//                     <Plus size={14} />\n//                     <span>Add Item</span>\n//                   </button>\n\n//                   <div className=\"text-lg font-semibold\">\n//                     Total: ${calculateInvoiceTotal().toFixed(2)}\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Notes */}\n//               <div className=\"mb-6\">\n//                 <label className=\"block text-sm font-medium text-gray-700 mb-1\">Notes</label>\n//                 <textarea\n//                   value={newInvoice.notes}\n//                   onChange={(e) => setNewInvoice({ ...newInvoice, notes: e.target.value })}\n//                   rows={3}\n//                   placeholder=\"Additional notes...\"\n//                   className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//                 />\n//               </div>\n\n//               {/* Action Buttons */}\n//               <div className=\"flex space-x-3\">\n//                 <button\n//                   onClick={handleCreateInvoice}\n//                   className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\n//                 >\n//                   <CheckCircle size={16} />\n//                   <span>Create Invoice</span>\n//                 </button>\n//                 <button\n//                   onClick={() => setShowInvoiceForm(false)}\n//                   className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\"\n//                 >\n//                   <XCircle size={16} />\n//                   <span>Cancel</span>\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Integration Status */}\n//       <div className=\"mt-8 p-6 bg-green-50 border border-green-200 rounded-lg\">\n//         <div className=\"flex items-center mb-4\">\n//           <CheckCircle className=\"text-green-600 mr-2\" size={20} />\n//           <h3 className=\"font-medium text-green-800\">POS Integration Active</h3>\n//         </div>\n//         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm text-green-700\">\n//           <div>\n//             <strong>Credit Sales:</strong> Automatically create AR entries when customers buy on credit in POS\n//           </div>\n//           <div>\n//             <strong>Customer Limits:</strong> POS checks credit limits before allowing credit sales\n//           </div>\n//           <div>\n//             <strong>Real-time Updates:</strong> Customer balances update instantly with each transaction\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AccountsReceivable;\n\n// //perfect\n// import React, { useState, useEffect } from 'react';\n// import { \n//   Users, \n//   DollarSign, \n//   CreditCard, \n//   AlertTriangle, \n//   Clock, \n//   Plus, \n//   Search, \n//   Filter, \n//   Eye, \n//   Edit, \n//   Download,\n//   CheckCircle,\n//   XCircle,\n//   Calendar,\n//   FileText,\n//   TrendingUp,\n//   Mail,\n//   Phone,\n//   Loader,\n//   RefreshCw\n// } from 'lucide-react';\n\n// // API Configuration\n// const API_BASE_URL_SALES = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/orders?start=0&size=200';\n// const API_CUSTOMERS = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/customers?status=Active';\n\n// // Replace with your actual Bearer token\n// const BEARER_TOKEN = 'your-bearer-token-here';\n\n// const AccountsReceivable = () => {\n//   // State management\n//   const [sales, setSales] = useState({ loading: false, data: [], error: null });\n//   const [customers, setCustomers] = useState({ loading: false, data: [], error: null });\n//   const [activeTab, setActiveTab] = useState('overview');\n//   const [selectedOrder, setSelectedOrder] = useState(null);\n//   const [filters, setFilters] = useState({\n//     customerType: 'all',\n//     status: 'all',\n//     searchTerm: ''\n//   });\n\n//   // API Functions\n//   const fetchSales = async () => {\n//     setSales(prev => ({ ...prev, loading: true, error: null }));\n//     try {\n//       const response = await fetch(API_BASE_URL_SALES, {\n//         method: 'GET',\n//         headers: {\n//           'Authorization': `Bearer ${BEARER_TOKEN}`,\n//           'Content-Type': 'application/json',\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! status: ${response.status}`);\n//       }\n\n//       const data = await response.json();\n\n//       // Filter for unpaid and unfulfilled orders only\n//       const filteredOrders = data.filter(order => \n//         !order.paid || !order.fulfilled || order.status === 'Active'\n//       );\n\n//       setSales({ loading: false, data: filteredOrders, error: null });\n//     } catch (error) {\n//       console.error('Error fetching sales:', error);\n//       setSales({ loading: false, data: [], error: error.message });\n//     }\n//   };\n\n//   const fetchCustomers = async () => {\n//     setCustomers(prev => ({ ...prev, loading: true, error: null }));\n//     try {\n//       const response = await fetch(API_CUSTOMERS, {\n//         method: 'GET',\n//         headers: {\n//           'Authorization': `Bearer ${BEARER_TOKEN}`,\n//           'Content-Type': 'application/json',\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! status: ${response.status}`);\n//       }\n\n//       const data = await response.json();\n//       setCustomers({ loading: false, data: data, error: null });\n//     } catch (error) {\n//       console.error('Error fetching customers:', error);\n//       setCustomers({ loading: false, data: [], error: error.message });\n//     }\n//   };\n\n//   // Load data on component mount\n//   useEffect(() => {\n//     fetchSales();\n//     fetchCustomers();\n//   }, []);\n\n//   // Helper function to get customer name by ID\n//   const getCustomerName = (customerId) => {\n//     if (!customerId || customerId === 'null') return 'Walk-in Customer';\n//     const customer = customers.data.find(c => c.id === customerId);\n//     return customer ? customer.name : 'Unknown Customer';\n//   };\n\n//   // Helper function to get customer details by ID\n//   const getCustomerDetails = (customerId) => {\n//     if (!customerId || customerId === 'null') return null;\n//     return customers.data.find(c => c.id === customerId);\n//   };\n\n//   // Calculate summary data\n//   const calculateSummary = () => {\n//     const totalAR = sales.data.reduce((sum, order) => sum + order.total, 0);\n//     const totalOrders = sales.data.length;\n//     const unfulfilledOrders = sales.data.filter(order => !order.fulfilled).length;\n//     const unpaidOrders = sales.data.filter(order => !order.paid).length;\n\n//     return {\n//       totalAR,\n//       totalOrders,\n//       unfulfilledOrders,\n//       unpaidOrders\n//     };\n//   };\n\n//   // Filter orders based on search and filters\n//   const getFilteredOrders = () => {\n//     let filtered = [...sales.data];\n\n//     if (filters.status !== 'all') {\n//       if (filters.status === 'unpaid') {\n//         filtered = filtered.filter(order => !order.paid);\n//       } else if (filters.status === 'unfulfilled') {\n//         filtered = filtered.filter(order => !order.fulfilled);\n//       }\n//     }\n\n//     if (filters.searchTerm) {\n//       const term = filters.searchTerm.toLowerCase();\n//       filtered = filtered.filter(order =>\n//         order.orderId.toLowerCase().includes(term) ||\n//         getCustomerName(order.customerId).toLowerCase().includes(term) ||\n//         order.lineItems.some(item => \n//           item.productName.toLowerCase().includes(term)\n//         )\n//       );\n//     }\n\n//     return filtered;\n//   };\n\n//   const formatDate = (dateString) => {\n//     if (!dateString) return 'N/A';\n//     return dateString.split('.').slice(0, 3).join('/');\n//   };\n\n//   const formatCurrency = (amount) => {\n//     return new Intl.NumberFormat('en-PK', {\n//       style: 'currency',\n//       currency: 'PKR',\n//       minimumFractionDigits: 0,\n//       maximumFractionDigits: 0\n//     }).format(amount);\n//   };\n\n//   const summary = calculateSummary();\n//   const filteredOrders = getFilteredOrders();\n\n//   // Loading state\n//   if (sales.loading || customers.loading) {\n//     return (\n//       <div className=\"flex items-center justify-center min-h-screen\">\n//         <div className=\"flex items-center space-x-3\">\n//           <Loader className=\"animate-spin text-emerald-600\" size={24} />\n//           <span className=\"text-gray-600\">Loading data from API...</span>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   // Error state\n//   if (sales.error || customers.error) {\n//     return (\n//       <div className=\"max-w-7xl mx-auto p-6\">\n//         <div className=\"bg-red-50 border border-red-200 rounded-lg p-6\">\n//           <div className=\"flex items-center mb-4\">\n//             <AlertTriangle className=\"text-red-600 mr-2\" size={20} />\n//             <h3 className=\"font-medium text-red-800\">API Connection Error</h3>\n//           </div>\n//           <div className=\"text-red-700 mb-4\">\n//             {sales.error && <div>Sales API Error: {sales.error}</div>}\n//             {customers.error && <div>Customers API Error: {customers.error}</div>}\n//           </div>\n//           <button\n//             onClick={() => {\n//               fetchSales();\n//               fetchCustomers();\n//             }}\n//             className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 flex items-center space-x-2\"\n//           >\n//             <RefreshCw size={16} />\n//             <span>Retry Connection</span>\n//           </button>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"max-w-7xl mx-auto p-6 bg-white\">\n//       {/* Header */}\n//       <div className=\"mb-8\">\n//         <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\n//           <CreditCard className=\"mr-3 text-emerald-600\" />\n//           Accounts Receivable - Outstanding Orders\n//         </h1>\n//         <p className=\"text-gray-600\">Manage unpaid and unfulfilled orders from POS system</p>\n//       </div>\n\n//       {/* Summary Cards */}\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n//         <div className=\"bg-blue-50 p-6 rounded-lg border border-blue-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-blue-600 text-sm font-medium\">Total Outstanding</p>\n//               <p className=\"text-2xl font-bold text-blue-900\">{formatCurrency(summary.totalAR)}</p>\n//             </div>\n//             <DollarSign className=\"text-blue-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-blue-700 mt-2\">{summary.totalOrders} orders</p>\n//         </div>\n\n//         <div className=\"bg-red-50 p-6 rounded-lg border border-red-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-red-600 text-sm font-medium\">Unpaid Orders</p>\n//               <p className=\"text-2xl font-bold text-red-900\">{summary.unpaidOrders}</p>\n//             </div>\n//             <AlertTriangle className=\"text-red-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-red-700 mt-2\">Require payment</p>\n//         </div>\n\n//         <div className=\"bg-yellow-50 p-6 rounded-lg border border-yellow-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-yellow-600 text-sm font-medium\">Unfulfilled Orders</p>\n//               <p className=\"text-2xl font-bold text-yellow-900\">{summary.unfulfilledOrders}</p>\n//             </div>\n//             <Clock className=\"text-yellow-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-yellow-700 mt-2\">Pending fulfillment</p>\n//         </div>\n\n//         <div className=\"bg-purple-50 p-6 rounded-lg border border-purple-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-purple-600 text-sm font-medium\">Active Customers</p>\n//               <p className=\"text-2xl font-bold text-purple-900\">{customers.data.length}</p>\n//             </div>\n//             <Users className=\"text-purple-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-purple-700 mt-2\">Total customers</p>\n//         </div>\n//       </div>\n\n//       {/* Filters */}\n//       <div className=\"flex flex-wrap items-center gap-4 mb-6\">\n//         <div className=\"relative\">\n//           <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\n//           <input\n//             type=\"text\"\n//             placeholder=\"Search orders, customers, products...\"\n//             value={filters.searchTerm}\n//             onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\n//             className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//           />\n//         </div>\n\n//         <select\n//           value={filters.status}\n//           onChange={(e) => setFilters({ ...filters, status: e.target.value })}\n//           className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//         >\n//           <option value=\"all\">All Status</option>\n//           <option value=\"unpaid\">Unpaid Only</option>\n//           <option value=\"unfulfilled\">Unfulfilled Only</option>\n//         </select>\n\n//         <button\n//           onClick={() => {\n//             fetchSales();\n//             fetchCustomers();\n//           }}\n//           className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\n//         >\n//           <RefreshCw size={16} />\n//           <span>Refresh Data</span>\n//         </button>\n//       </div>\n\n//       {/* Orders Table */}\n//       <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//         <div className=\"px-6 py-4 border-b border-gray-200\">\n//           <h3 className=\"text-lg font-semibold text-gray-900\">Outstanding Orders ({filteredOrders.length})</h3>\n//         </div>\n//         <div className=\"overflow-x-auto\">\n//           <table className=\"w-full\">\n//             <thead className=\"bg-gray-50\">\n//               <tr>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Order ID\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Customer\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Date\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Items\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Total Amount\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Payment Status\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Fulfillment Status\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Actions\n//                 </th>\n//               </tr>\n//             </thead>\n//             <tbody className=\"bg-white divide-y divide-gray-200\">\n//               {filteredOrders.map((order) => (\n//                 <tr key={order.orderId} className=\"hover:bg-gray-50\">\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\n//                     <div className=\"text-sm font-medium text-gray-900\">#{order.orderId}</div>\n//                     <div className=\"text-xs text-gray-500\">{order.status}</div>\n//                   </td>\n//                   <td className=\"px-6 py-4\">\n//                     <div className=\"text-sm font-medium text-gray-900\">\n//                       {getCustomerName(order.customerId)}\n//                     </div>\n//                     {getCustomerDetails(order.customerId) && (\n//                       <div className=\"text-xs text-gray-500 flex items-center mt-1\">\n//                         <Mail className=\"mr-1\" size={10} />\n//                         {getCustomerDetails(order.customerId).email}\n//                       </div>\n//                     )}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                     {formatDate(order.createdAt)}\n//                   </td>\n//                   <td className=\"px-6 py-4\">\n//                     <div className=\"text-sm text-gray-900\">\n//                       {order.lineItems.map((item, index) => (\n//                         <div key={index} className=\"mb-1\">\n//                           <span className=\"font-medium\">{item.productName}</span>\n//                           <span className=\"text-gray-500 ml-2\">x{item.quantity}</span>\n//                         </div>\n//                       ))}\n//                     </div>\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n//                     {formatCurrency(order.total)}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                       order.paid \n//                         ? 'bg-green-100 text-green-800' \n//                         : 'bg-red-100 text-red-800'\n//                     }`}>\n//                       {order.paid ? 'Paid' : 'Unpaid'}\n//                     </span>\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                       order.fulfilled \n//                         ? 'bg-green-100 text-green-800' \n//                         : 'bg-yellow-100 text-yellow-800'\n//                     }`}>\n//                       {order.fulfilled ? 'Fulfilled' : 'Pending'}\n//                     </span>\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n//                     <button\n//                       onClick={() => setSelectedOrder(order)}\n//                       className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\n//                       title=\"View Details\"\n//                     >\n//                       <Eye size={16} />\n//                     </button>\n//                     <button \n//                       className=\"text-blue-600 hover:text-blue-900\"\n//                       title=\"Edit Order\"\n//                     >\n//                       <Edit size={16} />\n//                     </button>\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </div>\n\n//         {filteredOrders.length === 0 && (\n//           <div className=\"text-center py-12\">\n//             <div className=\"text-gray-500 text-lg\">No outstanding orders found</div>\n//             <p className=\"text-gray-400 mt-2\">All orders are either paid and fulfilled, or try adjusting your filters</p>\n//           </div>\n//         )}\n//       </div>\n\n//       {/* Order Detail Modal */}\n//       {selectedOrder && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <div className=\"flex items-center justify-between\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\n//                   Order Details - #{selectedOrder.orderId}\n//                 </h3>\n//                 <button\n//                   onClick={() => setSelectedOrder(null)}\n//                   className=\"text-gray-400 hover:text-gray-600\"\n//                 >\n//                   <XCircle size={20} />\n//                 </button>\n//               </div>\n//             </div>\n\n//             <div className=\"px-6 py-4\">\n//               {/* Order Info */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n//                 <div className=\"space-y-4\">\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Order ID</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedOrder.orderId}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer</label>\n//                     <p className=\"text-sm text-gray-900\">{getCustomerName(selectedOrder.customerId)}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Created Date</label>\n//                     <p className=\"text-sm text-gray-900\">{formatDate(selectedOrder.createdAt)}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Status</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedOrder.status}</p>\n//                   </div>\n//                 </div>\n\n//                 <div className=\"space-y-4\">\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Payment Status</label>\n//                     <div>\n//                       <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                         selectedOrder.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n//                       }`}>\n//                         {selectedOrder.paid ? 'Paid' : 'Unpaid'}\n//                       </span>\n//                     </div>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Fulfillment Status</label>\n//                     <div>\n//                       <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                         selectedOrder.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n//                       }`}>\n//                         {selectedOrder.fulfilled ? 'Fulfilled' : 'Pending'}\n//                       </span>\n//                     </div>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Total Amount</label>\n//                     <p className=\"text-lg font-bold text-gray-900\">{formatCurrency(selectedOrder.total)}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Payable Amount</label>\n//                     <p className=\"text-sm text-gray-900\">{formatCurrency(selectedOrder.payableAmount)}</p>\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Line Items */}\n//               <div className=\"mb-6\">\n//                 <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Order Items</h4>\n//                 <div className=\"overflow-x-auto\">\n//                   <table className=\"w-full border border-gray-200 rounded\">\n//                     <thead className=\"bg-gray-50\">\n//                       <tr>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Product</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Quantity</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Unit Price</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Total</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Status</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody className=\"divide-y divide-gray-200\">\n//                       {selectedOrder.lineItems.map((item, index) => (\n//                         <tr key={index}>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900\">{item.productName}</td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{item.quantity}</td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{formatCurrency(item.price)}</td>\n//                           <td className=\"px-4 py-2 text-sm font-medium text-gray-900 text-right\">{formatCurrency(item.total)}</td>\n//                           <td className=\"px-4 py-2\">\n//                             <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                               item.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n//                             }`}>\n//                               {item.status}\n//                             </span>\n//                           </td>\n//                         </tr>\n//                       ))}\n//                     </tbody>\n//                   </table>\n//                 </div>\n//               </div>\n\n//               {/* Totals */}\n//               <div className=\"bg-gray-50 p-4 rounded-lg\">\n//                 <div className=\"space-y-2\">\n//                   <div className=\"flex justify-between\">\n//                     <span className=\"text-sm text-gray-600\">Subtotal:</span>\n//                     <span className=\"text-sm text-gray-900\">{formatCurrency(selectedOrder.subTotal)}</span>\n//                   </div>\n//                   <div className=\"flex justify-between\">\n//                     <span className=\"text-sm text-gray-600\">Tax ({selectedOrder.taxRate}%):</span>\n//                     <span className=\"text-sm text-gray-900\">{formatCurrency(selectedOrder.taxAmount)}</span>\n//                   </div>\n//                   {selectedOrder.discountAmount > 0 && (\n//                     <div className=\"flex justify-between\">\n//                       <span className=\"text-sm text-gray-600\">Discount:</span>\n//                       <span className=\"text-sm text-red-600\">-{formatCurrency(selectedOrder.discountAmount)}</span>\n//                     </div>\n//                   )}\n//                   <div className=\"flex justify-between font-bold text-lg border-t pt-2\">\n//                     <span>Total:</span>\n//                     <span>{formatCurrency(selectedOrder.total)}</span>\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Action Buttons */}\n//               <div className=\"flex space-x-3 mt-6\">\n//                 {!selectedOrder.paid && (\n//                   <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\n//                     <CheckCircle size={16} />\n//                     <span>Mark as Paid</span>\n//                   </button>\n//                 )}\n//                 {!selectedOrder.fulfilled && (\n//                   <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\n//                     <FileText size={16} />\n//                     <span>Mark as Fulfilled</span>\n//                   </button>\n//                 )}\n//                 <button className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\">\n//                   <Download size={16} />\n//                   <span>Download Invoice</span>\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* API Status */}\n//       <div className=\"mt-8 p-6 bg-green-50 border border-green-200 rounded-lg\">\n//         <div className=\"flex items-center mb-4\">\n//           <CheckCircle className=\"text-green-600 mr-2\" size={20} />\n//           <h3 className=\"font-medium text-green-800\">API Integration Status</h3>\n//         </div>\n//         <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-green-700\">\n//           <div>\n//             <strong>Sales API:</strong> Connected - Showing {sales.data.length} outstanding orders\n//           </div>\n//           <div>\n//             <strong>Customers API:</strong> Connected - {customers.data.length} active customers loaded\n//           </div>\n//         </div>\n//         <div className=\"mt-4 text-xs text-green-600\">\n//           <strong>Note:</strong> Only unpaid or unfulfilled orders are displayed. Update your Bearer token in the code for live data.\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AccountsReceivable;\n\n//good\n// import React, { useState, useEffect } from 'react';\n// import { \n//   Users, \n//   DollarSign, \n//   CreditCard, \n//   AlertTriangle, \n//   Clock, \n//   Plus, \n//   Search, \n//   Filter, \n//   Eye, \n//   Edit, \n//   Download,\n//   CheckCircle,\n//   XCircle,\n//   Calendar,\n//   FileText,\n//   TrendingUp,\n//   Mail,\n//   Phone,\n//   Loader,\n//   RefreshCw\n// } from 'lucide-react';\n\n// // API Configuration\n// const API_BASE_URL_SALES = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/orders?start=0&size=200';\n// const API_CUSTOMERS = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/customers?status=Active';\n\n// // Replace with your actual Bearer token\n// const BEARER_TOKEN = 'your-bearer-token-here';\n\n// const AccountsReceivableAPI = () => {\n//   // State management\n//   const [sales, setSales] = useState({ loading: false, data: [], error: null });\n//   const [customers, setCustomers] = useState({ loading: false, data: [], error: null });\n//   const [activeTab, setActiveTab] = useState('overview');\n//   const [selectedCustomer, setSelectedCustomer] = useState(null);\n//   const [selectedOrder, setSelectedOrder] = useState(null);\n//   const [viewInvoice, setViewInvoice] = useState(null);\n//   const [showInvoiceForm, setShowInvoiceForm] = useState(false);\n//   const [filters, setFilters] = useState({\n//     customerType: 'all',\n//     status: 'all',\n//     dateRange: '30',\n//     searchTerm: ''\n//   });\n\n//   // API Functions\n//   const fetchSales = async () => {\n//     setSales(prev => ({ ...prev, loading: true, error: null }));\n//     try {\n//       const response = await fetch(API_BASE_URL_SALES, {\n//         method: 'GET',\n//         headers: {\n//           'Authorization': `Bearer ${BEARER_TOKEN}`,\n//           'Content-Type': 'application/json',\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! status: ${response.status}`);\n//       }\n\n//       const data = await response.json();\n\n//       // Show only records that are unpaid and fulfilled\n//       const filteredOrders = data.filter(order => \n//         !order.paid && order.fulfilled\n//       );\n\n//       setSales({ loading: false, data: filteredOrders, error: null });\n//     } catch (error) {\n//       console.error('Error fetching sales:', error);\n//       setSales({ loading: false, data: [], error: error.message });\n//     }\n//   };\n\n//   const fetchCustomers = async () => {\n//     setCustomers(prev => ({ ...prev, loading: true, error: null }));\n//     try {\n//       const response = await fetch(API_CUSTOMERS, {\n//         method: 'GET',\n//         headers: {\n//           'Authorization': `Bearer ${BEARER_TOKEN}`,\n//           'Content-Type': 'application/json',\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! status: ${response.status}`);\n//       }\n\n//       const data = await response.json();\n\n//       // Transform API customers to match our structure\n//       const transformedCustomers = data.map(customer => ({\n//         id: customer.id,\n//         name: customer.name,\n//         email: customer.email,\n//         phone: customer.phoneNumber,\n//         address: customer.address.length > 0 ? customer.address[0] : 'No address provided',\n//         customerType: 'individual', // Default type since API doesn't provide this\n//         creditLimit: 50000, // Default credit limit\n//         paymentTerms: 30,\n//         totalOwed: calculateCustomerBalance(customer.id),\n//         overdueAmount: calculateCustomerOverdue(customer.id),\n//         lastPayment: '2025-01-15',\n//         creditStatus: 'good',\n//         accountBalance: -calculateCustomerBalance(customer.id),\n//         invoiceCount: getCustomerInvoiceCount(customer.id),\n//         avgPaymentDays: 25,\n//         status: customer.status\n//       }));\n\n//       setCustomers({ loading: false, data: transformedCustomers, error: null });\n//     } catch (error) {\n//       console.error('Error fetching customers:', error);\n//       setCustomers({ loading: false, data: [], error: error.message });\n//     }\n//   };\n\n//   // Helper functions\n//   const calculateCustomerBalance = (customerId) => {\n//     return sales.data\n//       .filter(order => order.customerId === customerId && (!order.paid || !order.fulfilled))\n//       .reduce((sum, order) => sum + order.total, 0);\n//   };\n\n//   const calculateCustomerOverdue = (customerId) => {\n//     return sales.data\n//       .filter(order => order.customerId === customerId && !order.paid)\n//       .reduce((sum, order) => sum + order.total, 0);\n//   };\n\n//   const getCustomerInvoiceCount = (customerId) => {\n//     return sales.data.filter(order => order.customerId === customerId).length;\n//   };\n\n//   // Load data on component mount\n//   useEffect(() => {\n//     fetchSales();\n//     fetchCustomers();\n//   }, []);\n\n//   // Helper function to get customer name by ID\n//   const getCustomerName = (customerId) => {\n//     if (!customerId || customerId === 'null') return 'Walk-in Customer';\n//     const customer = customers.data.find(c => c.id === customerId);\n//     return customer ? customer.name : 'Unknown Customer';\n//   };\n\n//   // Helper function to get customer details by ID\n//   const getCustomerDetails = (customerId) => {\n//     if (!customerId || customerId === 'null') return null;\n//     return customers.data.find(c => c.id === customerId);\n//   };\n\n//   // Calculate AR summary\n//   const calculateARSummary = () => {\n//     const totalAR = customers.data.reduce((sum, customer) => sum + customer.totalOwed, 0);\n//     const totalOverdue = customers.data.reduce((sum, customer) => sum + customer.overdueAmount, 0);\n//     const customersWithBalance = customers.data.filter(customer => customer.totalOwed > 0).length;\n//     const avgDaysOutstanding = customers.data.length > 0 \n//       ? customers.data.reduce((sum, customer) => sum + customer.avgPaymentDays, 0) / customers.data.length \n//       : 0;\n\n//     return {\n//       totalAR,\n//       totalOverdue,\n//       customersWithBalance,\n//       avgDaysOutstanding: Math.round(avgDaysOutstanding)\n//     };\n//   };\n\n//   // Get aging data\n//   const getAgingData = () => {\n//     const aging = {\n//       current: 0,\n//       days30: 0,\n//       days60: 0,\n//       days90: 0,\n//       over90: 0\n//     };\n\n//     sales.data.forEach(order => {\n//       if (order.paid) return;\n\n//       const daysPastDue = order.daysOverdue || 0;\n\n//       if (daysPastDue <= 0) {\n//         aging.current += order.total;\n//       } else if (daysPastDue <= 30) {\n//         aging.days30 += order.total;\n//       } else if (daysPastDue <= 60) {\n//         aging.days60 += order.total;\n//       } else if (daysPastDue <= 90) {\n//         aging.days90 += order.total;\n//       } else {\n//         aging.over90 += order.total;\n//       }\n//     });\n\n//     return aging;\n//   };\n\n//   // Filter customers\n//   const getFilteredCustomers = () => {\n//     let filtered = [...customers.data];\n\n//     if (filters.customerType !== 'all') {\n//       filtered = filtered.filter(customer => customer.customerType === filters.customerType);\n//     }\n\n//     if (filters.status !== 'all') {\n//       filtered = filtered.filter(customer => {\n//         if (filters.status === 'overdue') return customer.overdueAmount > 0;\n//         if (filters.status === 'current') return customer.totalOwed > 0 && customer.overdueAmount === 0;\n//         if (filters.status === 'paid_up') return customer.totalOwed === 0;\n//         return true;\n//       });\n//     }\n\n//     if (filters.searchTerm) {\n//       const term = filters.searchTerm.toLowerCase();\n//       filtered = filtered.filter(customer =>\n//         customer.name.toLowerCase().includes(term) ||\n//         customer.email.toLowerCase().includes(term) ||\n//         customer.id.toLowerCase().includes(term)\n//       );\n//     }\n\n//     return filtered;\n//   };\n\n//   const getCreditStatusColor = (status) => {\n//     switch (status) {\n//       case 'excellent': return 'bg-green-100 text-green-800';\n//       case 'good': return 'bg-blue-100 text-blue-800';\n//       case 'watch': return 'bg-yellow-100 text-yellow-800';\n//       case 'hold': return 'bg-red-100 text-red-800';\n//       case 'cash_only': return 'bg-gray-100 text-gray-800';\n//       default: return 'bg-gray-100 text-gray-800';\n//     }\n//   };\n\n//   const getInvoiceStatusColor = (status) => {\n//     switch (status) {\n//       case 'paid': return 'bg-green-100 text-green-800';\n//       case 'outstanding': return 'bg-blue-100 text-blue-800';\n//       case 'overdue': return 'bg-red-100 text-red-800';\n//       case 'partial': return 'bg-yellow-100 text-yellow-800';\n//       default: return 'bg-gray-100 text-gray-800';\n//     }\n//   };\n\n//   const formatDate = (dateString) => {\n//     if (!dateString) return 'N/A';\n//     return dateString.split('.').slice(0, 3).join('/');\n//   };\n\n//   const formatCurrency = (amount) => {\n//     return new Intl.NumberFormat('en-US', {\n//       style: 'currency',\n//       currency: 'USD'\n//     }).format(amount);\n//   };\n\n//   const summary = calculateARSummary();\n//   const aging = getAgingData();\n//   const filteredCustomers = getFilteredCustomers();\n\n//   // Loading state\n//   if (sales.loading || customers.loading) {\n//     return (\n//       <div className=\"flex items-center justify-center min-h-screen\">\n//         <div className=\"flex items-center space-x-3\">\n//           <Loader className=\"animate-spin text-emerald-600\" size={24} />\n//           <span className=\"text-gray-600\">Loading data from API...</span>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   // Error state\n//   if (sales.error || customers.error) {\n//     return (\n//       <div className=\"max-w-7xl mx-auto p-6\">\n//         <div className=\"bg-red-50 border border-red-200 rounded-lg p-6\">\n//           <div className=\"flex items-center mb-4\">\n//             <AlertTriangle className=\"text-red-600 mr-2\" size={20} />\n//             <h3 className=\"font-medium text-red-800\">API Connection Error</h3>\n//           </div>\n//           <div className=\"text-red-700 mb-4\">\n//             {sales.error && <div>Sales API Error: {sales.error}</div>}\n//             {customers.error && <div>Customers API Error: {customers.error}</div>}\n//           </div>\n//           <button\n//             onClick={() => {\n//               fetchSales();\n//               fetchCustomers();\n//             }}\n//             className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 flex items-center space-x-2\"\n//           >\n//             <RefreshCw size={16} />\n//             <span>Retry Connection</span>\n//           </button>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"max-w-7xl mx-auto p-6 bg-white\">\n//       {/* Header */}\n//       <div className=\"mb-8\">\n//         <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\n//           <CreditCard className=\"mr-3 text-emerald-600\" />\n//           Accounts Receivable\n//         </h1>\n//         <p className=\"text-gray-600\">Manage customer invoicing, payments, and credit limits</p>\n//       </div>\n\n//       {/* Summary Cards */}\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n//         <div className=\"bg-blue-50 p-6 rounded-lg border border-blue-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-blue-600 text-sm font-medium\">Total A/R</p>\n//               <p className=\"text-2xl font-bold text-blue-900\">{formatCurrency(summary.totalAR)}</p>\n//             </div>\n//             <DollarSign className=\"text-blue-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-blue-700 mt-2\">{summary.customersWithBalance} customers with balances</p>\n//         </div>\n\n//         <div className=\"bg-red-50 p-6 rounded-lg border border-red-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-red-600 text-sm font-medium\">Overdue Amount</p>\n//               <p className=\"text-2xl font-bold text-red-900\">{formatCurrency(summary.totalOverdue)}</p>\n//             </div>\n//             <AlertTriangle className=\"text-red-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-red-700 mt-2\">\n//             {summary.totalAR > 0 ? ((summary.totalOverdue / summary.totalAR) * 100).toFixed(1) : 0}% of total A/R\n//           </p>\n//         </div>\n\n//         <div className=\"bg-green-50 p-6 rounded-lg border border-green-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-green-600 text-sm font-medium\">Avg. Days Outstanding</p>\n//               <p className=\"text-2xl font-bold text-green-900\">{summary.avgDaysOutstanding}</p>\n//             </div>\n//             <Clock className=\"text-green-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-green-700 mt-2\">Collection performance</p>\n//         </div>\n\n//         <div className=\"bg-purple-50 p-6 rounded-lg border border-purple-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-purple-600 text-sm font-medium\">Active Customers</p>\n//               <p className=\"text-2xl font-bold text-purple-900\">{customers.data.length}</p>\n//             </div>\n//             <Users className=\"text-purple-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-purple-700 mt-2\">Total customer accounts</p>\n//         </div>\n//       </div>\n\n//       {/* Tabs */}\n//       <div className=\"mb-6\">\n//         <div className=\"border-b border-gray-200\">\n//           <nav className=\"-mb-px flex space-x-8\">\n//             {[\n//               { id: 'overview', name: 'Customer Overview', icon: Users },\n//               { id: 'invoices', name: 'Invoices', icon: FileText },\n//               { id: 'aging', name: 'Aging Report', icon: Clock },\n//               { id: 'payments', name: 'Payments', icon: CheckCircle }\n//             ].map((tab) => (\n//               <button\n//                 key={tab.id}\n//                 onClick={() => setActiveTab(tab.id)}\n//                 className={`flex items-center py-2 px-1 border-b-2 font-medium text-sm ${\n//                   activeTab === tab.id\n//                     ? 'border-emerald-500 text-emerald-600'\n//                     : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n//                 }`}\n//               >\n//                 <tab.icon className=\"mr-2\" size={16} />\n//                 {tab.name}\n//               </button>\n//             ))}\n//           </nav>\n//         </div>\n//       </div>\n\n//       {/* Tab Content */}\n//       {activeTab === 'overview' && (\n//         <div>\n//           {/* Filters */}\n//           <div className=\"flex flex-wrap items-center gap-4 mb-6\">\n//             <div className=\"relative\">\n//               <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\n//               <input\n//                 type=\"text\"\n//                 placeholder=\"Search customers...\"\n//                 value={filters.searchTerm}\n//                 onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\n//                 className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               />\n//             </div>\n\n//             <select\n//               value={filters.customerType}\n//               onChange={(e) => setFilters({ ...filters, customerType: e.target.value })}\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//             >\n//               <option value=\"all\">All Customer Types</option>\n//               <option value=\"corporate\">Corporate</option>\n//               <option value=\"small_business\">Small Business</option>\n//               <option value=\"individual\">Individual</option>\n//               <option value=\"cash\">Cash Only</option>\n//             </select>\n\n//             <select\n//               value={filters.status}\n//               onChange={(e) => setFilters({ ...filters, status: e.target.value })}\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//             >\n//               <option value=\"all\">All Statuses</option>\n//               <option value=\"current\">Current</option>\n//               <option value=\"overdue\">Overdue</option>\n//               <option value=\"paid_up\">Paid Up</option>\n//             </select>\n\n//             <button\n//               onClick={() => setShowInvoiceForm(true)}\n//               className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\n//             >\n//               <Plus size={16} />\n//               <span>New Invoice</span>\n//             </button>\n//           </div>\n\n//           {/* Customer List */}\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//             <div className=\"overflow-x-auto\">\n//               <table className=\"w-full\">\n//                 <thead className=\"bg-gray-50\">\n//                   <tr>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Customer\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Type\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Credit Limit\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Balance\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Overdue\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Credit Status\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Last Payment\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Actions\n//                     </th>\n//                   </tr>\n//                 </thead>\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\n//                   {filteredCustomers.map((customer) => (\n//                     <tr key={customer.id} className=\"hover:bg-gray-50\">\n//                       <td className=\"px-6 py-4\">\n//                         <div>\n//                           <div className=\"text-sm font-medium text-gray-900\">{customer.name}</div>\n//                           <div className=\"text-sm text-gray-500\">{customer.id}</div>\n//                           <div className=\"text-xs text-gray-400 flex items-center mt-1\">\n//                             <Mail className=\"mr-1\" size={12} />\n//                             {customer.email}\n//                           </div>\n//                         </div>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-gray-100 text-gray-800\">\n//                           {customer.customerType.replace('_', ' ')}\n//                         </span>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {formatCurrency(customer.creditLimit)}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <div className=\"text-sm font-medium text-gray-900\">\n//                           {formatCurrency(customer.totalOwed)}\n//                         </div>\n//                         <div className=\"text-xs text-gray-500\">\n//                           {customer.invoiceCount} invoices\n//                         </div>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         {customer.overdueAmount > 0 ? (\n//                           <span className=\"text-red-600 font-medium\">\n//                             {formatCurrency(customer.overdueAmount)}\n//                           </span>\n//                         ) : (\n//                           <span className=\"text-green-600\">$0.00</span>\n//                         )}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(customer.creditStatus)}`}>\n//                           {customer.creditStatus.replace('_', ' ')}\n//                         </span>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {customer.lastPayment}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n//                         <button\n//                           onClick={() => setSelectedCustomer(customer)}\n//                           className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\n//                         >\n//                           <Eye size={16} />\n//                         </button>\n//                         <button className=\"text-blue-600 hover:text-blue-900\">\n//                           <Edit size={16} />\n//                         </button>\n//                       </td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {activeTab === 'aging' && (\n//         <div>\n//           <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n//             {/* Aging Summary */}\n//             <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n//               <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Aging Summary</h3>\n//               <div className=\"space-y-4\">\n//                 <div className=\"flex justify-between items-center p-3 bg-green-50 rounded\">\n//                   <span className=\"font-medium text-green-800\">Current (0-30 days)</span>\n//                   <span className=\"font-bold text-green-900\">{formatCurrency(aging.current)}</span>\n//                 </div>\n//                 <div className=\"flex justify-between items-center p-3 bg-yellow-50 rounded\">\n//                   <span className=\"font-medium text-yellow-800\">31-60 days</span>\n//                   <span className=\"font-bold text-yellow-900\">{formatCurrency(aging.days30)}</span>\n//                 </div>\n//                 <div className=\"flex justify-between items-center p-3 bg-orange-50 rounded\">\n//                   <span className=\"font-medium text-orange-800\">61-90 days</span>\n//                   <span className=\"font-bold text-orange-900\">{formatCurrency(aging.days60)}</span>\n//                 </div>\n//                 <div className=\"flex justify-between items-center p-3 bg-red-50 rounded\">\n//                   <span className=\"font-medium text-red-800\">Over 90 days</span>\n//                   <span className=\"font-bold text-red-900\">{formatCurrency(aging.over90)}</span>\n//                 </div>\n//               </div>\n//               <div className=\"mt-4 pt-4 border-t\">\n//                 <div className=\"flex justify-between items-center\">\n//                   <span className=\"text-lg font-semibold text-gray-900\">Total Outstanding</span>\n//                   <span className=\"text-xl font-bold text-gray-900\">\n//                     {formatCurrency(aging.current + aging.days30 + aging.days60 + aging.days90 + aging.over90)}\n//                   </span>\n//                 </div>\n//               </div>\n//             </div>\n\n//             {/* Collection Priority */}\n//             <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n//               <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Collection Priority</h3>\n//               <div className=\"space-y-3\">\n//                 {customers.data\n//                   .filter(customer => customer.overdueAmount > 0)\n//                   .sort((a, b) => b.overdueAmount - a.overdueAmount)\n//                   .slice(0, 5)\n//                   .map((customer, index) => (\n//                     <div key={customer.id} className=\"flex items-center justify-between p-3 bg-red-50 rounded\">\n//                       <div>\n//                         <div className=\"font-medium text-gray-900\">{customer.name}</div>\n//                         <div className=\"text-sm text-gray-500\">\n//                           Last payment: {customer.lastPayment}\n//                         </div>\n//                       </div>\n//                       <div className=\"text-right\">\n//                         <div className=\"font-bold text-red-900\">{formatCurrency(customer.overdueAmount)}</div>\n//                         <div className=\"text-xs text-red-700\">#{index + 1} Priority</div>\n//                       </div>\n//                     </div>\n//                   ))}\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {activeTab === 'invoices' && (\n//         <div>\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <h3 className=\"text-lg font-semibold text-gray-900\">Outstanding Orders/Invoices</h3>\n//             </div>\n//             <div className=\"overflow-x-auto\">\n//               <table className=\"w-full\">\n//                 <thead className=\"bg-gray-50\">\n//                   <tr>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Order #\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Customer\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Date\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Items\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Amount\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Payment Status\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Fulfillment\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Actions\n//                     </th>\n//                   </tr>\n//                 </thead>\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\n//                   {sales.data.map((order) => (\n//                     <tr key={order.orderId} className=\"hover:bg-gray-50\">\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <div className=\"text-sm font-medium text-gray-900\">#{order.orderId}</div>\n//                         <div className=\"text-xs text-gray-500\">{order.status}</div>\n//                       </td>\n//                       <td className=\"px-6 py-4\">\n//                         <div className=\"text-sm font-medium text-gray-900\">{getCustomerName(order.customerId)}</div>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {formatDate(order.createdAt)}\n//                       </td>\n//                       <td className=\"px-6 py-4\">\n//                         <div className=\"text-sm text-gray-900\">\n//                           {order.lineItems.map((item, index) => (\n//                             <div key={index} className=\"mb-1\">\n//                               <span className=\"font-medium\">{item.productName}</span>\n//                               <span className=\"text-gray-500 ml-2\">x{item.quantity}</span>\n//                             </div>\n//                           ))}\n//                         </div>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {formatCurrency(order.total)}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                           order.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n//                         }`}>\n//                           {order.paid ? 'Paid' : 'Unpaid'}\n//                         </span>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                           order.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n//                         }`}>\n//                           {order.fulfilled ? 'Fulfilled' : 'Pending'}\n//                         </span>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n//                         <button\n//                           className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\n//                           onClick={() => setViewInvoice(order)}\n//                         >\n//                           <Eye size={16} />\n//                         </button>\n//                         <button className=\"text-blue-600 hover:text-blue-900\">\n//                           <Download size={16} />\n//                         </button>\n//                       </td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {activeTab === 'payments' && (\n//         <div>\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <h3 className=\"text-lg font-semibold text-gray-900\">Recent Payment Activities</h3>\n//             </div>\n//             <div className=\"overflow-x-auto\">\n//               <table className=\"w-full\">\n//                 <thead className=\"bg-gray-50\">\n//                   <tr>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Order ID\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Customer\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Date\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Amount\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Payment Status\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Payment Method\n//                     </th>\n//                   </tr>\n//                 </thead>\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\n//                   {sales.data.filter(order => order.paid).map((order) => (\n//                     <tr key={order.orderId} className=\"hover:bg-gray-50\">\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n//                         #{order.orderId}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {getCustomerName(order.customerId)}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {formatDate(order.createdAt)}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {formatCurrency(order.total)}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-green-100 text-green-800\">\n//                           Paid\n//                         </span>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-blue-100 text-blue-800\">\n//                           POS System\n//                         </span>\n//                       </td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Customer Detail Modal */}\n//       {selectedCustomer && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <div className=\"flex items-center justify-between\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\n//                   Customer Details - {selectedCustomer.name}\n//                 </h3>\n//                 <button\n//                   onClick={() => setSelectedCustomer(null)}\n//                   className=\"text-gray-400 hover:text-gray-600\"\n//                 >\n//                   <XCircle size={20} />\n//                 </button>\n//               </div>\n//             </div>\n\n//             <div className=\"px-6 py-4\">\n//               {/* Customer Info Grid */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n//                 <div className=\"space-y-4\">\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer ID</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.id}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Email</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.email}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Phone</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.phone}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Address</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.address}</p>\n//                   </div>\n//                 </div>\n\n//                 <div className=\"space-y-4\">\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer Type</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.customerType.replace('_', ' ')}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Limit</label>\n//                     <p className=\"text-sm text-gray-900\">{formatCurrency(selectedCustomer.creditLimit)}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Payment Terms</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.paymentTerms} days</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Status</label>\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(selectedCustomer.creditStatus)}`}>\n//                       {selectedCustomer.creditStatus.replace('_', ' ')}\n//                     </span>\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Financial Summary */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n//                 <div className=\"bg-blue-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-blue-600\">Current Balance</div>\n//                   <div className=\"text-xl font-bold text-blue-900\">\n//                     {formatCurrency(selectedCustomer.totalOwed)}\n//                   </div>\n//                 </div>\n//                 <div className=\"bg-red-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-red-600\">Overdue Amount</div>\n//                   <div className=\"text-xl font-bold text-red-900\">\n//                     {formatCurrency(selectedCustomer.overdueAmount)}\n//                   </div>\n//                 </div>\n//                 <div className=\"bg-green-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-green-600\">Credit Available</div>\n//                   <div className=\"text-xl font-bold text-green-900\">\n//                     {formatCurrency(selectedCustomer.creditLimit - selectedCustomer.totalOwed)}\n//                   </div>\n//                 </div>\n//                 <div className=\"bg-purple-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-purple-600\">Avg Payment Days</div>\n//                   <div className=\"text-xl font-bold text-purple-900\">\n//                     {selectedCustomer.avgPaymentDays}\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Customer Orders */}\n//               <div className=\"mb-6\">\n//                 <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Customer Orders</h4>\n//                 <div className=\"overflow-x-auto\">\n//                   <table className=\"w-full border border-gray-200 rounded\">\n//                     <thead className=\"bg-gray-50\">\n//                       <tr>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Order</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Date</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Items</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Amount</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Payment</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Fulfillment</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody className=\"divide-y divide-gray-200\">\n//                       {sales.data\n//                         .filter(order => order.customerId === selectedCustomer.id)\n//                         .map((order) => (\n//                           <tr key={order.orderId}>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">#{order.orderId}</td>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{formatDate(order.createdAt)}</td>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">\n//                               {order.lineItems.map(item => item.productName).join(', ')}\n//                             </td>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{formatCurrency(order.total)}</td>\n//                             <td className=\"px-4 py-2\">\n//                               <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                                 order.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n//                               }`}>\n//                                 {order.paid ? 'Paid' : 'Unpaid'}\n//                               </span>\n//                             </td>\n//                             <td className=\"px-4 py-2\">\n//                               <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                                 order.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n//                               }`}>\n//                                 {order.fulfilled ? 'Fulfilled' : 'Pending'}\n//                               </span>\n//                             </td>\n//                           </tr>\n//                         ))}\n//                     </tbody>\n//                   </table>\n//                 </div>\n//               </div>\n\n//               {/* Action Buttons */}\n//               <div className=\"flex space-x-3\">\n//                 <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\n//                   <Plus size={16} />\n//                   <span>New Invoice</span>\n//                 </button>\n//                 <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\n//                   <CheckCircle size={16} />\n//                   <span>Record Payment</span>\n//                 </button>\n//                 <button className=\"px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 flex items-center space-x-2\">\n//                   <Mail size={16} />\n//                   <span>Send Statement</span>\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Order/Invoice Detail Modal */}\n//       {viewInvoice && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <div className=\"flex items-center justify-between\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\n//                   Order Details - #{viewInvoice.orderId}\n//                 </h3>\n//                 <button\n//                   onClick={() => setViewInvoice(null)}\n//                   className=\"text-gray-400 hover:text-gray-600\"\n//                 >\n//                   <XCircle size={20} />\n//                 </button>\n//               </div>\n//             </div>\n\n//             <div className=\"px-6 py-4\">\n//               {/* Order Info */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n//                 <div className=\"space-y-4\">\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Order ID</label>\n//                     <p className=\"text-sm text-gray-900\">{viewInvoice.orderId}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer</label>\n//                     <p className=\"text-sm text-gray-900\">{getCustomerName(viewInvoice.customerId)}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Created Date</label>\n//                     <p className=\"text-sm text-gray-900\">{formatDate(viewInvoice.createdAt)}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Status</label>\n//                     <p className=\"text-sm text-gray-900\">{viewInvoice.status}</p>\n//                   </div>\n//                 </div>\n\n//                 <div className=\"space-y-4\">\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Payment Status</label>\n//                     <div>\n//                       <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                         viewInvoice.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n//                       }`}>\n//                         {viewInvoice.paid ? 'Paid' : 'Unpaid'}\n//                       </span>\n//                     </div>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Fulfillment Status</label>\n//                     <div>\n//                       <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                         viewInvoice.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n//                       }`}>\n//                         {viewInvoice.fulfilled ? 'Fulfilled' : 'Pending'}\n//                       </span>\n//                     </div>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Total Amount</label>\n//                     <p className=\"text-lg font-bold text-gray-900\">{formatCurrency(viewInvoice.total)}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Payable Amount</label>\n//                     <p className=\"text-sm text-gray-900\">{formatCurrency(viewInvoice.payableAmount)}</p>\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Line Items */}\n//               <div className=\"mb-6\">\n//                 <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Order Items</h4>\n//                 <div className=\"overflow-x-auto\">\n//                   <table className=\"w-full border border-gray-200 rounded\">\n//                     <thead className=\"bg-gray-50\">\n//                       <tr>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Product</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Quantity</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Unit Price</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Total</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Status</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody className=\"divide-y divide-gray-200\">\n//                       {viewInvoice.lineItems.map((item, index) => (\n//                         <tr key={index}>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900\">{item.productName}</td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{item.quantity}</td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{formatCurrency(item.price)}</td>\n//                           <td className=\"px-4 py-2 text-sm font-medium text-gray-900 text-right\">{formatCurrency(item.total)}</td>\n//                           <td className=\"px-4 py-2\">\n//                             <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                               item.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n//                             }`}>\n//                               {item.status}\n//                             </span>\n//                           </td>\n//                         </tr>\n//                       ))}\n//                     </tbody>\n//                   </table>\n//                 </div>\n//               </div>\n\n//               {/* Totals */}\n//               <div className=\"bg-gray-50 p-4 rounded-lg\">\n//                 <div className=\"space-y-2\">\n//                   <div className=\"flex justify-between\">\n//                     <span className=\"text-sm text-gray-600\">Subtotal:</span>\n//                     <span className=\"text-sm text-gray-900\">{formatCurrency(viewInvoice.subTotal)}</span>\n//                   </div>\n//                   <div className=\"flex justify-between\">\n//                     <span className=\"text-sm text-gray-600\">Tax ({viewInvoice.taxRate}%):</span>\n//                     <span className=\"text-sm text-gray-900\">{formatCurrency(viewInvoice.taxAmount)}</span>\n//                   </div>\n//                   {viewInvoice.discountAmount > 0 && (\n//                     <div className=\"flex justify-between\">\n//                       <span className=\"text-sm text-gray-600\">Discount:</span>\n//                       <span className=\"text-sm text-red-600\">-{formatCurrency(viewInvoice.discountAmount)}</span>\n//                     </div>\n//                   )}\n//                   <div className=\"flex justify-between font-bold text-lg border-t pt-2\">\n//                     <span>Total:</span>\n//                     <span>{formatCurrency(viewInvoice.total)}</span>\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Action Buttons */}\n//               <div className=\"flex space-x-3 mt-6\">\n//                 {!viewInvoice.paid && (\n//                   <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\n//                     <CheckCircle size={16} />\n//                     <span>Mark as Paid</span>\n//                   </button>\n//                 )}\n//                 {!viewInvoice.fulfilled && (\n//                   <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\n//                     <FileText size={16} />\n//                     <span>Mark as Fulfilled</span>\n//                   </button>\n//                 )}\n//                 <button className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\">\n//                   <Download size={16} />\n//                   <span>Download Invoice</span>\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* API Integration Status */}\n//       <div className=\"mt-8 p-6 bg-green-50 border border-green-200 rounded-lg\">\n//         <div className=\"flex items-center mb-4\">\n//           <CheckCircle className=\"text-green-600 mr-2\" size={20} />\n//           <h3 className=\"font-medium text-green-800\">POS Integration Active</h3>\n//         </div>\n//         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm text-green-700\">\n//           <div>\n//             <strong>Sales Orders:</strong> {sales.data.length} outstanding orders from POS system\n//           </div>\n//           <div>\n//             <strong>Customers:</strong> {customers.data.length} active customers synchronized\n//           </div>\n//           <div>\n//             <strong>Real-time Updates:</strong> Data refreshes automatically with POS transactions\n//           </div>\n//         </div>\n//         <div className=\"mt-4 text-xs text-green-600\">\n//           <strong>Note:</strong> Only showing unpaid or unfulfilled orders. Replace Bearer token for live data connection.\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AccountsReceivableAPI;\n\n//excellent\n// import React, { useState, useEffect } from 'react';\n// import { \n//   Users, \n//   DollarSign, \n//   CreditCard, \n//   AlertTriangle, \n//   Clock, \n//   Plus, \n//   Search, \n//   Filter, \n//   Eye, \n//   Edit, \n//   Download,\n//   CheckCircle,\n//   XCircle,\n//   Calendar,\n//   FileText,\n//   TrendingUp,\n//   Mail,\n//   Phone,\n//   Loader,\n//   RefreshCw\n// } from 'lucide-react';\n\n// // API Configuration\n// const API_BASE_URL_SALES = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/orders?start=0&size=200';\n// const API_CUSTOMERS = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/customers?status=Active';\n\n// // Replace with your actual Bearer token\n// const BEARER_TOKEN = 'your-bearer-token-here';\n\n// const AccountsReceivableAPI = () => {\n//   // State management\n//   const [sales, setSales] = useState({ loading: false, data: [], error: null });\n//   const [customers, setCustomers] = useState({ loading: false, data: [], error: null });\n//   const [activeTab, setActiveTab] = useState('overview');\n//   const [selectedCustomer, setSelectedCustomer] = useState(null);\n//   const [selectedOrder, setSelectedOrder] = useState(null);\n//   const [viewInvoice, setViewInvoice] = useState(null);\n//   const [showInvoiceForm, setShowInvoiceForm] = useState(false);\n//   const [filters, setFilters] = useState({\n//     customerType: 'all',\n//     status: 'all',\n//     dateRange: '30',\n//     searchTerm: ''\n//   });\n\n//   // API Functions\n//   const fetchSales = async () => {\n//     setSales(prev => ({ ...prev, loading: true, error: null }));\n//     try {\n//       const response = await fetch(API_BASE_URL_SALES, {\n//         method: 'GET',\n//         headers: {\n//           'Authorization': `Bearer ${BEARER_TOKEN}`,\n//           'Content-Type': 'application/json',\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! status: ${response.status}`);\n//       }\n\n//       const allData = await response.json();\n\n//       // Store all data for customer calculations\n//       window.allSalesData = allData;\n\n//       // Show only records that are unpaid and fulfilled for display\n//       const filteredOrders = allData.filter(order => \n//         !order.paid && order.fulfilled\n//       );\n\n//       setSales({ loading: false, data: filteredOrders, error: null });\n//     } catch (error) {\n//       console.error('Error fetching sales:', error);\n//       setSales({ loading: false, data: [], error: error.message });\n//     }\n//   };\n\n//   const fetchCustomers = async () => {\n//     setCustomers(prev => ({ ...prev, loading: true, error: null }));\n//     try {\n//       const response = await fetch(API_CUSTOMERS, {\n//         method: 'GET',\n//         headers: {\n//           'Authorization': `Bearer ${BEARER_TOKEN}`,\n//           'Content-Type': 'application/json',\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! status: ${response.status}`);\n//       }\n\n//       const data = await response.json();\n\n//       // Use all sales data for customer calculations, not just filtered display data\n//       const allSalesData = window.allSalesData || [];\n\n//       // Transform API customers to match our structure with real calculated data\n//       const transformedCustomers = data.map(customer => {\n//         // Get ALL orders for this customer (not just filtered ones)\n//         const customerOrders = allSalesData.filter(order => order.customerId === customer.id);\n\n//         // Calculate total owed from ALL unpaid orders\n//         const totalOwed = customerOrders\n//           .filter(order => !order.paid)\n//           .reduce((sum, order) => sum + (order.total || 0), 0);\n\n//         // Overdue amount = total owed (since all unpaid orders need collection)\n//         const overdueAmount = totalOwed;\n\n//         // Total number of orders for this customer\n//         const invoiceCount = customerOrders.length;\n\n//         // Determine customer type based on API data or order history\n//         let customerType = 'individual';\n//         const totalSpent = customerOrders\n//           .filter(order => order.paid)\n//           .reduce((sum, order) => sum + (order.total || 0), 0);\n\n//         if (totalSpent > 500000 || customer.totalSpendOnOrder > 500000) {\n//           customerType = 'corporate';\n//         } else if (totalSpent > 100000 || customer.totalSpendOnOrder > 100000) {\n//           customerType = 'small_business';\n//         }\n\n//         // Set credit limit based on customer type\n//         let creditLimit = 50000; // Default\n//         if (customerType === 'corporate') {\n//           creditLimit = 200000;\n//         } else if (customerType === 'small_business') {\n//           creditLimit = 100000;\n//         }\n\n//         // Determine credit status based on payment behavior\n//         let creditStatus = 'good';\n//         if (totalOwed === 0) {\n//           creditStatus = 'excellent';\n//         } else if (totalOwed > creditLimit * 0.8) {\n//           creditStatus = 'hold';\n//         } else if (totalOwed > creditLimit * 0.5) {\n//           creditStatus = 'watch';\n//         }\n\n//         // Calculate average payment days\n//         const paidOrders = customerOrders.filter(o => o.paid);\n//         const avgPaymentDays = paidOrders.length > 0 ? 30 : 45; // Default estimate\n\n//         // Get last payment date from most recent paid order\n//         const lastPayment = paidOrders.length > 0 ? \n//           paidOrders.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))[0].createdAt.split('.').slice(0, 3).join('-') :\n//           'No payments';\n\n//         return {\n//           id: customer.id,\n//           name: customer.name,\n//           email: customer.email || 'No email provided',\n//           phone: customer.phoneNumber || 'No phone provided',\n//           address: customer.address && customer.address.length > 0 ? \n//             (typeof customer.address[0] === 'string' ? customer.address[0] : 'No address provided') : \n//             'No address provided',\n//           customerType: customerType,\n//           creditLimit: creditLimit,\n//           paymentTerms: customerType === 'corporate' ? 45 : (customerType === 'small_business' ? 30 : 15),\n//           totalOwed: totalOwed,\n//           overdueAmount: overdueAmount,\n//           lastPayment: lastPayment,\n//           creditStatus: creditStatus,\n//           accountBalance: -totalOwed,\n//           invoiceCount: invoiceCount,\n//           avgPaymentDays: avgPaymentDays,\n//           status: customer.status,\n//           totalSpendOnOrder: customer.totalSpendOnOrder || 0,\n//           averageOrderValue: customer.averageOrderValue || 0,\n//           numberOfOrders: customer.numberOfOrders || invoiceCount\n//         };\n//       });\n\n//       setCustomers({ loading: false, data: transformedCustomers, error: null });\n//     } catch (error) {\n//       console.error('Error fetching customers:', error);\n//       setCustomers({ loading: false, data: [], error: error.message });\n//     }\n//   };\n\n//   // Also add refresh button functionality to recalculate customer data\n//   const refreshAllData = async () => {\n//     await fetchSales();\n//     setTimeout(() => fetchCustomers(), 500);\n//   };\n\n//   // Load data on component mount\n//   useEffect(() => {\n//     const loadData = async () => {\n//       await fetchSales();\n//       // Fetch customers after sales data is loaded to calculate balances correctly\n//       setTimeout(() => fetchCustomers(), 500);\n//     };\n//     loadData();\n//   }, []);\n\n//   // Helper function to get customer name by ID\n//   const getCustomerName = (customerId) => {\n//     if (!customerId || customerId === 'null') return 'Walk-in Customer';\n//     const customer = customers.data.find(c => c.id === customerId);\n//     return customer ? customer.name : 'Unknown Customer';\n//   };\n\n//   // Helper function to get customer details by ID\n//   const getCustomerDetails = (customerId) => {\n//     if (!customerId || customerId === 'null') return null;\n//     return customers.data.find(c => c.id === customerId);\n//   };\n\n//   // Calculate AR summary\n//   const calculateARSummary = () => {\n//     const totalAR = customers.data.reduce((sum, customer) => sum + customer.totalOwed, 0);\n//     const totalOverdue = customers.data.reduce((sum, customer) => sum + customer.overdueAmount, 0);\n//     const customersWithBalance = customers.data.filter(customer => customer.totalOwed > 0).length;\n//     const avgDaysOutstanding = customers.data.length > 0 \n//       ? customers.data.reduce((sum, customer) => sum + customer.avgPaymentDays, 0) / customers.data.length \n//       : 0;\n\n//     return {\n//       totalAR,\n//       totalOverdue,\n//       customersWithBalance,\n//       avgDaysOutstanding: Math.round(avgDaysOutstanding)\n//     };\n//   };\n\n//   // Get aging data\n//   const getAgingData = () => {\n//     const aging = {\n//       current: 0,\n//       days30: 0,\n//       days60: 0,\n//       days90: 0,\n//       over90: 0\n//     };\n\n//     sales.data.forEach(order => {\n//       if (order.paid) return;\n\n//       const daysPastDue = order.daysOverdue || 0;\n\n//       if (daysPastDue <= 0) {\n//         aging.current += order.total;\n//       } else if (daysPastDue <= 30) {\n//         aging.days30 += order.total;\n//       } else if (daysPastDue <= 60) {\n//         aging.days60 += order.total;\n//       } else if (daysPastDue <= 90) {\n//         aging.days90 += order.total;\n//       } else {\n//         aging.over90 += order.total;\n//       }\n//     });\n\n//     return aging;\n//   };\n\n//   // Filter customers\n//   const getFilteredCustomers = () => {\n//     let filtered = [...customers.data];\n\n//     if (filters.customerType !== 'all') {\n//       filtered = filtered.filter(customer => customer.customerType === filters.customerType);\n//     }\n\n//     if (filters.status !== 'all') {\n//       filtered = filtered.filter(customer => {\n//         if (filters.status === 'overdue') return customer.overdueAmount > 0;\n//         if (filters.status === 'current') return customer.totalOwed > 0 && customer.overdueAmount === 0;\n//         if (filters.status === 'paid_up') return customer.totalOwed === 0;\n//         return true;\n//       });\n//     }\n\n//     if (filters.searchTerm) {\n//       const term = filters.searchTerm.toLowerCase();\n//       filtered = filtered.filter(customer =>\n//         customer.name.toLowerCase().includes(term) ||\n//         customer.email.toLowerCase().includes(term) ||\n//         customer.id.toLowerCase().includes(term)\n//       );\n//     }\n\n//     return filtered;\n//   };\n\n//   const getCreditStatusColor = (status) => {\n//     switch (status) {\n//       case 'excellent': return 'bg-green-100 text-green-800';\n//       case 'good': return 'bg-blue-100 text-blue-800';\n//       case 'watch': return 'bg-yellow-100 text-yellow-800';\n//       case 'hold': return 'bg-red-100 text-red-800';\n//       case 'cash_only': return 'bg-gray-100 text-gray-800';\n//       default: return 'bg-gray-100 text-gray-800';\n//     }\n//   };\n\n//   const getInvoiceStatusColor = (status) => {\n//     switch (status) {\n//       case 'paid': return 'bg-green-100 text-green-800';\n//       case 'outstanding': return 'bg-blue-100 text-blue-800';\n//       case 'overdue': return 'bg-red-100 text-red-800';\n//       case 'partial': return 'bg-yellow-100 text-yellow-800';\n//       default: return 'bg-gray-100 text-gray-800';\n//     }\n//   };\n\n//   const formatDate = (dateString) => {\n//     if (!dateString) return 'N/A';\n//     return dateString.split('.').slice(0, 3).join('/');\n//   };\n\n//   const formatCurrency = (amount) => {\n//     return new Intl.NumberFormat('en-US', {\n//       style: 'currency',\n//       currency: 'USD'\n//     }).format(amount);\n//   };\n\n//   const summary = calculateARSummary();\n//   const aging = getAgingData();\n//   const filteredCustomers = getFilteredCustomers();\n\n//   // Loading state\n//   if (sales.loading || customers.loading) {\n//     return (\n//       <div className=\"flex items-center justify-center min-h-screen\">\n//         <div className=\"flex items-center space-x-3\">\n//           <Loader className=\"animate-spin text-emerald-600\" size={24} />\n//           <span className=\"text-gray-600\">Loading data from API...</span>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   // Error state\n//   if (sales.error || customers.error) {\n//     return (\n//       <div className=\"max-w-7xl mx-auto p-6\">\n//         <div className=\"bg-red-50 border border-red-200 rounded-lg p-6\">\n//           <div className=\"flex items-center mb-4\">\n//             <AlertTriangle className=\"text-red-600 mr-2\" size={20} />\n//             <h3 className=\"font-medium text-red-800\">API Connection Error</h3>\n//           </div>\n//           <div className=\"text-red-700 mb-4\">\n//             {sales.error && <div>Sales API Error: {sales.error}</div>}\n//             {customers.error && <div>Customers API Error: {customers.error}</div>}\n//           </div>\n//           <button\n//             onClick={() => {\n//               fetchSales();\n//               fetchCustomers();\n//             }}\n//             className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 flex items-center space-x-2\"\n//           >\n//             <RefreshCw size={16} />\n//             <span>Retry Connection</span>\n//           </button>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"max-w-7xl mx-auto p-6 bg-white\">\n//       {/* Header */}\n//       <div className=\"mb-8\">\n//         <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\n//           <CreditCard className=\"mr-3 text-emerald-600\" />\n//           Accounts Receivable\n//         </h1>\n//         <p className=\"text-gray-600\">Manage customer invoicing, payments, and credit limits</p>\n//       </div>\n\n//       {/* Summary Cards */}\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n//         <div className=\"bg-blue-50 p-6 rounded-lg border border-blue-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-blue-600 text-sm font-medium\">Total A/R</p>\n//               <p className=\"text-2xl font-bold text-blue-900\">{formatCurrency(summary.totalAR)}</p>\n//             </div>\n//             <DollarSign className=\"text-blue-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-blue-700 mt-2\">{summary.customersWithBalance} customers with balances</p>\n//         </div>\n\n//         <div className=\"bg-red-50 p-6 rounded-lg border border-red-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-red-600 text-sm font-medium\">Overdue Amount</p>\n//               <p className=\"text-2xl font-bold text-red-900\">{formatCurrency(summary.totalOverdue)}</p>\n//             </div>\n//             <AlertTriangle className=\"text-red-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-red-700 mt-2\">\n//             {summary.totalAR > 0 ? ((summary.totalOverdue / summary.totalAR) * 100).toFixed(1) : 0}% of total A/R\n//           </p>\n//         </div>\n\n//         <div className=\"bg-green-50 p-6 rounded-lg border border-green-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-green-600 text-sm font-medium\">Avg. Days Outstanding</p>\n//               <p className=\"text-2xl font-bold text-green-900\">{summary.avgDaysOutstanding}</p>\n//             </div>\n//             <Clock className=\"text-green-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-green-700 mt-2\">Collection performance</p>\n//         </div>\n\n//         <div className=\"bg-purple-50 p-6 rounded-lg border border-purple-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-purple-600 text-sm font-medium\">Active Customers</p>\n//               <p className=\"text-2xl font-bold text-purple-900\">{customers.data.length}</p>\n//             </div>\n//             <Users className=\"text-purple-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-purple-700 mt-2\">Total customer accounts</p>\n//         </div>\n//       </div>\n\n//       {/* Tabs */}\n//       <div className=\"mb-6\">\n//         <div className=\"border-b border-gray-200\">\n//           <nav className=\"-mb-px flex space-x-8\">\n//             {[\n//               { id: 'overview', name: 'Customer Overview', icon: Users },\n//               { id: 'invoices', name: 'Invoices', icon: FileText },\n//               { id: 'aging', name: 'Aging Report', icon: Clock },\n//               { id: 'payments', name: 'Payments', icon: CheckCircle }\n//             ].map((tab) => (\n//               <button\n//                 key={tab.id}\n//                 onClick={() => setActiveTab(tab.id)}\n//                 className={`flex items-center py-2 px-1 border-b-2 font-medium text-sm ${\n//                   activeTab === tab.id\n//                     ? 'border-emerald-500 text-emerald-600'\n//                     : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n//                 }`}\n//               >\n//                 <tab.icon className=\"mr-2\" size={16} />\n//                 {tab.name}\n//               </button>\n//             ))}\n//           </nav>\n//         </div>\n//       </div>\n\n//       {/* Tab Content */}\n//       {activeTab === 'overview' && (\n//         <div>\n//           {/* Filters */}\n//           <div className=\"flex flex-wrap items-center gap-4 mb-6\">\n//             <div className=\"relative\">\n//               <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\n//               <input\n//                 type=\"text\"\n//                 placeholder=\"Search customers...\"\n//                 value={filters.searchTerm}\n//                 onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\n//                 className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               />\n//             </div>\n\n//             <select\n//               value={filters.customerType}\n//               onChange={(e) => setFilters({ ...filters, customerType: e.target.value })}\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//             >\n//               <option value=\"all\">All Customer Types</option>\n//               <option value=\"corporate\">Corporate</option>\n//               <option value=\"small_business\">Small Business</option>\n//               <option value=\"individual\">Individual</option>\n//               <option value=\"cash\">Cash Only</option>\n//             </select>\n\n//             <select\n//               value={filters.status}\n//               onChange={(e) => setFilters({ ...filters, status: e.target.value })}\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//             >\n//               <option value=\"all\">All Statuses</option>\n//               <option value=\"current\">Current</option>\n//               <option value=\"overdue\">Overdue</option>\n//               <option value=\"paid_up\">Paid Up</option>\n//             </select>\n\n//             <button\n//               onClick={() => setShowInvoiceForm(true)}\n//               className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\n//             >\n//               <Plus size={16} />\n//               <span>New Invoice</span>\n//             </button>\n//           </div>\n\n//           {/* Customer List */}\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//             <div className=\"overflow-x-auto\">\n//               <table className=\"w-full\">\n//                 <thead className=\"bg-gray-50\">\n//                   <tr>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Customer\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Type\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Credit Limit\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Balance\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Overdue\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Credit Status\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Last Payment\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Actions\n//                     </th>\n//                   </tr>\n//                 </thead>\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\n//                   {filteredCustomers.map((customer) => (\n//                     <tr key={customer.id} className=\"hover:bg-gray-50\">\n//                       <td className=\"px-6 py-4\">\n//                         <div>\n//                           <div className=\"text-sm font-medium text-gray-900\">{customer.name}</div>\n//                           <div className=\"text-sm text-gray-500\">{customer.id}</div>\n//                           <div className=\"text-xs text-gray-400 flex items-center mt-1\">\n//                             <Mail className=\"mr-1\" size={12} />\n//                             {customer.email}\n//                           </div>\n//                         </div>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-gray-100 text-gray-800\">\n//                           {customer.customerType.replace('_', ' ')}\n//                         </span>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {formatCurrency(customer.creditLimit)}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <div className=\"text-sm font-medium text-gray-900\">\n//                           {formatCurrency(customer.totalOwed)}\n//                         </div>\n//                         <div className=\"text-xs text-gray-500\">\n//                           {customer.invoiceCount} invoices\n//                         </div>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         {customer.overdueAmount > 0 ? (\n//                           <span className=\"text-red-600 font-medium\">\n//                             {formatCurrency(customer.overdueAmount)}\n//                           </span>\n//                         ) : (\n//                           <span className=\"text-green-600\">$0.00</span>\n//                         )}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(customer.creditStatus)}`}>\n//                           {customer.creditStatus.replace('_', ' ')}\n//                         </span>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {customer.lastPayment}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n//                         <button\n//                           onClick={() => setSelectedCustomer(customer)}\n//                           className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\n//                         >\n//                           <Eye size={16} />\n//                         </button>\n//                         <button className=\"text-blue-600 hover:text-blue-900\">\n//                           <Edit size={16} />\n//                         </button>\n//                       </td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {activeTab === 'aging' && (\n//         <div>\n//           <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n//             {/* Aging Summary */}\n//             <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n//               <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Aging Summary</h3>\n//               <div className=\"space-y-4\">\n//                 <div className=\"flex justify-between items-center p-3 bg-green-50 rounded\">\n//                   <span className=\"font-medium text-green-800\">Current (0-30 days)</span>\n//                   <span className=\"font-bold text-green-900\">{formatCurrency(aging.current)}</span>\n//                 </div>\n//                 <div className=\"flex justify-between items-center p-3 bg-yellow-50 rounded\">\n//                   <span className=\"font-medium text-yellow-800\">31-60 days</span>\n//                   <span className=\"font-bold text-yellow-900\">{formatCurrency(aging.days30)}</span>\n//                 </div>\n//                 <div className=\"flex justify-between items-center p-3 bg-orange-50 rounded\">\n//                   <span className=\"font-medium text-orange-800\">61-90 days</span>\n//                   <span className=\"font-bold text-orange-900\">{formatCurrency(aging.days60)}</span>\n//                 </div>\n//                 <div className=\"flex justify-between items-center p-3 bg-red-50 rounded\">\n//                   <span className=\"font-medium text-red-800\">Over 90 days</span>\n//                   <span className=\"font-bold text-red-900\">{formatCurrency(aging.over90)}</span>\n//                 </div>\n//               </div>\n//               <div className=\"mt-4 pt-4 border-t\">\n//                 <div className=\"flex justify-between items-center\">\n//                   <span className=\"text-lg font-semibold text-gray-900\">Total Outstanding</span>\n//                   <span className=\"text-xl font-bold text-gray-900\">\n//                     {formatCurrency(aging.current + aging.days30 + aging.days60 + aging.days90 + aging.over90)}\n//                   </span>\n//                 </div>\n//               </div>\n//             </div>\n\n//             {/* Collection Priority */}\n//             <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n//               <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Collection Priority</h3>\n//               <div className=\"space-y-3\">\n//                 {customers.data\n//                   .filter(customer => customer.overdueAmount > 0)\n//                   .sort((a, b) => b.overdueAmount - a.overdueAmount)\n//                   .slice(0, 5)\n//                   .map((customer, index) => (\n//                     <div key={customer.id} className=\"flex items-center justify-between p-3 bg-red-50 rounded\">\n//                       <div>\n//                         <div className=\"font-medium text-gray-900\">{customer.name}</div>\n//                         <div className=\"text-sm text-gray-500\">\n//                           Last payment: {customer.lastPayment}\n//                         </div>\n//                       </div>\n//                       <div className=\"text-right\">\n//                         <div className=\"font-bold text-red-900\">{formatCurrency(customer.overdueAmount)}</div>\n//                         <div className=\"text-xs text-red-700\">#{index + 1} Priority</div>\n//                       </div>\n//                     </div>\n//                   ))}\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {activeTab === 'invoices' && (\n//         <div>\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <h3 className=\"text-lg font-semibold text-gray-900\">Outstanding Orders/Invoices</h3>\n//             </div>\n//             <div className=\"overflow-x-auto\">\n//               <table className=\"w-full\">\n//                 <thead className=\"bg-gray-50\">\n//                   <tr>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Order #\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Customer\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Date\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Items\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Amount\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Payment Status\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Fulfillment\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Actions\n//                     </th>\n//                   </tr>\n//                 </thead>\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\n//                   {sales.data.map((order) => (\n//                     <tr key={order.orderId} className=\"hover:bg-gray-50\">\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <div className=\"text-sm font-medium text-gray-900\">#{order.orderId}</div>\n//                         <div className=\"text-xs text-gray-500\">{order.status}</div>\n//                       </td>\n//                       <td className=\"px-6 py-4\">\n//                         <div className=\"text-sm font-medium text-gray-900\">{getCustomerName(order.customerId)}</div>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {formatDate(order.createdAt)}\n//                       </td>\n//                       <td className=\"px-6 py-4\">\n//                         <div className=\"text-sm text-gray-900\">\n//                           {order.lineItems.map((item, index) => (\n//                             <div key={index} className=\"mb-1\">\n//                               <span className=\"font-medium\">{item.productName}</span>\n//                               <span className=\"text-gray-500 ml-2\">x{item.quantity}</span>\n//                             </div>\n//                           ))}\n//                         </div>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {formatCurrency(order.total)}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                           order.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n//                         }`}>\n//                           {order.paid ? 'Paid' : 'Unpaid'}\n//                         </span>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                           order.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n//                         }`}>\n//                           {order.fulfilled ? 'Fulfilled' : 'Pending'}\n//                         </span>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n//                         <button\n//                           className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\n//                           onClick={() => setViewInvoice(order)}\n//                         >\n//                           <Eye size={16} />\n//                         </button>\n//                         <button className=\"text-blue-600 hover:text-blue-900\">\n//                           <Download size={16} />\n//                         </button>\n//                       </td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {activeTab === 'payments' && (\n//         <div>\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <h3 className=\"text-lg font-semibold text-gray-900\">Recent Payment Activities</h3>\n//             </div>\n//             <div className=\"overflow-x-auto\">\n//               <table className=\"w-full\">\n//                 <thead className=\"bg-gray-50\">\n//                   <tr>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Order ID\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Customer\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Date\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Amount\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Payment Status\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Payment Method\n//                     </th>\n//                   </tr>\n//                 </thead>\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\n//                   {sales.data.filter(order => order.paid).map((order) => (\n//                     <tr key={order.orderId} className=\"hover:bg-gray-50\">\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n//                         #{order.orderId}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {getCustomerName(order.customerId)}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {formatDate(order.createdAt)}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {formatCurrency(order.total)}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-green-100 text-green-800\">\n//                           Paid\n//                         </span>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-blue-100 text-blue-800\">\n//                           POS System\n//                         </span>\n//                       </td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Customer Detail Modal */}\n//       {selectedCustomer && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <div className=\"flex items-center justify-between\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\n//                   Customer Details - {selectedCustomer.name}\n//                 </h3>\n//                 <button\n//                   onClick={() => setSelectedCustomer(null)}\n//                   className=\"text-gray-400 hover:text-gray-600\"\n//                 >\n//                   <XCircle size={20} />\n//                 </button>\n//               </div>\n//             </div>\n\n//             <div className=\"px-6 py-4\">\n//               {/* Customer Info Grid */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n//                 <div className=\"space-y-4\">\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer ID</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.id}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Email</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.email}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Phone</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.phone}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Address</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.address}</p>\n//                   </div>\n//                 </div>\n\n//                 <div className=\"space-y-4\">\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer Type</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.customerType.replace('_', ' ')}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Limit</label>\n//                     <p className=\"text-sm text-gray-900\">{formatCurrency(selectedCustomer.creditLimit)}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Payment Terms</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.paymentTerms} days</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Status</label>\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(selectedCustomer.creditStatus)}`}>\n//                       {selectedCustomer.creditStatus.replace('_', ' ')}\n//                     </span>\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Financial Summary */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n//                 <div className=\"bg-blue-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-blue-600\">Current Balance</div>\n//                   <div className=\"text-xl font-bold text-blue-900\">\n//                     {formatCurrency(selectedCustomer.totalOwed)}\n//                   </div>\n//                 </div>\n//                 <div className=\"bg-red-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-red-600\">Overdue Amount</div>\n//                   <div className=\"text-xl font-bold text-red-900\">\n//                     {formatCurrency(selectedCustomer.overdueAmount)}\n//                   </div>\n//                 </div>\n//                 <div className=\"bg-green-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-green-600\">Credit Available</div>\n//                   <div className=\"text-xl font-bold text-green-900\">\n//                     {formatCurrency(selectedCustomer.creditLimit - selectedCustomer.totalOwed)}\n//                   </div>\n//                 </div>\n//                 <div className=\"bg-purple-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-purple-600\">Avg Payment Days</div>\n//                   <div className=\"text-xl font-bold text-purple-900\">\n//                     {selectedCustomer.avgPaymentDays}\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Customer Orders */}\n//               <div className=\"mb-6\">\n//                 <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Customer Orders</h4>\n//                 <div className=\"overflow-x-auto\">\n//                   <table className=\"w-full border border-gray-200 rounded\">\n//                     <thead className=\"bg-gray-50\">\n//                       <tr>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Order</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Date</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Items</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Amount</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Payment</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Fulfillment</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody className=\"divide-y divide-gray-200\">\n//                       {sales.data\n//                         .filter(order => order.customerId === selectedCustomer.id)\n//                         .map((order) => (\n//                           <tr key={order.orderId}>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">#{order.orderId}</td>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{formatDate(order.createdAt)}</td>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">\n//                               {order.lineItems.map(item => item.productName).join(', ')}\n//                             </td>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{formatCurrency(order.total)}</td>\n//                             <td className=\"px-4 py-2\">\n//                               <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                                 order.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n//                               }`}>\n//                                 {order.paid ? 'Paid' : 'Unpaid'}\n//                               </span>\n//                             </td>\n//                             <td className=\"px-4 py-2\">\n//                               <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                                 order.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n//                               }`}>\n//                                 {order.fulfilled ? 'Fulfilled' : 'Pending'}\n//                               </span>\n//                             </td>\n//                           </tr>\n//                         ))}\n//                     </tbody>\n//                   </table>\n//                 </div>\n//               </div>\n\n//               {/* Action Buttons */}\n//               <div className=\"flex space-x-3\">\n//                 <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\n//                   <Plus size={16} />\n//                   <span>New Invoice</span>\n//                 </button>\n//                 <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\n//                   <CheckCircle size={16} />\n//                   <span>Record Payment</span>\n//                 </button>\n//                 <button className=\"px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 flex items-center space-x-2\">\n//                   <Mail size={16} />\n//                   <span>Send Statement</span>\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Order/Invoice Detail Modal */}\n//       {viewInvoice && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <div className=\"flex items-center justify-between\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\n//                   Order Details - #{viewInvoice.orderId}\n//                 </h3>\n//                 <button\n//                   onClick={() => setViewInvoice(null)}\n//                   className=\"text-gray-400 hover:text-gray-600\"\n//                 >\n//                   <XCircle size={20} />\n//                 </button>\n//               </div>\n//             </div>\n\n//             <div className=\"px-6 py-4\">\n//               {/* Order Info */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n//                 <div className=\"space-y-4\">\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Order ID</label>\n//                     <p className=\"text-sm text-gray-900\">{viewInvoice.orderId}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer</label>\n//                     <p className=\"text-sm text-gray-900\">{getCustomerName(viewInvoice.customerId)}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Created Date</label>\n//                     <p className=\"text-sm text-gray-900\">{formatDate(viewInvoice.createdAt)}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Status</label>\n//                     <p className=\"text-sm text-gray-900\">{viewInvoice.status}</p>\n//                   </div>\n//                 </div>\n\n//                 <div className=\"space-y-4\">\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Payment Status</label>\n//                     <div>\n//                       <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                         viewInvoice.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n//                       }`}>\n//                         {viewInvoice.paid ? 'Paid' : 'Unpaid'}\n//                       </span>\n//                     </div>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Fulfillment Status</label>\n//                     <div>\n//                       <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                         viewInvoice.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n//                       }`}>\n//                         {viewInvoice.fulfilled ? 'Fulfilled' : 'Pending'}\n//                       </span>\n//                     </div>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Total Amount</label>\n//                     <p className=\"text-lg font-bold text-gray-900\">{formatCurrency(viewInvoice.total)}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Payable Amount</label>\n//                     <p className=\"text-sm text-gray-900\">{formatCurrency(viewInvoice.payableAmount)}</p>\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Line Items */}\n//               <div className=\"mb-6\">\n//                 <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Order Items</h4>\n//                 <div className=\"overflow-x-auto\">\n//                   <table className=\"w-full border border-gray-200 rounded\">\n//                     <thead className=\"bg-gray-50\">\n//                       <tr>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Product</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Quantity</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Unit Price</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Total</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Status</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody className=\"divide-y divide-gray-200\">\n//                       {viewInvoice.lineItems.map((item, index) => (\n//                         <tr key={index}>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900\">{item.productName}</td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{item.quantity}</td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{formatCurrency(item.price)}</td>\n//                           <td className=\"px-4 py-2 text-sm font-medium text-gray-900 text-right\">{formatCurrency(item.total)}</td>\n//                           <td className=\"px-4 py-2\">\n//                             <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                               item.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n//                             }`}>\n//                               {item.status}\n//                             </span>\n//                           </td>\n//                         </tr>\n//                       ))}\n//                     </tbody>\n//                   </table>\n//                 </div>\n//               </div>\n\n//               {/* Totals */}\n//               <div className=\"bg-gray-50 p-4 rounded-lg\">\n//                 <div className=\"space-y-2\">\n//                   <div className=\"flex justify-between\">\n//                     <span className=\"text-sm text-gray-600\">Subtotal:</span>\n//                     <span className=\"text-sm text-gray-900\">{formatCurrency(viewInvoice.subTotal)}</span>\n//                   </div>\n//                   <div className=\"flex justify-between\">\n//                     <span className=\"text-sm text-gray-600\">Tax ({viewInvoice.taxRate}%):</span>\n//                     <span className=\"text-sm text-gray-900\">{formatCurrency(viewInvoice.taxAmount)}</span>\n//                   </div>\n//                   {viewInvoice.discountAmount > 0 && (\n//                     <div className=\"flex justify-between\">\n//                       <span className=\"text-sm text-gray-600\">Discount:</span>\n//                       <span className=\"text-sm text-red-600\">-{formatCurrency(viewInvoice.discountAmount)}</span>\n//                     </div>\n//                   )}\n//                   <div className=\"flex justify-between font-bold text-lg border-t pt-2\">\n//                     <span>Total:</span>\n//                     <span>{formatCurrency(viewInvoice.total)}</span>\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Action Buttons */}\n//               <div className=\"flex space-x-3 mt-6\">\n//                 {!viewInvoice.paid && (\n//                   <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\n//                     <CheckCircle size={16} />\n//                     <span>Mark as Paid</span>\n//                   </button>\n//                 )}\n//                 {!viewInvoice.fulfilled && (\n//                   <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\n//                     <FileText size={16} />\n//                     <span>Mark as Fulfilled</span>\n//                   </button>\n//                 )}\n//                 <button className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\">\n//                   <Download size={16} />\n//                   <span>Download Invoice</span>\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* API Integration Status */}\n//       <div className=\"mt-8 p-6 bg-green-50 border border-green-200 rounded-lg\">\n//         <div className=\"flex items-center mb-4\">\n//           <CheckCircle className=\"text-green-600 mr-2\" size={20} />\n//           <h3 className=\"font-medium text-green-800\">POS Integration Active</h3>\n//         </div>\n//         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm text-green-700\">\n//           <div>\n//             <strong>Sales Orders:</strong> {sales.data.length} outstanding orders from POS system\n//           </div>\n//           <div>\n//             <strong>Customers:</strong> {customers.data.length} active customers synchronized\n//           </div>\n//           <div>\n//             <strong>Real-time Updates:</strong> Data refreshes automatically with POS transactions\n//           </div>\n//         </div>\n//         <div className=\"mt-4 text-xs text-green-600\">\n//           <strong>Note:</strong> Only showing unpaid or unfulfilled orders. Replace Bearer token for live data connection.\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AccountsReceivableAPI;\n\n// //very excellent\n// import React, { useState, useEffect } from 'react';\n// import { \n//   Users, \n//   DollarSign, \n//   CreditCard, \n//   AlertTriangle, \n//   Clock, \n//   Plus, \n//   Search, \n//   Filter, \n//   Eye, \n//   Edit, \n//   Download,\n//   CheckCircle,\n//   XCircle,\n//   Calendar,\n//   FileText,\n//   TrendingUp,\n//   Mail,\n//   Phone,\n//   Loader,\n//   RefreshCw\n// } from 'lucide-react';\n\n// // API Configuration\n// const API_BASE_URL_SALES = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/orders?start=0&size=200';\n// const API_CUSTOMERS = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/customers?status=Active';\n\n// // Replace with your actual Bearer token\n// const BEARER_TOKEN = 'your-bearer-token-here';\n\n// const AccountsReceivable = () => {\n//   // State management\n//   const [sales, setSales] = useState({ loading: false, data: [], error: null });\n//   const [customers, setCustomers] = useState({ loading: false, data: [], error: null });\n//   const [activeTab, setActiveTab] = useState('overview');\n//   const [selectedCustomer, setSelectedCustomer] = useState(null);\n//   const [selectedOrder, setSelectedOrder] = useState(null);\n//   const [viewInvoice, setViewInvoice] = useState(null);\n//   const [showInvoiceForm, setShowInvoiceForm] = useState(false);\n//   const [filters, setFilters] = useState({\n//     customerType: 'all',\n//     status: 'all',\n//     dateRange: '30',\n//     searchTerm: ''\n//   });\n\n//   // API Functions\n//   const fetchSales = async () => {\n//     setSales(prev => ({ ...prev, loading: true, error: null }));\n//     try {\n//       const response = await fetch(API_BASE_URL_SALES, {\n//         method: 'GET',\n//         headers: {\n//           'Authorization': `Bearer ${BEARER_TOKEN}`,\n//           'Content-Type': 'application/json',\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! status: ${response.status}`);\n//       }\n\n//       const allData = await response.json();\n\n//       // Store all data for customer calculations\n//       window.allSalesData = allData;\n\n//       // Show only records that are unpaid and fulfilled for display\n//       const filteredOrders = allData.filter(order => \n//         !order.paid && order.fulfilled\n//       );\n\n//       setSales({ loading: false, data: filteredOrders, error: null });\n//     } catch (error) {\n//       console.error('Error fetching sales:', error);\n//       setSales({ loading: false, data: [], error: error.message });\n//     }\n//   };\n\n//   const fetchCustomers = async () => {\n//     setCustomers(prev => ({ ...prev, loading: true, error: null }));\n//     try {\n//       const response = await fetch(API_CUSTOMERS, {\n//         method: 'GET',\n//         headers: {\n//           'Authorization': `Bearer ${BEARER_TOKEN}`,\n//           'Content-Type': 'application/json',\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! status: ${response.status}`);\n//       }\n\n//       const data = await response.json();\n\n//       // Use all sales data for customer calculations, not just filtered display data\n//       const allSalesData = window.allSalesData || [];\n\n//       // Transform API customers to match our structure with real calculated data\n//       const transformedCustomers = data.map(customer => {\n//         // Get ALL orders for this customer (not just filtered ones)\n//         const customerOrders = allSalesData.filter(order => order.customerId === customer.id);\n\n//         // Calculate total owed from ALL unpaid orders\n//         const totalOwed = customerOrders\n//           .filter(order => !order.paid)\n//           .reduce((sum, order) => sum + (order.total || 0), 0);\n\n//         // Overdue amount = total owed (since all unpaid orders need collection)\n//         const overdueAmount = totalOwed;\n\n//         // Total number of orders for this customer\n//         const invoiceCount = customerOrders.length;\n\n//         // Determine customer type based on API data or order history\n//         let customerType = 'individual';\n//         const totalSpent = customerOrders\n//           .filter(order => order.paid)\n//           .reduce((sum, order) => sum + (order.total || 0), 0);\n\n//         if (totalSpent > 500000 || customer.totalSpendOnOrder > 500000) {\n//           customerType = 'corporate';\n//         } else if (totalSpent > 100000 || customer.totalSpendOnOrder > 100000) {\n//           customerType = 'small_business';\n//         }\n\n//         // Set credit limit based on customer type\n//         let creditLimit = 25000; // Default for individual\n//         if (customerType === 'corporate') {\n//           creditLimit = 500000;\n//         } else if (customerType === 'small_business') {\n//           creditLimit = 100000;\n//         }\n\n//         // Determine credit status based on payment behavior\n//         let creditStatus = 'good';\n//         if (totalOwed === 0) {\n//           creditStatus = 'excellent';\n//         } else if (totalOwed > creditLimit * 0.9) {\n//           creditStatus = 'hold'; // Hold means credit limit exceeded, stop further credit\n//         } else if (totalOwed > creditLimit * 0.7) {\n//           creditStatus = 'watch'; // Watch means monitor closely\n//         }\n\n//         // Get last payment date from most recent paid order\n//         const paidOrders = customerOrders.filter(o => o.paid);\n//         const lastPayment = paidOrders.length > 0 ? \n//           paidOrders.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))[0].createdAt.split('.').slice(0, 3).join('-') :\n//           'No payments';\n\n//         return {\n//           id: customer.id,\n//           name: customer.name,\n//           email: customer.email || 'No email provided',\n//           phone: customer.phoneNumber || 'No phone provided',\n//           address: customer.address && customer.address.length > 0 ? \n//             (typeof customer.address[0] === 'string' ? customer.address[0] : 'No address provided') : \n//             'No address provided',\n//           customerType: customerType,\n//           creditLimit: creditLimit,\n//           paymentTerms: customerType === 'corporate' ? 45 : (customerType === 'small_business' ? 30 : 15),\n//           totalOwed: totalOwed,\n//           overdueAmount: overdueAmount,\n//           lastPayment: lastPayment,\n//           creditStatus: creditStatus,\n//           accountBalance: -totalOwed,\n//           invoiceCount: invoiceCount,\n//           avgPaymentDays: 30, // Default estimate\n//           status: customer.status,\n//           totalSpendOnOrder: customer.totalSpendOnOrder || 0,\n//           averageOrderValue: customer.averageOrderValue || 0,\n//           numberOfOrders: customer.numberOfOrders || invoiceCount\n//         };\n//       });\n\n//       // Also add walk-in customers (null customerId) as a single entry\n//       const walkInOrders = allSalesData.filter(order => !order.customerId || order.customerId === 'null');\n//       if (walkInOrders.length > 0) {\n//         const walkInTotalOwed = walkInOrders\n//           .filter(order => !order.paid)\n//           .reduce((sum, order) => sum + (order.total || 0), 0);\n\n//         const walkInPaidOrders = walkInOrders.filter(o => o.paid);\n//         const walkInLastPayment = walkInPaidOrders.length > 0 ? \n//           walkInPaidOrders.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))[0].createdAt.split('.').slice(0, 3).join('-') :\n//           'No payments';\n\n//         transformedCustomers.push({\n//           id: 'walk-in',\n//           name: 'Walk-in Customers',\n//           email: 'cash@pos.system',\n//           phone: '+966-50-000-0000',\n//           address: 'Point of Sale',\n//           customerType: 'cash',\n//           creditLimit: 0,\n//           paymentTerms: 0,\n//           totalOwed: walkInTotalOwed,\n//           overdueAmount: walkInTotalOwed,\n//           lastPayment: walkInLastPayment,\n//           creditStatus: 'cash_only',\n//           accountBalance: -walkInTotalOwed,\n//           invoiceCount: walkInOrders.length,\n//           avgPaymentDays: 0,\n//           status: 'Active',\n//           totalSpendOnOrder: walkInOrders.reduce((sum, order) => sum + (order.total || 0), 0),\n//           averageOrderValue: walkInOrders.length > 0 ? walkInOrders.reduce((sum, order) => sum + (order.total || 0), 0) / walkInOrders.length : 0,\n//           numberOfOrders: walkInOrders.length\n//         });\n//       }\n\n//       setCustomers({ loading: false, data: transformedCustomers, error: null });\n//     } catch (error) {\n//       console.error('Error fetching customers:', error);\n//       setCustomers({ loading: false, data: [], error: error.message });\n//     }\n//   };\n\n//   // Also add refresh button functionality to recalculate customer data\n//   const refreshAllData = async () => {\n//     await fetchSales();\n//     setTimeout(() => fetchCustomers(), 500);\n//   };\n\n//   // Load data on component mount\n//   useEffect(() => {\n//     const loadData = async () => {\n//       await fetchSales();\n//       // Fetch customers after sales data is loaded to calculate balances correctly\n//       setTimeout(() => fetchCustomers(), 500);\n//     };\n//     loadData();\n//   }, []);\n\n//   // Helper function to get customer name by ID\n//   const getCustomerName = (customerId) => {\n//     if (!customerId || customerId === 'null') return 'Walk-in Customer';\n//     const customer = customers.data.find(c => c.id === customerId);\n//     return customer ? customer.name : 'Unknown Customer';\n//   };\n\n//   // Helper function to get customer details by ID\n//   const getCustomerDetails = (customerId) => {\n//     if (!customerId || customerId === 'null') return null;\n//     return customers.data.find(c => c.id === customerId);\n//   };\n\n//   // Calculate AR summary\n//   const calculateARSummary = () => {\n//     const totalAR = customers.data.reduce((sum, customer) => sum + customer.totalOwed, 0);\n//     const totalOverdue = customers.data.reduce((sum, customer) => sum + customer.overdueAmount, 0);\n//     const customersWithBalance = customers.data.filter(customer => customer.totalOwed > 0).length;\n//     const avgDaysOutstanding = customers.data.length > 0 \n//       ? customers.data.reduce((sum, customer) => sum + customer.avgPaymentDays, 0) / customers.data.length \n//       : 0;\n\n//     return {\n//       totalAR,\n//       totalOverdue,\n//       customersWithBalance,\n//       avgDaysOutstanding: Math.round(avgDaysOutstanding)\n//     };\n//   };\n\n//   // Get aging data\n//   const getAgingData = () => {\n//     const aging = {\n//       current: 0,\n//       days30: 0,\n//       days60: 0,\n//       days90: 0,\n//       over90: 0\n//     };\n\n//     sales.data.forEach(order => {\n//       if (order.paid) return;\n\n//       const daysPastDue = order.daysOverdue || 0;\n\n//       if (daysPastDue <= 0) {\n//         aging.current += order.total;\n//       } else if (daysPastDue <= 30) {\n//         aging.days30 += order.total;\n//       } else if (daysPastDue <= 60) {\n//         aging.days60 += order.total;\n//       } else if (daysPastDue <= 90) {\n//         aging.days90 += order.total;\n//       } else {\n//         aging.over90 += order.total;\n//       }\n//     });\n\n//     return aging;\n//   };\n\n//   // Filter customers\n//   const getFilteredCustomers = () => {\n//     let filtered = [...customers.data];\n\n//     if (filters.customerType !== 'all') {\n//       filtered = filtered.filter(customer => customer.customerType === filters.customerType);\n//     }\n\n//     if (filters.status !== 'all') {\n//       filtered = filtered.filter(customer => {\n//         if (filters.status === 'overdue') return customer.overdueAmount > 0;\n//         if (filters.status === 'current') return customer.totalOwed > 0 && customer.overdueAmount === 0;\n//         if (filters.status === 'paid_up') return customer.totalOwed === 0;\n//         return true;\n//       });\n//     }\n\n//     if (filters.searchTerm) {\n//       const term = filters.searchTerm.toLowerCase();\n//       filtered = filtered.filter(customer =>\n//         customer.name.toLowerCase().includes(term) ||\n//         customer.email.toLowerCase().includes(term) ||\n//         customer.id.toLowerCase().includes(term)\n//       );\n//     }\n\n//     return filtered;\n//   };\n\n//   const getCreditStatusColor = (status) => {\n//     switch (status) {\n//       case 'excellent': return 'bg-green-100 text-green-800';\n//       case 'good': return 'bg-blue-100 text-blue-800';\n//       case 'watch': return 'bg-yellow-100 text-yellow-800';\n//       case 'hold': return 'bg-red-100 text-red-800';\n//       case 'cash_only': return 'bg-gray-100 text-gray-800';\n//       default: return 'bg-gray-100 text-gray-800';\n//     }\n//   };\n\n//   const getInvoiceStatusColor = (status) => {\n//     switch (status) {\n//       case 'paid': return 'bg-green-100 text-green-800';\n//       case 'outstanding': return 'bg-blue-100 text-blue-800';\n//       case 'overdue': return 'bg-red-100 text-red-800';\n//       case 'partial': return 'bg-yellow-100 text-yellow-800';\n//       default: return 'bg-gray-100 text-gray-800';\n//     }\n//   };\n\n//   const formatDate = (dateString) => {\n//     if (!dateString) return 'N/A';\n//     return dateString.split('.').slice(0, 3).join('/');\n//   };\n\n//   const formatCurrency = (amount) => {\n//     return new Intl.NumberFormat('en-US', {\n//       style: 'currency',\n//       currency: 'USD'\n//     }).format(amount);\n//   };\n\n//   const summary = calculateARSummary();\n//   const aging = getAgingData();\n//   const filteredCustomers = getFilteredCustomers();\n\n//   // Loading state\n//   if (sales.loading || customers.loading) {\n//     return (\n//       <div className=\"flex items-center justify-center min-h-screen\">\n//         <div className=\"flex items-center space-x-3\">\n//           <Loader className=\"animate-spin text-emerald-600\" size={24} />\n//           <span className=\"text-gray-600\">Loading data from API...</span>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   // Error state\n//   if (sales.error || customers.error) {\n//     return (\n//       <div className=\"max-w-7xl mx-auto p-6\">\n//         <div className=\"bg-red-50 border border-red-200 rounded-lg p-6\">\n//           <div className=\"flex items-center mb-4\">\n//             <AlertTriangle className=\"text-red-600 mr-2\" size={20} />\n//             <h3 className=\"font-medium text-red-800\">API Connection Error</h3>\n//           </div>\n//           <div className=\"text-red-700 mb-4\">\n//             {sales.error && <div>Sales API Error: {sales.error}</div>}\n//             {customers.error && <div>Customers API Error: {customers.error}</div>}\n//           </div>\n//           <button\n//             onClick={() => {\n//               fetchSales();\n//               fetchCustomers();\n//             }}\n//             className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 flex items-center space-x-2\"\n//           >\n//             <RefreshCw size={16} />\n//             <span>Retry Connection</span>\n//           </button>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"max-w-7xl mx-auto p-6 bg-white\">\n//       {/* Header */}\n//       <div className=\"mb-8\">\n//         <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\n//           <CreditCard className=\"mr-3 text-emerald-600\" />\n//           Accounts Receivable\n//         </h1>\n//         <p className=\"text-gray-600\">Manage customer invoicing, payments, and credit limits</p>\n//       </div>\n\n//       {/* Summary Cards */}\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n//         <div className=\"bg-blue-50 p-6 rounded-lg border border-blue-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-blue-600 text-sm font-medium\">Total A/R</p>\n//               <p className=\"text-2xl font-bold text-blue-900\">{formatCurrency(summary.totalAR)}</p>\n//             </div>\n//             <DollarSign className=\"text-blue-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-blue-700 mt-2\">{summary.customersWithBalance} customers with balances</p>\n//         </div>\n\n//         <div className=\"bg-red-50 p-6 rounded-lg border border-red-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-red-600 text-sm font-medium\">Overdue Amount</p>\n//               <p className=\"text-2xl font-bold text-red-900\">{formatCurrency(summary.totalOverdue)}</p>\n//             </div>\n//             <AlertTriangle className=\"text-red-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-red-700 mt-2\">\n//             {summary.totalAR > 0 ? ((summary.totalOverdue / summary.totalAR) * 100).toFixed(1) : 0}% of total A/R\n//           </p>\n//         </div>\n\n//         <div className=\"bg-green-50 p-6 rounded-lg border border-green-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-green-600 text-sm font-medium\">Avg. Days Outstanding</p>\n//               <p className=\"text-2xl font-bold text-green-900\">{summary.avgDaysOutstanding}</p>\n//             </div>\n//             <Clock className=\"text-green-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-green-700 mt-2\">Collection performance</p>\n//         </div>\n\n//         <div className=\"bg-purple-50 p-6 rounded-lg border border-purple-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-purple-600 text-sm font-medium\">Active Customers</p>\n//               <p className=\"text-2xl font-bold text-purple-900\">{customers.data.length}</p>\n//             </div>\n//             <Users className=\"text-purple-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-purple-700 mt-2\">Total customer accounts</p>\n//         </div>\n//       </div>\n\n//       {/* Tabs */}\n//       <div className=\"mb-6\">\n//         <div className=\"border-b border-gray-200\">\n//           <nav className=\"-mb-px flex space-x-8\">\n//             {[\n//               { id: 'overview', name: 'Customer Overview', icon: Users },\n//               { id: 'invoices', name: 'Invoices', icon: FileText },\n//               { id: 'aging', name: 'Aging Report', icon: Clock },\n//               { id: 'payments', name: 'Payments', icon: CheckCircle }\n//             ].map((tab) => (\n//               <button\n//                 key={tab.id}\n//                 onClick={() => setActiveTab(tab.id)}\n//                 className={`flex items-center py-2 px-1 border-b-2 font-medium text-sm ${\n//                   activeTab === tab.id\n//                     ? 'border-emerald-500 text-emerald-600'\n//                     : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n//                 }`}\n//               >\n//                 <tab.icon className=\"mr-2\" size={16} />\n//                 {tab.name}\n//               </button>\n//             ))}\n//           </nav>\n//         </div>\n//       </div>\n\n//       {/* Tab Content */}\n//       {activeTab === 'overview' && (\n//         <div>\n//           {/* Filters */}\n//           <div className=\"flex flex-wrap items-center gap-4 mb-6\">\n//             <div className=\"relative\">\n//               <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\n//               <input\n//                 type=\"text\"\n//                 placeholder=\"Search customers...\"\n//                 value={filters.searchTerm}\n//                 onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\n//                 className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               />\n//             </div>\n\n//             <select\n//               value={filters.customerType}\n//               onChange={(e) => setFilters({ ...filters, customerType: e.target.value })}\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//             >\n//               <option value=\"all\">All Customer Types</option>\n//               <option value=\"corporate\">Corporate</option>\n//               <option value=\"small_business\">Small Business</option>\n//               <option value=\"individual\">Individual</option>\n//               <option value=\"cash\">Cash Only</option>\n//             </select>\n\n//             <select\n//               value={filters.status}\n//               onChange={(e) => setFilters({ ...filters, status: e.target.value })}\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//             >\n//               <option value=\"all\">All Statuses</option>\n//               <option value=\"current\">Current</option>\n//               <option value=\"overdue\">Overdue</option>\n//               <option value=\"paid_up\">Paid Up</option>\n//             </select>\n\n//             <button\n//               onClick={() => setShowInvoiceForm(true)}\n//               className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\n//             >\n//               <Plus size={16} />\n//               <span>New Invoice</span>\n//             </button>\n//           </div>\n\n//           {/* Customer List */}\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//             <div className=\"overflow-x-auto\">\n//               <table className=\"w-full\">\n//                 <thead className=\"bg-gray-50\">\n//                   <tr>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Customer\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Type\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Credit Limit\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Balance\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Overdue\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Credit Status\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Last Payment\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Actions\n//                     </th>\n//                   </tr>\n//                 </thead>\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\n//                   {filteredCustomers.map((customer) => (\n//                     <tr key={customer.id} className=\"hover:bg-gray-50\">\n//                       <td className=\"px-6 py-4\">\n//                         <div>\n//                           <div className=\"text-sm font-medium text-gray-900\">{customer.name}</div>\n//                           <div className=\"text-sm text-gray-500\">{customer.id}</div>\n//                           <div className=\"text-xs text-gray-400 flex items-center mt-1\">\n//                             <Mail className=\"mr-1\" size={12} />\n//                             {customer.email}\n//                           </div>\n//                         </div>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-gray-100 text-gray-800\">\n//                           {customer.customerType.replace('_', ' ')}\n//                         </span>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {formatCurrency(customer.creditLimit)}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <div className=\"text-sm font-medium text-gray-900\">\n//                           {formatCurrency(customer.totalOwed)}\n//                         </div>\n//                         <div className=\"text-xs text-gray-500\">\n//                           {customer.invoiceCount} invoices\n//                         </div>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         {customer.overdueAmount > 0 ? (\n//                           <span className=\"text-red-600 font-medium\">\n//                             {formatCurrency(customer.overdueAmount)}\n//                           </span>\n//                         ) : (\n//                           <span className=\"text-green-600\">$0.00</span>\n//                         )}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(customer.creditStatus)}`}>\n//                           {customer.creditStatus.replace('_', ' ')}\n//                         </span>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {customer.lastPayment}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n//                         <button\n//                           onClick={() => setSelectedCustomer(customer)}\n//                           className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\n//                         >\n//                           <Eye size={16} />\n//                         </button>\n//                         <button className=\"text-blue-600 hover:text-blue-900\">\n//                           <Edit size={16} />\n//                         </button>\n//                       </td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {activeTab === 'aging' && (\n//         <div>\n//           <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n//             {/* Aging Summary */}\n//             <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n//               <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Aging Summary</h3>\n//               <div className=\"space-y-4\">\n//                 <div className=\"flex justify-between items-center p-3 bg-green-50 rounded\">\n//                   <span className=\"font-medium text-green-800\">Current (0-30 days)</span>\n//                   <span className=\"font-bold text-green-900\">{formatCurrency(aging.current)}</span>\n//                 </div>\n//                 <div className=\"flex justify-between items-center p-3 bg-yellow-50 rounded\">\n//                   <span className=\"font-medium text-yellow-800\">31-60 days</span>\n//                   <span className=\"font-bold text-yellow-900\">{formatCurrency(aging.days30)}</span>\n//                 </div>\n//                 <div className=\"flex justify-between items-center p-3 bg-orange-50 rounded\">\n//                   <span className=\"font-medium text-orange-800\">61-90 days</span>\n//                   <span className=\"font-bold text-orange-900\">{formatCurrency(aging.days60)}</span>\n//                 </div>\n//                 <div className=\"flex justify-between items-center p-3 bg-red-50 rounded\">\n//                   <span className=\"font-medium text-red-800\">Over 90 days</span>\n//                   <span className=\"font-bold text-red-900\">{formatCurrency(aging.over90)}</span>\n//                 </div>\n//               </div>\n//               <div className=\"mt-4 pt-4 border-t\">\n//                 <div className=\"flex justify-between items-center\">\n//                   <span className=\"text-lg font-semibold text-gray-900\">Total Outstanding</span>\n//                   <span className=\"text-xl font-bold text-gray-900\">\n//                     {formatCurrency(aging.current + aging.days30 + aging.days60 + aging.days90 + aging.over90)}\n//                   </span>\n//                 </div>\n//               </div>\n//             </div>\n\n//             {/* Collection Priority */}\n//             <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n//               <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Collection Priority</h3>\n//               <div className=\"space-y-3\">\n//                 {customers.data\n//                   .filter(customer => customer.overdueAmount > 0)\n//                   .sort((a, b) => b.overdueAmount - a.overdueAmount)\n//                   .slice(0, 5)\n//                   .map((customer, index) => (\n//                     <div key={customer.id} className=\"flex items-center justify-between p-3 bg-red-50 rounded\">\n//                       <div>\n//                         <div className=\"font-medium text-gray-900\">{customer.name}</div>\n//                         <div className=\"text-sm text-gray-500\">\n//                           Last payment: {customer.lastPayment}\n//                         </div>\n//                       </div>\n//                       <div className=\"text-right\">\n//                         <div className=\"font-bold text-red-900\">{formatCurrency(customer.overdueAmount)}</div>\n//                         <div className=\"text-xs text-red-700\">#{index + 1} Priority</div>\n//                       </div>\n//                     </div>\n//                   ))}\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {activeTab === 'invoices' && (\n//         <div>\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <h3 className=\"text-lg font-semibold text-gray-900\">Outstanding Orders/Invoices</h3>\n//             </div>\n//             <div className=\"overflow-x-auto\">\n//               <table className=\"w-full\">\n//                 <thead className=\"bg-gray-50\">\n//                   <tr>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Order #\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Customer\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Date\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Items\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Amount\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Payment Status\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Fulfillment\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Actions\n//                     </th>\n//                   </tr>\n//                 </thead>\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\n//                   {sales.data.map((order) => (\n//                     <tr key={order.orderId} className=\"hover:bg-gray-50\">\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <div className=\"text-sm font-medium text-gray-900\">#{order.orderId}</div>\n//                         <div className=\"text-xs text-gray-500\">{order.status}</div>\n//                       </td>\n//                       <td className=\"px-6 py-4\">\n//                         <div className=\"text-sm font-medium text-gray-900\">{getCustomerName(order.customerId)}</div>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {formatDate(order.createdAt)}\n//                       </td>\n//                       <td className=\"px-6 py-4\">\n//                         <div className=\"text-sm text-gray-900\">\n//                           {order.lineItems.map((item, index) => (\n//                             <div key={index} className=\"mb-1\">\n//                               <span className=\"font-medium\">{item.productName}</span>\n//                               <span className=\"text-gray-500 ml-2\">x{item.quantity}</span>\n//                             </div>\n//                           ))}\n//                         </div>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {formatCurrency(order.total)}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                           order.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n//                         }`}>\n//                           {order.paid ? 'Paid' : 'Unpaid'}\n//                         </span>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                           order.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n//                         }`}>\n//                           {order.fulfilled ? 'Fulfilled' : 'Pending'}\n//                         </span>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n//                         <button\n//                           className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\n//                           onClick={() => setViewInvoice(order)}\n//                         >\n//                           <Eye size={16} />\n//                         </button>\n//                         <button className=\"text-blue-600 hover:text-blue-900\">\n//                           <Download size={16} />\n//                         </button>\n//                       </td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {activeTab === 'payments' && (\n//         <div>\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <h3 className=\"text-lg font-semibold text-gray-900\">Payment History</h3>\n//             </div>\n//             <div className=\"overflow-x-auto\">\n//               <table className=\"w-full\">\n//                 <thead className=\"bg-gray-50\">\n//                   <tr>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Order ID\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Customer\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Date\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Amount\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Payment Status\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Fulfillment Status\n//                     </th>\n//                   </tr>\n//                 </thead>\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\n//                   {window.allSalesData?.filter(order => order.paid).map((order) => (\n//                     <tr key={order.orderId} className=\"hover:bg-gray-50\">\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n//                         #{order.orderId}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {getCustomerName(order.customerId)}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {formatDate(order.createdAt)}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {formatCurrency(order.total)}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-green-100 text-green-800\">\n//                           Paid\n//                         </span>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                           order.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n//                         }`}>\n//                           {order.fulfilled ? 'Fulfilled' : 'Pending'}\n//                         </span>\n//                       </td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n\n//             {(!window.allSalesData?.filter(order => order.paid).length || window.allSalesData?.filter(order => order.paid).length === 0) && (\n//               <div className=\"text-center py-12\">\n//                 <div className=\"text-gray-500 text-lg\">No payments found</div>\n//                 <p className=\"text-gray-400 mt-2\">All orders are currently unpaid</p>\n//               </div>\n//             )}\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Customer Detail Modal */}\n//       {selectedCustomer && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <div className=\"flex items-center justify-between\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\n//                   Customer Details - {selectedCustomer.name}\n//                 </h3>\n//                 <button\n//                   onClick={() => setSelectedCustomer(null)}\n//                   className=\"text-gray-400 hover:text-gray-600\"\n//                 >\n//                   <XCircle size={20} />\n//                 </button>\n//               </div>\n//             </div>\n\n//             <div className=\"px-6 py-4\">\n//               {/* Customer Info Grid */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n//                 <div className=\"space-y-4\">\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer ID</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.id}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Email</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.email}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Phone</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.phone}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Address</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.address}</p>\n//                   </div>\n//                 </div>\n\n//                 <div className=\"space-y-4\">\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer Type</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.customerType.replace('_', ' ')}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Limit</label>\n//                     <p className=\"text-sm text-gray-900\">{formatCurrency(selectedCustomer.creditLimit)}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Payment Terms</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.paymentTerms} days</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Status</label>\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(selectedCustomer.creditStatus)}`}>\n//                       {selectedCustomer.creditStatus.replace('_', ' ')}\n//                     </span>\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Financial Summary */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n//                 <div className=\"bg-blue-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-blue-600\">Current Balance</div>\n//                   <div className=\"text-xl font-bold text-blue-900\">\n//                     {formatCurrency(selectedCustomer.totalOwed)}\n//                   </div>\n//                 </div>\n//                 <div className=\"bg-red-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-red-600\">Overdue Amount</div>\n//                   <div className=\"text-xl font-bold text-red-900\">\n//                     {formatCurrency(selectedCustomer.overdueAmount)}\n//                   </div>\n//                 </div>\n//                 <div className=\"bg-green-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-green-600\">Credit Available</div>\n//                   <div className=\"text-xl font-bold text-green-900\">\n//                     {formatCurrency(selectedCustomer.creditLimit - selectedCustomer.totalOwed)}\n//                   </div>\n//                 </div>\n//                 <div className=\"bg-purple-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-purple-600\">Avg Payment Days</div>\n//                   <div className=\"text-xl font-bold text-purple-900\">\n//                     {selectedCustomer.avgPaymentDays}\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Customer Orders */}\n//               <div className=\"mb-6\">\n//                 <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Customer Orders</h4>\n//                 <div className=\"overflow-x-auto\">\n//                   <table className=\"w-full border border-gray-200 rounded\">\n//                     <thead className=\"bg-gray-50\">\n//                       <tr>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Order</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Date</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Items</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Amount</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Payment</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Fulfillment</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody className=\"divide-y divide-gray-200\">\n//                       {(window.allSalesData || [])\n//                         .filter(order => {\n//                           if (selectedCustomer.id === 'walk-in') {\n//                             return !order.customerId || order.customerId === 'null';\n//                           }\n//                           return order.customerId === selectedCustomer.id;\n//                         })\n//                         .map((order) => (\n//                           <tr key={order.orderId}>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">#{order.orderId}</td>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{formatDate(order.createdAt)}</td>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">\n//                               {order.lineItems.map(item => item.productName).join(', ')}\n//                             </td>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{formatCurrency(order.total)}</td>\n//                             <td className=\"px-4 py-2\">\n//                               <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                                 order.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n//                               }`}>\n//                                 {order.paid ? 'Paid' : 'Unpaid'}\n//                               </span>\n//                             </td>\n//                             <td className=\"px-4 py-2\">\n//                               <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                                 order.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n//                               }`}>\n//                                 {order.fulfilled ? 'Fulfilled' : 'Pending'}\n//                               </span>\n//                             </td>\n//                           </tr>\n//                         ))}\n//                     </tbody>\n//                   </table>\n//                 </div>\n\n//                 {(window.allSalesData || [])\n//                   .filter(order => {\n//                     if (selectedCustomer.id === 'walk-in') {\n//                       return !order.customerId || order.customerId === 'null';\n//                     }\n//                     return order.customerId === selectedCustomer.id;\n//                   }).length === 0 && (\n//                     <div className=\"text-center py-4 text-gray-500\">\n//                       No orders found for this customer\n//                     </div>\n//                   )}\n//               </div>\n\n//               {/* Action Buttons */}\n//               <div className=\"flex space-x-3\">\n//                 <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\n//                   <Plus size={16} />\n//                   <span>New Invoice</span>\n//                 </button>\n//                 <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\n//                   <CheckCircle size={16} />\n//                   <span>Record Payment</span>\n//                 </button>\n//                 <button className=\"px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 flex items-center space-x-2\">\n//                   <Mail size={16} />\n//                   <span>Send Statement</span>\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Order/Invoice Detail Modal */}\n//       {viewInvoice && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <div className=\"flex items-center justify-between\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\n//                   Order Details - #{viewInvoice.orderId}\n//                 </h3>\n//                 <button\n//                   onClick={() => setViewInvoice(null)}\n//                   className=\"text-gray-400 hover:text-gray-600\"\n//                 >\n//                   <XCircle size={20} />\n//                 </button>\n//               </div>\n//             </div>\n\n//             <div className=\"px-6 py-4\">\n//               {/* Order Info */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n//                 <div className=\"space-y-4\">\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Order ID</label>\n//                     <p className=\"text-sm text-gray-900\">{viewInvoice.orderId}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer</label>\n//                     <p className=\"text-sm text-gray-900\">{getCustomerName(viewInvoice.customerId)}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Created Date</label>\n//                     <p className=\"text-sm text-gray-900\">{formatDate(viewInvoice.createdAt)}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Status</label>\n//                     <p className=\"text-sm text-gray-900\">{viewInvoice.status}</p>\n//                   </div>\n//                 </div>\n\n//                 <div className=\"space-y-4\">\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Payment Status</label>\n//                     <div>\n//                       <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                         viewInvoice.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n//                       }`}>\n//                         {viewInvoice.paid ? 'Paid' : 'Unpaid'}\n//                       </span>\n//                     </div>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Fulfillment Status</label>\n//                     <div>\n//                       <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                         viewInvoice.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n//                       }`}>\n//                         {viewInvoice.fulfilled ? 'Fulfilled' : 'Pending'}\n//                       </span>\n//                     </div>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Total Amount</label>\n//                     <p className=\"text-lg font-bold text-gray-900\">{formatCurrency(viewInvoice.total)}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Payable Amount</label>\n//                     <p className=\"text-sm text-gray-900\">{formatCurrency(viewInvoice.payableAmount)}</p>\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Line Items */}\n//               <div className=\"mb-6\">\n//                 <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Order Items</h4>\n//                 <div className=\"overflow-x-auto\">\n//                   <table className=\"w-full border border-gray-200 rounded\">\n//                     <thead className=\"bg-gray-50\">\n//                       <tr>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Product</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Quantity</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Unit Price</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Total</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Status</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody className=\"divide-y divide-gray-200\">\n//                       {viewInvoice.lineItems.map((item, index) => (\n//                         <tr key={index}>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900\">{item.productName}</td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{item.quantity}</td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{formatCurrency(item.price)}</td>\n//                           <td className=\"px-4 py-2 text-sm font-medium text-gray-900 text-right\">{formatCurrency(item.total)}</td>\n//                           <td className=\"px-4 py-2\">\n//                             <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                               item.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n//                             }`}>\n//                               {item.status}\n//                             </span>\n//                           </td>\n//                         </tr>\n//                       ))}\n//                     </tbody>\n//                   </table>\n//                 </div>\n//               </div>\n\n//               {/* Totals */}\n//               <div className=\"bg-gray-50 p-4 rounded-lg\">\n//                 <div className=\"space-y-2\">\n//                   <div className=\"flex justify-between\">\n//                     <span className=\"text-sm text-gray-600\">Subtotal:</span>\n//                     <span className=\"text-sm text-gray-900\">{formatCurrency(viewInvoice.subTotal)}</span>\n//                   </div>\n//                   <div className=\"flex justify-between\">\n//                     <span className=\"text-sm text-gray-600\">Tax ({viewInvoice.taxRate}%):</span>\n//                     <span className=\"text-sm text-gray-900\">{formatCurrency(viewInvoice.taxAmount)}</span>\n//                   </div>\n//                   {viewInvoice.discountAmount > 0 && (\n//                     <div className=\"flex justify-between\">\n//                       <span className=\"text-sm text-gray-600\">Discount:</span>\n//                       <span className=\"text-sm text-red-600\">-{formatCurrency(viewInvoice.discountAmount)}</span>\n//                     </div>\n//                   )}\n//                   <div className=\"flex justify-between font-bold text-lg border-t pt-2\">\n//                     <span>Total:</span>\n//                     <span>{formatCurrency(viewInvoice.total)}</span>\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Action Buttons */}\n//               <div className=\"flex space-x-3 mt-6\">\n//                 {!viewInvoice.paid && (\n//                   <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\n//                     <CheckCircle size={16} />\n//                     <span>Mark as Paid</span>\n//                   </button>\n//                 )}\n//                 {!viewInvoice.fulfilled && (\n//                   <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\n//                     <FileText size={16} />\n//                     <span>Mark as Fulfilled</span>\n//                   </button>\n//                 )}\n//                 <button className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\">\n//                   <Download size={16} />\n//                   <span>Download Invoice</span>\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* API Integration Status */}\n//       <div className=\"mt-8 p-6 bg-green-50 border border-green-200 rounded-lg\">\n//         <div className=\"flex items-center mb-4\">\n//           <CheckCircle className=\"text-green-600 mr-2\" size={20} />\n//           <h3 className=\"font-medium text-green-800\">POS Integration Active</h3>\n//         </div>\n//         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm text-green-700\">\n//           <div>\n//             <strong>Sales Orders:</strong> {sales.data.length} outstanding orders from POS system\n//           </div>\n//           <div>\n//             <strong>Customers:</strong> {customers.data.length} active customers synchronized\n//           </div>\n//           <div>\n//             <strong>Real-time Updates:</strong> Data refreshes automatically with POS transactions\n//           </div>\n//         </div>\n//         <div className=\"mt-4 text-xs text-green-600\">\n//           <strong>Note:</strong> Only showing unpaid or unfulfilled orders. Replace Bearer token for live data connection.\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AccountsReceivable;\n\n//very very excellent\n// import React, { useState, useEffect } from 'react';\n// import { \n//   Users, \n//   DollarSign, \n//   CreditCard, \n//   AlertTriangle, \n//   Clock, \n//   Plus, \n//   Search, \n//   Filter, \n//   Eye, \n//   Edit, \n//   Download,\n//   CheckCircle,\n//   XCircle,\n//   Calendar,\n//   FileText,\n//   TrendingUp,\n//   Mail,\n//   Phone,\n//   Loader,\n//   RefreshCw\n// } from 'lucide-react';\n\n// // API Configuration\n// const API_BASE_URL_SALES = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/orders?start=0&size=200';\n// const API_CUSTOMERS = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/customers?status=Active';\n\n// // Replace with your actual Bearer token\n// const BEARER_TOKEN = 'your-bearer-token-here';\n\n// const AccountsReceivable = () => {\n//   // State management\n//   const [sales, setSales] = useState({ loading: false, data: [], error: null });\n//   const [customers, setCustomers] = useState({ loading: false, data: [], error: null });\n//   const [activeTab, setActiveTab] = useState('overview');\n//   const [selectedCustomer, setSelectedCustomer] = useState(null);\n//   const [selectedOrder, setSelectedOrder] = useState(null);\n//   const [viewInvoice, setViewInvoice] = useState(null);\n//   const [showInvoiceForm, setShowInvoiceForm] = useState(false);\n//   const [filters, setFilters] = useState({\n//     customerType: 'all',\n//     status: 'all',\n//     dateRange: '30',\n//     searchTerm: ''\n//   });\n\n//   // API Functions\n//   const fetchSales = async () => {\n//     setSales(prev => ({ ...prev, loading: true, error: null }));\n//     try {\n//       const response = await fetch(API_BASE_URL_SALES, {\n//         method: 'GET',\n//         headers: {\n//           'Authorization': `Bearer ${BEARER_TOKEN}`,\n//           'Content-Type': 'application/json',\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! status: ${response.status}`);\n//       }\n\n//       const allData = await response.json();\n\n//       // Store all data for customer calculations\n//       window.allSalesData = allData;\n\n//       // Show only records that are unpaid and fulfilled for display\n//       const filteredOrders = allData.filter(order => \n//         !order.paid && order.fulfilled\n//       );\n\n//       setSales({ loading: false, data: filteredOrders, error: null });\n//     } catch (error) {\n//       console.error('Error fetching sales:', error);\n//       setSales({ loading: false, data: [], error: error.message });\n//     }\n//   };\n\n//   const fetchCustomers = async () => {\n//     setCustomers(prev => ({ ...prev, loading: true, error: null }));\n//     try {\n//       const response = await fetch(API_CUSTOMERS, {\n//         method: 'GET',\n//         headers: {\n//           'Authorization': `Bearer ${BEARER_TOKEN}`,\n//           'Content-Type': 'application/json',\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! status: ${response.status}`);\n//       }\n\n//       const data = await response.json();\n\n//       // Use all sales data for customer calculations, not just filtered display data\n//       const allSalesData = window.allSalesData || [];\n\n//       // Transform API customers to match our structure with real calculated data\n//       const transformedCustomers = data.map(customer => {\n//         // Get ALL orders for this customer (not just filtered ones)\n//         const customerOrders = allSalesData.filter(order => order.customerId === customer.id);\n\n//         // Calculate total owed from ALL unpaid orders\n//         const totalOwed = customerOrders\n//           .filter(order => !order.paid)\n//           .reduce((sum, order) => sum + (order.total || 0), 0);\n\n//         // Overdue amount = total owed (since all unpaid orders need collection)\n//         const overdueAmount = totalOwed;\n\n//         // Total number of orders for this customer\n//         const invoiceCount = customerOrders.length;\n\n//         // Determine customer type based on API data or order history\n//         let customerType = 'individual';\n//         const totalSpent = customerOrders\n//           .filter(order => order.paid)\n//           .reduce((sum, order) => sum + (order.total || 0), 0);\n\n//         if (totalSpent > 500000 || customer.totalSpendOnOrder > 500000) {\n//           customerType = 'corporate';\n//         } else if (totalSpent > 100000 || customer.totalSpendOnOrder > 100000) {\n//           customerType = 'small_business';\n//         }\n\n//         // Set credit limit based on customer type\n//         let creditLimit = 25000; // Default for individual\n//         if (customerType === 'corporate') {\n//           creditLimit = 500000;\n//         } else if (customerType === 'small_business') {\n//           creditLimit = 100000;\n//         }\n\n//         // Determine credit status based on payment behavior\n//         let creditStatus = 'good';\n//         if (totalOwed === 0) {\n//           creditStatus = 'excellent';\n//         } else if (totalOwed > creditLimit * 0.9) {\n//           creditStatus = 'hold'; // Hold means credit limit exceeded, stop further credit\n//         } else if (totalOwed > creditLimit * 0.7) {\n//           creditStatus = 'watch'; // Watch means monitor closely\n//         }\n\n//         // Get last payment date from most recent paid order\n//         const paidOrders = customerOrders.filter(o => o.paid);\n//         const lastPayment = paidOrders.length > 0 ? \n//           paidOrders.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))[0].createdAt.split('.').slice(0, 3).join('-') :\n//           'No payments';\n\n//         return {\n//           id: customer.id,\n//           name: customer.name,\n//           email: customer.email || 'No email provided',\n//           phone: customer.phoneNumber || 'No phone provided',\n//           address: customer.address && customer.address.length > 0 ? \n//             (typeof customer.address[0] === 'string' ? customer.address[0] : 'No address provided') : \n//             'No address provided',\n//           customerType: customerType,\n//           creditLimit: creditLimit,\n//           paymentTerms: customerType === 'corporate' ? 45 : (customerType === 'small_business' ? 30 : 15),\n//           totalOwed: totalOwed,\n//           overdueAmount: overdueAmount,\n//           lastPayment: lastPayment,\n//           creditStatus: creditStatus,\n//           accountBalance: -totalOwed,\n//           invoiceCount: invoiceCount,\n//           avgPaymentDays: 30, // Default estimate\n//           status: customer.status,\n//           totalSpendOnOrder: customer.totalSpendOnOrder || 0,\n//           averageOrderValue: customer.averageOrderValue || 0,\n//           numberOfOrders: customer.numberOfOrders || invoiceCount\n//         };\n//       });\n\n//       // Also add walk-in customers (null customerId) as separate entries for each order\n//       const walkInOrders = allSalesData.filter(order => !order.customerId || order.customerId === 'null');\n//       walkInOrders.forEach((order, index) => {\n//         const guestNumber = index + 1;\n//         const guestTotalOwed = order.paid ? 0 : order.total;\n//         const guestLastPayment = order.paid ? \n//           order.createdAt.split('.').slice(0, 3).join('-') : \n//           'No payments';\n\n//         transformedCustomers.push({\n//           id: `guest-${order.orderId}`,\n//           name: `Guest Customer #${guestNumber}`,\n//           email: 'guest@pos.system',\n//           phone: '+000-000-0000',\n//           address: 'Walk-in Sale',\n//           customerType: 'cash',\n//           creditLimit: 0,\n//           paymentTerms: 0,\n//           totalOwed: guestTotalOwed,\n//           overdueAmount: guestTotalOwed,\n//           lastPayment: guestLastPayment,\n//           creditStatus: 'cash_only',\n//           accountBalance: -guestTotalOwed,\n//           invoiceCount: 1,\n//           avgPaymentDays: 0,\n//           status: 'Active',\n//           totalSpendOnOrder: order.total,\n//           averageOrderValue: order.total,\n//           numberOfOrders: 1,\n//           orderId: order.orderId // Store order ID for reference\n//         });\n//       });\n\n//       setCustomers({ loading: false, data: transformedCustomers, error: null });\n//     } catch (error) {\n//       console.error('Error fetching customers:', error);\n//       setCustomers({ loading: false, data: [], error: error.message });\n//     }\n//   };\n\n//   // Also add refresh button functionality to recalculate customer data\n//   const refreshAllData = async () => {\n//     await fetchSales();\n//     setTimeout(() => fetchCustomers(), 500);\n//   };\n\n//   // Load data on component mount\n//   useEffect(() => {\n//     const loadData = async () => {\n//       await fetchSales();\n//       // Fetch customers after sales data is loaded to calculate balances correctly\n//       setTimeout(() => fetchCustomers(), 500);\n//     };\n//     loadData();\n//   }, []);\n\n//   // Helper function to get customer name by ID\n//   const getCustomerName = (customerId) => {\n//     if (!customerId || customerId === 'null') return 'Guest Customer';\n//     const customer = customers.data.find(c => c.id === customerId);\n//     return customer ? customer.name : 'Unknown Customer';\n//   };\n\n//   // Helper function to get customer details by ID\n//   const getCustomerDetails = (customerId) => {\n//     if (!customerId || customerId === 'null') return null;\n//     return customers.data.find(c => c.id === customerId);\n//   };\n\n//   // Calculate AR summary\n//   const calculateARSummary = () => {\n//     const totalAR = customers.data.reduce((sum, customer) => sum + customer.totalOwed, 0);\n//     const totalOverdue = customers.data.reduce((sum, customer) => sum + customer.overdueAmount, 0);\n//     const customersWithBalance = customers.data.filter(customer => customer.totalOwed > 0).length;\n//     const avgDaysOutstanding = customers.data.length > 0 \n//       ? customers.data.reduce((sum, customer) => sum + customer.avgPaymentDays, 0) / customers.data.length \n//       : 0;\n\n//     return {\n//       totalAR,\n//       totalOverdue,\n//       customersWithBalance,\n//       avgDaysOutstanding: Math.round(avgDaysOutstanding)\n//     };\n//   };\n\n//   // Get aging data\n//   const getAgingData = () => {\n//     const aging = {\n//       current: 0,\n//       days30: 0,\n//       days60: 0,\n//       days90: 0,\n//       over90: 0\n//     };\n\n//     sales.data.forEach(order => {\n//       if (order.paid) return;\n\n//       const daysPastDue = order.daysOverdue || 0;\n\n//       if (daysPastDue <= 0) {\n//         aging.current += order.total;\n//       } else if (daysPastDue <= 30) {\n//         aging.days30 += order.total;\n//       } else if (daysPastDue <= 60) {\n//         aging.days60 += order.total;\n//       } else if (daysPastDue <= 90) {\n//         aging.days90 += order.total;\n//       } else {\n//         aging.over90 += order.total;\n//       }\n//     });\n\n//     return aging;\n//   };\n\n//   // Filter customers\n//   const getFilteredCustomers = () => {\n//     let filtered = [...customers.data];\n\n//     if (filters.customerType !== 'all') {\n//       filtered = filtered.filter(customer => customer.customerType === filters.customerType);\n//     }\n\n//     if (filters.status !== 'all') {\n//       filtered = filtered.filter(customer => {\n//         if (filters.status === 'overdue') return customer.overdueAmount > 0;\n//         if (filters.status === 'current') return customer.totalOwed > 0 && customer.overdueAmount === 0;\n//         if (filters.status === 'paid_up') return customer.totalOwed === 0;\n//         return true;\n//       });\n//     }\n\n//     if (filters.searchTerm) {\n//       const term = filters.searchTerm.toLowerCase();\n//       filtered = filtered.filter(customer =>\n//         customer.name.toLowerCase().includes(term) ||\n//         customer.email.toLowerCase().includes(term) ||\n//         customer.id.toLowerCase().includes(term)\n//       );\n//     }\n\n//     return filtered;\n//   };\n\n//   const getCreditStatusColor = (status) => {\n//     switch (status) {\n//       case 'excellent': return 'bg-green-100 text-green-800';\n//       case 'good': return 'bg-blue-100 text-blue-800';\n//       case 'watch': return 'bg-yellow-100 text-yellow-800';\n//       case 'hold': return 'bg-red-100 text-red-800';\n//       case 'cash_only': return 'bg-gray-100 text-gray-800';\n//       default: return 'bg-gray-100 text-gray-800';\n//     }\n//   };\n\n//   const getInvoiceStatusColor = (status) => {\n//     switch (status) {\n//       case 'paid': return 'bg-green-100 text-green-800';\n//       case 'outstanding': return 'bg-blue-100 text-blue-800';\n//       case 'overdue': return 'bg-red-100 text-red-800';\n//       case 'partial': return 'bg-yellow-100 text-yellow-800';\n//       default: return 'bg-gray-100 text-gray-800';\n//     }\n//   };\n\n//   const formatDate = (dateString) => {\n//     if (!dateString) return 'N/A';\n//     return dateString.split('.').slice(0, 3).join('/');\n//   };\n\n//   const formatCurrency = (amount) => {\n//     return new Intl.NumberFormat('en-US', {\n//       style: 'currency',\n//       currency: 'USD'\n//     }).format(amount);\n//   };\n\n//   const summary = calculateARSummary();\n//   const aging = getAgingData();\n//   const filteredCustomers = getFilteredCustomers();\n\n//   // Loading state\n//   if (sales.loading || customers.loading) {\n//     return (\n//       <div className=\"flex items-center justify-center min-h-screen\">\n//         <div className=\"flex items-center space-x-3\">\n//           <Loader className=\"animate-spin text-emerald-600\" size={24} />\n//           <span className=\"text-gray-600\">Loading data from API...</span>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   // Error state\n//   if (sales.error || customers.error) {\n//     return (\n//       <div className=\"max-w-7xl mx-auto p-6\">\n//         <div className=\"bg-red-50 border border-red-200 rounded-lg p-6\">\n//           <div className=\"flex items-center mb-4\">\n//             <AlertTriangle className=\"text-red-600 mr-2\" size={20} />\n//             <h3 className=\"font-medium text-red-800\">API Connection Error</h3>\n//           </div>\n//           <div className=\"text-red-700 mb-4\">\n//             {sales.error && <div>Sales API Error: {sales.error}</div>}\n//             {customers.error && <div>Customers API Error: {customers.error}</div>}\n//           </div>\n//           <button\n//             onClick={() => {\n//               fetchSales();\n//               fetchCustomers();\n//             }}\n//             className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 flex items-center space-x-2\"\n//           >\n//             <RefreshCw size={16} />\n//             <span>Retry Connection</span>\n//           </button>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"max-w-7xl mx-auto p-6 bg-white\">\n//       {/* Header */}\n//       <div className=\"mb-8\">\n//         <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\n//           <CreditCard className=\"mr-3 text-emerald-600\" />\n//           Accounts Receivable\n//         </h1>\n//         <p className=\"text-gray-600\">Manage customer invoicing, payments, and credit limits</p>\n//       </div>\n\n//       {/* Summary Cards */}\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n//         <div className=\"bg-blue-50 p-6 rounded-lg border border-blue-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-blue-600 text-sm font-medium\">Total A/R</p>\n//               <p className=\"text-2xl font-bold text-blue-900\">{formatCurrency(summary.totalAR)}</p>\n//             </div>\n//             <DollarSign className=\"text-blue-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-blue-700 mt-2\">{summary.customersWithBalance} customers with balances</p>\n//         </div>\n\n//         <div className=\"bg-red-50 p-6 rounded-lg border border-red-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-red-600 text-sm font-medium\">Overdue Amount</p>\n//               <p className=\"text-2xl font-bold text-red-900\">{formatCurrency(summary.totalOverdue)}</p>\n//             </div>\n//             <AlertTriangle className=\"text-red-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-red-700 mt-2\">\n//             {summary.totalAR > 0 ? ((summary.totalOverdue / summary.totalAR) * 100).toFixed(1) : 0}% of total A/R\n//           </p>\n//         </div>\n\n//         <div className=\"bg-green-50 p-6 rounded-lg border border-green-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-green-600 text-sm font-medium\">Avg. Days Outstanding</p>\n//               <p className=\"text-2xl font-bold text-green-900\">{summary.avgDaysOutstanding}</p>\n//             </div>\n//             <Clock className=\"text-green-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-green-700 mt-2\">Collection performance</p>\n//         </div>\n\n//         <div className=\"bg-purple-50 p-6 rounded-lg border border-purple-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-purple-600 text-sm font-medium\">Active Customers</p>\n//               <p className=\"text-2xl font-bold text-purple-900\">{customers.data.length}</p>\n//             </div>\n//             <Users className=\"text-purple-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-purple-700 mt-2\">Total customer accounts</p>\n//         </div>\n//       </div>\n\n//       {/* Tabs */}\n//       <div className=\"mb-6\">\n//         <div className=\"border-b border-gray-200\">\n//           <nav className=\"-mb-px flex space-x-8\">\n//             {[\n//               { id: 'overview', name: 'Customer Overview', icon: Users },\n//               { id: 'invoices', name: 'Invoices', icon: FileText },\n//               { id: 'aging', name: 'Aging Report', icon: Clock },\n//               { id: 'payments', name: 'Payments', icon: CheckCircle }\n//             ].map((tab) => (\n//               <button\n//                 key={tab.id}\n//                 onClick={() => setActiveTab(tab.id)}\n//                 className={`flex items-center py-2 px-1 border-b-2 font-medium text-sm ${\n//                   activeTab === tab.id\n//                     ? 'border-emerald-500 text-emerald-600'\n//                     : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n//                 }`}\n//               >\n//                 <tab.icon className=\"mr-2\" size={16} />\n//                 {tab.name}\n//               </button>\n//             ))}\n//           </nav>\n//         </div>\n//       </div>\n\n//       {/* Tab Content */}\n//       {activeTab === 'overview' && (\n//         <div>\n//           {/* Filters */}\n//           <div className=\"flex flex-wrap items-center gap-4 mb-6\">\n//             <div className=\"relative\">\n//               <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\n//               <input\n//                 type=\"text\"\n//                 placeholder=\"Search customers...\"\n//                 value={filters.searchTerm}\n//                 onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\n//                 className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               />\n//             </div>\n\n//             <select\n//               value={filters.customerType}\n//               onChange={(e) => setFilters({ ...filters, customerType: e.target.value })}\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//             >\n//               <option value=\"all\">All Customer Types</option>\n//               <option value=\"corporate\">Corporate</option>\n//               <option value=\"small_business\">Small Business</option>\n//               <option value=\"individual\">Individual</option>\n//               <option value=\"cash\">Cash Only</option>\n//             </select>\n\n//             <select\n//               value={filters.status}\n//               onChange={(e) => setFilters({ ...filters, status: e.target.value })}\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//             >\n//               <option value=\"all\">All Statuses</option>\n//               <option value=\"current\">Current</option>\n//               <option value=\"overdue\">Overdue</option>\n//               <option value=\"paid_up\">Paid Up</option>\n//             </select>\n\n//             <button\n//               onClick={() => setShowInvoiceForm(true)}\n//               className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\n//             >\n//               <Plus size={16} />\n//               <span>New Invoice</span>\n//             </button>\n//           </div>\n\n//           {/* Customer List */}\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//             <div className=\"overflow-x-auto\">\n//               <table className=\"w-full\">\n//                 <thead className=\"bg-gray-50\">\n//                   <tr>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Customer\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Type\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Credit Limit\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Balance\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Overdue\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Credit Status\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Last Payment\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Actions\n//                     </th>\n//                   </tr>\n//                 </thead>\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\n//                   {filteredCustomers.map((customer) => (\n//                     <tr key={customer.id} className=\"hover:bg-gray-50\">\n//                       <td className=\"px-6 py-4\">\n//                         <div>\n//                           <div className=\"text-sm font-medium text-gray-900\">{customer.name}</div>\n//                           <div className=\"text-sm text-gray-500\">{customer.id}</div>\n//                           <div className=\"text-xs text-gray-400 flex items-center mt-1\">\n//                             <Mail className=\"mr-1\" size={12} />\n//                             {customer.email}\n//                           </div>\n//                         </div>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-gray-100 text-gray-800\">\n//                           {customer.customerType.replace('_', ' ')}\n//                         </span>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {formatCurrency(customer.creditLimit)}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <div className=\"text-sm font-medium text-gray-900\">\n//                           {formatCurrency(customer.totalOwed)}\n//                         </div>\n//                         <div className=\"text-xs text-gray-500\">\n//                           {customer.invoiceCount} invoices\n//                         </div>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         {customer.overdueAmount > 0 ? (\n//                           <span className=\"text-red-600 font-medium\">\n//                             {formatCurrency(customer.overdueAmount)}\n//                           </span>\n//                         ) : (\n//                           <span className=\"text-green-600\">$0.00</span>\n//                         )}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(customer.creditStatus)}`}>\n//                           {customer.creditStatus.replace('_', ' ')}\n//                         </span>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {customer.lastPayment}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n//                         <button\n//                           onClick={() => setSelectedCustomer(customer)}\n//                           className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\n//                         >\n//                           <Eye size={16} />\n//                         </button>\n//                         <button className=\"text-blue-600 hover:text-blue-900\">\n//                           <Edit size={16} />\n//                         </button>\n//                       </td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {activeTab === 'aging' && (\n//         <div>\n//           <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n//             {/* Aging Summary */}\n//             <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n//               <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Aging Summary</h3>\n//               <div className=\"space-y-4\">\n//                 <div className=\"flex justify-between items-center p-3 bg-green-50 rounded\">\n//                   <span className=\"font-medium text-green-800\">Current (0-30 days)</span>\n//                   <span className=\"font-bold text-green-900\">{formatCurrency(aging.current)}</span>\n//                 </div>\n//                 <div className=\"flex justify-between items-center p-3 bg-yellow-50 rounded\">\n//                   <span className=\"font-medium text-yellow-800\">31-60 days</span>\n//                   <span className=\"font-bold text-yellow-900\">{formatCurrency(aging.days30)}</span>\n//                 </div>\n//                 <div className=\"flex justify-between items-center p-3 bg-orange-50 rounded\">\n//                   <span className=\"font-medium text-orange-800\">61-90 days</span>\n//                   <span className=\"font-bold text-orange-900\">{formatCurrency(aging.days60)}</span>\n//                 </div>\n//                 <div className=\"flex justify-between items-center p-3 bg-red-50 rounded\">\n//                   <span className=\"font-medium text-red-800\">Over 90 days</span>\n//                   <span className=\"font-bold text-red-900\">{formatCurrency(aging.over90)}</span>\n//                 </div>\n//               </div>\n//               <div className=\"mt-4 pt-4 border-t\">\n//                 <div className=\"flex justify-between items-center\">\n//                   <span className=\"text-lg font-semibold text-gray-900\">Total Outstanding</span>\n//                   <span className=\"text-xl font-bold text-gray-900\">\n//                     {formatCurrency(aging.current + aging.days30 + aging.days60 + aging.days90 + aging.over90)}\n//                   </span>\n//                 </div>\n//               </div>\n//             </div>\n\n//             {/* Collection Priority */}\n//             <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n//               <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Collection Priority</h3>\n//               <div className=\"space-y-3\">\n//                 {customers.data\n//                   .filter(customer => customer.overdueAmount > 0)\n//                   .sort((a, b) => b.overdueAmount - a.overdueAmount)\n//                   .slice(0, 5)\n//                   .map((customer, index) => (\n//                     <div key={customer.id} className=\"flex items-center justify-between p-3 bg-red-50 rounded\">\n//                       <div>\n//                         <div className=\"font-medium text-gray-900\">{customer.name}</div>\n//                         <div className=\"text-sm text-gray-500\">\n//                           Last payment: {customer.lastPayment}\n//                         </div>\n//                       </div>\n//                       <div className=\"text-right\">\n//                         <div className=\"font-bold text-red-900\">{formatCurrency(customer.overdueAmount)}</div>\n//                         <div className=\"text-xs text-red-700\">#{index + 1} Priority</div>\n//                       </div>\n//                     </div>\n//                   ))}\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {activeTab === 'invoices' && (\n//         <div>\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <h3 className=\"text-lg font-semibold text-gray-900\">Outstanding Orders/Invoices</h3>\n//             </div>\n//             <div className=\"overflow-x-auto\">\n//               <table className=\"w-full\">\n//                 <thead className=\"bg-gray-50\">\n//                   <tr>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Order #\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Customer\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Date\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Items\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Amount\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Payment Status\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Fulfillment\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Actions\n//                     </th>\n//                   </tr>\n//                 </thead>\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\n//                   {sales.data.map((order) => (\n//                     <tr key={order.orderId} className=\"hover:bg-gray-50\">\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <div className=\"text-sm font-medium text-gray-900\">#{order.orderId}</div>\n//                         <div className=\"text-xs text-gray-500\">{order.status}</div>\n//                       </td>\n//                       <td className=\"px-6 py-4\">\n//                         <div className=\"text-sm font-medium text-gray-900\">{getCustomerName(order.customerId)}</div>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {formatDate(order.createdAt)}\n//                       </td>\n//                       <td className=\"px-6 py-4\">\n//                         <div className=\"text-sm text-gray-900\">\n//                           {order.lineItems.map((item, index) => (\n//                             <div key={index} className=\"mb-1\">\n//                               <span className=\"font-medium\">{item.productName}</span>\n//                               <span className=\"text-gray-500 ml-2\">x{item.quantity}</span>\n//                             </div>\n//                           ))}\n//                         </div>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {formatCurrency(order.total)}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                           order.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n//                         }`}>\n//                           {order.paid ? 'Paid' : 'Unpaid'}\n//                         </span>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                           order.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n//                         }`}>\n//                           {order.fulfilled ? 'Fulfilled' : 'Pending'}\n//                         </span>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n//                         <button\n//                           className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\n//                           onClick={() => setViewInvoice(order)}\n//                         >\n//                           <Eye size={16} />\n//                         </button>\n//                         <button className=\"text-blue-600 hover:text-blue-900\">\n//                           <Download size={16} />\n//                         </button>\n//                       </td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {activeTab === 'payments' && (\n//         <div>\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <h3 className=\"text-lg font-semibold text-gray-900\">Payment History</h3>\n//             </div>\n//             <div className=\"overflow-x-auto\">\n//               <table className=\"w-full\">\n//                 <thead className=\"bg-gray-50\">\n//                   <tr>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Order ID\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Customer\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Date\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Amount\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Payment Status\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Fulfillment Status\n//                     </th>\n//                   </tr>\n//                 </thead>\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\n//                   {window.allSalesData?.filter(order => order.paid).map((order) => (\n//                     <tr key={order.orderId} className=\"hover:bg-gray-50\">\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n//                         #{order.orderId}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {getCustomerName(order.customerId)}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {formatDate(order.createdAt)}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {formatCurrency(order.total)}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-green-100 text-green-800\">\n//                           Paid\n//                         </span>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                           order.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n//                         }`}>\n//                           {order.fulfilled ? 'Fulfilled' : 'Pending'}\n//                         </span>\n//                       </td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n\n//             {(!window.allSalesData?.filter(order => order.paid).length || window.allSalesData?.filter(order => order.paid).length === 0) && (\n//               <div className=\"text-center py-12\">\n//                 <div className=\"text-gray-500 text-lg\">No payments found</div>\n//                 <p className=\"text-gray-400 mt-2\">All orders are currently unpaid</p>\n//               </div>\n//             )}\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Customer Detail Modal */}\n//       {selectedCustomer && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <div className=\"flex items-center justify-between\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\n//                   Customer Details - {selectedCustomer.name}\n//                 </h3>\n//                 <button\n//                   onClick={() => setSelectedCustomer(null)}\n//                   className=\"text-gray-400 hover:text-gray-600\"\n//                 >\n//                   <XCircle size={20} />\n//                 </button>\n//               </div>\n//             </div>\n\n//             <div className=\"px-6 py-4\">\n//               {/* Customer Info Grid */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n//                 <div className=\"space-y-4\">\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer ID</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.id}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Email</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.email}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Phone</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.phone}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Address</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.address}</p>\n//                   </div>\n//                 </div>\n\n//                 <div className=\"space-y-4\">\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer Type</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.customerType.replace('_', ' ')}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Limit</label>\n//                     <p className=\"text-sm text-gray-900\">{formatCurrency(selectedCustomer.creditLimit)}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Payment Terms</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.paymentTerms} days</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Status</label>\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(selectedCustomer.creditStatus)}`}>\n//                       {selectedCustomer.creditStatus.replace('_', ' ')}\n//                     </span>\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Financial Summary */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n//                 <div className=\"bg-blue-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-blue-600\">Current Balance</div>\n//                   <div className=\"text-xl font-bold text-blue-900\">\n//                     {formatCurrency(selectedCustomer.totalOwed)}\n//                   </div>\n//                 </div>\n//                 <div className=\"bg-red-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-red-600\">Overdue Amount</div>\n//                   <div className=\"text-xl font-bold text-red-900\">\n//                     {formatCurrency(selectedCustomer.overdueAmount)}\n//                   </div>\n//                 </div>\n//                 <div className=\"bg-green-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-green-600\">Credit Available</div>\n//                   <div className=\"text-xl font-bold text-green-900\">\n//                     {formatCurrency(selectedCustomer.creditLimit - selectedCustomer.totalOwed)}\n//                   </div>\n//                 </div>\n//                 <div className=\"bg-purple-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-purple-600\">Avg Payment Days</div>\n//                   <div className=\"text-xl font-bold text-purple-900\">\n//                     {selectedCustomer.avgPaymentDays}\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Customer Orders */}\n//               <div className=\"mb-6\">\n//                 <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Customer Orders</h4>\n//                 <div className=\"overflow-x-auto\">\n//                   <table className=\"w-full border border-gray-200 rounded\">\n//                     <thead className=\"bg-gray-50\">\n//                       <tr>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Order</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Date</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Items</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Amount</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Payment</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Fulfillment</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody className=\"divide-y divide-gray-200\">\n//                       {(window.allSalesData || [])\n//                         .filter(order => {\n//                           if (selectedCustomer.id.startsWith('guest-')) {\n//                             return order.orderId === selectedCustomer.orderId;\n//                           }\n//                           return order.customerId === selectedCustomer.id;\n//                         })\n//                         .map((order) => (\n//                           <tr key={order.orderId}>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">#{order.orderId}</td>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{formatDate(order.createdAt)}</td>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">\n//                               {order.lineItems.map(item => item.productName).join(', ')}\n//                             </td>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{formatCurrency(order.total)}</td>\n//                             <td className=\"px-4 py-2\">\n//                               <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                                 order.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n//                               }`}>\n//                                 {order.paid ? 'Paid' : 'Unpaid'}\n//                               </span>\n//                             </td>\n//                             <td className=\"px-4 py-2\">\n//                               <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                                 order.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n//                               }`}>\n//                                 {order.fulfilled ? 'Fulfilled' : 'Pending'}\n//                               </span>\n//                             </td>\n//                           </tr>\n//                         ))}\n//                     </tbody>\n//                   </table>\n//                 </div>\n\n//                 {(window.allSalesData || [])\n//                   .filter(order => {\n//                     if (selectedCustomer.id.startsWith('guest-')) {\n//                       return order.orderId === selectedCustomer.orderId;\n//                     }\n//                     return order.customerId === selectedCustomer.id;\n//                   }).length === 0 && (\n//                     <div className=\"text-center py-4 text-gray-500\">\n//                       No orders found for this customer\n//                     </div>\n//                   )}\n//               </div>\n\n//               {/* Action Buttons */}\n//               <div className=\"flex space-x-3\">\n//                 <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\n//                   <Plus size={16} />\n//                   <span>New Invoice</span>\n//                 </button>\n//                 <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\n//                   <CheckCircle size={16} />\n//                   <span>Record Payment</span>\n//                 </button>\n//                 <button className=\"px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 flex items-center space-x-2\">\n//                   <Mail size={16} />\n//                   <span>Send Statement</span>\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Order/Invoice Detail Modal */}\n//       {viewInvoice && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <div className=\"flex items-center justify-between\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\n//                   Order Details - #{viewInvoice.orderId}\n//                 </h3>\n//                 <button\n//                   onClick={() => setViewInvoice(null)}\n//                   className=\"text-gray-400 hover:text-gray-600\"\n//                 >\n//                   <XCircle size={20} />\n//                 </button>\n//               </div>\n//             </div>\n\n//             <div className=\"px-6 py-4\">\n//               {/* Order Info */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n//                 <div className=\"space-y-4\">\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Order ID</label>\n//                     <p className=\"text-sm text-gray-900\">{viewInvoice.orderId}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer</label>\n//                     <p className=\"text-sm text-gray-900\">{getCustomerName(viewInvoice.customerId)}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Created Date</label>\n//                     <p className=\"text-sm text-gray-900\">{formatDate(viewInvoice.createdAt)}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Status</label>\n//                     <p className=\"text-sm text-gray-900\">{viewInvoice.status}</p>\n//                   </div>\n//                 </div>\n\n//                 <div className=\"space-y-4\">\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Payment Status</label>\n//                     <div>\n//                       <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                         viewInvoice.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n//                       }`}>\n//                         {viewInvoice.paid ? 'Paid' : 'Unpaid'}\n//                       </span>\n//                     </div>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Fulfillment Status</label>\n//                     <div>\n//                       <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                         viewInvoice.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n//                       }`}>\n//                         {viewInvoice.fulfilled ? 'Fulfilled' : 'Pending'}\n//                       </span>\n//                     </div>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Total Amount</label>\n//                     <p className=\"text-lg font-bold text-gray-900\">{formatCurrency(viewInvoice.total)}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Payable Amount</label>\n//                     <p className=\"text-sm text-gray-900\">{formatCurrency(viewInvoice.payableAmount)}</p>\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Line Items */}\n//               <div className=\"mb-6\">\n//                 <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Order Items</h4>\n//                 <div className=\"overflow-x-auto\">\n//                   <table className=\"w-full border border-gray-200 rounded\">\n//                     <thead className=\"bg-gray-50\">\n//                       <tr>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Product</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Quantity</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Unit Price</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Total</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Status</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody className=\"divide-y divide-gray-200\">\n//                       {viewInvoice.lineItems.map((item, index) => (\n//                         <tr key={index}>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900\">{item.productName}</td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{item.quantity}</td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{formatCurrency(item.price)}</td>\n//                           <td className=\"px-4 py-2 text-sm font-medium text-gray-900 text-right\">{formatCurrency(item.total)}</td>\n//                           <td className=\"px-4 py-2\">\n//                             <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                               item.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n//                             }`}>\n//                               {item.status}\n//                             </span>\n//                           </td>\n//                         </tr>\n//                       ))}\n//                     </tbody>\n//                   </table>\n//                 </div>\n//               </div>\n\n//               {/* Totals */}\n//               <div className=\"bg-gray-50 p-4 rounded-lg\">\n//                 <div className=\"space-y-2\">\n//                   <div className=\"flex justify-between\">\n//                     <span className=\"text-sm text-gray-600\">Subtotal:</span>\n//                     <span className=\"text-sm text-gray-900\">{formatCurrency(viewInvoice.subTotal)}</span>\n//                   </div>\n//                   <div className=\"flex justify-between\">\n//                     <span className=\"text-sm text-gray-600\">Tax ({viewInvoice.taxRate}%):</span>\n//                     <span className=\"text-sm text-gray-900\">{formatCurrency(viewInvoice.taxAmount)}</span>\n//                   </div>\n//                   {viewInvoice.discountAmount > 0 && (\n//                     <div className=\"flex justify-between\">\n//                       <span className=\"text-sm text-gray-600\">Discount:</span>\n//                       <span className=\"text-sm text-red-600\">-{formatCurrency(viewInvoice.discountAmount)}</span>\n//                     </div>\n//                   )}\n//                   <div className=\"flex justify-between font-bold text-lg border-t pt-2\">\n//                     <span>Total:</span>\n//                     <span>{formatCurrency(viewInvoice.total)}</span>\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Action Buttons */}\n//               <div className=\"flex space-x-3 mt-6\">\n//                 {!viewInvoice.paid && (\n//                   <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\n//                     <CheckCircle size={16} />\n//                     <span>Mark as Paid</span>\n//                   </button>\n//                 )}\n//                 {!viewInvoice.fulfilled && (\n//                   <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\n//                     <FileText size={16} />\n//                     <span>Mark as Fulfilled</span>\n//                   </button>\n//                 )}\n//                 <button className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\">\n//                   <Download size={16} />\n//                   <span>Download Invoice</span>\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* API Integration Status */}\n//       <div className=\"mt-8 p-6 bg-green-50 border border-green-200 rounded-lg\">\n//         <div className=\"flex items-center mb-4\">\n//           <CheckCircle className=\"text-green-600 mr-2\" size={20} />\n//           <h3 className=\"font-medium text-green-800\">POS Integration Active</h3>\n//         </div>\n//         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm text-green-700\">\n//           <div>\n//             <strong>Sales Orders:</strong> {sales.data.length} outstanding orders from POS system\n//           </div>\n//           <div>\n//             <strong>Customers:</strong> {customers.data.length} active customers synchronized\n//           </div>\n//           <div>\n//             <strong>Real-time Updates:</strong> Data refreshes automatically with POS transactions\n//           </div>\n//         </div>\n//         <div className=\"mt-4 text-xs text-green-600\">\n//           <strong>Note:</strong> Only showing unpaid or unfulfilled orders. Replace Bearer token for live data connection.\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AccountsReceivable;\n\n//very very very excellent\n// import React, { useState, useEffect } from 'react';\n// import { \n//   Users, \n//   DollarSign, \n//   CreditCard, \n//   AlertTriangle, \n//   Clock, \n//   Plus, \n//   Search, \n//   Filter, \n//   Eye, \n//   Edit, \n//   Download,\n//   CheckCircle,\n//   XCircle,\n//   Calendar,\n//   FileText,\n//   TrendingUp,\n//   Mail,\n//   Phone,\n//   Loader,\n//   RefreshCw\n// } from 'lucide-react';\n\n// // API Configuration\n// const API_BASE_URL_SALES = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/orders?start=0&size=200';\n// const API_CUSTOMERS = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/customers?status=Active';\n\n// // Replace with your actual Bearer token\n// const BEARER_TOKEN = 'your-bearer-token-here';\n\n// const AccountsReceivableAPI = () => {\n//   // State management\n//   const [sales, setSales] = useState({ loading: false, data: [], error: null });\n//   const [customers, setCustomers] = useState({ loading: false, data: [], error: null });\n//   const [activeTab, setActiveTab] = useState('overview');\n//   const [selectedCustomer, setSelectedCustomer] = useState(null);\n//   const [selectedOrder, setSelectedOrder] = useState(null);\n//   const [viewInvoice, setViewInvoice] = useState(null);\n//   const [showInvoiceForm, setShowInvoiceForm] = useState(false);\n//   const [filters, setFilters] = useState({\n//     customerType: 'all',\n//     status: 'all',\n//     dateRange: '30',\n//     searchTerm: ''\n//   });\n\n//   // API Functions\n//   const fetchSales = async () => {\n//     setSales(prev => ({ ...prev, loading: true, error: null }));\n//     try {\n//       const response = await fetch(API_BASE_URL_SALES, {\n//         method: 'GET',\n//         headers: {\n//           'Authorization': `Bearer ${BEARER_TOKEN}`,\n//           'Content-Type': 'application/json',\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! status: ${response.status}`);\n//       }\n\n//       const allData = await response.json();\n\n//       // Store all data for customer calculations\n//       window.allSalesData = allData;\n\n//       // Show only records that are unpaid and fulfilled for display\n//       const filteredOrders = allData.filter(order => \n//         !order.paid && order.fulfilled\n//       );\n\n//       setSales({ loading: false, data: filteredOrders, error: null });\n//     } catch (error) {\n//       console.error('Error fetching sales:', error);\n//       setSales({ loading: false, data: [], error: error.message });\n//     }\n//   };\n\n//   const fetchCustomers = async () => {\n//     setCustomers(prev => ({ ...prev, loading: true, error: null }));\n//     try {\n//       const response = await fetch(API_CUSTOMERS, {\n//         method: 'GET',\n//         headers: {\n//           'Authorization': `Bearer ${BEARER_TOKEN}`,\n//           'Content-Type': 'application/json',\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! status: ${response.status}`);\n//       }\n\n//       const data = await response.json();\n\n//       // Use all sales data for customer calculations, not just filtered display data\n//       const allSalesData = window.allSalesData || [];\n\n//       // Transform API customers to match our structure with real calculated data\n//       const transformedCustomers = data.map(customer => {\n//         // Get ALL orders for this customer (not just filtered ones)\n//         const customerOrders = allSalesData.filter(order => order.customerId === customer.id);\n\n//         // Calculate total owed from ALL unpaid orders\n//         const totalOwed = customerOrders\n//           .filter(order => !order.paid)\n//           .reduce((sum, order) => sum + (order.total || 0), 0);\n\n//         // Overdue amount = total owed (since all unpaid orders need collection)\n//         const overdueAmount = totalOwed;\n\n//         // Total number of orders for this customer\n//         const invoiceCount = customerOrders.length;\n\n//         // Determine customer type based on API data or order history\n//         let customerType = 'individual';\n//         const totalSpent = customerOrders\n//           .filter(order => order.paid)\n//           .reduce((sum, order) => sum + (order.total || 0), 0);\n\n//         if (totalSpent > 500000 || customer.totalSpendOnOrder > 500000) {\n//           customerType = 'corporate';\n//         } else if (totalSpent > 100000 || customer.totalSpendOnOrder > 100000) {\n//           customerType = 'small_business';\n//         }\n\n//         // Set credit limit based on customer type\n//         let creditLimit = 25000; // Default for individual\n//         if (customerType === 'corporate') {\n//           creditLimit = 500000;\n//         } else if (customerType === 'small_business') {\n//           creditLimit = 100000;\n//         }\n\n//         // Determine credit status based on payment behavior\n//         let creditStatus = 'good';\n//         if (totalOwed === 0) {\n//           creditStatus = 'excellent';\n//         } else if (totalOwed > creditLimit * 0.9) {\n//           creditStatus = 'hold'; // Hold means credit limit exceeded, stop further credit\n//         } else if (totalOwed > creditLimit * 0.7) {\n//           creditStatus = 'watch'; // Watch means monitor closely\n//         }\n\n//         // Get last payment date from most recent paid order\n//         const paidOrders = customerOrders.filter(o => o.paid);\n//         const lastPayment = paidOrders.length > 0 ? \n//           paidOrders.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))[0].createdAt.split('.').slice(0, 3).join('-') :\n//           'No payments';\n\n//         return {\n//           id: customer.id,\n//           name: customer.name,\n//           email: customer.email || 'No email provided',\n//           phone: customer.phoneNumber || 'No phone provided',\n//           address: customer.address && customer.address.length > 0 ? \n//             (typeof customer.address[0] === 'string' ? customer.address[0] : 'No address provided') : \n//             'No address provided',\n//           customerType: customerType,\n//           creditLimit: creditLimit,\n//           paymentTerms: customerType === 'corporate' ? 45 : (customerType === 'small_business' ? 30 : 15),\n//           totalOwed: totalOwed,\n//           overdueAmount: overdueAmount,\n//           lastPayment: lastPayment,\n//           creditStatus: creditStatus,\n//           accountBalance: -totalOwed,\n//           invoiceCount: invoiceCount,\n//           avgPaymentDays: 30, // Default estimate\n//           status: customer.status,\n//           totalSpendOnOrder: customer.totalSpendOnOrder || 0,\n//           averageOrderValue: customer.averageOrderValue || 0,\n//           numberOfOrders: customer.numberOfOrders || invoiceCount\n//         };\n//       });\n\n//       // Also add walk-in customers (null customerId) as separate entries for each order\n//       const walkInOrders = allSalesData.filter(order => !order.customerId || order.customerId === 'null');\n//       walkInOrders.forEach((order, index) => {\n//         const guestNumber = index + 1;\n//         const guestTotalOwed = order.paid ? 0 : order.total;\n//         const guestLastPayment = order.paid ? \n//           order.createdAt.split('.').slice(0, 3).join('-') : \n//           'No payments';\n\n//         transformedCustomers.push({\n//           id: `guest-${order.orderId}`,\n//           name: `Guest Customer #${guestNumber}`,\n//           email: 'guest@pos.system',\n//           phone: '+000-000-0000',\n//           address: 'Walk-in Sale',\n//           customerType: 'cash',\n//           creditLimit: 0,\n//           paymentTerms: 0,\n//           totalOwed: guestTotalOwed,\n//           overdueAmount: guestTotalOwed,\n//           lastPayment: guestLastPayment,\n//           creditStatus: 'cash_only',\n//           accountBalance: -guestTotalOwed,\n//           invoiceCount: 1,\n//           avgPaymentDays: 0,\n//           status: 'Active',\n//           totalSpendOnOrder: order.total,\n//           averageOrderValue: order.total,\n//           numberOfOrders: 1,\n//           orderId: order.orderId // Store order ID for reference\n//         });\n//       });\n\n//       setCustomers({ loading: false, data: transformedCustomers, error: null });\n//     } catch (error) {\n//       console.error('Error fetching customers:', error);\n//       setCustomers({ loading: false, data: [], error: error.message });\n//     }\n//   };\n\n//   // Also add refresh button functionality to recalculate customer data\n//   const refreshAllData = async () => {\n//     await fetchSales();\n//     setTimeout(() => fetchCustomers(), 500);\n//   };\n\n//   // Load data on component mount\n//   useEffect(() => {\n//     const loadData = async () => {\n//       await fetchSales();\n//       // Fetch customers after sales data is loaded to calculate balances correctly\n//       setTimeout(() => fetchCustomers(), 500);\n//     };\n//     loadData();\n//   }, []);\n\n//   // Helper function to get customer name by ID\n//   const getCustomerName = (customerId) => {\n//     if (!customerId || customerId === 'null') return 'Guest Customer';\n//     const customer = customers.data.find(c => c.id === customerId);\n//     return customer ? customer.name : 'Unknown Customer';\n//   };\n\n//   // Helper function to get customer details by ID\n//   const getCustomerDetails = (customerId) => {\n//     if (!customerId || customerId === 'null') return null;\n//     return customers.data.find(c => c.id === customerId);\n//   };\n\n//   // Calculate AR summary\n//   const calculateARSummary = () => {\n//     const totalAR = customers.data.reduce((sum, customer) => sum + customer.totalOwed, 0);\n//     const totalOverdue = customers.data.reduce((sum, customer) => sum + customer.overdueAmount, 0);\n//     const customersWithBalance = customers.data.filter(customer => customer.totalOwed > 0).length;\n\n//     // Calculate real average days outstanding from actual order data\n//     const allSalesData = window.allSalesData || [];\n//     let totalDaysOutstanding = 0;\n//     let orderCount = 0;\n\n//     allSalesData.forEach(order => {\n//       // Convert order creation date from \"2025.08.18.10.08.54.569\" to proper date\n//       const orderDateStr = order.createdAt.split('.').slice(0, 3).join('-'); // \"2025-08-18\"\n//       const orderDate = new Date(orderDateStr);\n//       const today = new Date();\n\n//       // Calculate days between order creation and today\n//       const timeDiff = today.getTime() - orderDate.getTime();\n//       const daysDiff = Math.floor(timeDiff / (1000 * 3600 * 24));\n\n//       totalDaysOutstanding += daysDiff;\n//       orderCount++;\n//     });\n\n//     const avgDaysOutstanding = orderCount > 0 ? Math.round(totalDaysOutstanding / orderCount) : 0;\n\n//     return {\n//       totalAR,\n//       totalOverdue,\n//       customersWithBalance,\n//       avgDaysOutstanding\n//     };\n//   };\n\n//   // Get aging data\n//   const getAgingData = () => {\n//     const aging = {\n//       current: 0,\n//       days30: 0,\n//       days60: 0,\n//       days90: 0,\n//       over90: 0\n//     };\n\n//     sales.data.forEach(order => {\n//       if (order.paid) return;\n\n//       const daysPastDue = order.daysOverdue || 0;\n\n//       if (daysPastDue <= 0) {\n//         aging.current += order.total;\n//       } else if (daysPastDue <= 30) {\n//         aging.days30 += order.total;\n//       } else if (daysPastDue <= 60) {\n//         aging.days60 += order.total;\n//       } else if (daysPastDue <= 90) {\n//         aging.days90 += order.total;\n//       } else {\n//         aging.over90 += order.total;\n//       }\n//     });\n\n//     return aging;\n//   };\n\n//   // Filter customers\n//   const getFilteredCustomers = () => {\n//     let filtered = [...customers.data];\n\n//     if (filters.customerType !== 'all') {\n//       filtered = filtered.filter(customer => customer.customerType === filters.customerType);\n//     }\n\n//     if (filters.status !== 'all') {\n//       filtered = filtered.filter(customer => {\n//         if (filters.status === 'overdue') return customer.overdueAmount > 0;\n//         if (filters.status === 'current') return customer.totalOwed > 0 && customer.overdueAmount === 0;\n//         if (filters.status === 'paid_up') return customer.totalOwed === 0;\n//         return true;\n//       });\n//     }\n\n//     if (filters.searchTerm) {\n//       const term = filters.searchTerm.toLowerCase();\n//       filtered = filtered.filter(customer =>\n//         customer.name.toLowerCase().includes(term) ||\n//         customer.email.toLowerCase().includes(term) ||\n//         customer.id.toLowerCase().includes(term)\n//       );\n//     }\n\n//     return filtered;\n//   };\n\n//   const getCreditStatusColor = (status) => {\n//     switch (status) {\n//       case 'excellent': return 'bg-green-100 text-green-800';\n//       case 'good': return 'bg-blue-100 text-blue-800';\n//       case 'watch': return 'bg-yellow-100 text-yellow-800';\n//       case 'hold': return 'bg-red-100 text-red-800';\n//       case 'cash_only': return 'bg-gray-100 text-gray-800';\n//       default: return 'bg-gray-100 text-gray-800';\n//     }\n//   };\n\n//   const getInvoiceStatusColor = (status) => {\n//     switch (status) {\n//       case 'paid': return 'bg-green-100 text-green-800';\n//       case 'outstanding': return 'bg-blue-100 text-blue-800';\n//       case 'overdue': return 'bg-red-100 text-red-800';\n//       case 'partial': return 'bg-yellow-100 text-yellow-800';\n//       default: return 'bg-gray-100 text-gray-800';\n//     }\n//   };\n\n//   const formatDate = (dateString) => {\n//     if (!dateString) return 'N/A';\n//     return dateString.split('.').slice(0, 3).join('/');\n//   };\n\n//   const formatCurrency = (amount) => {\n//     return new Intl.NumberFormat('en-US', {\n//       style: 'currency',\n//       currency: 'USD'\n//     }).format(amount);\n//   };\n\n//   const summary = calculateARSummary();\n//   const aging = getAgingData();\n//   const filteredCustomers = getFilteredCustomers();\n\n//   // Loading state\n//   if (sales.loading || customers.loading) {\n//     return (\n//       <div className=\"flex items-center justify-center min-h-screen\">\n//         <div className=\"flex items-center space-x-3\">\n//           <Loader className=\"animate-spin text-emerald-600\" size={24} />\n//           <span className=\"text-gray-600\">Loading data from API...</span>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   // Error state\n//   if (sales.error || customers.error) {\n//     return (\n//       <div className=\"max-w-7xl mx-auto p-6\">\n//         <div className=\"bg-red-50 border border-red-200 rounded-lg p-6\">\n//           <div className=\"flex items-center mb-4\">\n//             <AlertTriangle className=\"text-red-600 mr-2\" size={20} />\n//             <h3 className=\"font-medium text-red-800\">API Connection Error</h3>\n//           </div>\n//           <div className=\"text-red-700 mb-4\">\n//             {sales.error && <div>Sales API Error: {sales.error}</div>}\n//             {customers.error && <div>Customers API Error: {customers.error}</div>}\n//           </div>\n//           <button\n//             onClick={() => {\n//               fetchSales();\n//               fetchCustomers();\n//             }}\n//             className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 flex items-center space-x-2\"\n//           >\n//             <RefreshCw size={16} />\n//             <span>Retry Connection</span>\n//           </button>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"max-w-7xl mx-auto p-6 bg-white\">\n//       {/* Header */}\n//       <div className=\"mb-8\">\n//         <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\n//           <CreditCard className=\"mr-3 text-emerald-600\" />\n//           Accounts Receivable\n//         </h1>\n//         <p className=\"text-gray-600\">Manage customer invoicing, payments, and credit limits</p>\n//       </div>\n\n//       {/* Summary Cards */}\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n//         <div className=\"bg-blue-50 p-6 rounded-lg border border-blue-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-blue-600 text-sm font-medium\">Total A/R</p>\n//               <p className=\"text-2xl font-bold text-blue-900\">{formatCurrency(summary.totalAR)}</p>\n//             </div>\n//             <DollarSign className=\"text-blue-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-blue-700 mt-2\">{summary.customersWithBalance} customers with balances</p>\n//         </div>\n\n//         <div className=\"bg-red-50 p-6 rounded-lg border border-red-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-red-600 text-sm font-medium\">Overdue Amount</p>\n//               <p className=\"text-2xl font-bold text-red-900\">{formatCurrency(summary.totalOverdue)}</p>\n//             </div>\n//             <AlertTriangle className=\"text-red-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-red-700 mt-2\">\n//             {summary.totalAR > 0 ? ((summary.totalOverdue / summary.totalAR) * 100).toFixed(1) : 0}% of total A/R\n//           </p>\n//         </div>\n\n//         <div className=\"bg-green-50 p-6 rounded-lg border border-green-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-green-600 text-sm font-medium\">Avg. Days Outstanding</p>\n//               <p className=\"text-2xl font-bold text-green-900\">{summary.avgDaysOutstanding}</p>\n//             </div>\n//             <Clock className=\"text-green-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-green-700 mt-2\">Collection performance</p>\n//         </div>\n\n//         <div className=\"bg-purple-50 p-6 rounded-lg border border-purple-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-purple-600 text-sm font-medium\">Active Customers</p>\n//               <p className=\"text-2xl font-bold text-purple-900\">{customers.data.length}</p>\n//             </div>\n//             <Users className=\"text-purple-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-purple-700 mt-2\">Total customer accounts</p>\n//         </div>\n//       </div>\n\n//       {/* Tabs */}\n//       <div className=\"mb-6\">\n//         <div className=\"border-b border-gray-200\">\n//           <nav className=\"-mb-px flex space-x-8\">\n//             {[\n//               { id: 'overview', name: 'Customer Overview', icon: Users },\n//               { id: 'invoices', name: 'Invoices', icon: FileText },\n//               { id: 'aging', name: 'Aging Report', icon: Clock },\n//               { id: 'payments', name: 'Payments', icon: CheckCircle }\n//             ].map((tab) => (\n//               <button\n//                 key={tab.id}\n//                 onClick={() => setActiveTab(tab.id)}\n//                 className={`flex items-center py-2 px-1 border-b-2 font-medium text-sm ${\n//                   activeTab === tab.id\n//                     ? 'border-emerald-500 text-emerald-600'\n//                     : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n//                 }`}\n//               >\n//                 <tab.icon className=\"mr-2\" size={16} />\n//                 {tab.name}\n//               </button>\n//             ))}\n//           </nav>\n//         </div>\n//       </div>\n\n//       {/* Tab Content */}\n//       {activeTab === 'overview' && (\n//         <div>\n//           {/* Filters */}\n//           <div className=\"flex flex-wrap items-center gap-4 mb-6\">\n//             <div className=\"relative\">\n//               <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\n//               <input\n//                 type=\"text\"\n//                 placeholder=\"Search customers...\"\n//                 value={filters.searchTerm}\n//                 onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\n//                 className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               />\n//             </div>\n\n//             <select\n//               value={filters.customerType}\n//               onChange={(e) => setFilters({ ...filters, customerType: e.target.value })}\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//             >\n//               <option value=\"all\">All Customer Types</option>\n//               <option value=\"corporate\">Corporate</option>\n//               <option value=\"small_business\">Small Business</option>\n//               <option value=\"individual\">Individual</option>\n//               <option value=\"cash\">Cash Only</option>\n//             </select>\n\n//             <select\n//               value={filters.status}\n//               onChange={(e) => setFilters({ ...filters, status: e.target.value })}\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//             >\n//               <option value=\"all\">All Statuses</option>\n//               <option value=\"current\">Current</option>\n//               <option value=\"overdue\">Overdue</option>\n//               <option value=\"paid_up\">Paid Up</option>\n//             </select>\n\n//             <button\n//               onClick={() => setShowInvoiceForm(true)}\n//               className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\n//             >\n//               <Plus size={16} />\n//               <span>New Invoice</span>\n//             </button>\n//           </div>\n\n//           {/* Customer List */}\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//             <div className=\"overflow-x-auto\">\n//               <table className=\"w-full\">\n//                 <thead className=\"bg-gray-50\">\n//                   <tr>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Customer\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Type\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Credit Limit\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Balance\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Overdue\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Credit Status\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Last Payment\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Actions\n//                     </th>\n//                   </tr>\n//                 </thead>\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\n//                   {filteredCustomers.map((customer) => (\n//                     <tr key={customer.id} className=\"hover:bg-gray-50\">\n//                       <td className=\"px-6 py-4\">\n//                         <div>\n//                           <div className=\"text-sm font-medium text-gray-900\">{customer.name}</div>\n//                           <div className=\"text-sm text-gray-500\">{customer.id}</div>\n//                           <div className=\"text-xs text-gray-400 flex items-center mt-1\">\n//                             <Mail className=\"mr-1\" size={12} />\n//                             {customer.email}\n//                           </div>\n//                         </div>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-gray-100 text-gray-800\">\n//                           {customer.customerType.replace('_', ' ')}\n//                         </span>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {formatCurrency(customer.creditLimit)}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <div className=\"text-sm font-medium text-gray-900\">\n//                           {formatCurrency(customer.totalOwed)}\n//                         </div>\n//                         <div className=\"text-xs text-gray-500\">\n//                           {customer.invoiceCount} invoices\n//                         </div>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         {customer.overdueAmount > 0 ? (\n//                           <span className=\"text-red-600 font-medium\">\n//                             {formatCurrency(customer.overdueAmount)}\n//                           </span>\n//                         ) : (\n//                           <span className=\"text-green-600\">$0.00</span>\n//                         )}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(customer.creditStatus)}`}>\n//                           {customer.creditStatus.replace('_', ' ')}\n//                         </span>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {customer.lastPayment}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n//                         <button\n//                           onClick={() => setSelectedCustomer(customer)}\n//                           className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\n//                         >\n//                           <Eye size={16} />\n//                         </button>\n//                         <button className=\"text-blue-600 hover:text-blue-900\">\n//                           <Edit size={16} />\n//                         </button>\n//                       </td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {activeTab === 'aging' && (\n//         <div>\n//           <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n//             {/* Aging Summary */}\n//             <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n//               <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Aging Summary</h3>\n//               <div className=\"space-y-4\">\n//                 <div className=\"flex justify-between items-center p-3 bg-green-50 rounded\">\n//                   <span className=\"font-medium text-green-800\">Current (0-30 days)</span>\n//                   <span className=\"font-bold text-green-900\">{formatCurrency(aging.current)}</span>\n//                 </div>\n//                 <div className=\"flex justify-between items-center p-3 bg-yellow-50 rounded\">\n//                   <span className=\"font-medium text-yellow-800\">31-60 days</span>\n//                   <span className=\"font-bold text-yellow-900\">{formatCurrency(aging.days30)}</span>\n//                 </div>\n//                 <div className=\"flex justify-between items-center p-3 bg-orange-50 rounded\">\n//                   <span className=\"font-medium text-orange-800\">61-90 days</span>\n//                   <span className=\"font-bold text-orange-900\">{formatCurrency(aging.days60)}</span>\n//                 </div>\n//                 <div className=\"flex justify-between items-center p-3 bg-red-50 rounded\">\n//                   <span className=\"font-medium text-red-800\">Over 90 days</span>\n//                   <span className=\"font-bold text-red-900\">{formatCurrency(aging.over90)}</span>\n//                 </div>\n//               </div>\n//               <div className=\"mt-4 pt-4 border-t\">\n//                 <div className=\"flex justify-between items-center\">\n//                   <span className=\"text-lg font-semibold text-gray-900\">Total Outstanding</span>\n//                   <span className=\"text-xl font-bold text-gray-900\">\n//                     {formatCurrency(aging.current + aging.days30 + aging.days60 + aging.days90 + aging.over90)}\n//                   </span>\n//                 </div>\n//               </div>\n//             </div>\n\n//             {/* Collection Priority */}\n//             <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n//               <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Collection Priority</h3>\n//               <div className=\"space-y-3\">\n//                 {customers.data\n//                   .filter(customer => customer.overdueAmount > 0)\n//                   .sort((a, b) => b.overdueAmount - a.overdueAmount)\n//                   .slice(0, 5)\n//                   .map((customer, index) => (\n//                     <div key={customer.id} className=\"flex items-center justify-between p-3 bg-red-50 rounded\">\n//                       <div>\n//                         <div className=\"font-medium text-gray-900\">{customer.name}</div>\n//                         <div className=\"text-sm text-gray-500\">\n//                           Last payment: {customer.lastPayment}\n//                         </div>\n//                       </div>\n//                       <div className=\"text-right\">\n//                         <div className=\"font-bold text-red-900\">{formatCurrency(customer.overdueAmount)}</div>\n//                         <div className=\"text-xs text-red-700\">#{index + 1} Priority</div>\n//                       </div>\n//                     </div>\n//                   ))}\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {activeTab === 'invoices' && (\n//         <div>\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <h3 className=\"text-lg font-semibold text-gray-900\">Outstanding Orders/Invoices</h3>\n//             </div>\n//             <div className=\"overflow-x-auto\">\n//               <table className=\"w-full\">\n//                 <thead className=\"bg-gray-50\">\n//                   <tr>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Order #\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Customer\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Date\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Items\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Amount\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Payment Status\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Fulfillment\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Actions\n//                     </th>\n//                   </tr>\n//                 </thead>\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\n//                   {sales.data.map((order) => (\n//                     <tr key={order.orderId} className=\"hover:bg-gray-50\">\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <div className=\"text-sm font-medium text-gray-900\">#{order.orderId}</div>\n//                         <div className=\"text-xs text-gray-500\">{order.status}</div>\n//                       </td>\n//                       <td className=\"px-6 py-4\">\n//                         <div className=\"text-sm font-medium text-gray-900\">{getCustomerName(order.customerId)}</div>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {formatDate(order.createdAt)}\n//                       </td>\n//                       <td className=\"px-6 py-4\">\n//                         <div className=\"text-sm text-gray-900\">\n//                           {order.lineItems.map((item, index) => (\n//                             <div key={index} className=\"mb-1\">\n//                               <span className=\"font-medium\">{item.productName}</span>\n//                               <span className=\"text-gray-500 ml-2\">x{item.quantity}</span>\n//                             </div>\n//                           ))}\n//                         </div>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {formatCurrency(order.total)}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                           order.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n//                         }`}>\n//                           {order.paid ? 'Paid' : 'Unpaid'}\n//                         </span>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                           order.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n//                         }`}>\n//                           {order.fulfilled ? 'Fulfilled' : 'Pending'}\n//                         </span>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n//                         <button\n//                           className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\n//                           onClick={() => setViewInvoice(order)}\n//                         >\n//                           <Eye size={16} />\n//                         </button>\n//                         <button className=\"text-blue-600 hover:text-blue-900\">\n//                           <Download size={16} />\n//                         </button>\n//                       </td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {activeTab === 'payments' && (\n//         <div>\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <h3 className=\"text-lg font-semibold text-gray-900\">Payment History</h3>\n//             </div>\n//             <div className=\"overflow-x-auto\">\n//               <table className=\"w-full\">\n//                 <thead className=\"bg-gray-50\">\n//                   <tr>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Order ID\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Customer\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Date\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Amount\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Payment Status\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Fulfillment Status\n//                     </th>\n//                   </tr>\n//                 </thead>\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\n//                   {window.allSalesData?.filter(order => order.paid).map((order) => (\n//                     <tr key={order.orderId} className=\"hover:bg-gray-50\">\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n//                         #{order.orderId}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {getCustomerName(order.customerId)}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {formatDate(order.createdAt)}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {formatCurrency(order.total)}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-green-100 text-green-800\">\n//                           Paid\n//                         </span>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                           order.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n//                         }`}>\n//                           {order.fulfilled ? 'Fulfilled' : 'Pending'}\n//                         </span>\n//                       </td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n\n//             {(!window.allSalesData?.filter(order => order.paid).length || window.allSalesData?.filter(order => order.paid).length === 0) && (\n//               <div className=\"text-center py-12\">\n//                 <div className=\"text-gray-500 text-lg\">No payments found</div>\n//                 <p className=\"text-gray-400 mt-2\">All orders are currently unpaid</p>\n//               </div>\n//             )}\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Customer Detail Modal */}\n//       {selectedCustomer && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <div className=\"flex items-center justify-between\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\n//                   Customer Details - {selectedCustomer.name}\n//                 </h3>\n//                 <button\n//                   onClick={() => setSelectedCustomer(null)}\n//                   className=\"text-gray-400 hover:text-gray-600\"\n//                 >\n//                   <XCircle size={20} />\n//                 </button>\n//               </div>\n//             </div>\n\n//             <div className=\"px-6 py-4\">\n//               {/* Customer Info Grid */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n//                 <div className=\"space-y-4\">\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer ID</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.id}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Email</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.email}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Phone</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.phone}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Address</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.address}</p>\n//                   </div>\n//                 </div>\n\n//                 <div className=\"space-y-4\">\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer Type</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.customerType.replace('_', ' ')}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Limit</label>\n//                     <p className=\"text-sm text-gray-900\">{formatCurrency(selectedCustomer.creditLimit)}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Payment Terms</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.paymentTerms} days</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Status</label>\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(selectedCustomer.creditStatus)}`}>\n//                       {selectedCustomer.creditStatus.replace('_', ' ')}\n//                     </span>\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Financial Summary */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n//                 <div className=\"bg-blue-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-blue-600\">Current Balance</div>\n//                   <div className=\"text-xl font-bold text-blue-900\">\n//                     {formatCurrency(selectedCustomer.totalOwed)}\n//                   </div>\n//                 </div>\n//                 <div className=\"bg-red-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-red-600\">Overdue Amount</div>\n//                   <div className=\"text-xl font-bold text-red-900\">\n//                     {formatCurrency(selectedCustomer.overdueAmount)}\n//                   </div>\n//                 </div>\n//                 <div className=\"bg-green-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-green-600\">Credit Available</div>\n//                   <div className=\"text-xl font-bold text-green-900\">\n//                     {formatCurrency(selectedCustomer.creditLimit - selectedCustomer.totalOwed)}\n//                   </div>\n//                 </div>\n//                 <div className=\"bg-purple-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-purple-600\">Avg Payment Days</div>\n//                   <div className=\"text-xl font-bold text-purple-900\">\n//                     {selectedCustomer.avgPaymentDays}\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Customer Orders */}\n//               <div className=\"mb-6\">\n//                 <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Customer Orders</h4>\n//                 <div className=\"overflow-x-auto\">\n//                   <table className=\"w-full border border-gray-200 rounded\">\n//                     <thead className=\"bg-gray-50\">\n//                       <tr>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Order</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Date</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Items</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Amount</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Payment</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Fulfillment</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody className=\"divide-y divide-gray-200\">\n//                       {(window.allSalesData || [])\n//                         .filter(order => {\n//                           if (selectedCustomer.id.startsWith('guest-')) {\n//                             return order.orderId === selectedCustomer.orderId;\n//                           }\n//                           return order.customerId === selectedCustomer.id;\n//                         })\n//                         .map((order) => (\n//                           <tr key={order.orderId}>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">#{order.orderId}</td>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{formatDate(order.createdAt)}</td>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">\n//                               {order.lineItems.map(item => item.productName).join(', ')}\n//                             </td>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{formatCurrency(order.total)}</td>\n//                             <td className=\"px-4 py-2\">\n//                               <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                                 order.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n//                               }`}>\n//                                 {order.paid ? 'Paid' : 'Unpaid'}\n//                               </span>\n//                             </td>\n//                             <td className=\"px-4 py-2\">\n//                               <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                                 order.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n//                               }`}>\n//                                 {order.fulfilled ? 'Fulfilled' : 'UnFulfilled'}\n//                               </span>\n//                             </td>\n//                           </tr>\n//                         ))}\n//                     </tbody>\n//                   </table>\n//                 </div>\n\n//                 {(window.allSalesData || [])\n//                   .filter(order => {\n//                     if (selectedCustomer.id.startsWith('guest-')) {\n//                       return order.orderId === selectedCustomer.orderId;\n//                     }\n//                     return order.customerId === selectedCustomer.id;\n//                   }).length === 0 && (\n//                     <div className=\"text-center py-4 text-gray-500\">\n//                       No orders found for this customer\n//                     </div>\n//                   )}\n//               </div>\n\n//               {/* Action Buttons */}\n//               <div className=\"flex space-x-3\">\n//                 <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\n//                   <Plus size={16} />\n//                   <span>New Invoice</span>\n//                 </button>\n//                 <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\n//                   <CheckCircle size={16} />\n//                   <span>Record Payment</span>\n//                 </button>\n//                 <button className=\"px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 flex items-center space-x-2\">\n//                   <Mail size={16} />\n//                   <span>Send Statement</span>\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Order/Invoice Detail Modal */}\n//       {viewInvoice && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <div className=\"flex items-center justify-between\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\n//                   Order Details - #{viewInvoice.orderId}\n//                 </h3>\n//                 <button\n//                   onClick={() => setViewInvoice(null)}\n//                   className=\"text-gray-400 hover:text-gray-600\"\n//                 >\n//                   <XCircle size={20} />\n//                 </button>\n//               </div>\n//             </div>\n\n//             <div className=\"px-6 py-4\">\n//               {/* Order Info */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n//                 <div className=\"space-y-4\">\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Order ID</label>\n//                     <p className=\"text-sm text-gray-900\">{viewInvoice.orderId}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer</label>\n//                     <p className=\"text-sm text-gray-900\">{getCustomerName(viewInvoice.customerId)}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Created Date</label>\n//                     <p className=\"text-sm text-gray-900\">{formatDate(viewInvoice.createdAt)}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Status</label>\n//                     <p className=\"text-sm text-gray-900\">{viewInvoice.status}</p>\n//                   </div>\n//                 </div>\n\n//                 <div className=\"space-y-4\">\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Payment Status</label>\n//                     <div>\n//                       <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                         viewInvoice.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n//                       }`}>\n//                         {viewInvoice.paid ? 'Paid' : 'Unpaid'}\n//                       </span>\n//                     </div>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Fulfillment Status</label>\n//                     <div>\n//                       <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                         viewInvoice.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n//                       }`}>\n//                         {viewInvoice.fulfilled ? 'Fulfilled' : 'Pending'}\n//                       </span>\n//                     </div>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Total Amount</label>\n//                     <p className=\"text-lg font-bold text-gray-900\">{formatCurrency(viewInvoice.total)}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Payable Amount</label>\n//                     <p className=\"text-sm text-gray-900\">{formatCurrency(viewInvoice.payableAmount)}</p>\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Line Items */}\n//               <div className=\"mb-6\">\n//                 <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Order Items</h4>\n//                 <div className=\"overflow-x-auto\">\n//                   <table className=\"w-full border border-gray-200 rounded\">\n//                     <thead className=\"bg-gray-50\">\n//                       <tr>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Product</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Quantity</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Unit Price</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Total</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Status</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody className=\"divide-y divide-gray-200\">\n//                       {viewInvoice.lineItems.map((item, index) => (\n//                         <tr key={index}>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900\">{item.productName}</td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{item.quantity}</td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{formatCurrency(item.price)}</td>\n//                           <td className=\"px-4 py-2 text-sm font-medium text-gray-900 text-right\">{formatCurrency(item.total)}</td>\n//                           <td className=\"px-4 py-2\">\n//                             <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                               item.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n//                             }`}>\n//                               {item.status}\n//                             </span>\n//                           </td>\n//                         </tr>\n//                       ))}\n//                     </tbody>\n//                   </table>\n//                 </div>\n//               </div>\n\n//               {/* Totals */}\n//               <div className=\"bg-gray-50 p-4 rounded-lg\">\n//                 <div className=\"space-y-2\">\n//                   <div className=\"flex justify-between\">\n//                     <span className=\"text-sm text-gray-600\">Subtotal:</span>\n//                     <span className=\"text-sm text-gray-900\">{formatCurrency(viewInvoice.subTotal)}</span>\n//                   </div>\n//                   <div className=\"flex justify-between\">\n//                     <span className=\"text-sm text-gray-600\">Tax ({viewInvoice.taxRate}%):</span>\n//                     <span className=\"text-sm text-gray-900\">{formatCurrency(viewInvoice.taxAmount)}</span>\n//                   </div>\n//                   {viewInvoice.discountAmount > 0 && (\n//                     <div className=\"flex justify-between\">\n//                       <span className=\"text-sm text-gray-600\">Discount:</span>\n//                       <span className=\"text-sm text-red-600\">-{formatCurrency(viewInvoice.discountAmount)}</span>\n//                     </div>\n//                   )}\n//                   <div className=\"flex justify-between font-bold text-lg border-t pt-2\">\n//                     <span>Total:</span>\n//                     <span>{formatCurrency(viewInvoice.total)}</span>\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Action Buttons */}\n//               <div className=\"flex space-x-3 mt-6\">\n//                 {!viewInvoice.paid && (\n//                   <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\n//                     <CheckCircle size={16} />\n//                     <span>Mark as Paid</span>\n//                   </button>\n//                 )}\n//                 {!viewInvoice.fulfilled && (\n//                   <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\n//                     <FileText size={16} />\n//                     <span>Mark as Fulfilled</span>\n//                   </button>\n//                 )}\n//                 <button className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\">\n//                   <Download size={16} />\n//                   <span>Download Invoice</span>\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* API Integration Status */}\n//       <div className=\"mt-8 p-6 bg-green-50 border border-green-200 rounded-lg\">\n//         <div className=\"flex items-center mb-4\">\n//           <CheckCircle className=\"text-green-600 mr-2\" size={20} />\n//           <h3 className=\"font-medium text-green-800\">POS Integration Active</h3>\n//         </div>\n//         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm text-green-700\">\n//           <div>\n//             <strong>Sales Orders:</strong> {sales.data.length} outstanding orders from POS system\n//           </div>\n//           <div>\n//             <strong>Customers:</strong> {customers.data.length} active customers synchronized\n//           </div>\n//           <div>\n//             <strong>Real-time Updates:</strong> Data refreshes automatically with POS transactions\n//           </div>\n//         </div>\n//         <div className=\"mt-4 text-xs text-green-600\">\n//           <strong>Note:</strong> Only showing unpaid or unfulfilled orders. Replace Bearer token for live data connection.\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AccountsReceivableAPI;\n\nimport React, { useState, useEffect } from 'react';\nimport { Users, DollarSign, CreditCard, AlertTriangle, Clock, Plus, Search, Filter, Eye, Edit, Download, CheckCircle, XCircle, Calendar, FileText, TrendingUp, Mail, Phone, Loader, RefreshCw } from 'lucide-react';\n\n// API Configuration\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL_SALES = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/orders?start=0&size=200';\nconst API_CUSTOMERS = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/customers?status=Active';\n\n// Replace with your actual Bearer token\nconst BEARER_TOKEN = 'your-bearer-token-here';\nconst AccountsReceivable = () => {\n  _s();\n  var _window$allSalesData, _window$allSalesData2, _window$allSalesData3;\n  // State management\n  const [sales, setSales] = useState({\n    loading: false,\n    data: [],\n    error: null\n  });\n  const [customers, setCustomers] = useState({\n    loading: false,\n    data: [],\n    error: null\n  });\n  const [activeTab, setActiveTab] = useState('overview');\n  const [selectedCustomer, setSelectedCustomer] = useState(null);\n  const [selectedOrder, setSelectedOrder] = useState(null);\n  const [viewInvoice, setViewInvoice] = useState(null);\n  const [showInvoiceForm, setShowInvoiceForm] = useState(false);\n  const [filters, setFilters] = useState({\n    customerType: 'all',\n    status: 'all',\n    dateRange: '30',\n    searchTerm: ''\n  });\n\n  // API Functions\n  const fetchSales = async () => {\n    setSales(prev => ({\n      ...prev,\n      loading: true,\n      error: null\n    }));\n    try {\n      const response = await fetch(API_BASE_URL_SALES, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${BEARER_TOKEN}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const allData = await response.json();\n\n      // Store all data for customer calculations\n      window.allSalesData = allData;\n\n      // Show only records that are unpaid and fulfilled for display\n      const filteredOrders = allData.filter(order => !order.paid && order.fulfilled);\n      setSales({\n        loading: false,\n        data: filteredOrders,\n        error: null\n      });\n    } catch (error) {\n      console.error('Error fetching sales:', error);\n      setSales({\n        loading: false,\n        data: [],\n        error: error.message\n      });\n    }\n  };\n  const fetchCustomers = async () => {\n    setCustomers(prev => ({\n      ...prev,\n      loading: true,\n      error: null\n    }));\n    try {\n      const response = await fetch(API_CUSTOMERS, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${BEARER_TOKEN}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n\n      // Use all sales data for customer calculations, not just filtered display data\n      const allSalesData = window.allSalesData || [];\n\n      // Transform API customers to match our structure with real calculated data\n      const transformedCustomers = data.map(customer => {\n        // Get ALL orders for this customer (not just filtered ones)\n        const customerOrders = allSalesData.filter(order => order.customerId === customer.id);\n\n        // Calculate total owed from ALL unpaid orders\n        const totalOwed = customerOrders.filter(order => !order.paid).reduce((sum, order) => sum + (order.total || 0), 0);\n\n        // Overdue amount = total owed (since all unpaid orders need collection)\n        const overdueAmount = totalOwed;\n\n        // Total number of orders for this customer\n        const invoiceCount = customerOrders.length;\n\n        // Determine customer type based on actual order history, not API totalSpendOnOrder\n        let customerType = 'individual';\n        const totalSpentFromOrders = customerOrders.reduce((sum, order) => sum + (order.total || 0), 0);\n\n        // Use actual order amounts to determine customer type\n        if (totalSpentFromOrders > 500000) {\n          customerType = 'corporate';\n        } else if (totalSpentFromOrders > 200000) {\n          customerType = 'small_business';\n        } else {\n          customerType = 'individual';\n        }\n\n        // Set credit limit based on customer type\n        let creditLimit = 25000; // Default for individual\n        if (customerType === 'corporate') {\n          creditLimit = 500000;\n        } else if (customerType === 'small_business') {\n          creditLimit = 100000;\n        }\n\n        // Determine credit status based on payment behavior\n        let creditStatus = 'good';\n        if (totalOwed === 0) {\n          creditStatus = 'excellent';\n        } else if (totalOwed > creditLimit * 0.9) {\n          creditStatus = 'hold'; // Hold means credit limit exceeded, stop further credit\n        } else if (totalOwed > creditLimit * 0.7) {\n          creditStatus = 'watch'; // Watch means monitor closely\n        }\n\n        // Get last payment date from most recent paid order\n        const paidOrders = customerOrders.filter(o => o.paid);\n        const lastPayment = paidOrders.length > 0 ? paidOrders.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))[0].createdAt.split('.').slice(0, 3).join('-') : 'No payments';\n        return {\n          id: customer.id,\n          name: customer.name,\n          email: customer.email || 'No email provided',\n          phone: customer.phoneNumber || 'No phone provided',\n          address: customer.address && customer.address.length > 0 ? typeof customer.address[0] === 'string' ? customer.address[0] : 'No address provided' : 'No address provided',\n          customerType: customerType,\n          creditLimit: creditLimit,\n          paymentTerms: customerType === 'corporate' ? 45 : customerType === 'small_business' ? 30 : 15,\n          totalOwed: totalOwed,\n          overdueAmount: overdueAmount,\n          lastPayment: lastPayment,\n          creditStatus: creditStatus,\n          accountBalance: -totalOwed,\n          invoiceCount: invoiceCount,\n          avgPaymentDays: 30,\n          // Default estimate\n          status: customer.status,\n          totalSpendOnOrder: customer.totalSpendOnOrder || 0,\n          averageOrderValue: customer.averageOrderValue || 0,\n          numberOfOrders: customer.numberOfOrders || invoiceCount\n        };\n      });\n\n      // Also add walk-in customers (null customerId) as separate entries for each order\n      const walkInOrders = allSalesData.filter(order => !order.customerId || order.customerId === 'null');\n      walkInOrders.forEach((order, index) => {\n        const guestNumber = index + 1;\n        const guestTotalOwed = order.paid ? 0 : order.total;\n        const guestLastPayment = order.paid ? order.createdAt.split('.').slice(0, 3).join('-') : 'No payments';\n        transformedCustomers.push({\n          id: `guest-${order.orderId}`,\n          name: `Guest Customer #${guestNumber}`,\n          email: 'guest@pos.system',\n          phone: '+000-000-0000',\n          address: 'Walk-in Sale',\n          customerType: 'cash',\n          creditLimit: 0,\n          paymentTerms: 0,\n          totalOwed: guestTotalOwed,\n          overdueAmount: guestTotalOwed,\n          lastPayment: guestLastPayment,\n          creditStatus: 'cash_only',\n          accountBalance: -guestTotalOwed,\n          invoiceCount: 1,\n          avgPaymentDays: 0,\n          status: 'Active',\n          totalSpendOnOrder: order.total,\n          averageOrderValue: order.total,\n          numberOfOrders: 1,\n          orderId: order.orderId // Store order ID for reference\n        });\n      });\n      setCustomers({\n        loading: false,\n        data: transformedCustomers,\n        error: null\n      });\n    } catch (error) {\n      console.error('Error fetching customers:', error);\n      setCustomers({\n        loading: false,\n        data: [],\n        error: error.message\n      });\n    }\n  };\n\n  // Also add refresh button functionality to recalculate customer data\n  const refreshAllData = async () => {\n    await fetchSales();\n    setTimeout(() => fetchCustomers(), 500);\n  };\n\n  // Load data on component mount\n  useEffect(() => {\n    const loadData = async () => {\n      await fetchSales();\n      // Fetch customers after sales data is loaded to calculate balances correctly\n      setTimeout(() => fetchCustomers(), 500);\n    };\n    loadData();\n  }, []);\n\n  // Helper function to get customer name by ID\n  const getCustomerName = customerId => {\n    if (!customerId || customerId === 'null') return 'Guest Customer';\n    const customer = customers.data.find(c => c.id === customerId);\n    return customer ? customer.name : 'Unknown Customer';\n  };\n\n  // Helper function to get customer details by ID\n  const getCustomerDetails = customerId => {\n    if (!customerId || customerId === 'null') return null;\n    return customers.data.find(c => c.id === customerId);\n  };\n\n  // Calculate AR summary\n  const calculateARSummary = () => {\n    const totalAR = customers.data.reduce((sum, customer) => sum + customer.totalOwed, 0);\n    const totalOverdue = customers.data.reduce((sum, customer) => sum + customer.overdueAmount, 0);\n    const customersWithBalance = customers.data.filter(customer => customer.totalOwed > 0).length;\n\n    // Calculate real average days outstanding from actual order data\n    const allSalesData = window.allSalesData || [];\n    let totalDaysOutstanding = 0;\n    let orderCount = 0;\n    allSalesData.forEach(order => {\n      // Convert order creation date from \"2025.08.18.10.08.54.569\" to proper date\n      const orderDateStr = order.createdAt.split('.').slice(0, 3).join('-'); // \"2025-08-18\"\n      const orderDate = new Date(orderDateStr);\n      const today = new Date();\n\n      // Calculate days between order creation and today\n      const timeDiff = today.getTime() - orderDate.getTime();\n      const daysDiff = Math.floor(timeDiff / (1000 * 3600 * 24));\n      totalDaysOutstanding += daysDiff;\n      orderCount++;\n    });\n    const avgDaysOutstanding = orderCount > 0 ? Math.round(totalDaysOutstanding / orderCount) : 0;\n    return {\n      totalAR,\n      totalOverdue,\n      customersWithBalance,\n      avgDaysOutstanding\n    };\n  };\n\n  // Get aging data\n  const getAgingData = () => {\n    const aging = {\n      current: 0,\n      days30: 0,\n      days60: 0,\n      days90: 0,\n      over90: 0\n    };\n    sales.data.forEach(order => {\n      if (order.paid) return;\n      const daysPastDue = order.daysOverdue || 0;\n      if (daysPastDue <= 0) {\n        aging.current += order.total;\n      } else if (daysPastDue <= 30) {\n        aging.days30 += order.total;\n      } else if (daysPastDue <= 60) {\n        aging.days60 += order.total;\n      } else if (daysPastDue <= 90) {\n        aging.days90 += order.total;\n      } else {\n        aging.over90 += order.total;\n      }\n    });\n    return aging;\n  };\n\n  // Filter customers\n  const getFilteredCustomers = () => {\n    let filtered = [...customers.data];\n    if (filters.customerType !== 'all') {\n      filtered = filtered.filter(customer => customer.customerType === filters.customerType);\n    }\n    if (filters.status !== 'all') {\n      filtered = filtered.filter(customer => {\n        if (filters.status === 'overdue') return customer.overdueAmount > 0;\n        if (filters.status === 'current') return customer.totalOwed > 0 && customer.overdueAmount === 0;\n        if (filters.status === 'paid_up') return customer.totalOwed === 0;\n        return true;\n      });\n    }\n    if (filters.searchTerm) {\n      const term = filters.searchTerm.toLowerCase();\n      filtered = filtered.filter(customer => customer.name.toLowerCase().includes(term) || customer.email.toLowerCase().includes(term) || customer.id.toLowerCase().includes(term));\n    }\n    return filtered;\n  };\n  const getCreditStatusColor = status => {\n    switch (status) {\n      case 'excellent':\n        return 'bg-green-100 text-green-800';\n      case 'good':\n        return 'bg-blue-100 text-blue-800';\n      case 'watch':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'hold':\n        return 'bg-red-100 text-red-800';\n      case 'cash_only':\n        return 'bg-gray-100 text-gray-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n  const getInvoiceStatusColor = status => {\n    switch (status) {\n      case 'paid':\n        return 'bg-green-100 text-green-800';\n      case 'outstanding':\n        return 'bg-blue-100 text-blue-800';\n      case 'overdue':\n        return 'bg-red-100 text-red-800';\n      case 'partial':\n        return 'bg-yellow-100 text-yellow-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n  const formatDate = dateString => {\n    if (!dateString) return 'N/A';\n    return dateString.split('.').slice(0, 3).join('/');\n  };\n  const formatCurrency = amount => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(amount);\n  };\n  const summary = calculateARSummary();\n  const aging = getAgingData();\n  const filteredCustomers = getFilteredCustomers();\n\n  // Loading state\n  if (sales.loading || customers.loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-3\",\n        children: [/*#__PURE__*/_jsxDEV(Loader, {\n          className: \"animate-spin text-emerald-600\",\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9762,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-600\",\n          children: \"Loading data from API...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9763,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9761,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9760,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Error state\n  if (sales.error || customers.error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto p-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-50 border border-red-200 rounded-lg p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n            className: \"text-red-600 mr-2\",\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 9775,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-medium text-red-800\",\n            children: \"API Connection Error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 9776,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9774,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-700 mb-4\",\n          children: [sales.error && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Sales API Error: \", sales.error]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 9779,\n            columnNumber: 29\n          }, this), customers.error && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Customers API Error: \", customers.error]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 9780,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9778,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            fetchSales();\n            fetchCustomers();\n          },\n          className: \"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 9789,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Retry Connection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 9790,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9782,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9773,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9772,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-7xl mx-auto p-6 bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-gray-900 mb-2 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(CreditCard, {\n          className: \"mr-3 text-emerald-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9802,\n          columnNumber: 11\n        }, this), \"Accounts Receivable\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9801,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"Manage customer invoicing, payments, and credit limits\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9805,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9800,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-blue-50 p-6 rounded-lg border border-blue-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-blue-600 text-sm font-medium\",\n              children: \"Total A/R\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 9813,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-2xl font-bold text-blue-900\",\n              children: formatCurrency(summary.totalAR)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 9814,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 9812,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DollarSign, {\n            className: \"text-blue-600\",\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 9816,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9811,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-blue-700 mt-2\",\n          children: [summary.customersWithBalance, \" customers with balances\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9818,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9810,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-50 p-6 rounded-lg border border-red-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-600 text-sm font-medium\",\n              children: \"Overdue Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 9824,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-2xl font-bold text-red-900\",\n              children: formatCurrency(summary.totalOverdue)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 9825,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 9823,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AlertTriangle, {\n            className: \"text-red-600\",\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 9827,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9822,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-red-700 mt-2\",\n          children: [summary.totalAR > 0 ? (summary.totalOverdue / summary.totalAR * 100).toFixed(1) : 0, \"% of total A/R\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9829,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9821,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-green-50 p-6 rounded-lg border border-green-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-green-600 text-sm font-medium\",\n              children: \"Avg. Days Outstanding\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 9837,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-2xl font-bold text-green-900\",\n              children: summary.avgDaysOutstanding\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 9838,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 9836,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Clock, {\n            className: \"text-green-600\",\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 9840,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9835,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-green-700 mt-2\",\n          children: \"Collection performance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9842,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9834,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-purple-50 p-6 rounded-lg border border-purple-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-purple-600 text-sm font-medium\",\n              children: \"Active Customers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 9848,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-2xl font-bold text-purple-900\",\n              children: customers.data.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 9849,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 9847,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Users, {\n            className: \"text-purple-600\",\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 9851,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9846,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-purple-700 mt-2\",\n          children: \"Total customer accounts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9853,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9845,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9809,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-b border-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"-mb-px flex space-x-8\",\n          children: [{\n            id: 'overview',\n            name: 'Customer Overview',\n            icon: Users\n          }, {\n            id: 'invoices',\n            name: 'Invoices',\n            icon: FileText\n          }, {\n            id: 'aging',\n            name: 'Aging Report',\n            icon: Clock\n          }, {\n            id: 'payments',\n            name: 'Payments',\n            icon: CheckCircle\n          }].map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveTab(tab.id),\n            className: `flex items-center py-2 px-1 border-b-2 font-medium text-sm ${activeTab === tab.id ? 'border-emerald-500 text-emerald-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}`,\n            children: [/*#__PURE__*/_jsxDEV(tab.icon, {\n              className: \"mr-2\",\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 9876,\n              columnNumber: 17\n            }, this), tab.name]\n          }, tab.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 9867,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9860,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9859,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9858,\n      columnNumber: 7\n    }, this), activeTab === 'overview' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap items-center gap-4 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(Search, {\n            className: \"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\",\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 9890,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search customers...\",\n            value: filters.searchTerm,\n            onChange: e => setFilters({\n              ...filters,\n              searchTerm: e.target.value\n            }),\n            className: \"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 9891,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9889,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filters.customerType,\n          onChange: e => setFilters({\n            ...filters,\n            customerType: e.target.value\n          }),\n          className: \"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"All Customer Types\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 9905,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"corporate\",\n            children: \"Corporate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 9906,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"small_business\",\n            children: \"Small Business\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 9907,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"individual\",\n            children: \"Individual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 9908,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"cash\",\n            children: \"Cash Only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 9909,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9900,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filters.status,\n          onChange: e => setFilters({\n            ...filters,\n            status: e.target.value\n          }),\n          className: \"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"All Statuses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 9917,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"current\",\n            children: \"Current\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 9918,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"overdue\",\n            children: \"Overdue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 9919,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"paid_up\",\n            children: \"Paid Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 9920,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9912,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowInvoiceForm(true),\n          className: \"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(Plus, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 9927,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"New Invoice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 9928,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9923,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9888,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white border border-gray-200 rounded-lg overflow-hidden\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overflow-x-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"w-full\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              className: \"bg-gray-50\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                  children: \"Customer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 9938,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                  children: \"Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 9941,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                  children: \"Credit Limit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 9944,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                  children: \"Balance\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 9947,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                  children: \"Overdue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 9950,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                  children: \"Credit Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 9953,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                  children: \"Last Payment\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 9956,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 9959,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 9937,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 9936,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              className: \"bg-white divide-y divide-gray-200\",\n              children: filteredCustomers.map(customer => /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"hover:bg-gray-50\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-sm font-medium text-gray-900\",\n                      children: customer.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 9969,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-sm text-gray-500\",\n                      children: customer.id\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 9970,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-xs text-gray-400 flex items-center mt-1\",\n                      children: [/*#__PURE__*/_jsxDEV(Mail, {\n                        className: \"mr-1\",\n                        size: 12\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 9972,\n                        columnNumber: 29\n                      }, this), customer.email]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 9971,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 9968,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 9967,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"px-2 py-1 text-xs font-medium rounded-full bg-gray-100 text-gray-800\",\n                    children: customer.customerType.replace('_', ' ')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 9978,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 9977,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900\",\n                  children: formatCurrency(customer.creditLimit)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 9982,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm font-medium text-gray-900\",\n                    children: formatCurrency(customer.totalOwed)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 9986,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-xs text-gray-500\",\n                    children: [customer.invoiceCount, \" invoices\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 9989,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 9985,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap\",\n                  children: customer.overdueAmount > 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-red-600 font-medium\",\n                    children: formatCurrency(customer.overdueAmount)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 9995,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-green-600\",\n                    children: \"$0.00\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 9999,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 9993,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(customer.creditStatus)}`,\n                    children: customer.creditStatus.replace('_', ' ')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 10003,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10002,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900\",\n                  children: customer.lastPayment\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10007,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap text-sm font-medium\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => setSelectedCustomer(customer),\n                    className: \"text-emerald-600 hover:text-emerald-900 mr-3\",\n                    children: /*#__PURE__*/_jsxDEV(Eye, {\n                      size: 16\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 10015,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 10011,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"text-blue-600 hover:text-blue-900\",\n                    children: /*#__PURE__*/_jsxDEV(Edit, {\n                      size: 16\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 10018,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 10017,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10010,\n                  columnNumber: 23\n                }, this)]\n              }, customer.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 9966,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 9964,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 9935,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9934,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9933,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9886,\n      columnNumber: 9\n    }, this), activeTab === 'aging' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 lg:grid-cols-2 gap-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border border-gray-200 rounded-lg p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-gray-900 mb-4\",\n            children: \"Aging Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10035,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center p-3 bg-green-50 rounded\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium text-green-800\",\n                children: \"Current (0-30 days)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 10038,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-bold text-green-900\",\n                children: formatCurrency(aging.current)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 10039,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 10037,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center p-3 bg-yellow-50 rounded\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium text-yellow-800\",\n                children: \"31-60 days\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 10042,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-bold text-yellow-900\",\n                children: formatCurrency(aging.days30)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 10043,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 10041,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center p-3 bg-orange-50 rounded\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium text-orange-800\",\n                children: \"61-90 days\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 10046,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-bold text-orange-900\",\n                children: formatCurrency(aging.days60)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 10047,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 10045,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center p-3 bg-red-50 rounded\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium text-red-800\",\n                children: \"Over 90 days\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 10050,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-bold text-red-900\",\n                children: formatCurrency(aging.over90)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 10051,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 10049,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 10036,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 pt-4 border-t\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-lg font-semibold text-gray-900\",\n                children: \"Total Outstanding\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 10056,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xl font-bold text-gray-900\",\n                children: formatCurrency(aging.current + aging.days30 + aging.days60 + aging.days90 + aging.over90)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 10057,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 10055,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10054,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10034,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border border-gray-200 rounded-lg p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-gray-900 mb-4\",\n            children: \"Collection Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10066,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-3\",\n            children: customers.data.filter(customer => customer.overdueAmount > 0).sort((a, b) => b.overdueAmount - a.overdueAmount).slice(0, 5).map((customer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between p-3 bg-red-50 rounded\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-medium text-gray-900\",\n                  children: customer.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10075,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-500\",\n                  children: [\"Last payment: \", customer.lastPayment]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10076,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 10074,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-right\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-bold text-red-900\",\n                  children: formatCurrency(customer.overdueAmount)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10081,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-xs text-red-700\",\n                  children: [\"#\", index + 1, \" Priority\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10082,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 10080,\n                columnNumber: 23\n              }, this)]\n            }, customer.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 10073,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10067,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10065,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10032,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10031,\n      columnNumber: 9\n    }, this), activeTab === 'invoices' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white border border-gray-200 rounded-lg overflow-hidden\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-6 py-4 border-b border-gray-200\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-gray-900\",\n            children: \"Outstanding Orders/Invoices\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10096,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10095,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overflow-x-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"w-full\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              className: \"bg-gray-50\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                  children: \"Order #\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10102,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                  children: \"Customer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10105,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10108,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                  children: \"Items\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10111,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                  children: \"Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10114,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                  children: \"Payment Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10117,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                  children: \"Fulfillment\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10120,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10123,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 10101,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 10100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              className: \"bg-white divide-y divide-gray-200\",\n              children: sales.data.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"hover:bg-gray-50\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm font-medium text-gray-900\",\n                    children: [\"#\", order.orderId]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 10132,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-xs text-gray-500\",\n                    children: order.status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 10133,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10131,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm font-medium text-gray-900\",\n                    children: getCustomerName(order.customerId)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 10136,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10135,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900\",\n                  children: formatDate(order.createdAt)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10138,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm text-gray-900\",\n                    children: order.lineItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-1\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"font-medium\",\n                        children: item.productName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 10145,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-gray-500 ml-2\",\n                        children: [\"x\", item.quantity]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 10146,\n                        columnNumber: 31\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 10144,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 10142,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10141,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900\",\n                  children: formatCurrency(order.total)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10151,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `px-2 py-1 text-xs font-medium rounded-full ${order.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`,\n                    children: order.paid ? 'Paid' : 'Unpaid'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 10155,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10154,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `px-2 py-1 text-xs font-medium rounded-full ${order.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'}`,\n                    children: order.fulfilled ? 'Fulfilled' : 'UnFulfilled'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 10162,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10161,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap text-sm font-medium\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"text-emerald-600 hover:text-emerald-900 mr-3\",\n                    onClick: () => setViewInvoice(order),\n                    children: /*#__PURE__*/_jsxDEV(Eye, {\n                      size: 16\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 10173,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 10169,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"text-blue-600 hover:text-blue-900\",\n                    children: /*#__PURE__*/_jsxDEV(Download, {\n                      size: 16\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 10176,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 10175,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10168,\n                  columnNumber: 23\n                }, this)]\n              }, order.orderId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 10130,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 10128,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 10099,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10098,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10094,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10093,\n      columnNumber: 9\n    }, this), activeTab === 'payments' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white border border-gray-200 rounded-lg overflow-hidden\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-6 py-4 border-b border-gray-200\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-gray-900\",\n            children: \"Payment History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10192,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overflow-x-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"w-full\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              className: \"bg-gray-50\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                  children: \"Order ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10198,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                  children: \"Customer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10201,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10204,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                  children: \"Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10207,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                  children: \"Payment Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10210,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                  children: \"Fulfillment Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10213,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 10197,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 10196,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              className: \"bg-white divide-y divide-gray-200\",\n              children: (_window$allSalesData = window.allSalesData) === null || _window$allSalesData === void 0 ? void 0 : _window$allSalesData.filter(order => order.paid).map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"hover:bg-gray-50\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\",\n                  children: [\"#\", order.orderId]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10221,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900\",\n                  children: getCustomerName(order.customerId)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10224,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900\",\n                  children: formatDate(order.createdAt)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10227,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900\",\n                  children: formatCurrency(order.total)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10230,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"px-2 py-1 text-xs font-medium rounded-full bg-green-100 text-green-800\",\n                    children: \"Paid\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 10234,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10233,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `px-2 py-1 text-xs font-medium rounded-full ${order.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'}`,\n                    children: order.fulfilled ? 'Fulfilled' : 'Pending'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 10239,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10238,\n                  columnNumber: 23\n                }, this)]\n              }, order.orderId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 10220,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 10218,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 10195,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10194,\n          columnNumber: 13\n        }, this), (!((_window$allSalesData2 = window.allSalesData) !== null && _window$allSalesData2 !== void 0 && _window$allSalesData2.filter(order => order.paid).length) || ((_window$allSalesData3 = window.allSalesData) === null || _window$allSalesData3 === void 0 ? void 0 : _window$allSalesData3.filter(order => order.paid).length) === 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center py-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray-500 text-lg\",\n            children: \"No payments found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10253,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-400 mt-2\",\n            children: \"All orders are currently unpaid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10254,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10252,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10190,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10189,\n      columnNumber: 9\n    }, this), selectedCustomer && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-6 py-4 border-b border-gray-200\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold text-gray-900\",\n              children: [\"Customer Details - \", selectedCustomer.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 10267,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setSelectedCustomer(null),\n              className: \"text-gray-400 hover:text-gray-600\",\n              children: /*#__PURE__*/_jsxDEV(XCircle, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 10274,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 10270,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 10266,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-6 py-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-sm font-medium text-gray-500\",\n                  children: \"Customer ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10284,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-900\",\n                  children: selectedCustomer.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10285,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 10283,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-sm font-medium text-gray-500\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10288,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-900\",\n                  children: selectedCustomer.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10289,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 10287,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-sm font-medium text-gray-500\",\n                  children: \"Phone\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10292,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-900\",\n                  children: selectedCustomer.phone\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10293,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 10291,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-sm font-medium text-gray-500\",\n                  children: \"Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10296,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-900\",\n                  children: selectedCustomer.address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10297,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 10295,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 10282,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-sm font-medium text-gray-500\",\n                  children: \"Customer Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10303,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-900\",\n                  children: selectedCustomer.customerType.replace('_', ' ')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10304,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 10302,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-sm font-medium text-gray-500\",\n                  children: \"Credit Limit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10307,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-900\",\n                  children: formatCurrency(selectedCustomer.creditLimit)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10308,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 10306,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-sm font-medium text-gray-500\",\n                  children: \"Payment Terms\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10311,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-900\",\n                  children: [selectedCustomer.paymentTerms, \" days\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10312,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 10310,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-sm font-medium text-gray-500\",\n                  children: \"Credit Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10315,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(selectedCustomer.creditStatus)}`,\n                  children: selectedCustomer.creditStatus.replace('_', ' ')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10316,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 10314,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 10301,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 10281,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-blue-50 p-4 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm font-medium text-blue-600\",\n                children: \"Current Balance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 10326,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xl font-bold text-blue-900\",\n                children: formatCurrency(selectedCustomer.totalOwed)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 10327,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 10325,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-red-50 p-4 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm font-medium text-red-600\",\n                children: \"Overdue Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 10332,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xl font-bold text-red-900\",\n                children: formatCurrency(selectedCustomer.overdueAmount)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 10333,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 10331,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-green-50 p-4 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm font-medium text-green-600\",\n                children: \"Credit Available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 10338,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xl font-bold text-green-900\",\n                children: formatCurrency(selectedCustomer.creditLimit - selectedCustomer.totalOwed)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 10339,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 10337,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-purple-50 p-4 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm font-medium text-purple-600\",\n                children: \"Avg Payment Days\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 10344,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xl font-bold text-purple-900\",\n                children: selectedCustomer.avgPaymentDays\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 10345,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 10343,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 10324,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-md font-semibold text-gray-900 mb-3\",\n              children: \"Customer Orders\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 10353,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"overflow-x-auto\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"w-full border border-gray-200 rounded\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  className: \"bg-gray-50\",\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-4 py-2 text-left text-xs font-medium text-gray-500\",\n                      children: \"Order\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 10358,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-4 py-2 text-left text-xs font-medium text-gray-500\",\n                      children: \"Date\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 10359,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-4 py-2 text-left text-xs font-medium text-gray-500\",\n                      children: \"Items\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 10360,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-4 py-2 text-right text-xs font-medium text-gray-500\",\n                      children: \"Amount\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 10361,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-4 py-2 text-left text-xs font-medium text-gray-500\",\n                      children: \"Payment\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 10362,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-4 py-2 text-left text-xs font-medium text-gray-500\",\n                      children: \"Fulfillment\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 10363,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 10357,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10356,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  className: \"divide-y divide-gray-200\",\n                  children: (window.allSalesData || []).filter(order => {\n                    if (selectedCustomer.id.startsWith('guest-')) {\n                      return order.orderId === selectedCustomer.orderId;\n                    }\n                    return order.customerId === selectedCustomer.id;\n                  }).map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 text-sm text-gray-900\",\n                      children: [\"#\", order.orderId]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 10376,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 text-sm text-gray-900\",\n                      children: formatDate(order.createdAt)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 10377,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 text-sm text-gray-900\",\n                      children: order.lineItems.map(item => item.productName).join(', ')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 10378,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 text-sm text-gray-900 text-right\",\n                      children: formatCurrency(order.total)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 10381,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: `px-2 py-1 text-xs font-medium rounded-full ${order.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`,\n                        children: order.paid ? 'Paid' : 'Unpaid'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 10383,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 10382,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: `px-2 py-1 text-xs font-medium rounded-full ${order.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'}`,\n                        children: order.fulfilled ? 'Fulfilled' : 'Pending'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 10390,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 10389,\n                      columnNumber: 29\n                    }, this)]\n                  }, order.orderId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 10375,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10366,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 10355,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 10354,\n              columnNumber: 17\n            }, this), (window.allSalesData || []).filter(order => {\n              if (selectedCustomer.id.startsWith('guest-')) {\n                return order.orderId === selectedCustomer.orderId;\n              }\n              return order.customerId === selectedCustomer.id;\n            }).length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center py-4 text-gray-500\",\n              children: \"No orders found for this customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 10409,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 10352,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(Plus, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 10418,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"New Invoice\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 10419,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 10417,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 10422,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Record Payment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 10423,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 10421,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 flex items-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(Mail, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 10426,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Send Statement\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 10427,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 10425,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 10416,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10279,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10264,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10263,\n      columnNumber: 9\n    }, this), viewInvoice && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-6 py-4 border-b border-gray-200\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold text-gray-900\",\n              children: [\"Order Details - #\", viewInvoice.orderId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 10441,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setViewInvoice(null),\n              className: \"text-gray-400 hover:text-gray-600\",\n              children: /*#__PURE__*/_jsxDEV(XCircle, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 10448,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 10444,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 10440,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10439,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-6 py-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-sm font-medium text-gray-500\",\n                  children: \"Order ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10458,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-900\",\n                  children: viewInvoice.orderId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10459,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 10457,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-sm font-medium text-gray-500\",\n                  children: \"Customer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10462,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-900\",\n                  children: getCustomerName(viewInvoice.customerId)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10463,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 10461,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-sm font-medium text-gray-500\",\n                  children: \"Created Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10466,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-900\",\n                  children: formatDate(viewInvoice.createdAt)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10467,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 10465,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-sm font-medium text-gray-500\",\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10470,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-900\",\n                  children: viewInvoice.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10471,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 10469,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 10456,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-sm font-medium text-gray-500\",\n                  children: \"Payment Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10477,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `px-2 py-1 text-xs font-medium rounded-full ${viewInvoice.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`,\n                    children: viewInvoice.paid ? 'Paid' : 'Unpaid'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 10479,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10478,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 10476,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-sm font-medium text-gray-500\",\n                  children: \"Fulfillment Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10487,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `px-2 py-1 text-xs font-medium rounded-full ${viewInvoice.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'}`,\n                    children: viewInvoice.fulfilled ? 'Fulfilled' : 'Pending'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 10489,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10488,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 10486,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-sm font-medium text-gray-500\",\n                  children: \"Total Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10497,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-lg font-bold text-gray-900\",\n                  children: formatCurrency(viewInvoice.total)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10498,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 10496,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-sm font-medium text-gray-500\",\n                  children: \"Payable Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10501,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-900\",\n                  children: formatCurrency(viewInvoice.payableAmount)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10502,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 10500,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 10475,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 10455,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-md font-semibold text-gray-900 mb-3\",\n              children: \"Order Items\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 10509,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"overflow-x-auto\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"w-full border border-gray-200 rounded\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  className: \"bg-gray-50\",\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-4 py-2 text-left text-xs font-medium text-gray-500\",\n                      children: \"Product\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 10514,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-4 py-2 text-right text-xs font-medium text-gray-500\",\n                      children: \"Quantity\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 10515,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-4 py-2 text-right text-xs font-medium text-gray-500\",\n                      children: \"Unit Price\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 10516,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-4 py-2 text-right text-xs font-medium text-gray-500\",\n                      children: \"Total\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 10517,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-4 py-2 text-left text-xs font-medium text-gray-500\",\n                      children: \"Status\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 10518,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 10513,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10512,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  className: \"divide-y divide-gray-200\",\n                  children: viewInvoice.lineItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 text-sm text-gray-900\",\n                      children: item.productName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 10524,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 text-sm text-gray-900 text-right\",\n                      children: item.quantity\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 10525,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 text-sm text-gray-900 text-right\",\n                      children: formatCurrency(item.price)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 10526,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 text-sm font-medium text-gray-900 text-right\",\n                      children: formatCurrency(item.total)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 10527,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: `px-2 py-1 text-xs font-medium rounded-full ${item.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'}`,\n                        children: item.status\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 10529,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 10528,\n                      columnNumber: 27\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 10523,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10521,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 10511,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 10510,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 10508,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-50 p-4 rounded-lg\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm text-gray-600\",\n                  children: \"Subtotal:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10546,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm text-gray-900\",\n                  children: formatCurrency(viewInvoice.subTotal)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10547,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 10545,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm text-gray-600\",\n                  children: [\"Tax (\", viewInvoice.taxRate, \"%):\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10550,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm text-gray-900\",\n                  children: formatCurrency(viewInvoice.taxAmount)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10551,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 10549,\n                columnNumber: 19\n              }, this), viewInvoice.discountAmount > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm text-gray-600\",\n                  children: \"Discount:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10555,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm text-red-600\",\n                  children: [\"-\", formatCurrency(viewInvoice.discountAmount)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10556,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 10554,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between font-bold text-lg border-t pt-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Total:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10560,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: formatCurrency(viewInvoice.total)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 10561,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 10559,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 10544,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10543,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-3 mt-6\",\n            children: [!viewInvoice.paid && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 10570,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Mark as Paid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 10571,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 10569,\n              columnNumber: 19\n            }, this), !viewInvoice.fulfilled && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(FileText, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 10576,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Mark as Fulfilled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 10577,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 10575,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(Download, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 10581,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Download Invoice\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 10582,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 10580,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 10567,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10453,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10438,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10437,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8 p-6 bg-green-50 border border-green-200 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n          className: \"text-green-600 mr-2\",\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10593,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-medium text-green-800\",\n          children: \"POS Integration Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10594,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10592,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm text-green-700\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Sales Orders:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10598,\n            columnNumber: 13\n          }, this), \" \", sales.data.length, \" outstanding orders from POS system\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10597,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Customers:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10601,\n            columnNumber: 13\n          }, this), \" \", customers.data.length, \" active customers synchronized\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10600,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Real-time Updates:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10604,\n            columnNumber: 13\n          }, this), \" Data refreshes automatically with POS transactions\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10603,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10596,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 text-xs text-green-600\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Note:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10608,\n          columnNumber: 11\n        }, this), \" Only showing unpaid or unfulfilled orders. Replace Bearer token for live data connection.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10607,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10591,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9798,\n    columnNumber: 5\n  }, this);\n};\n_s(AccountsReceivable, \"F8iLnIdEVWDiuGkmWczxmVwUYQY=\");\n_c = AccountsReceivable;\nexport default AccountsReceivable;\nvar _c;\n$RefreshReg$(_c, \"AccountsReceivable\");","map":{"version":3,"names":["React","useState","useEffect","Users","DollarSign","CreditCard","AlertTriangle","Clock","Plus","Search","Filter","Eye","Edit","Download","CheckCircle","XCircle","Calendar","FileText","TrendingUp","Mail","Phone","Loader","RefreshCw","jsxDEV","_jsxDEV","API_BASE_URL_SALES","API_CUSTOMERS","BEARER_TOKEN","AccountsReceivable","_s","_window$allSalesData","_window$allSalesData2","_window$allSalesData3","sales","setSales","loading","data","error","customers","setCustomers","activeTab","setActiveTab","selectedCustomer","setSelectedCustomer","selectedOrder","setSelectedOrder","viewInvoice","setViewInvoice","showInvoiceForm","setShowInvoiceForm","filters","setFilters","customerType","status","dateRange","searchTerm","fetchSales","prev","response","fetch","method","headers","ok","Error","allData","json","window","allSalesData","filteredOrders","filter","order","paid","fulfilled","console","message","fetchCustomers","transformedCustomers","map","customer","customerOrders","customerId","id","totalOwed","reduce","sum","total","overdueAmount","invoiceCount","length","totalSpentFromOrders","creditLimit","creditStatus","paidOrders","o","lastPayment","sort","a","b","Date","createdAt","split","slice","join","name","email","phone","phoneNumber","address","paymentTerms","accountBalance","avgPaymentDays","totalSpendOnOrder","averageOrderValue","numberOfOrders","walkInOrders","forEach","index","guestNumber","guestTotalOwed","guestLastPayment","push","orderId","refreshAllData","setTimeout","loadData","getCustomerName","find","c","getCustomerDetails","calculateARSummary","totalAR","totalOverdue","customersWithBalance","totalDaysOutstanding","orderCount","orderDateStr","orderDate","today","timeDiff","getTime","daysDiff","Math","floor","avgDaysOutstanding","round","getAgingData","aging","current","days30","days60","days90","over90","daysPastDue","daysOverdue","getFilteredCustomers","filtered","term","toLowerCase","includes","getCreditStatusColor","getInvoiceStatusColor","formatDate","dateString","formatCurrency","amount","Intl","NumberFormat","style","currency","format","summary","filteredCustomers","className","children","size","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toFixed","icon","tab","type","placeholder","value","onChange","e","target","replace","lineItems","item","productName","quantity","startsWith","payableAmount","price","subTotal","taxRate","taxAmount","discountAmount","_c","$RefreshReg$"],"sources":["C:/Users/Logic-Unit/my-account/src/pages/AccountsReceivable.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { \r\n//   Users, \r\n//   DollarSign, \r\n//   CreditCard, \r\n//   AlertTriangle, \r\n//   Clock, \r\n//   Plus, \r\n//   Search, \r\n//   Filter, \r\n//   Eye, \r\n//   Edit, \r\n//   Download,\r\n//   CheckCircle,\r\n//   XCircle,\r\n//   Calendar,\r\n//   FileText,\r\n//   TrendingUp,\r\n//   Mail,\r\n//   Phone\r\n// } from 'lucide-react';\r\n// import CreateInvoiceModal from '../components/CreateInvoiceModal';\r\n// import InvoiceModal from '../components/InvoiceModal';\r\n\r\n// const AccountsReceivable = () => {\r\n//   const [customers, setCustomers] = useState([]);\r\n//   const [invoices, setInvoices] = useState([]);\r\n//   const [payments, setPayments] = useState([]);\r\n//   const [selectedCustomer, setSelectedCustomer] = useState(null);\r\n//   const [activeTab, setActiveTab] = useState('overview');\r\n//   const [viewInvoice, setViewInvoice] = useState(null);\r\n \r\n//   const [filters, setFilters] = useState({\r\n//     customerType: 'all',\r\n//     status: 'all',\r\n//     dateRange: '30',\r\n//     searchTerm: ''\r\n//   });\r\n//   const handleCreateInvoice = () => {\r\n//   // Find the customer name for the invoice\r\n//   const customer = customers.find(c => c.id === newInvoice.customerId);\r\n//   if (!customer) {\r\n//     alert('Please select a customer');\r\n//     return;\r\n//   }\r\n//   // Generate a new invoice ID (simple example)\r\n//   const nextId = `INV-${new Date().getFullYear()}-${String(invoices.length + 1).padStart(3, '0')}`;\r\n//   const invoiceTotal = calculateInvoiceTotal();\r\n \r\n//   const newInvoiceData = {\r\n//     id: nextId,\r\n//     customerId: customer.id,\r\n//     customerName: customer.name,\r\n//     date: new Date().toISOString().slice(0, 10),\r\n//     dueDate: newInvoice.dueDate,\r\n//     amount: invoiceTotal,\r\n//     paid: 0,\r\n//     balance: invoiceTotal,\r\n//     status: 'outstanding',\r\n//     daysOverdue: 0,\r\n//     paymentTerms: customer.paymentTerms,\r\n//     items: newInvoice.items,\r\n//     notes: newInvoice.notes,\r\n//     source: 'manual'\r\n//   };\r\n \r\n//   // Append to invoices\r\n//   setInvoices(prev => [...prev, newInvoiceData]);\r\n \r\n//   // Optionally update customer AR data (totalOwed, invoiceCount, etc.)\r\n//   setCustomers(prev =>\r\n//     prev.map(c =>\r\n//       c.id === customer.id\r\n//         ? {\r\n//             ...c,\r\n//             totalOwed: c.totalOwed + invoiceTotal,\r\n//             invoiceCount: c.invoiceCount + 1\r\n//           }\r\n//         : c\r\n//     )\r\n//   );\r\n \r\n//   // Reset the form\r\n//   setNewInvoice({\r\n//     customerId: '',\r\n//     dueDate: '',\r\n//     items: [{ description: '', quantity: 1, price: 0, total: 0 }],\r\n//     notes: ''\r\n//   });\r\n \r\n//   setShowInvoiceForm(false);\r\n//   alert('Invoice created successfully!');\r\n// };\r\n \r\n//   // const handleCreateInvoice = (invoice) => {\r\n//   //   setInvoices(prev => [\r\n//   //     {\r\n//   //       ...invoice,\r\n//   //       id: `INV-${new Date().getFullYear()}-${String(prev.length + 1).padStart(3, '0')}`\r\n//   //     },\r\n//   //     ...prev\r\n//   //   ]);\r\n//   // };\r\n \r\n//   const [showInvoiceForm, setShowInvoiceForm] = useState(false);\r\n//   const [newInvoice, setNewInvoice] = useState({\r\n//     customerId: '',\r\n//     dueDate: '',\r\n//     items: [{ description: '', quantity: 1, price: 0, total: 0 }],\r\n//     notes: ''\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     loadSampleData();\r\n//   }, []);\r\n\r\n//   const loadSampleData = () => {\r\n//     // Sample Customers with AR data\r\n//     const sampleCustomers = [\r\n//       {\r\n//         id: 'CUST001',\r\n//         name: 'Al Noor Medical Center',\r\n//         email: 'finance@alnoor.com',\r\n//         phone: '+966-11-123-4567',\r\n//         address: 'King Fahd Road, Riyadh',\r\n//         customerType: 'corporate',\r\n//         creditLimit: 50000,\r\n//         paymentTerms: 30,\r\n//         totalOwed: 15750.00,\r\n//         overdueAmount: 5250.00,\r\n//         lastPayment: '2025-01-10',\r\n//         creditStatus: 'good',\r\n//         accountBalance: -15750.00,\r\n//         invoiceCount: 8,\r\n//         avgPaymentDays: 25\r\n//       },\r\n//       {\r\n//         id: 'CUST002',\r\n//         name: 'Dr. Ahmed Clinic',\r\n//         email: 'dr.ahmed@clinic.com',\r\n//         phone: '+966-12-987-6543',\r\n//         address: 'Prince Sultan Street, Jeddah',\r\n//         customerType: 'small_business',\r\n//         creditLimit: 20000,\r\n//         paymentTerms: 15,\r\n//         totalOwed: 8900.00,\r\n//         overdueAmount: 2100.00,\r\n//         lastPayment: '2025-01-12',\r\n//         creditStatus: 'watch',\r\n//         accountBalance: -8900.00,\r\n//         invoiceCount: 5,\r\n//         avgPaymentDays: 18\r\n//       },\r\n//       {\r\n//         id: 'CUST003',\r\n//         name: 'Pharmacy Plus Chain',\r\n//         email: 'accounts@pharmacyplus.sa',\r\n//         phone: '+966-13-555-0123',\r\n//         address: 'Al Khobar, Eastern Province',\r\n//         customerType: 'corporate',\r\n//         creditLimit: 75000,\r\n//         paymentTerms: 45,\r\n//         totalOwed: 32100.00,\r\n//         overdueAmount: 0,\r\n//         lastPayment: '2025-01-14',\r\n//         creditStatus: 'excellent',\r\n//         accountBalance: -32100.00,\r\n//         invoiceCount: 12,\r\n//         avgPaymentDays: 35\r\n//       },\r\n//       {\r\n//         id: 'CUST004',\r\n//         name: 'Walk-in Customer',\r\n//         email: 'cash@pos.system',\r\n//         phone: '+966-50-000-0000',\r\n//         address: 'Point of Sale',\r\n//         customerType: 'cash',\r\n//         creditLimit: 0,\r\n//         paymentTerms: 0,\r\n//         totalOwed: 0,\r\n//         overdueAmount: 0,\r\n//         lastPayment: '2025-01-15',\r\n//         creditStatus: 'cash_only',\r\n//         accountBalance: 0,\r\n//         invoiceCount: 0,\r\n//         avgPaymentDays: 0\r\n//       }\r\n//     ];\r\n\r\n//     // Sample Invoices\r\n//     const sampleInvoices = [\r\n//       {\r\n//         id: 'INV-2025-001',\r\n//         customerId: 'CUST001',\r\n//         customerName: 'Al Noor Medical Center',\r\n//         date: '2025-01-15',\r\n//         dueDate: '2025-02-14',\r\n//         amount: 5250.00,\r\n//         paid: 0,\r\n//         balance: 5250.00,\r\n//         status: 'outstanding',\r\n//         daysOverdue: 0,\r\n//         paymentTerms: 30,\r\n//         items: [\r\n//           { description: 'A2A 25MG TAB', quantity: 100, price: 15.00, total: 1500.00 },\r\n//           { description: 'AALBUMIN 50ML', quantity: 150, price: 25.00, total: 3750.00 }\r\n//         ],\r\n//         notes: 'Monthly medical supplies order',\r\n//         source: 'manual'\r\n//       },\r\n//       {\r\n//         id: 'INV-2025-002',\r\n//         customerId: 'CUST002',\r\n//         customerName: 'Dr. Ahmed Clinic',\r\n//         date: '2025-01-10',\r\n//         dueDate: '2025-01-25',\r\n//         amount: 2100.00,\r\n//         paid: 0,\r\n//         balance: 2100.00,\r\n//         status: 'overdue',\r\n//         daysOverdue: 5,\r\n//         paymentTerms: 15,\r\n//         items: [\r\n//           { description: 'ABAKTAL INJ', quantity: 50, price: 30.00, total: 1500.00 },\r\n//           { description: 'AARAM PLUS', quantity: 20, price: 30.00, total: 600.00 }\r\n//         ],\r\n//         notes: 'Urgent medical supplies',\r\n//         source: 'pos'\r\n//       },\r\n//       {\r\n//         id: 'POS-2025-003',\r\n//         customerId: 'CUST001',\r\n//         customerName: 'Al Noor Medical Center',\r\n//         date: '2025-01-12',\r\n//         dueDate: '2025-02-11',\r\n//         amount: 1850.00,\r\n//         paid: 1850.00,\r\n//         balance: 0,\r\n//         status: 'paid',\r\n//         daysOverdue: 0,\r\n//         paymentTerms: 30,\r\n//         items: [\r\n//           { description: 'Medical supplies - POS Sale', quantity: 1, price: 1850.00, total: 1850.00 }\r\n//         ],\r\n//         notes: 'Direct POS sale - Credit account',\r\n//         source: 'pos'\r\n//       }\r\n//     ];\r\n\r\n//     // Sample Payments\r\n//     const samplePayments = [\r\n//       {\r\n//         id: 'PAY001',\r\n//         customerId: 'CUST001',\r\n//         customerName: 'Al Noor Medical Center',\r\n//         invoiceId: 'POS-2025-003',\r\n//         date: '2025-01-14',\r\n//         amount: 1850.00,\r\n//         method: 'bank_transfer',\r\n//         reference: 'TXN123456789',\r\n//         status: 'cleared',\r\n//         notes: 'Payment for POS sale'\r\n//       },\r\n//       {\r\n//         id: 'PAY002',\r\n//         customerId: 'CUST003',\r\n//         customerName: 'Pharmacy Plus Chain',\r\n//         invoiceId: 'INV-2024-045',\r\n//         date: '2025-01-12',\r\n//         amount: 15600.00,\r\n//         method: 'check',\r\n//         reference: 'CHK-789123',\r\n//         status: 'cleared',\r\n//         notes: 'December invoice payment'\r\n//       }\r\n//     ];\r\n\r\n//     setCustomers(sampleCustomers);\r\n//     setInvoices(sampleInvoices);\r\n//     setPayments(samplePayments);\r\n//   };\r\n\r\n//   const calculateARSummary = () => {\r\n//     const totalAR = customers.reduce((sum, customer) => sum + customer.totalOwed, 0);\r\n//     const totalOverdue = customers.reduce((sum, customer) => sum + customer.overdueAmount, 0);\r\n//     const customersWithBalance = customers.filter(customer => customer.totalOwed > 0).length;\r\n//     const avgDaysOutstanding = customers.reduce((sum, customer) => sum + customer.avgPaymentDays, 0) / customers.length;\r\n\r\n//     return {\r\n//       totalAR,\r\n//       totalOverdue,\r\n//       customersWithBalance,\r\n//       avgDaysOutstanding: Math.round(avgDaysOutstanding)\r\n//     };\r\n//   };\r\n\r\n//   const getAgingData = () => {\r\n//     const aging = {\r\n//       current: 0,\r\n//       days30: 0,\r\n//       days60: 0,\r\n//       days90: 0,\r\n//       over90: 0\r\n//     };\r\n\r\n//     invoices.forEach(invoice => {\r\n//       if (invoice.status === 'paid') return;\r\n      \r\n//       const daysPastDue = invoice.daysOverdue || 0;\r\n      \r\n//       if (daysPastDue <= 0) {\r\n//         aging.current += invoice.balance;\r\n//       } else if (daysPastDue <= 30) {\r\n//         aging.days30 += invoice.balance;\r\n//       } else if (daysPastDue <= 60) {\r\n//         aging.days60 += invoice.balance;\r\n//       } else if (daysPastDue <= 90) {\r\n//         aging.days90 += invoice.balance;\r\n//       } else {\r\n//         aging.over90 += invoice.balance;\r\n//       }\r\n//     });\r\n\r\n//     return aging;\r\n//   };\r\n\r\n//   const getFilteredCustomers = () => {\r\n//     let filtered = [...customers];\r\n\r\n//     if (filters.customerType !== 'all') {\r\n//       filtered = filtered.filter(customer => customer.customerType === filters.customerType);\r\n//     }\r\n\r\n//     if (filters.status !== 'all') {\r\n//       filtered = filtered.filter(customer => {\r\n//         if (filters.status === 'overdue') return customer.overdueAmount > 0;\r\n//         if (filters.status === 'current') return customer.totalOwed > 0 && customer.overdueAmount === 0;\r\n//         if (filters.status === 'paid_up') return customer.totalOwed === 0;\r\n//         return true;\r\n//       });\r\n//     }\r\n\r\n//     if (filters.searchTerm) {\r\n//       const term = filters.searchTerm.toLowerCase();\r\n//       filtered = filtered.filter(customer =>\r\n//         customer.name.toLowerCase().includes(term) ||\r\n//         customer.email.toLowerCase().includes(term) ||\r\n//         customer.id.toLowerCase().includes(term)\r\n//       );\r\n//     }\r\n\r\n//     return filtered;\r\n//   };\r\n\r\n//   const getCreditStatusColor = (status) => {\r\n//     switch (status) {\r\n//       case 'excellent': return 'bg-green-100 text-green-800';\r\n//       case 'good': return 'bg-blue-100 text-blue-800';\r\n//       case 'watch': return 'bg-yellow-100 text-yellow-800';\r\n//       case 'hold': return 'bg-red-100 text-red-800';\r\n//       case 'cash_only': return 'bg-gray-100 text-gray-800';\r\n//       default: return 'bg-gray-100 text-gray-800';\r\n//     }\r\n//   };\r\n\r\n//   const getInvoiceStatusColor = (status) => {\r\n//     switch (status) {\r\n//       case 'paid': return 'bg-green-100 text-green-800';\r\n//       case 'outstanding': return 'bg-blue-100 text-blue-800';\r\n//       case 'overdue': return 'bg-red-100 text-red-800';\r\n//       case 'partial': return 'bg-yellow-100 text-yellow-800';\r\n//       default: return 'bg-gray-100 text-gray-800';\r\n//     }\r\n//   };\r\n\r\n//   const addInvoiceItem = () => {\r\n//     setNewInvoice({\r\n//       ...newInvoice,\r\n//       items: [...newInvoice.items, { description: '', quantity: 1, price: 0, total: 0 }]\r\n//     });\r\n//   };\r\n\r\n//   const updateInvoiceItem = (index, field, value) => {\r\n//     const updatedItems = [...newInvoice.items];\r\n//     updatedItems[index] = { ...updatedItems[index], [field]: value };\r\n    \r\n//     if (field === 'quantity' || field === 'price') {\r\n//       updatedItems[index].total = updatedItems[index].quantity * updatedItems[index].price;\r\n//     }\r\n    \r\n//     setNewInvoice({ ...newInvoice, items: updatedItems });\r\n//   };\r\n\r\n//   const calculateInvoiceTotal = () => {\r\n//     return newInvoice.items.reduce((sum, item) => sum + item.total, 0);\r\n//   };\r\n\r\n//   const summary = calculateARSummary();\r\n//   const aging = getAgingData();\r\n//   const filteredCustomers = getFilteredCustomers();\r\n\r\n//   return (\r\n//     <div className=\"max-w-7xl mx-auto p-6 bg-white\">\r\n//       {/* Header */}\r\n//       <div className=\"mb-8\">\r\n//         <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\r\n//           <CreditCard className=\"mr-3 text-emerald-600\" />\r\n//           Accounts Receivable\r\n//         </h1>\r\n//         <p className=\"text-gray-600\">Manage customer invoicing, payments, and credit limits</p>\r\n//       </div>\r\n\r\n//       {/* Summary Cards */}\r\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\r\n//         <div className=\"bg-blue-50 p-6 rounded-lg border border-blue-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-blue-600 text-sm font-medium\">Total A/R</p>\r\n//               <p className=\"text-2xl font-bold text-blue-900\">${summary.totalAR.toFixed(2)}</p>\r\n//             </div>\r\n//             <DollarSign className=\"text-blue-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-blue-700 mt-2\">{summary.customersWithBalance} customers with balances</p>\r\n//         </div>\r\n\r\n//         <div className=\"bg-red-50 p-6 rounded-lg border border-red-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-red-600 text-sm font-medium\">Overdue Amount</p>\r\n//               <p className=\"text-2xl font-bold text-red-900\">${summary.totalOverdue.toFixed(2)}</p>\r\n//             </div>\r\n//             <AlertTriangle className=\"text-red-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-red-700 mt-2\">\r\n//             {((summary.totalOverdue / summary.totalAR) * 100).toFixed(1)}% of total A/R\r\n//           </p>\r\n//         </div>\r\n\r\n//         <div className=\"bg-green-50 p-6 rounded-lg border border-green-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-green-600 text-sm font-medium\">Avg. Days Outstanding</p>\r\n//               <p className=\"text-2xl font-bold text-green-900\">{summary.avgDaysOutstanding}</p>\r\n//             </div>\r\n//             <Clock className=\"text-green-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-green-700 mt-2\">Collection performance</p>\r\n//         </div>\r\n\r\n//         <div className=\"bg-purple-50 p-6 rounded-lg border border-purple-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-purple-600 text-sm font-medium\">Active Customers</p>\r\n//               <p className=\"text-2xl font-bold text-purple-900\">{customers.length}</p>\r\n//             </div>\r\n//             <Users className=\"text-purple-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-purple-700 mt-2\">Total customer accounts</p>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Tabs */}\r\n//       <div className=\"mb-6\">\r\n//         <div className=\"border-b border-gray-200\">\r\n//           <nav className=\"-mb-px flex space-x-8\">\r\n//             {[\r\n//               { id: 'overview', name: 'Customer Overview', icon: Users },\r\n//               { id: 'invoices', name: 'Invoices', icon: FileText },\r\n//               { id: 'aging', name: 'Aging Report', icon: Clock },\r\n//               { id: 'payments', name: 'Payments', icon: CheckCircle }\r\n//             ].map((tab) => (\r\n//               <button\r\n//                 key={tab.id}\r\n//                 onClick={() => setActiveTab(tab.id)}\r\n//                 className={`flex items-center py-2 px-1 border-b-2 font-medium text-sm ${\r\n//                   activeTab === tab.id\r\n//                     ? 'border-emerald-500 text-emerald-600'\r\n//                     : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n//                 }`}\r\n//               >\r\n//                 <tab.icon className=\"mr-2\" size={16} />\r\n//                 {tab.name}\r\n//               </button>\r\n//             ))}\r\n//           </nav>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Tab Content */}\r\n//       {activeTab === 'overview' && (\r\n//         <div>\r\n//           {/* Filters */}\r\n//           <div className=\"flex flex-wrap items-center gap-4 mb-6\">\r\n//             <div className=\"relative\">\r\n//               <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n//               <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Search customers...\"\r\n//                 value={filters.searchTerm}\r\n//                 onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\r\n//                 className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               />\r\n//             </div>\r\n\r\n//             <select\r\n//               value={filters.customerType}\r\n//               onChange={(e) => setFilters({ ...filters, customerType: e.target.value })}\r\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//             >\r\n//               <option value=\"all\">All Customer Types</option>\r\n//               <option value=\"corporate\">Corporate</option>\r\n//               <option value=\"small_business\">Small Business</option>\r\n//               <option value=\"individual\">Individual</option>\r\n//               <option value=\"cash\">Cash Only</option>\r\n//             </select>\r\n\r\n//             <select\r\n//               value={filters.status}\r\n//               onChange={(e) => setFilters({ ...filters, status: e.target.value })}\r\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//             >\r\n//               <option value=\"all\">All Statuses</option>\r\n//               <option value=\"current\">Current</option>\r\n//               <option value=\"overdue\">Overdue</option>\r\n//               <option value=\"paid_up\">Paid Up</option>\r\n//             </select>\r\n\r\n//             <button\r\n//               onClick={() => setShowInvoiceForm(true)}\r\n//               className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\r\n//             >\r\n//               <Plus size={16} />\r\n//               <span>New Invoice</span>\r\n//             </button>\r\n//           </div>\r\n\r\n//           {/* Customer List */}\r\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//             <div className=\"overflow-x-auto\">\r\n//               <table className=\"w-full\">\r\n//                 <thead className=\"bg-gray-50\">\r\n//                   <tr>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Customer\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Type\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Credit Limit\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Balance\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Overdue\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Credit Status\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Last Payment\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Actions\r\n//                     </th>\r\n//                   </tr>\r\n//                 </thead>\r\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//                   {filteredCustomers.map((customer) => (\r\n//                     <tr key={customer.id} className=\"hover:bg-gray-50\">\r\n//                       <td className=\"px-6 py-4\">\r\n//                         <div>\r\n//                           <div className=\"text-sm font-medium text-gray-900\">{customer.name}</div>\r\n//                           <div className=\"text-sm text-gray-500\">{customer.id}</div>\r\n//                           <div className=\"text-xs text-gray-400 flex items-center mt-1\">\r\n//                             <Mail className=\"mr-1\" size={12} />\r\n//                             {customer.email}\r\n//                           </div>\r\n//                         </div>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-gray-100 text-gray-800\">\r\n//                           {customer.customerType.replace('_', ' ')}\r\n//                         </span>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         ${customer.creditLimit.toLocaleString()}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <div className=\"text-sm font-medium text-gray-900\">\r\n//                           ${customer.totalOwed.toFixed(2)}\r\n//                         </div>\r\n//                         <div className=\"text-xs text-gray-500\">\r\n//                           {customer.invoiceCount} invoices\r\n//                         </div>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         {customer.overdueAmount > 0 ? (\r\n//                           <span className=\"text-red-600 font-medium\">\r\n//                             ${customer.overdueAmount.toFixed(2)}\r\n//                           </span>\r\n//                         ) : (\r\n//                           <span className=\"text-green-600\">$0.00</span>\r\n//                         )}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(customer.creditStatus)}`}>\r\n//                           {customer.creditStatus.replace('_', ' ')}\r\n//                         </span>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {customer.lastPayment}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n//                         <button\r\n//                           onClick={() => setSelectedCustomer(customer)}\r\n//                           className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\r\n//                         >\r\n//                           <Eye size={16} />\r\n//                         </button>\r\n//                         <button className=\"text-blue-600 hover:text-blue-900\">\r\n//                           <Edit size={16} />\r\n//                         </button>\r\n//                       </td>\r\n//                     </tr>\r\n//                   ))}\r\n//                 </tbody>\r\n//               </table>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {activeTab === 'aging' && (\r\n//         <div>\r\n//           <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n//             {/* Aging Summary */}\r\n//             <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Aging Summary</h3>\r\n//               <div className=\"space-y-4\">\r\n//                 <div className=\"flex justify-between items-center p-3 bg-green-50 rounded\">\r\n//                   <span className=\"font-medium text-green-800\">Current (0-30 days)</span>\r\n//                   <span className=\"font-bold text-green-900\">${aging.current.toFixed(2)}</span>\r\n//                 </div>\r\n//                 <div className=\"flex justify-between items-center p-3 bg-yellow-50 rounded\">\r\n//                   <span className=\"font-medium text-yellow-800\">31-60 days</span>\r\n//                   <span className=\"font-bold text-yellow-900\">${aging.days30.toFixed(2)}</span>\r\n//                 </div>\r\n//                 <div className=\"flex justify-between items-center p-3 bg-orange-50 rounded\">\r\n//                   <span className=\"font-medium text-orange-800\">61-90 days</span>\r\n//                   <span className=\"font-bold text-orange-900\">${aging.days60.toFixed(2)}</span>\r\n//                 </div>\r\n//                 <div className=\"flex justify-between items-center p-3 bg-red-50 rounded\">\r\n//                   <span className=\"font-medium text-red-800\">Over 90 days</span>\r\n//                   <span className=\"font-bold text-red-900\">${aging.over90.toFixed(2)}</span>\r\n//                 </div>\r\n//               </div>\r\n//               <div className=\"mt-4 pt-4 border-t\">\r\n//                 <div className=\"flex justify-between items-center\">\r\n//                   <span className=\"text-lg font-semibold text-gray-900\">Total Outstanding</span>\r\n//                   <span className=\"text-xl font-bold text-gray-900\">\r\n//                     ${(aging.current + aging.days30 + aging.days60 + aging.days90 + aging.over90).toFixed(2)}\r\n//                   </span>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n\r\n//             {/* Collection Priority */}\r\n//             <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Collection Priority</h3>\r\n//               <div className=\"space-y-3\">\r\n//                 {customers\r\n//                   .filter(customer => customer.overdueAmount > 0)\r\n//                   .sort((a, b) => b.overdueAmount - a.overdueAmount)\r\n//                   .slice(0, 5)\r\n//                   .map((customer, index) => (\r\n//                     <div key={customer.id} className=\"flex items-center justify-between p-3 bg-red-50 rounded\">\r\n//                       <div>\r\n//                         <div className=\"font-medium text-gray-900\">{customer.name}</div>\r\n//                         <div className=\"text-sm text-gray-500\">\r\n//                           Last payment: {customer.lastPayment}\r\n//                         </div>\r\n//                       </div>\r\n//                       <div className=\"text-right\">\r\n//                         <div className=\"font-bold text-red-900\">${customer.overdueAmount.toFixed(2)}</div>\r\n//                         <div className=\"text-xs text-red-700\">#{index + 1} Priority</div>\r\n//                       </div>\r\n//                     </div>\r\n//                   ))}\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {activeTab === 'invoices' && (\r\n//         <div>\r\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-900\">Recent Invoices</h3>\r\n//             </div>\r\n//             <div className=\"overflow-x-auto\">\r\n//               <table className=\"w-full\">\r\n//                 <thead className=\"bg-gray-50\">\r\n//                   <tr>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Invoice #\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Customer\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Date\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Due Date\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Amount\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Balance\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Status\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Actions\r\n//                     </th>\r\n//                   </tr>\r\n//                 </thead>\r\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//                   {invoices.map((invoice) => (\r\n//                     <tr key={invoice.id} className=\"hover:bg-gray-50\">\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <div className=\"text-sm font-medium text-gray-900\">{invoice.id}</div>\r\n//                         <div className=\"text-xs text-gray-500\">{invoice.source}</div>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4\">\r\n//                         <div className=\"text-sm font-medium text-gray-900\">{invoice.customerName}</div>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {invoice.date}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {invoice.dueDate}\r\n//                         {invoice.daysOverdue > 0 && (\r\n//                           <div className=\"text-xs text-red-600\">\r\n//                             {invoice.daysOverdue} days overdue\r\n//                           </div>\r\n//                         )}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         ${invoice.amount.toFixed(2)}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n//                         {invoice.balance > 0 ? (\r\n//                           <span className=\"text-red-600\">${invoice.balance.toFixed(2)}</span>\r\n//                         ) : (\r\n//                           <span className=\"text-green-600\">$0.00</span>\r\n//                         )}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${getInvoiceStatusColor(invoice.status)}`}>\r\n//                           {invoice.status}\r\n//                         </span>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n//                           <button\r\n//                               className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\r\n//                               onClick={() => setViewInvoice(invoice)}\r\n//                             >\r\n//                               <Eye size={16} />\r\n//                             </button>\r\n//                         <button className=\"text-blue-600 hover:text-blue-900\">\r\n//                           <Download size={16} />\r\n//                         </button>\r\n//                       </td>\r\n//                     </tr>\r\n//                   ))}\r\n//                 </tbody>\r\n//               </table>\r\n//             </div>\r\n//           </div>\r\n//           {/* View Invoice Modal */}\r\n//           <InvoiceModal\r\n//             invoice={viewInvoice}\r\n//             onClose={() => setViewInvoice(null)}\r\n//           />\r\n//         </div>\r\n//       )}\r\n \r\n//       {/* Create Invoice Modal */}\r\n//       {showInvoiceForm && (\r\n//         <CreateInvoiceModal\r\n//           customers={customers}\r\n//           onClose={() => setShowInvoiceForm(false)}\r\n//           onCreate={handleCreateInvoice}\r\n//         />\r\n        \r\n//       )}\r\n\r\n//       {activeTab === 'payments' && (\r\n//         <div>\r\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-900\">Recent Payments</h3>\r\n//             </div>\r\n//             <div className=\"overflow-x-auto\">\r\n//               <table className=\"w-full\">\r\n//                 <thead className=\"bg-gray-50\">\r\n//                   <tr>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Payment ID\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Customer\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Invoice\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Date\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Amount\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Method\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Status\r\n//                     </th>\r\n//                   </tr>\r\n//                 </thead>\r\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//                   {payments.map((payment) => (\r\n//                     <tr key={payment.id} className=\"hover:bg-gray-50\">\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n//                         {payment.id}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {payment.customerName}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {payment.invoiceId}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {payment.date}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         ${payment.amount.toFixed(2)}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-blue-100 text-blue-800\">\r\n//                           {payment.method.replace('_', ' ')}\r\n//                         </span>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                           payment.status === 'cleared' ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n//                         }`}>\r\n//                           {payment.status}\r\n//                         </span>\r\n//                       </td>\r\n//                     </tr>\r\n//                   ))}\r\n//                 </tbody>\r\n//               </table>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Customer Detail Modal */}\r\n//       {selectedCustomer && (\r\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\r\n//                   Customer Details - {selectedCustomer.name}\r\n//                 </h3>\r\n//                 <button\r\n//                   onClick={() => setSelectedCustomer(null)}\r\n//                   className=\"text-gray-400 hover:text-gray-600\"\r\n//                 >\r\n//                   <XCircle size={20} />\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <div className=\"px-6 py-4\">\r\n//               {/* Customer Info Grid */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n//                 <div className=\"space-y-4\">\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer ID</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.id}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Email</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.email}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Phone</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.phone}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Address</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.address}</p>\r\n//                   </div>\r\n//                 </div>\r\n                \r\n//                 <div className=\"space-y-4\">\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer Type</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.customerType.replace('_', ' ')}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Limit</label>\r\n//                     <p className=\"text-sm text-gray-900\">${selectedCustomer.creditLimit.toLocaleString()}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Payment Terms</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.paymentTerms} days</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Status</label>\r\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(selectedCustomer.creditStatus)}`}>\r\n//                       {selectedCustomer.creditStatus.replace('_', ' ')}\r\n//                     </span>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Financial Summary */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\r\n//                 <div className=\"bg-blue-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-blue-600\">Current Balance</div>\r\n//                   <div className=\"text-xl font-bold text-blue-900\">\r\n//                     ${selectedCustomer.totalOwed.toFixed(2)}\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"bg-red-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-red-600\">Overdue Amount</div>\r\n//                   <div className=\"text-xl font-bold text-red-900\">\r\n//                     ${selectedCustomer.overdueAmount.toFixed(2)}\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"bg-green-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-green-600\">Credit Available</div>\r\n//                   <div className=\"text-xl font-bold text-green-900\">\r\n//                     ${(selectedCustomer.creditLimit - selectedCustomer.totalOwed).toFixed(2)}\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"bg-purple-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-purple-600\">Avg Payment Days</div>\r\n//                   <div className=\"text-xl font-bold text-purple-900\">\r\n//                     {selectedCustomer.avgPaymentDays}\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Customer Invoices */}\r\n//               <div className=\"mb-6\">\r\n//                 <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Customer Invoices</h4>\r\n//                 <div className=\"overflow-x-auto\">\r\n//                   <table className=\"w-full border border-gray-200 rounded\">\r\n//                     <thead className=\"bg-gray-50\">\r\n//                       <tr>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Invoice</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Date</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Due Date</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Amount</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Balance</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Status</th>\r\n//                       </tr>\r\n//                     </thead>\r\n//                     <tbody className=\"divide-y divide-gray-200\">\r\n//                       {invoices\r\n//                         .filter(inv => inv.customerId === selectedCustomer.id)\r\n//                         .map((invoice) => (\r\n//                           <tr key={invoice.id}>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{invoice.id}</td>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{invoice.date}</td>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{invoice.dueDate}</td>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">${invoice.amount.toFixed(2)}</td>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">${invoice.balance.toFixed(2)}</td>\r\n//                             <td className=\"px-4 py-2\">\r\n//                               <span className={`px-2 py-1 text-xs font-medium rounded-full ${getInvoiceStatusColor(invoice.status)}`}>\r\n//                                 {invoice.status}\r\n//                               </span>\r\n//                             </td>\r\n//                           </tr>\r\n//                         ))}\r\n//                     </tbody>\r\n//                   </table>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Action Buttons */}\r\n//               <div className=\"flex space-x-3\">\r\n//                 <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\r\n//                   <Plus size={16} />\r\n//                   <span>New Invoice</span>\r\n//                 </button>\r\n//                 <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\r\n//                   <CheckCircle size={16} />\r\n//                   <span>Record Payment</span>\r\n//                 </button>\r\n//                 <button className=\"px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 flex items-center space-x-2\">\r\n//                   <Mail size={16} />\r\n//                   <span>Send Statement</span>\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* New Invoice Form */}\r\n//       {showInvoiceForm && (\r\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">Create New Invoice</h3>\r\n//                 <button\r\n//                   onClick={() => setShowInvoiceForm(false)}\r\n//                   className=\"text-gray-400 hover:text-gray-600\"\r\n//                 >\r\n//                   <XCircle size={20} />\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <div className=\"px-6 py-4\">\r\n//               {/* Invoice Header */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\r\n//                 <div>\r\n//                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">Customer *</label>\r\n//                   <select\r\n//                     value={newInvoice.customerId}\r\n//                     onChange={(e) => setNewInvoice({ ...newInvoice, customerId: e.target.value })}\r\n//                     className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//                   >\r\n//                     <option value=\"\">Select Customer</option>\r\n//                     {customers.filter(c => c.customerType !== 'cash').map(customer => (\r\n//                       <option key={customer.id} value={customer.id}>\r\n//                         {customer.name} ({customer.id})\r\n//                       </option>\r\n//                     ))}\r\n//                   </select>\r\n//                 </div>\r\n//                 <div>\r\n//                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">Due Date *</label>\r\n//                   <input\r\n//                     type=\"date\"\r\n//                     value={newInvoice.dueDate}\r\n//                     onChange={(e) => setNewInvoice({ ...newInvoice, dueDate: e.target.value })}\r\n//                     className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//                   />\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Invoice Items */}\r\n//               <div className=\"mb-6\">\r\n//                 <label className=\"block text-sm font-medium text-gray-700 mb-2\">Invoice Items</label>\r\n//                 <div className=\"space-y-3\">\r\n//                   {newInvoice.items.map((item, index) => (\r\n//                     <div key={index} className=\"grid grid-cols-12 gap-2 items-center bg-gray-50 p-3 rounded\">\r\n//                       <div className=\"col-span-5\">\r\n//                         <input\r\n//                           type=\"text\"\r\n//                           value={item.description}\r\n//                           onChange={(e) => updateInvoiceItem(index, 'description', e.target.value)}\r\n//                           placeholder=\"Item description\"\r\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                         />\r\n//                       </div>\r\n//                       <div className=\"col-span-2\">\r\n//                         <input\r\n//                           type=\"number\"\r\n//                           value={item.quantity}\r\n//                           onChange={(e) => updateInvoiceItem(index, 'quantity', parseFloat(e.target.value) || 0)}\r\n//                           placeholder=\"Qty\"\r\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                         />\r\n//                       </div>\r\n//                       <div className=\"col-span-2\">\r\n//                         <input\r\n//                           type=\"number\"\r\n//                           step=\"0.01\"\r\n//                           value={item.price}\r\n//                           onChange={(e) => updateInvoiceItem(index, 'price', parseFloat(e.target.value) || 0)}\r\n//                           placeholder=\"Price\"\r\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                         />\r\n//                       </div>\r\n//                       <div className=\"col-span-2\">\r\n//                         <input\r\n//                           type=\"number\"\r\n//                           step=\"0.01\"\r\n//                           value={item.total}\r\n//                           readOnly\r\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm bg-gray-100\"\r\n//                         />\r\n//                       </div>\r\n//                       <div className=\"col-span-1\">\r\n//                         {newInvoice.items.length > 1 && (\r\n//                           <button\r\n//                             onClick={() => {\r\n//                               const updatedItems = newInvoice.items.filter((_, i) => i !== index);\r\n//                               setNewInvoice({ ...newInvoice, items: updatedItems });\r\n//                             }}\r\n//                             className=\"p-1 text-red-600 hover:bg-red-100 rounded\"\r\n//                           >\r\n//                             <XCircle size={14} />\r\n//                           </button>\r\n//                         )}\r\n//                       </div>\r\n//                     </div>\r\n//                   ))}\r\n//                 </div>\r\n\r\n//                 <div className=\"flex justify-between items-center mt-3\">\r\n//                   <button\r\n//                     onClick={addInvoiceItem}\r\n//                     className=\"px-3 py-1 text-sm bg-emerald-100 text-emerald-700 rounded hover:bg-emerald-200 flex items-center space-x-1\"\r\n//                   >\r\n//                     <Plus size={14} />\r\n//                     <span>Add Item</span>\r\n//                   </button>\r\n\r\n//                   <div className=\"text-lg font-semibold\">\r\n//                     Total: ${calculateInvoiceTotal().toFixed(2)}\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Notes */}\r\n//               <div className=\"mb-6\">\r\n//                 <label className=\"block text-sm font-medium text-gray-700 mb-1\">Notes</label>\r\n//                 <textarea\r\n//                   value={newInvoice.notes}\r\n//                   onChange={(e) => setNewInvoice({ ...newInvoice, notes: e.target.value })}\r\n//                   rows={3}\r\n//                   placeholder=\"Additional notes...\"\r\n//                   className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//                 />\r\n//               </div>\r\n\r\n//               {/* Action Buttons */}\r\n//               <div className=\"flex space-x-3\">\r\n//                 <button\r\n//                   onClick={() => {\r\n//                     handleCreateInvoice()\r\n \r\n//                     // Save invoice logic would go here\r\n//                     alert('Invoice created successfully!');\r\n//                   //  setShowInvoiceForm(false);\r\n//                   }}\r\n//                   className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\r\n//                 >\r\n//                   <CheckCircle size={16} />\r\n//                   <span>Create Invoice</span>\r\n//                 </button>\r\n//                 <button\r\n//                   onClick={() => setShowInvoiceForm(false)}\r\n//                   className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\"\r\n//                 >\r\n//                   <XCircle size={16} />\r\n//                   <span>Cancel</span>\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Integration Status */}\r\n//       <div className=\"mt-8 p-6 bg-green-50 border border-green-200 rounded-lg\">\r\n//         <div className=\"flex items-center mb-4\">\r\n//           <CheckCircle className=\"text-green-600 mr-2\" size={20} />\r\n//           <h3 className=\"font-medium text-green-800\">POS Integration Active</h3>\r\n//         </div>\r\n//         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm text-green-700\">\r\n//           <div>\r\n//             <strong>Credit Sales:</strong> Automatically create AR entries when customers buy on credit in POS\r\n//           </div>\r\n//           <div>\r\n//             <strong>Customer Limits:</strong> POS checks credit limits before allowing credit sales\r\n//           </div>\r\n//           <div>\r\n//             <strong>Real-time Updates:</strong> Customer balances update instantly with each transaction\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AccountsReceivable;\r\n\r\n\r\n//correct\r\n// import React, { useState, useEffect } from 'react';\r\n// import { \r\n//   Users, \r\n//   DollarSign, \r\n//   CreditCard, \r\n//   AlertTriangle, \r\n//   Clock, \r\n//   Plus, \r\n//   Search, \r\n//   Filter, \r\n//   Eye, \r\n//   Edit, \r\n//   Download,\r\n//   CheckCircle,\r\n//   XCircle,\r\n//   Calendar,\r\n//   FileText,\r\n//   TrendingUp,\r\n//   Mail,\r\n//   Phone,\r\n//   Printer,\r\n//   Send\r\n// } from 'lucide-react';\r\n\r\n// const AccountsReceivable = () => {\r\n//   const [customers, setCustomers] = useState([]);\r\n//   const [invoices, setInvoices] = useState([]);\r\n//   const [payments, setPayments] = useState([]);\r\n//   const [selectedCustomer, setSelectedCustomer] = useState(null);\r\n//   const [activeTab, setActiveTab] = useState('overview');\r\n//   const [viewInvoice, setViewInvoice] = useState(null);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [salesOrders, setSalesOrders] = useState([]);\r\n  \r\n//   const [filters, setFilters] = useState({\r\n//     customerType: 'all',\r\n//     status: 'all',\r\n//     dateRange: '30',\r\n//     searchTerm: ''\r\n//   });\r\n\r\n//   const [showInvoiceForm, setShowInvoiceForm] = useState(false);\r\n//   const [newInvoice, setNewInvoice] = useState({\r\n//     customerId: '',\r\n//     dueDate: '',\r\n//     items: [{ description: '', quantity: 1, price: 0, total: 0 }],\r\n//     notes: ''\r\n//   });\r\n\r\n//   // API Configuration\r\n//   const API_BASE_URL_SALES = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/orders?start=0&size=200';\r\n//   const API_CUSTOMERS='https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/customers?status=Active';\r\n//   // Fetch sales orders from API\r\n//   const fetchSalesOrders = async () => {\r\n//     setLoading(true);\r\n//     try {\r\n//       const response = await fetch(API_BASE_URL_SALES, {\r\n//         method: 'GET',\r\n//         headers: {\r\n//           'Authorization': 'Bearer Hamid',\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//       });\r\n      \r\n//       if (!response.ok) {\r\n//         throw new Error(`API request failed with status ${response.status}`);\r\n//       }\r\n      \r\n//       const data = await response.json();\r\n//       setSalesOrders(data);\r\n//       processARData(data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching sales orders:', error);\r\n//       // Load sample data as fallback\r\n//       loadSampleData();\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   // Fetch both sales orders and customers from API\r\n// const fetchData = async () => {\r\n//   setLoading(true);\r\n//   try {\r\n//     // Fetch both data sources in parallel\r\n//     const [ordersResponse, customersResponse] = await Promise.all([\r\n//       fetch(API_BASE_URL_SALES, {\r\n//         method: 'GET',\r\n//         headers: {\r\n//           'Authorization': 'Bearer Hamid',\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//       }),\r\n//       fetch(API_CUSTOMERS, {\r\n//         method: 'GET',\r\n//         headers: {\r\n//           'Authorization': 'Bearer Hamid',\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//       })\r\n//     ]);\r\n    \r\n//     if (!ordersResponse.ok || !customersResponse.ok) {\r\n//       throw new Error(`API request failed with status ${ordersResponse.status}/${customersResponse.status}`);\r\n//     }\r\n    \r\n//     const ordersData = await ordersResponse.json();\r\n//     const customersData = await customersResponse.json();\r\n    \r\n//     setSalesOrders(ordersData);\r\n//     processARData(ordersData, customersData);\r\n//   } catch (error) {\r\n//     console.error('Error fetching data:', error);\r\n//     // Load sample data as fallback\r\n//     loadSampleData();\r\n//   } finally {\r\n//     setLoading(false);\r\n//   }\r\n// };\r\n\r\n//   // // Process API data to create AR entries\r\n//   const processARData = (orders) => {\r\n//     // Group orders by customer and create customer records\r\n//     const customerMap = new Map();\r\n//     const invoiceList = [];\r\n//     const paymentList = [];\r\n\r\n//     orders.forEach(order => {\r\n//       // Skip draft orders\r\n//       if (order.draft) return;\r\n\r\n//       // Extract customer info (using orderId as customer identifier for now)\r\n//       const customerId = order.customerId || `CUST-${order.orderId}`;\r\n      \r\n//       if (!customerMap.has(customerId)) {\r\n//         customerMap.set(customerId, {\r\n//           id: customerId,\r\n//           name: order.customerName || `Customer ${customers}`,\r\n//           email: order.customerEmail || 'customer@example.com',\r\n//           phone: order.customerPhone || '+966-50-000-0000',\r\n//           address: order.customerAddress || 'Saudi Arabia',\r\n//           customerType: order.paymentMethod === 'cash' ? 'cash' : 'credit',\r\n//           creditLimit: 50000, // Default credit limit\r\n//           paymentTerms: 30,\r\n//           totalOwed: 0,\r\n//           overdueAmount: 0,\r\n//           lastPayment: null,\r\n//           creditStatus: 'good',\r\n//           accountBalance: 0,\r\n//           invoiceCount: 0,\r\n//           avgPaymentDays: 0\r\n//         });\r\n//       }\r\n//       console.log('customerMap',customerMap);\r\n\r\n//       // Create invoice from order\r\n//       const invoice = {\r\n//         id: `INV-${order.orderId}`,\r\n//         customerId: customerId,\r\n//         customerName: order.customerName || `Customer ${customerId}`,\r\n//         date: formatDate(order.createdAt),\r\n//         dueDate: calculateDueDate(order.createdAt, 30),\r\n//         amount: parseFloat(order.total) || 0,\r\n//         paid: order.paid ? parseFloat(order.total) : 0,\r\n//         balance: order.paid ? 0 : parseFloat(order.total) || 0,\r\n//         status: order.paid ? 'paid' : (isOverdue(order.createdAt, 30) ? 'overdue' : 'outstanding'),\r\n//         daysOverdue: calculateDaysOverdue(order.createdAt, 30),\r\n//         paymentTerms: 30,\r\n//         items: order.lineItems?.map(item => ({\r\n//           description: item.productName,\r\n//           quantity: item.quantity,\r\n//           price: item.price,\r\n//           total: item.total\r\n//         })) || [],\r\n//         notes: order.notes || '',\r\n//         source: 'pos'\r\n//       };\r\n\r\n//       invoiceList.push(invoice);\r\n\r\n//       // Update customer totals\r\n//       const customer = customerMap.get(customerId);\r\n//       if (!order.paid) {\r\n//         customer.totalOwed += invoice.balance;\r\n//         if (invoice.status === 'overdue') {\r\n//           customer.overdueAmount += invoice.balance;\r\n//         }\r\n//       }\r\n//       customer.invoiceCount++;\r\n\r\n//       // Create payment record if paid\r\n//       if (order.unpaid) {\r\n//         paymentList.push({\r\n//           id: `PAY-${order.orderId}`,\r\n//           customerId: customerId,\r\n//           customerName: order.customerName || `Customer ${customerId}`,\r\n//           invoiceId: invoice.id,\r\n//           date: formatDate(order.createdAt),\r\n//           amount: parseFloat(order.total),\r\n//           method: order.paymentMethod || 'cash',\r\n//           reference: `TXN-${order.orderId}`,\r\n//           status: 'cleared',\r\n//           notes: 'POS payment'\r\n//         });\r\n        \r\n//         customer.lastPayment = formatDate(order.createdAt);\r\n//       }\r\n//     });\r\n\r\n//     // Update credit status based on outstanding amounts\r\n//     customerMap.forEach(customer => {\r\n//       const utilizationRate = customer.totalOwed / customer.creditLimit;\r\n//       if (customer.overdueAmount > 0) {\r\n//         customer.creditStatus = 'watch';\r\n//       } else if (utilizationRate > 0.8) {\r\n//         customer.creditStatus = 'watch';\r\n//       } else if (utilizationRate > 0.5) {\r\n//         customer.creditStatus = 'good';\r\n//       } else {\r\n//         customer.creditStatus = 'excellent';\r\n//       }\r\n//     });\r\n\r\n//     setCustomers(Array.from(customerMap.values()));\r\n//     setInvoices(invoiceList);\r\n//     setPayments(paymentList);\r\n//   };\r\n\r\n//   // Helper functions\r\n//   const formatDate = (dateString) => {\r\n//     if (!dateString) return new Date().toISOString().split('T')[0];\r\n    \r\n//     // Handle the format \"2025.08.18.10.08.54.569\"\r\n//     const parts = dateString.split('.');\r\n//     if (parts.length >= 3) {\r\n//       return `${parts[0]}-${parts[1].padStart(2, '0')}-${parts[2].padStart(2, '0')}`;\r\n//     }\r\n//     return new Date().toISOString().split('T')[0];\r\n//   };\r\n\r\n//   const calculateDueDate = (createdAt, terms) => {\r\n//     const date = new Date(formatDate(createdAt));\r\n//     date.setDate(date.getDate() + terms);\r\n//     return date.toISOString().split('T')[0];\r\n//   };\r\n\r\n//   const isOverdue = (createdAt, terms) => {\r\n//     const dueDate = new Date(calculateDueDate(createdAt, terms));\r\n//     return dueDate < new Date();\r\n//   };\r\n\r\n//   const calculateDaysOverdue = (createdAt, terms) => {\r\n//     const dueDate = new Date(calculateDueDate(createdAt, terms));\r\n//     const today = new Date();\r\n//     if (dueDate >= today) return 0;\r\n    \r\n//     const diffTime = Math.abs(today - dueDate);\r\n//     return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   const loadSampleData = () => {\r\n//     // Fallback sample data\r\n//     const sampleCustomers = [\r\n//       {\r\n//         id: 'CUST001',\r\n//         name: 'Al Noor Medical Center',\r\n//         email: 'finance@alnoor.com',\r\n//         phone: '+966-11-123-4567',\r\n//         address: 'King Fahd Road, Riyadh',\r\n//         customerType: 'corporate',\r\n//         creditLimit: 50000,\r\n//         paymentTerms: 30,\r\n//         totalOwed: 15750.00,\r\n//         overdueAmount: 5250.00,\r\n//         lastPayment: '2025-01-10',\r\n//         creditStatus: 'good',\r\n//         accountBalance: -15750.00,\r\n//         invoiceCount: 8,\r\n//         avgPaymentDays: 25\r\n//       },\r\n//       {\r\n//         id: 'CUST002',\r\n//         name: 'Dr. Ahmed Clinic',\r\n//         email: 'dr.ahmed@clinic.com',\r\n//         phone: '+966-12-987-6543',\r\n//         address: 'Prince Sultan Street, Jeddah',\r\n//         customerType: 'small_business',\r\n//         creditLimit: 20000,\r\n//         paymentTerms: 15,\r\n//         totalOwed: 8900.00,\r\n//         overdueAmount: 2100.00,\r\n//         lastPayment: '2025-01-12',\r\n//         creditStatus: 'watch',\r\n//         accountBalance: -8900.00,\r\n//         invoiceCount: 5,\r\n//         avgPaymentDays: 18\r\n//       },\r\n//       {\r\n//         id: 'CUST003',\r\n//         name: 'Pharmacy Plus Chain',\r\n//         email: 'accounts@pharmacyplus.sa',\r\n//         phone: '+966-13-555-0123',\r\n//         address: 'Al Khobar, Eastern Province',\r\n//         customerType: 'corporate',\r\n//         creditLimit: 75000,\r\n//         paymentTerms: 45,\r\n//         totalOwed: 32100.00,\r\n//         overdueAmount: 0,\r\n//         lastPayment: '2025-01-14',\r\n//         creditStatus: 'excellent',\r\n//         accountBalance: -32100.00,\r\n//         invoiceCount: 12,\r\n//         avgPaymentDays: 35\r\n//       },\r\n//       {\r\n//         id: 'CUST004',\r\n//         name: 'Walk-in Customer',\r\n//         email: 'cash@pos.system',\r\n//         phone: '+966-50-000-0000',\r\n//         address: 'Point of Sale',\r\n//         customerType: 'cash',\r\n//         creditLimit: 0,\r\n//         paymentTerms: 0,\r\n//         totalOwed: 0,\r\n//         overdueAmount: 0,\r\n//         lastPayment: '2025-01-15',\r\n//         creditStatus: 'cash_only',\r\n//         accountBalance: 0,\r\n//         invoiceCount: 0,\r\n//         avgPaymentDays: 0\r\n//       }\r\n//     ];\r\n\r\n//     const sampleInvoices = [\r\n//       {\r\n//         id: 'INV-2025-001',\r\n//         customerId: 'CUST001',\r\n//         customerName: 'Al Noor Medical Center',\r\n//         date: '2025-01-15',\r\n//         dueDate: '2025-02-14',\r\n//         amount: 5250.00,\r\n//         paid: 0,\r\n//         balance: 5250.00,\r\n//         status: 'outstanding',\r\n//         daysOverdue: 0,\r\n//         paymentTerms: 30,\r\n//         items: [\r\n//           { description: 'A2A 25MG TAB', quantity: 100, price: 15.00, total: 1500.00 },\r\n//           { description: 'AALBUMIN 50ML', quantity: 150, price: 25.00, total: 3750.00 }\r\n//         ],\r\n//         notes: 'Monthly medical supplies order',\r\n//         source: 'manual'\r\n//       },\r\n//       {\r\n//         id: 'INV-2025-002',\r\n//         customerId: 'CUST002',\r\n//         customerName: 'Dr. Ahmed Clinic',\r\n//         date: '2025-01-10',\r\n//         dueDate: '2025-01-25',\r\n//         amount: 2100.00,\r\n//         paid: 0,\r\n//         balance: 2100.00,\r\n//         status: 'overdue',\r\n//         daysOverdue: 5,\r\n//         paymentTerms: 15,\r\n//         items: [\r\n//           { description: 'ABAKTAL INJ', quantity: 50, price: 30.00, total: 1500.00 },\r\n//           { description: 'AARAM PLUS', quantity: 20, price: 30.00, total: 600.00 }\r\n//         ],\r\n//         notes: 'Urgent medical supplies',\r\n//         source: 'pos'\r\n//       },\r\n//       {\r\n//         id: 'POS-2025-003',\r\n//         customerId: 'CUST001',\r\n//         customerName: 'Al Noor Medical Center',\r\n//         date: '2025-01-12',\r\n//         dueDate: '2025-02-11',\r\n//         amount: 1850.00,\r\n//         paid: 1850.00,\r\n//         balance: 0,\r\n//         status: 'paid',\r\n//         daysOverdue: 0,\r\n//         paymentTerms: 30,\r\n//         items: [\r\n//           { description: 'Medical supplies - POS Sale', quantity: 1, price: 1850.00, total: 1850.00 }\r\n//         ],\r\n//         notes: 'Direct POS sale - Credit account',\r\n//         source: 'pos'\r\n//       }\r\n//     ];\r\n\r\n//     const samplePayments = [\r\n//       {\r\n//         id: 'PAY001',\r\n//         customerId: 'CUST001',\r\n//         customerName: 'Al Noor Medical Center',\r\n//         invoiceId: 'POS-2025-003',\r\n//         date: '2025-01-14',\r\n//         amount: 1850.00,\r\n//         method: 'bank_transfer',\r\n//         reference: 'TXN123456789',\r\n//         status: 'cleared',\r\n//         notes: 'Payment for POS sale'\r\n//       },\r\n//       {\r\n//         id: 'PAY002',\r\n//         customerId: 'CUST003',\r\n//         customerName: 'Pharmacy Plus Chain',\r\n//         invoiceId: 'INV-2024-045',\r\n//         date: '2025-01-12',\r\n//         amount: 15600.00,\r\n//         method: 'check',\r\n//         reference: 'CHK-789123',\r\n//         status: 'cleared',\r\n//         notes: 'December invoice payment'\r\n//       }\r\n//     ];\r\n\r\n//     setCustomers(sampleCustomers);\r\n//     setInvoices(sampleInvoices);\r\n//     setPayments(samplePayments);\r\n//   };\r\n\r\n//   const calculateARSummary = () => {\r\n//     const totalAR = customers.reduce((sum, customer) => sum + customer.totalOwed, 0);\r\n//     const totalOverdue = customers.reduce((sum, customer) => sum + customer.overdueAmount, 0);\r\n//     const customersWithBalance = customers.filter(customer => customer.totalOwed > 0).length;\r\n//     const avgDaysOutstanding = customers.length > 0 \r\n//       ? customers.reduce((sum, customer) => sum + customer.avgPaymentDays, 0) / customers.length \r\n//       : 0;\r\n\r\n//     return {\r\n//       totalAR,\r\n//       totalOverdue,\r\n//       customersWithBalance,\r\n//       avgDaysOutstanding: Math.round(avgDaysOutstanding)\r\n//     };\r\n//   };\r\n\r\n//   const getAgingData = () => {\r\n//     const aging = {\r\n//       current: 0,\r\n//       days30: 0,\r\n//       days60: 0,\r\n//       days90: 0,\r\n//       over90: 0\r\n//     };\r\n\r\n//     invoices.forEach(invoice => {\r\n//       if (invoice.status === 'paid') return;\r\n      \r\n//       const daysPastDue = invoice.daysOverdue || 0;\r\n      \r\n//       if (daysPastDue <= 0) {\r\n//         aging.current += invoice.balance;\r\n//       } else if (daysPastDue <= 30) {\r\n//         aging.days30 += invoice.balance;\r\n//       } else if (daysPastDue <= 60) {\r\n//         aging.days60 += invoice.balance;\r\n//       } else if (daysPastDue <= 90) {\r\n//         aging.days90 += invoice.balance;\r\n//       } else {\r\n//         aging.over90 += invoice.balance;\r\n//       }\r\n//     });\r\n\r\n//     return aging;\r\n//   };\r\n\r\n//   const getFilteredCustomers = () => {\r\n//     let filtered = [...customers];\r\n\r\n//     if (filters.customerType !== 'all') {\r\n//       filtered = filtered.filter(customer => customer.customerType === filters.customerType);\r\n//     }\r\n\r\n//     if (filters.status !== 'all') {\r\n//       filtered = filtered.filter(customer => {\r\n//         if (filters.status === 'overdue') return customer.overdueAmount > 0;\r\n//         if (filters.status === 'current') return customer.totalOwed > 0 && customer.overdueAmount === 0;\r\n//         if (filters.status === 'paid_up') return customer.totalOwed === 0;\r\n//         return true;\r\n//       });\r\n//     }\r\n\r\n//     if (filters.searchTerm) {\r\n//       const term = filters.searchTerm.toLowerCase();\r\n//       filtered = filtered.filter(customer =>\r\n//         customer.name.toLowerCase().includes(term) ||\r\n//         customer.email.toLowerCase().includes(term) ||\r\n//         customer.id.toLowerCase().includes(term)\r\n//       );\r\n//     }\r\n\r\n//     return filtered;\r\n//   };\r\n\r\n//   const getCreditStatusColor = (status) => {\r\n//     switch (status) {\r\n//       case 'excellent': return 'bg-green-100 text-green-800';\r\n//       case 'good': return 'bg-blue-100 text-blue-800';\r\n//       case 'watch': return 'bg-yellow-100 text-yellow-800';\r\n//       case 'hold': return 'bg-red-100 text-red-800';\r\n//       case 'cash_only': return 'bg-gray-100 text-gray-800';\r\n//       default: return 'bg-gray-100 text-gray-800';\r\n//     }\r\n//   };\r\n\r\n//   const getInvoiceStatusColor = (status) => {\r\n//     switch (status) {\r\n//       case 'paid': return 'bg-green-100 text-green-800';\r\n//       case 'outstanding': return 'bg-blue-100 text-blue-800';\r\n//       case 'overdue': return 'bg-red-100 text-red-800';\r\n//       case 'partial': return 'bg-yellow-100 text-yellow-800';\r\n//       default: return 'bg-gray-100 text-gray-800';\r\n//     }\r\n//   };\r\n\r\n//   const handleCreateInvoice = () => {\r\n//     const customer = customers.find(c => c.id === newInvoice.customerId);\r\n//     if (!customer) {\r\n//       alert('Please select a customer');\r\n//       return;\r\n//     }\r\n\r\n//     const nextId = `INV-${new Date().getFullYear()}-${String(invoices.length + 1).padStart(3, '0')}`;\r\n//     const invoiceTotal = calculateInvoiceTotal();\r\n\r\n//     const newInvoiceData = {\r\n//       id: nextId,\r\n//       customerId: customer.id,\r\n//       customerName: customer.name,\r\n//       date: new Date().toISOString().slice(0, 10),\r\n//       dueDate: newInvoice.dueDate,\r\n//       amount: invoiceTotal,\r\n//       paid: 0,\r\n//       balance: invoiceTotal,\r\n//       status: 'outstanding',\r\n//       daysOverdue: 0,\r\n//       paymentTerms: customer.paymentTerms,\r\n//       items: newInvoice.items,\r\n//       notes: newInvoice.notes,\r\n//       source: 'manual'\r\n//     };\r\n\r\n//     setInvoices(prev => [...prev, newInvoiceData]);\r\n\r\n//     setCustomers(prev =>\r\n//       prev.map(c =>\r\n//         c.id === customer.id\r\n//           ? {\r\n//               ...c,\r\n//               totalOwed: c.totalOwed + invoiceTotal,\r\n//               invoiceCount: c.invoiceCount + 1\r\n//             }\r\n//           : c\r\n//       )\r\n//     );\r\n\r\n//     setNewInvoice({\r\n//       customerId: '',\r\n//       dueDate: '',\r\n//       items: [{ description: '', quantity: 1, price: 0, total: 0 }],\r\n//       notes: ''\r\n//     });\r\n\r\n//     setShowInvoiceForm(false);\r\n//     alert('Invoice created successfully!');\r\n//   };\r\n\r\n//   const addInvoiceItem = () => {\r\n//     setNewInvoice({\r\n//       ...newInvoice,\r\n//       items: [...newInvoice.items, { description: '', quantity: 1, price: 0, total: 0 }]\r\n//     });\r\n//   };\r\n\r\n//   const updateInvoiceItem = (index, field, value) => {\r\n//     const updatedItems = [...newInvoice.items];\r\n//     updatedItems[index] = { ...updatedItems[index], [field]: value };\r\n    \r\n//     if (field === 'quantity' || field === 'price') {\r\n//       updatedItems[index].total = updatedItems[index].quantity * updatedItems[index].price;\r\n//     }\r\n    \r\n//     setNewInvoice({ ...newInvoice, items: updatedItems });\r\n//   };\r\n\r\n//   const calculateInvoiceTotal = () => {\r\n//     return newInvoice.items.reduce((sum, item) => sum + item.total, 0);\r\n//   };\r\n\r\n//   const summary = calculateARSummary();\r\n//   const aging = getAgingData();\r\n//   const filteredCustomers = getFilteredCustomers();\r\n\r\n//   // Render Invoices Tab\r\n//   const renderInvoicesTab = () => (\r\n//     <div>\r\n//       <div className=\"mb-6 flex justify-between items-center\">\r\n//         <div className=\"flex items-center space-x-4\">\r\n//           <div className=\"relative\">\r\n//             <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Search invoices...\"\r\n//               className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//             />\r\n//           </div>\r\n//           <select className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\">\r\n//             <option value=\"all\">All Statuses</option>\r\n//             <option value=\"outstanding\">Outstanding</option>\r\n//             <option value=\"overdue\">Overdue</option>\r\n//             <option value=\"paid\">Paid</option>\r\n//           </select>\r\n//         </div>\r\n//         <button\r\n//           onClick={() => setShowInvoiceForm(true)}\r\n//           className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\r\n//         >\r\n//           <Plus size={16} />\r\n//           <span>New Invoice</span>\r\n//         </button>\r\n//       </div>\r\n\r\n//       <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//         <table className=\"w-full\">\r\n//           <thead className=\"bg-gray-50\">\r\n//             <tr>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Invoice</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Customer</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Due Date</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Amount</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Balance</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody className=\"divide-y divide-gray-200\">\r\n//             {invoices.map((invoice) => (\r\n//               <tr key={invoice.id} className=\"hover:bg-gray-50\">\r\n//                 <td className=\"px-6 py-4\">\r\n//                   <div className=\"text-sm font-medium text-gray-900\">{invoice.id}</div>\r\n//                   <div className=\"text-xs text-gray-500\">{invoice.source}</div>\r\n//                 </td>\r\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">{invoice.customerName}</td>\r\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">{invoice.date}</td>\r\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">\r\n//                   {invoice.dueDate}\r\n//                   {invoice.daysOverdue > 0 && (\r\n//                     <div className=\"text-xs text-red-600\">\r\n//                       {invoice.daysOverdue} days overdue\r\n//                     </div>\r\n//                   )}\r\n//                 </td>\r\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">${invoice.amount.toFixed(2)}</td>\r\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">${invoice.balance.toFixed(2)}</td>\r\n//                 <td className=\"px-6 py-4\">\r\n//                   <span className={`px-2 py-1 text-xs font-medium rounded-full ${getInvoiceStatusColor(invoice.status)}`}>\r\n//                     {invoice.status}\r\n//                   </span>\r\n//                 </td>\r\n//                 <td className=\"px-6 py-4 text-sm font-medium\">\r\n//                   <button\r\n//                     onClick={() => setViewInvoice(invoice)}\r\n//                     className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\r\n//                   >\r\n//                     <Eye size={16} />\r\n//                   </button>\r\n//                   <button className=\"text-blue-600 hover:text-blue-900\">\r\n//                     <Edit size={16} />\r\n//                   </button>\r\n//                 </td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n\r\n//   // Render Aging Report Tab\r\n//   const renderAgingTab = () => (\r\n//     <div>\r\n//       <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4 mb-8\">\r\n//         <div className=\"bg-green-50 p-4 rounded-lg border border-green-200\">\r\n//           <div className=\"text-sm font-medium text-green-600\">Current (0-30)</div>\r\n//           <div className=\"text-xl font-bold text-green-900\">${aging.current.toFixed(2)}</div>\r\n//         </div>\r\n//         <div className=\"bg-yellow-50 p-4 rounded-lg border border-yellow-200\">\r\n//           <div className=\"text-sm font-medium text-yellow-600\">31-60 Days</div>\r\n//           <div className=\"text-xl font-bold text-yellow-900\">${aging.days30.toFixed(2)}</div>\r\n//         </div>\r\n//         <div className=\"bg-orange-50 p-4 rounded-lg border border-orange-200\">\r\n//           <div className=\"text-sm font-medium text-orange-600\">61-90 Days</div>\r\n//           <div className=\"text-xl font-bold text-orange-900\">${aging.days60.toFixed(2)}</div>\r\n//         </div>\r\n//         <div className=\"bg-red-50 p-4 rounded-lg border border-red-200\">\r\n//           <div className=\"text-sm font-medium text-red-600\">91-120 Days</div>\r\n//           <div className=\"text-xl font-bold text-red-900\">${aging.days90.toFixed(2)}</div>\r\n//         </div>\r\n//         <div className=\"bg-gray-50 p-4 rounded-lg border border-gray-200\">\r\n//           <div className=\"text-sm font-medium text-gray-600\">Over 120 Days</div>\r\n//           <div className=\"text-xl font-bold text-gray-900\">${aging.over90.toFixed(2)}</div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//         <table className=\"w-full\">\r\n//           <thead className=\"bg-gray-50\">\r\n//             <tr>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Customer</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Current</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">31-60</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">61-90</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">91-120</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">120+</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Total</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody className=\"divide-y divide-gray-200\">\r\n//             {customers.filter(c => c.totalOwed > 0).map((customer) => {\r\n//               const customerInvoices = invoices.filter(inv => inv.customerId === customer.id && inv.status !== 'paid');\r\n//               const customerAging = {current: 0, days30: 0, days60: 0, days90: 0, over90: 0};\r\n              \r\n//               customerInvoices.forEach(invoice => {\r\n//                 const days = invoice.daysOverdue || 0;\r\n//                 if (days <= 0) customerAging.current += invoice.balance;\r\n//                 else if (days <= 30) customerAging.days30 += invoice.balance;\r\n//                 else if (days <= 60) customerAging.days60 += invoice.balance;\r\n//                 else if (days <= 90) customerAging.days90 += invoice.balance;\r\n//                 else customerAging.over90 += invoice.balance;\r\n//               });\r\n\r\n//               return (\r\n//                 <tr key={customer.id} className=\"hover:bg-gray-50\">\r\n//                   <td className=\"px-6 py-4\">\r\n//                     <div className=\"text-sm font-medium text-gray-900\">{customer.name}</div>\r\n//                     <div className=\"text-xs text-gray-500\">{customer.id}</div>\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 text-sm text-gray-900\">${customerAging.current.toFixed(2)}</td>\r\n//                   <td className=\"px-6 py-4 text-sm text-gray-900\">${customerAging.days30.toFixed(2)}</td>\r\n//                   <td className=\"px-6 py-4 text-sm text-gray-900\">${customerAging.days60.toFixed(2)}</td>\r\n//                   <td className=\"px-6 py-4 text-sm text-gray-900\">${customerAging.days90.toFixed(2)}</td>\r\n//                   <td className=\"px-6 py-4 text-sm text-gray-900\">${customerAging.over90.toFixed(2)}</td>\r\n//                   <td className=\"px-6 py-4 text-sm font-medium text-gray-900\">${customer.totalOwed.toFixed(2)}</td>\r\n//                 </tr>\r\n//               );\r\n//             })}\r\n//           </tbody>\r\n//         </table>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n\r\n//   // Render Payments Tab\r\n//   const renderPaymentsTab = () => (\r\n//     <div>\r\n//       <div className=\"mb-6 flex justify-between items-center\">\r\n//         <div className=\"flex items-center space-x-4\">\r\n//           <div className=\"relative\">\r\n//             <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Search payments...\"\r\n//               className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//             />\r\n//           </div>\r\n//           <select className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\">\r\n//             <option value=\"all\">All Methods</option>\r\n//             <option value=\"cash\">Cash</option>\r\n//             <option value=\"check\">Check</option>\r\n//             <option value=\"bank_transfer\">Bank Transfer</option>\r\n//             <option value=\"credit_card\">Credit Card</option>\r\n//           </select>\r\n//         </div>\r\n//         <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\r\n//           <Plus size={16} />\r\n//           <span>Record Payment</span>\r\n//         </button>\r\n//       </div>\r\n\r\n//       <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//         <table className=\"w-full\">\r\n//           <thead className=\"bg-gray-50\">\r\n//             <tr>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Payment ID</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Customer</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Invoice</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Amount</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Method</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Reference</th>\r\n//               <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody className=\"divide-y divide-gray-200\">\r\n//             {payments.map((payment) => (\r\n//               <tr key={payment.id} className=\"hover:bg-gray-50\">\r\n//                 <td className=\"px-6 py-4 text-sm font-medium text-gray-900\">{payment.id}</td>\r\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">{payment.customerName}</td>\r\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">{payment.invoiceId}</td>\r\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">{payment.date}</td>\r\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">${payment.amount.toFixed(2)}</td>\r\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">{payment.method.replace('_', ' ')}</td>\r\n//                 <td className=\"px-6 py-4 text-sm text-gray-900\">{payment.reference}</td>\r\n//                 <td className=\"px-6 py-4\">\r\n//                   <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                     payment.status === 'cleared' ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n//                   }`}>\r\n//                     {payment.status}\r\n//                   </span>\r\n//                 </td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n\r\n//   return (\r\n//     <div className=\"max-w-7xl mx-auto p-6 bg-white\">\r\n//       {/* Header */}\r\n//       <div className=\"mb-8\">\r\n//         <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\r\n//           <CreditCard className=\"mr-3 text-emerald-600\" />\r\n//           Accounts Receivable\r\n//         </h1>\r\n//         <p className=\"text-gray-600\">Manage customer invoicing, payments, and credit limits</p>\r\n//       </div>\r\n\r\n//       {/* Summary Cards */}\r\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\r\n//         <div className=\"bg-blue-50 p-6 rounded-lg border border-blue-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-blue-600 text-sm font-medium\">Total A/R</p>\r\n//               <p className=\"text-2xl font-bold text-blue-900\">${summary.totalAR.toFixed(2)}</p>\r\n//             </div>\r\n//             <DollarSign className=\"text-blue-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-blue-700 mt-2\">{summary.customersWithBalance} customers with balances</p>\r\n//         </div>\r\n\r\n//         <div className=\"bg-red-50 p-6 rounded-lg border border-red-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-red-600 text-sm font-medium\">Overdue Amount</p>\r\n//               <p className=\"text-2xl font-bold text-red-900\">${summary.totalOverdue.toFixed(2)}</p>\r\n//             </div>\r\n//             <AlertTriangle className=\"text-red-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-red-700 mt-2\">\r\n//             {summary.totalAR > 0 ? ((summary.totalOverdue / summary.totalAR) * 100).toFixed(1) : 0}% of total A/R\r\n//           </p>\r\n//         </div>\r\n\r\n//         <div className=\"bg-green-50 p-6 rounded-lg border border-green-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-green-600 text-sm font-medium\">Avg. Days Outstanding</p>\r\n//               <p className=\"text-2xl font-bold text-green-900\">{summary.avgDaysOutstanding}</p>\r\n//             </div>\r\n//             <Clock className=\"text-green-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-green-700 mt-2\">Collection performance</p>\r\n//         </div>\r\n\r\n//         <div className=\"bg-purple-50 p-6 rounded-lg border border-purple-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-purple-600 text-sm font-medium\">Active Customers</p>\r\n//               <p className=\"text-2xl font-bold text-purple-900\">{customers.length}</p>\r\n//             </div>\r\n//             <Users className=\"text-purple-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-purple-700 mt-2\">Total customer accounts</p>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Tabs */}\r\n//       <div className=\"mb-6\">\r\n//         <div className=\"border-b border-gray-200\">\r\n//           <nav className=\"-mb-px flex space-x-8\">\r\n//             {[\r\n//               { id: 'overview', name: 'Customer Overview', icon: Users },\r\n//               { id: 'invoices', name: 'Invoices', icon: FileText },\r\n//               { id: 'aging', name: 'Aging Report', icon: Clock },\r\n//               { id: 'payments', name: 'Payments', icon: CheckCircle }\r\n//             ].map((tab) => (\r\n//               <button\r\n//                 key={tab.id}\r\n//                 onClick={() => setActiveTab(tab.id)}\r\n//                 className={`flex items-center py-2 px-1 border-b-2 font-medium text-sm ${\r\n//                   activeTab === tab.id\r\n//                     ? 'border-emerald-500 text-emerald-600'\r\n//                     : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n//                 }`}\r\n//               >\r\n//                 <tab.icon className=\"mr-2\" size={16} />\r\n//                 {tab.name}\r\n//               </button>\r\n//             ))}\r\n//           </nav>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Tab Content */}\r\n//       {activeTab === 'overview' && (\r\n//         <div>\r\n//           {/* Filters */}\r\n//           <div className=\"flex flex-wrap items-center gap-4 mb-6\">\r\n//             <div className=\"relative\">\r\n//               <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n//               <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Search customers...\"\r\n//                 value={filters.searchTerm}\r\n//                 onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\r\n//                 className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               />\r\n//             </div>\r\n\r\n//             <select\r\n//               value={filters.customerType}\r\n//               onChange={(e) => setFilters({ ...filters, customerType: e.target.value })}\r\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//             >\r\n//               <option value=\"all\">All Customer Types</option>\r\n//               <option value=\"corporate\">Corporate</option>\r\n//               <option value=\"small_business\">Small Business</option>\r\n//               <option value=\"credit\">Credit</option>\r\n//               <option value=\"cash\">Cash Only</option>\r\n//             </select>\r\n\r\n//             <select\r\n//               value={filters.status}\r\n//               onChange={(e) => setFilters({ ...filters, status: e.target.value })}\r\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//             >\r\n//               <option value=\"all\">All Statuses</option>\r\n//               <option value=\"current\">Current</option>\r\n//               <option value=\"overdue\">Overdue</option>\r\n//               <option value=\"paid_up\">Paid Up</option>\r\n//             </select>\r\n\r\n//             <button\r\n//               onClick={() => setShowInvoiceForm(true)}\r\n//               className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\r\n//             >\r\n//               <Plus size={16} />\r\n//               <span>New Invoice</span>\r\n//             </button>\r\n//           </div>\r\n\r\n//           {/* Customer List */}\r\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//             <div className=\"overflow-x-auto\">\r\n//               <table className=\"w-full\">\r\n//                 <thead className=\"bg-gray-50\">\r\n//                   <tr>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Customer\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Type\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Credit Limit\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Balance\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Overdue\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Credit Status\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Last Payment\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Actions\r\n//                     </th>\r\n//                   </tr>\r\n//                 </thead>\r\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//                   {loading ? (\r\n//                     <tr>\r\n//                       <td colSpan=\"8\" className=\"px-6 py-4 text-center text-gray-500\">\r\n//                         Loading data from API...\r\n//                       </td>\r\n//                     </tr>\r\n//                   ) : (\r\n//                     filteredCustomers.map((customer) => (\r\n//                       <tr key={customer.id} className=\"hover:bg-gray-50\">\r\n//                         <td className=\"px-6 py-4\">\r\n//                           <div>\r\n//                             <div className=\"text-sm font-medium text-gray-900\">{customer.name}</div>\r\n//                             <div className=\"text-sm text-gray-500\">{customer.id}</div>\r\n//                             <div className=\"text-xs text-gray-400 flex items-center mt-1\">\r\n//                               <Mail className=\"mr-1\" size={12} />\r\n//                               {customer.email}\r\n//                             </div>\r\n//                           </div>\r\n//                         </td>\r\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                           <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-gray-100 text-gray-800\">\r\n//                             {customer.customerType.replace('_', ' ')}\r\n//                           </span>\r\n//                         </td>\r\n//                         <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                           ${customer.creditLimit.toLocaleString()}\r\n//                         </td>\r\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                           <div className=\"text-sm font-medium text-gray-900\">\r\n//                             ${customer.totalOwed.toFixed(2)}\r\n//                           </div>\r\n//                           <div className=\"text-xs text-gray-500\">\r\n//                             {customer.invoiceCount} invoices\r\n//                           </div>\r\n//                         </td>\r\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                           {customer.overdueAmount > 0 ? (\r\n//                             <span className=\"text-red-600 font-medium\">\r\n//                               ${customer.overdueAmount.toFixed(2)}\r\n//                             </span>\r\n//                           ) : (\r\n//                             <span className=\"text-green-600\">$0.00</span>\r\n//                           )}\r\n//                         </td>\r\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                           <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(customer.creditStatus)}`}>\r\n//                             {customer.creditStatus.replace('_', ' ')}\r\n//                           </span>\r\n//                         </td>\r\n//                         <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                           {customer.lastPayment || 'N/A'}\r\n//                         </td>\r\n//                         <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n//                           <button\r\n//                             onClick={() => setSelectedCustomer(customer)}\r\n//                             className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\r\n//                           >\r\n//                             <Eye size={16} />\r\n//                           </button>\r\n//                           <button className=\"text-blue-600 hover:text-blue-900\">\r\n//                             <Edit size={16} />\r\n//                           </button>\r\n//                         </td>\r\n//                       </tr>\r\n//                     ))\r\n//                   )}\r\n//                 </tbody>\r\n//               </table>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {activeTab === 'invoices' && renderInvoicesTab()}\r\n//       {activeTab === 'aging' && renderAgingTab()}\r\n//       {activeTab === 'payments' && renderPaymentsTab()}\r\n\r\n//       {/* Customer Detail Modal */}\r\n//       {selectedCustomer && (\r\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\r\n//                   Customer Details - {selectedCustomer.name}\r\n//                 </h3>\r\n//                 <button\r\n//                   onClick={() => setSelectedCustomer(null)}\r\n//                   className=\"text-gray-400 hover:text-gray-600\"\r\n//                 >\r\n//                   <XCircle size={20} />\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <div className=\"px-6 py-4\">\r\n//               {/* Customer Info Grid */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n//                 <div className=\"space-y-4\">\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer ID</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.id}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Email</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.email}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Phone</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.phone}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Address</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.address}</p>\r\n//                   </div>\r\n//                 </div>\r\n                \r\n//                 <div className=\"space-y-4\">\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer Type</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.customerType.replace('_', ' ')}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Limit</label>\r\n//                     <p className=\"text-sm text-gray-900\">${selectedCustomer.creditLimit.toLocaleString()}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Payment Terms</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.paymentTerms} days</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Status</label>\r\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(selectedCustomer.creditStatus)}`}>\r\n//                       {selectedCustomer.creditStatus.replace('_', ' ')}\r\n//                     </span>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Financial Summary */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\r\n//                 <div className=\"bg-blue-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-blue-600\">Current Balance</div>\r\n//                   <div className=\"text-xl font-bold text-blue-900\">\r\n//                     ${selectedCustomer.totalOwed.toFixed(2)}\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"bg-red-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-red-600\">Overdue Amount</div>\r\n//                   <div className=\"text-xl font-bold text-red-900\">\r\n//                     ${selectedCustomer.overdueAmount.toFixed(2)}\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"bg-green-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-green-600\">Credit Available</div>\r\n//                   <div className=\"text-xl font-bold text-green-900\">\r\n//                     ${(selectedCustomer.creditLimit - selectedCustomer.totalOwed).toFixed(2)}\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"bg-purple-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-purple-600\">Avg Payment Days</div>\r\n//                   <div className=\"text-xl font-bold text-purple-900\">\r\n//                     {selectedCustomer.avgPaymentDays}\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Customer Invoices */}\r\n//               <div className=\"mb-6\">\r\n//                 <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Customer Invoices</h4>\r\n//                 <div className=\"overflow-x-auto\">\r\n//                   <table className=\"w-full border border-gray-200 rounded\">\r\n//                     <thead className=\"bg-gray-50\">\r\n//                       <tr>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Invoice</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Date</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Due Date</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Amount</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Balance</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Status</th>\r\n//                       </tr>\r\n//                     </thead>\r\n//                     <tbody className=\"divide-y divide-gray-200\">\r\n//                       {invoices\r\n//                         .filter(inv => inv.customerId === selectedCustomer.id)\r\n//                         .map((invoice) => (\r\n//                           <tr key={invoice.id}>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{invoice.id}</td>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{invoice.date}</td>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{invoice.dueDate}</td>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">${invoice.amount.toFixed(2)}</td>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">${invoice.balance.toFixed(2)}</td>\r\n//                             <td className=\"px-4 py-2\">\r\n//                               <span className={`px-2 py-1 text-xs font-medium rounded-full ${getInvoiceStatusColor(invoice.status)}`}>\r\n//                                 {invoice.status}\r\n//                               </span>\r\n//                             </td>\r\n//                           </tr>\r\n//                         ))}\r\n//                     </tbody>\r\n//                   </table>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Action Buttons */}\r\n//               <div className=\"flex space-x-3\">\r\n//                 <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\r\n//                   <Plus size={16} />\r\n//                   <span>New Invoice</span>\r\n//                 </button>\r\n//                 <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\r\n//                   <CheckCircle size={16} />\r\n//                   <span>Record Payment</span>\r\n//                 </button>\r\n//                 <button className=\"px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 flex items-center space-x-2\">\r\n//                   <Mail size={16} />\r\n//                   <span>Send Statement</span>\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Invoice Detail Modal */}\r\n//       {viewInvoice && (\r\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-lg max-w-3xl w-full max-h-[90vh] overflow-y-auto\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\r\n//                   Invoice Details - {viewInvoice.id}\r\n//                 </h3>\r\n//                 <button\r\n//                   onClick={() => setViewInvoice(null)}\r\n//                   className=\"text-gray-400 hover:text-gray-600\"\r\n//                 >\r\n//                   <XCircle size={20} />\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <div className=\"px-6 py-4\">\r\n//               {/* Invoice Header */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n//                 <div>\r\n//                   <h4 className=\"font-semibold text-gray-900 mb-3\">Invoice Information</h4>\r\n//                   <div className=\"space-y-2\">\r\n//                     <div><span className=\"text-gray-500\">Invoice ID:</span> {viewInvoice.id}</div>\r\n//                     <div><span className=\"text-gray-500\">Date:</span> {viewInvoice.date}</div>\r\n//                     <div><span className=\"text-gray-500\">Due Date:</span> {viewInvoice.dueDate}</div>\r\n//                     <div><span className=\"text-gray-500\">Payment Terms:</span> {viewInvoice.paymentTerms} days</div>\r\n//                     <div><span className=\"text-gray-500\">Source:</span> {viewInvoice.source}</div>\r\n//                   </div>\r\n//                 </div>\r\n//                 <div>\r\n//                   <h4 className=\"font-semibold text-gray-900 mb-3\">Customer Information</h4>\r\n//                   <div className=\"space-y-2\">\r\n//                     <div><span className=\"text-gray-500\">Customer:</span> {viewInvoice.customerName}</div>\r\n//                     <div><span className=\"text-gray-500\">Customer ID:</span> {viewInvoice.customerId}</div>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Invoice Items */}\r\n//               <div className=\"mb-6\">\r\n//                 <h4 className=\"font-semibold text-gray-900 mb-3\">Invoice Items</h4>\r\n//                 <div className=\"overflow-x-auto\">\r\n//                   <table className=\"w-full border border-gray-200 rounded\">\r\n//                     <thead className=\"bg-gray-50\">\r\n//                       <tr>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Description</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Quantity</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Price</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Total</th>\r\n//                       </tr>\r\n//                     </thead>\r\n//                     <tbody className=\"divide-y divide-gray-200\">\r\n//                       {viewInvoice.items.map((item, index) => (\r\n//                         <tr key={index}>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900\">{item.description}</td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{item.quantity}</td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">${item.price.toFixed(2)}</td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">${item.total.toFixed(2)}</td>\r\n//                         </tr>\r\n//                       ))}\r\n//                     </tbody>\r\n//                   </table>\r\n//                 </div>\r\n//               </div>\r\n\r\n//           {/* Invoice Summary */}\r\n// <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\r\n//   <div className=\"bg-blue-50 p-4 rounded-lg\">\r\n//     <div className=\"text-sm font-medium text-blue-600\">Invoice Amount</div>\r\n//     <div className=\"text-xl font-bold text-blue-900\">${viewInvoice.amount.toFixed(2)}</div>\r\n//   </div>\r\n//   <div className=\"bg-green-50 p-4 rounded-lg\">\r\n//     <div className=\"text-sm font-medium text-green-600\">Amount Paid</div>\r\n//     <div className=\"text-xl font-bold text-green-900\">${viewInvoice.paid.toFixed(2)}</div>\r\n//   </div>\r\n//   <div className=\"bg-red-50 p-4 rounded-lg\">\r\n//     <div className=\"text-sm font-medium text-red-600\">Balance Due</div>\r\n//     <div className=\"text-xl font-bold text-red-900\">${viewInvoice.balance.toFixed(2)}</div>\r\n//   </div>\r\n// </div>\r\n\r\n// {/* Invoice Status and Days Information */}\r\n// <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\r\n//   <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n//     <div className=\"text-sm font-medium text-gray-600\">Invoice Status</div>\r\n//     <span className={`inline-block mt-1 px-3 py-1 text-sm font-medium rounded-full ${getInvoiceStatusColor(viewInvoice.status)}`}>\r\n//       {viewInvoice.status.charAt(0).toUpperCase() + viewInvoice.status.slice(1)}\r\n//     </span>\r\n//   </div>\r\n//   <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n//     <div className=\"text-sm font-medium text-gray-600\">\r\n//       {viewInvoice.status === 'overdue' ? 'Days Overdue' : 'Days Until Due'}\r\n//     </div>\r\n//     <div className={`text-xl font-bold ${viewInvoice.status === 'overdue' ? 'text-red-900' : 'text-gray-900'}`}>\r\n//       {viewInvoice.status === 'overdue' ? viewInvoice.daysOverdue : \r\n//        Math.max(0, Math.ceil((new Date(viewInvoice.dueDate) - new Date()) / (1000 * 60 * 60 * 24)))}\r\n//     </div>\r\n//   </div>\r\n// </div>\r\n\r\n// {/* Notes */}\r\n// {viewInvoice.notes && (\r\n//   <div className=\"mb-6\">\r\n//     <h4 className=\"font-semibold text-gray-900 mb-2\">Notes</h4>\r\n//     <p className=\"text-sm text-gray-700 bg-gray-50 p-3 rounded border\">{viewInvoice.notes}</p>\r\n//   </div>\r\n// )}\r\n\r\n// {/* Payment History for this Invoice */}\r\n// <div className=\"mb-6\">\r\n//   <h4 className=\"font-semibold text-gray-900 mb-3\">Payment History</h4>\r\n//   {payments.filter(payment => payment.invoiceId === viewInvoice.id).length > 0 ? (\r\n//     <div className=\"overflow-x-auto\">\r\n//       <table className=\"w-full border border-gray-200 rounded\">\r\n//         <thead className=\"bg-gray-50\">\r\n//           <tr>\r\n//             <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Date</th>\r\n//             <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Amount</th>\r\n//             <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Method</th>\r\n//             <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Reference</th>\r\n//             <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Status</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody className=\"divide-y divide-gray-200\">\r\n//           {payments\r\n//             .filter(payment => payment.invoiceId === viewInvoice.id)\r\n//             .map((payment) => (\r\n//               <tr key={payment.id}>\r\n//                 <td className=\"px-4 py-2 text-sm text-gray-900\">{payment.date}</td>\r\n//                 <td className=\"px-4 py-2 text-sm text-gray-900\">${payment.amount.toFixed(2)}</td>\r\n//                 <td className=\"px-4 py-2 text-sm text-gray-900\">{payment.method.replace('_', ' ')}</td>\r\n//                 <td className=\"px-4 py-2 text-sm text-gray-900\">{payment.reference}</td>\r\n//                 <td className=\"px-4 py-2\">\r\n//                   <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                     payment.status === 'cleared' ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n//                   }`}>\r\n//                     {payment.status}\r\n//                   </span>\r\n//                 </td>\r\n//               </tr>\r\n//             ))}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   ) : (\r\n//     <div className=\"text-sm text-gray-500 bg-gray-50 p-4 rounded border text-center\">\r\n//       No payments recorded for this invoice\r\n//     </div>\r\n//   )}\r\n// </div>\r\n\r\n// {/* Customer Credit Information */}\r\n// <div className=\"mb-6 bg-blue-50 p-4 rounded-lg border border-blue-200\">\r\n//   <h4 className=\"font-semibold text-blue-900 mb-3\">Customer Credit Information</h4>\r\n//   <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\r\n//     <div>\r\n//       <span className=\"text-blue-700 font-medium\">Credit Limit:</span>\r\n//       <div className=\"text-blue-900 font-bold\">\r\n//         ${customers.find(c => c.id === viewInvoice.customerId)?.creditLimit.toLocaleString() || 'N/A'}\r\n//       </div>\r\n//     </div>\r\n//     <div>\r\n//       <span className=\"text-blue-700 font-medium\">Total Outstanding:</span>\r\n//       <div className=\"text-blue-900 font-bold\">\r\n//         ${customers.find(c => c.id === viewInvoice.customerId)?.totalOwed.toFixed(2) || '0.00'}\r\n//       </div>\r\n//     </div>\r\n//     <div>\r\n//       <span className=\"text-blue-700 font-medium\">Credit Available:</span>\r\n//       <div className=\"text-blue-900 font-bold\">\r\n//         ${((customers.find(c => c.id === viewInvoice.customerId)?.creditLimit || 0) - \r\n//             (customers.find(c => c.id === viewInvoice.customerId)?.totalOwed || 0)).toFixed(2)}\r\n//       </div>\r\n//     </div>\r\n//   </div>\r\n// </div>\r\n// {/* Action Buttons */}\r\n// <div className=\"flex flex-wrap gap-3\">\r\n//   <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2 transition-colors\">\r\n//     <CheckCircle size={16} />\r\n//     <span>Record Payment</span>\r\n//   </button>\r\n//   <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2 transition-colors\">\r\n//     <Mail size={16} />\r\n//     <span>Email Invoice</span>\r\n//   </button>\r\n//   <button className=\"px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 flex items-center space-x-2 transition-colors\">\r\n//     <Printer size={16} />\r\n//     <span>Print Invoice</span>\r\n//   </button>\r\n//   <button className=\"px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 flex items-center space-x-2 transition-colors\">\r\n//     <Download size={16} />\r\n//     <span>Download PDF</span>\r\n//   </button>\r\n//   <button className=\"px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 flex items-center space-x-2 transition-colors\">\r\n//     <Send size={16} />\r\n//     <span>Send Reminder</span>\r\n//   </button>\r\n//   {viewInvoice.balance > 0 && (\r\n//     <button className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 flex items-center space-x-2 transition-colors\">\r\n//       <AlertTriangle size={16} />\r\n//       <span>Mark Overdue</span>\r\n//     </button>\r\n//   )}\r\n// </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* New Invoice Form */}\r\n//       {showInvoiceForm && (\r\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">Create New Invoice</h3>\r\n//                 <button\r\n//                   onClick={() => setShowInvoiceForm(false)}\r\n//                   className=\"text-gray-400 hover:text-gray-600\"\r\n//                 >\r\n//                   <XCircle size={20} />\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <div className=\"px-6 py-4\">\r\n//               {/* Invoice Header */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\r\n//                 <div>\r\n//                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">Customer *</label>\r\n//                   <select\r\n//                     value={newInvoice.customerId}\r\n//                     onChange={(e) => setNewInvoice({ ...newInvoice, customerId: e.target.value })}\r\n//                     className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//                   >\r\n//                     <option value=\"\">Select Customer</option>\r\n//                     {customers.filter(c => c.customerType !== 'cash').map(customer => (\r\n//                       <option key={customer.id} value={customer.id}>\r\n//                         {customer.name} ({customer.id})\r\n//                       </option>\r\n//                     ))}\r\n//                   </select>\r\n//                 </div>\r\n//                 <div>\r\n//                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">Due Date *</label>\r\n//                   <input\r\n//                     type=\"date\"\r\n//                     value={newInvoice.dueDate}\r\n//                     onChange={(e) => setNewInvoice({ ...newInvoice, dueDate: e.target.value })}\r\n//                     className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//                   />\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Invoice Items */}\r\n//               <div className=\"mb-6\">\r\n//                 <label className=\"block text-sm font-medium text-gray-700 mb-2\">Invoice Items</label>\r\n//                 <div className=\"space-y-3\">\r\n//                   {newInvoice.items.map((item, index) => (\r\n//                     <div key={index} className=\"grid grid-cols-12 gap-2 items-center bg-gray-50 p-3 rounded\">\r\n//                       <div className=\"col-span-5\">\r\n//                         <input\r\n//                           type=\"text\"\r\n//                           value={item.description}\r\n//                           onChange={(e) => updateInvoiceItem(index, 'description', e.target.value)}\r\n//                           placeholder=\"Item description\"\r\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                         />\r\n//                       </div>\r\n//                       <div className=\"col-span-2\">\r\n//                         <input\r\n//                           type=\"number\"\r\n//                           value={item.quantity}\r\n//                           onChange={(e) => updateInvoiceItem(index, 'quantity', parseFloat(e.target.value) || 0)}\r\n//                           placeholder=\"Qty\"\r\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                         />\r\n//                       </div>\r\n//                       <div className=\"col-span-2\">\r\n//                         <input\r\n//                           type=\"number\"\r\n//                           step=\"0.01\"\r\n//                           value={item.price}\r\n//                           onChange={(e) => updateInvoiceItem(index, 'price', parseFloat(e.target.value) || 0)}\r\n//                           placeholder=\"Price\"\r\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                         />\r\n//                       </div>\r\n//                       <div className=\"col-span-2\">\r\n//                         <input\r\n//                           type=\"number\"\r\n//                           step=\"0.01\"\r\n//                           value={item.total}\r\n//                           readOnly\r\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm bg-gray-100\"\r\n//                         />\r\n//                       </div>\r\n//                       <div className=\"col-span-1\">\r\n//                         {newInvoice.items.length > 1 && (\r\n//                           <button\r\n//                             onClick={() => {\r\n//                               const updatedItems = newInvoice.items.filter((_, i) => i !== index);\r\n//                               setNewInvoice({ ...newInvoice, items: updatedItems });\r\n//                             }}\r\n//                             className=\"p-1 text-red-600 hover:bg-red-100 rounded\"\r\n//                           >\r\n//                             <XCircle size={14} />\r\n//                           </button>\r\n//                         )}\r\n//                       </div>\r\n//                     </div>\r\n//                   ))}\r\n//                 </div>\r\n\r\n//                 <div className=\"flex justify-between items-center mt-3\">\r\n//                   <button\r\n//                     onClick={addInvoiceItem}\r\n//                     className=\"px-3 py-1 text-sm bg-emerald-100 text-emerald-700 rounded hover:bg-emerald-200 flex items-center space-x-1\"\r\n//                   >\r\n//                     <Plus size={14} />\r\n//                     <span>Add Item</span>\r\n//                   </button>\r\n\r\n//                   <div className=\"text-lg font-semibold\">\r\n//                     Total: ${calculateInvoiceTotal().toFixed(2)}\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Notes */}\r\n//               <div className=\"mb-6\">\r\n//                 <label className=\"block text-sm font-medium text-gray-700 mb-1\">Notes</label>\r\n//                 <textarea\r\n//                   value={newInvoice.notes}\r\n//                   onChange={(e) => setNewInvoice({ ...newInvoice, notes: e.target.value })}\r\n//                   rows={3}\r\n//                   placeholder=\"Additional notes...\"\r\n//                   className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//                 />\r\n//               </div>\r\n\r\n//               {/* Action Buttons */}\r\n//               <div className=\"flex space-x-3\">\r\n//                 <button\r\n//                   onClick={handleCreateInvoice}\r\n//                   className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\r\n//                 >\r\n//                   <CheckCircle size={16} />\r\n//                   <span>Create Invoice</span>\r\n//                 </button>\r\n//                 <button\r\n//                   onClick={() => setShowInvoiceForm(false)}\r\n//                   className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\"\r\n//                 >\r\n//                   <XCircle size={16} />\r\n//                   <span>Cancel</span>\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Integration Status */}\r\n//       <div className=\"mt-8 p-6 bg-green-50 border border-green-200 rounded-lg\">\r\n//         <div className=\"flex items-center mb-4\">\r\n//           <CheckCircle className=\"text-green-600 mr-2\" size={20} />\r\n//           <h3 className=\"font-medium text-green-800\">POS Integration Active</h3>\r\n//         </div>\r\n//         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm text-green-700\">\r\n//           <div>\r\n//             <strong>Credit Sales:</strong> Automatically create AR entries when customers buy on credit in POS\r\n//           </div>\r\n//           <div>\r\n//             <strong>Customer Limits:</strong> POS checks credit limits before allowing credit sales\r\n//           </div>\r\n//           <div>\r\n//             <strong>Real-time Updates:</strong> Customer balances update instantly with each transaction\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AccountsReceivable;\r\n\r\n\r\n// //perfect\r\n// import React, { useState, useEffect } from 'react';\r\n// import { \r\n//   Users, \r\n//   DollarSign, \r\n//   CreditCard, \r\n//   AlertTriangle, \r\n//   Clock, \r\n//   Plus, \r\n//   Search, \r\n//   Filter, \r\n//   Eye, \r\n//   Edit, \r\n//   Download,\r\n//   CheckCircle,\r\n//   XCircle,\r\n//   Calendar,\r\n//   FileText,\r\n//   TrendingUp,\r\n//   Mail,\r\n//   Phone,\r\n//   Loader,\r\n//   RefreshCw\r\n// } from 'lucide-react';\r\n\r\n// // API Configuration\r\n// const API_BASE_URL_SALES = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/orders?start=0&size=200';\r\n// const API_CUSTOMERS = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/customers?status=Active';\r\n\r\n// // Replace with your actual Bearer token\r\n// const BEARER_TOKEN = 'your-bearer-token-here';\r\n\r\n// const AccountsReceivable = () => {\r\n//   // State management\r\n//   const [sales, setSales] = useState({ loading: false, data: [], error: null });\r\n//   const [customers, setCustomers] = useState({ loading: false, data: [], error: null });\r\n//   const [activeTab, setActiveTab] = useState('overview');\r\n//   const [selectedOrder, setSelectedOrder] = useState(null);\r\n//   const [filters, setFilters] = useState({\r\n//     customerType: 'all',\r\n//     status: 'all',\r\n//     searchTerm: ''\r\n//   });\r\n\r\n//   // API Functions\r\n//   const fetchSales = async () => {\r\n//     setSales(prev => ({ ...prev, loading: true, error: null }));\r\n//     try {\r\n//       const response = await fetch(API_BASE_URL_SALES, {\r\n//         method: 'GET',\r\n//         headers: {\r\n//           'Authorization': `Bearer ${BEARER_TOKEN}`,\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//       });\r\n      \r\n//       if (!response.ok) {\r\n//         throw new Error(`HTTP error! status: ${response.status}`);\r\n//       }\r\n      \r\n//       const data = await response.json();\r\n      \r\n//       // Filter for unpaid and unfulfilled orders only\r\n//       const filteredOrders = data.filter(order => \r\n//         !order.paid || !order.fulfilled || order.status === 'Active'\r\n//       );\r\n      \r\n//       setSales({ loading: false, data: filteredOrders, error: null });\r\n//     } catch (error) {\r\n//       console.error('Error fetching sales:', error);\r\n//       setSales({ loading: false, data: [], error: error.message });\r\n//     }\r\n//   };\r\n\r\n//   const fetchCustomers = async () => {\r\n//     setCustomers(prev => ({ ...prev, loading: true, error: null }));\r\n//     try {\r\n//       const response = await fetch(API_CUSTOMERS, {\r\n//         method: 'GET',\r\n//         headers: {\r\n//           'Authorization': `Bearer ${BEARER_TOKEN}`,\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//       });\r\n      \r\n//       if (!response.ok) {\r\n//         throw new Error(`HTTP error! status: ${response.status}`);\r\n//       }\r\n      \r\n//       const data = await response.json();\r\n//       setCustomers({ loading: false, data: data, error: null });\r\n//     } catch (error) {\r\n//       console.error('Error fetching customers:', error);\r\n//       setCustomers({ loading: false, data: [], error: error.message });\r\n//     }\r\n//   };\r\n\r\n//   // Load data on component mount\r\n//   useEffect(() => {\r\n//     fetchSales();\r\n//     fetchCustomers();\r\n//   }, []);\r\n\r\n//   // Helper function to get customer name by ID\r\n//   const getCustomerName = (customerId) => {\r\n//     if (!customerId || customerId === 'null') return 'Walk-in Customer';\r\n//     const customer = customers.data.find(c => c.id === customerId);\r\n//     return customer ? customer.name : 'Unknown Customer';\r\n//   };\r\n\r\n//   // Helper function to get customer details by ID\r\n//   const getCustomerDetails = (customerId) => {\r\n//     if (!customerId || customerId === 'null') return null;\r\n//     return customers.data.find(c => c.id === customerId);\r\n//   };\r\n\r\n//   // Calculate summary data\r\n//   const calculateSummary = () => {\r\n//     const totalAR = sales.data.reduce((sum, order) => sum + order.total, 0);\r\n//     const totalOrders = sales.data.length;\r\n//     const unfulfilledOrders = sales.data.filter(order => !order.fulfilled).length;\r\n//     const unpaidOrders = sales.data.filter(order => !order.paid).length;\r\n\r\n//     return {\r\n//       totalAR,\r\n//       totalOrders,\r\n//       unfulfilledOrders,\r\n//       unpaidOrders\r\n//     };\r\n//   };\r\n\r\n//   // Filter orders based on search and filters\r\n//   const getFilteredOrders = () => {\r\n//     let filtered = [...sales.data];\r\n\r\n//     if (filters.status !== 'all') {\r\n//       if (filters.status === 'unpaid') {\r\n//         filtered = filtered.filter(order => !order.paid);\r\n//       } else if (filters.status === 'unfulfilled') {\r\n//         filtered = filtered.filter(order => !order.fulfilled);\r\n//       }\r\n//     }\r\n\r\n//     if (filters.searchTerm) {\r\n//       const term = filters.searchTerm.toLowerCase();\r\n//       filtered = filtered.filter(order =>\r\n//         order.orderId.toLowerCase().includes(term) ||\r\n//         getCustomerName(order.customerId).toLowerCase().includes(term) ||\r\n//         order.lineItems.some(item => \r\n//           item.productName.toLowerCase().includes(term)\r\n//         )\r\n//       );\r\n//     }\r\n\r\n//     return filtered;\r\n//   };\r\n\r\n//   const formatDate = (dateString) => {\r\n//     if (!dateString) return 'N/A';\r\n//     return dateString.split('.').slice(0, 3).join('/');\r\n//   };\r\n\r\n//   const formatCurrency = (amount) => {\r\n//     return new Intl.NumberFormat('en-PK', {\r\n//       style: 'currency',\r\n//       currency: 'PKR',\r\n//       minimumFractionDigits: 0,\r\n//       maximumFractionDigits: 0\r\n//     }).format(amount);\r\n//   };\r\n\r\n//   const summary = calculateSummary();\r\n//   const filteredOrders = getFilteredOrders();\r\n\r\n//   // Loading state\r\n//   if (sales.loading || customers.loading) {\r\n//     return (\r\n//       <div className=\"flex items-center justify-center min-h-screen\">\r\n//         <div className=\"flex items-center space-x-3\">\r\n//           <Loader className=\"animate-spin text-emerald-600\" size={24} />\r\n//           <span className=\"text-gray-600\">Loading data from API...</span>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   // Error state\r\n//   if (sales.error || customers.error) {\r\n//     return (\r\n//       <div className=\"max-w-7xl mx-auto p-6\">\r\n//         <div className=\"bg-red-50 border border-red-200 rounded-lg p-6\">\r\n//           <div className=\"flex items-center mb-4\">\r\n//             <AlertTriangle className=\"text-red-600 mr-2\" size={20} />\r\n//             <h3 className=\"font-medium text-red-800\">API Connection Error</h3>\r\n//           </div>\r\n//           <div className=\"text-red-700 mb-4\">\r\n//             {sales.error && <div>Sales API Error: {sales.error}</div>}\r\n//             {customers.error && <div>Customers API Error: {customers.error}</div>}\r\n//           </div>\r\n//           <button\r\n//             onClick={() => {\r\n//               fetchSales();\r\n//               fetchCustomers();\r\n//             }}\r\n//             className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 flex items-center space-x-2\"\r\n//           >\r\n//             <RefreshCw size={16} />\r\n//             <span>Retry Connection</span>\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"max-w-7xl mx-auto p-6 bg-white\">\r\n//       {/* Header */}\r\n//       <div className=\"mb-8\">\r\n//         <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\r\n//           <CreditCard className=\"mr-3 text-emerald-600\" />\r\n//           Accounts Receivable - Outstanding Orders\r\n//         </h1>\r\n//         <p className=\"text-gray-600\">Manage unpaid and unfulfilled orders from POS system</p>\r\n//       </div>\r\n\r\n//       {/* Summary Cards */}\r\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\r\n//         <div className=\"bg-blue-50 p-6 rounded-lg border border-blue-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-blue-600 text-sm font-medium\">Total Outstanding</p>\r\n//               <p className=\"text-2xl font-bold text-blue-900\">{formatCurrency(summary.totalAR)}</p>\r\n//             </div>\r\n//             <DollarSign className=\"text-blue-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-blue-700 mt-2\">{summary.totalOrders} orders</p>\r\n//         </div>\r\n\r\n//         <div className=\"bg-red-50 p-6 rounded-lg border border-red-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-red-600 text-sm font-medium\">Unpaid Orders</p>\r\n//               <p className=\"text-2xl font-bold text-red-900\">{summary.unpaidOrders}</p>\r\n//             </div>\r\n//             <AlertTriangle className=\"text-red-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-red-700 mt-2\">Require payment</p>\r\n//         </div>\r\n\r\n//         <div className=\"bg-yellow-50 p-6 rounded-lg border border-yellow-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-yellow-600 text-sm font-medium\">Unfulfilled Orders</p>\r\n//               <p className=\"text-2xl font-bold text-yellow-900\">{summary.unfulfilledOrders}</p>\r\n//             </div>\r\n//             <Clock className=\"text-yellow-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-yellow-700 mt-2\">Pending fulfillment</p>\r\n//         </div>\r\n\r\n//         <div className=\"bg-purple-50 p-6 rounded-lg border border-purple-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-purple-600 text-sm font-medium\">Active Customers</p>\r\n//               <p className=\"text-2xl font-bold text-purple-900\">{customers.data.length}</p>\r\n//             </div>\r\n//             <Users className=\"text-purple-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-purple-700 mt-2\">Total customers</p>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Filters */}\r\n//       <div className=\"flex flex-wrap items-center gap-4 mb-6\">\r\n//         <div className=\"relative\">\r\n//           <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Search orders, customers, products...\"\r\n//             value={filters.searchTerm}\r\n//             onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\r\n//             className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//           />\r\n//         </div>\r\n\r\n//         <select\r\n//           value={filters.status}\r\n//           onChange={(e) => setFilters({ ...filters, status: e.target.value })}\r\n//           className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//         >\r\n//           <option value=\"all\">All Status</option>\r\n//           <option value=\"unpaid\">Unpaid Only</option>\r\n//           <option value=\"unfulfilled\">Unfulfilled Only</option>\r\n//         </select>\r\n\r\n//         <button\r\n//           onClick={() => {\r\n//             fetchSales();\r\n//             fetchCustomers();\r\n//           }}\r\n//           className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\r\n//         >\r\n//           <RefreshCw size={16} />\r\n//           <span>Refresh Data</span>\r\n//         </button>\r\n//       </div>\r\n\r\n//       {/* Orders Table */}\r\n//       <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//         <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//           <h3 className=\"text-lg font-semibold text-gray-900\">Outstanding Orders ({filteredOrders.length})</h3>\r\n//         </div>\r\n//         <div className=\"overflow-x-auto\">\r\n//           <table className=\"w-full\">\r\n//             <thead className=\"bg-gray-50\">\r\n//               <tr>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Order ID\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Customer\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Date\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Items\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Total Amount\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Payment Status\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Fulfillment Status\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Actions\r\n//                 </th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//               {filteredOrders.map((order) => (\r\n//                 <tr key={order.orderId} className=\"hover:bg-gray-50\">\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                     <div className=\"text-sm font-medium text-gray-900\">#{order.orderId}</div>\r\n//                     <div className=\"text-xs text-gray-500\">{order.status}</div>\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4\">\r\n//                     <div className=\"text-sm font-medium text-gray-900\">\r\n//                       {getCustomerName(order.customerId)}\r\n//                     </div>\r\n//                     {getCustomerDetails(order.customerId) && (\r\n//                       <div className=\"text-xs text-gray-500 flex items-center mt-1\">\r\n//                         <Mail className=\"mr-1\" size={10} />\r\n//                         {getCustomerDetails(order.customerId).email}\r\n//                       </div>\r\n//                     )}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                     {formatDate(order.createdAt)}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4\">\r\n//                     <div className=\"text-sm text-gray-900\">\r\n//                       {order.lineItems.map((item, index) => (\r\n//                         <div key={index} className=\"mb-1\">\r\n//                           <span className=\"font-medium\">{item.productName}</span>\r\n//                           <span className=\"text-gray-500 ml-2\">x{item.quantity}</span>\r\n//                         </div>\r\n//                       ))}\r\n//                     </div>\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n//                     {formatCurrency(order.total)}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                       order.paid \r\n//                         ? 'bg-green-100 text-green-800' \r\n//                         : 'bg-red-100 text-red-800'\r\n//                     }`}>\r\n//                       {order.paid ? 'Paid' : 'Unpaid'}\r\n//                     </span>\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                       order.fulfilled \r\n//                         ? 'bg-green-100 text-green-800' \r\n//                         : 'bg-yellow-100 text-yellow-800'\r\n//                     }`}>\r\n//                       {order.fulfilled ? 'Fulfilled' : 'Pending'}\r\n//                     </span>\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n//                     <button\r\n//                       onClick={() => setSelectedOrder(order)}\r\n//                       className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\r\n//                       title=\"View Details\"\r\n//                     >\r\n//                       <Eye size={16} />\r\n//                     </button>\r\n//                     <button \r\n//                       className=\"text-blue-600 hover:text-blue-900\"\r\n//                       title=\"Edit Order\"\r\n//                     >\r\n//                       <Edit size={16} />\r\n//                     </button>\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n\r\n//         {filteredOrders.length === 0 && (\r\n//           <div className=\"text-center py-12\">\r\n//             <div className=\"text-gray-500 text-lg\">No outstanding orders found</div>\r\n//             <p className=\"text-gray-400 mt-2\">All orders are either paid and fulfilled, or try adjusting your filters</p>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n\r\n//       {/* Order Detail Modal */}\r\n//       {selectedOrder && (\r\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\r\n//                   Order Details - #{selectedOrder.orderId}\r\n//                 </h3>\r\n//                 <button\r\n//                   onClick={() => setSelectedOrder(null)}\r\n//                   className=\"text-gray-400 hover:text-gray-600\"\r\n//                 >\r\n//                   <XCircle size={20} />\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <div className=\"px-6 py-4\">\r\n//               {/* Order Info */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n//                 <div className=\"space-y-4\">\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Order ID</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedOrder.orderId}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer</label>\r\n//                     <p className=\"text-sm text-gray-900\">{getCustomerName(selectedOrder.customerId)}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Created Date</label>\r\n//                     <p className=\"text-sm text-gray-900\">{formatDate(selectedOrder.createdAt)}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Status</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedOrder.status}</p>\r\n//                   </div>\r\n//                 </div>\r\n                \r\n//                 <div className=\"space-y-4\">\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Payment Status</label>\r\n//                     <div>\r\n//                       <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                         selectedOrder.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\r\n//                       }`}>\r\n//                         {selectedOrder.paid ? 'Paid' : 'Unpaid'}\r\n//                       </span>\r\n//                     </div>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Fulfillment Status</label>\r\n//                     <div>\r\n//                       <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                         selectedOrder.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n//                       }`}>\r\n//                         {selectedOrder.fulfilled ? 'Fulfilled' : 'Pending'}\r\n//                       </span>\r\n//                     </div>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Total Amount</label>\r\n//                     <p className=\"text-lg font-bold text-gray-900\">{formatCurrency(selectedOrder.total)}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Payable Amount</label>\r\n//                     <p className=\"text-sm text-gray-900\">{formatCurrency(selectedOrder.payableAmount)}</p>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Line Items */}\r\n//               <div className=\"mb-6\">\r\n//                 <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Order Items</h4>\r\n//                 <div className=\"overflow-x-auto\">\r\n//                   <table className=\"w-full border border-gray-200 rounded\">\r\n//                     <thead className=\"bg-gray-50\">\r\n//                       <tr>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Product</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Quantity</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Unit Price</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Total</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Status</th>\r\n//                       </tr>\r\n//                     </thead>\r\n//                     <tbody className=\"divide-y divide-gray-200\">\r\n//                       {selectedOrder.lineItems.map((item, index) => (\r\n//                         <tr key={index}>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900\">{item.productName}</td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{item.quantity}</td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{formatCurrency(item.price)}</td>\r\n//                           <td className=\"px-4 py-2 text-sm font-medium text-gray-900 text-right\">{formatCurrency(item.total)}</td>\r\n//                           <td className=\"px-4 py-2\">\r\n//                             <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                               item.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n//                             }`}>\r\n//                               {item.status}\r\n//                             </span>\r\n//                           </td>\r\n//                         </tr>\r\n//                       ))}\r\n//                     </tbody>\r\n//                   </table>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Totals */}\r\n//               <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n//                 <div className=\"space-y-2\">\r\n//                   <div className=\"flex justify-between\">\r\n//                     <span className=\"text-sm text-gray-600\">Subtotal:</span>\r\n//                     <span className=\"text-sm text-gray-900\">{formatCurrency(selectedOrder.subTotal)}</span>\r\n//                   </div>\r\n//                   <div className=\"flex justify-between\">\r\n//                     <span className=\"text-sm text-gray-600\">Tax ({selectedOrder.taxRate}%):</span>\r\n//                     <span className=\"text-sm text-gray-900\">{formatCurrency(selectedOrder.taxAmount)}</span>\r\n//                   </div>\r\n//                   {selectedOrder.discountAmount > 0 && (\r\n//                     <div className=\"flex justify-between\">\r\n//                       <span className=\"text-sm text-gray-600\">Discount:</span>\r\n//                       <span className=\"text-sm text-red-600\">-{formatCurrency(selectedOrder.discountAmount)}</span>\r\n//                     </div>\r\n//                   )}\r\n//                   <div className=\"flex justify-between font-bold text-lg border-t pt-2\">\r\n//                     <span>Total:</span>\r\n//                     <span>{formatCurrency(selectedOrder.total)}</span>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Action Buttons */}\r\n//               <div className=\"flex space-x-3 mt-6\">\r\n//                 {!selectedOrder.paid && (\r\n//                   <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\r\n//                     <CheckCircle size={16} />\r\n//                     <span>Mark as Paid</span>\r\n//                   </button>\r\n//                 )}\r\n//                 {!selectedOrder.fulfilled && (\r\n//                   <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\r\n//                     <FileText size={16} />\r\n//                     <span>Mark as Fulfilled</span>\r\n//                   </button>\r\n//                 )}\r\n//                 <button className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\">\r\n//                   <Download size={16} />\r\n//                   <span>Download Invoice</span>\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* API Status */}\r\n//       <div className=\"mt-8 p-6 bg-green-50 border border-green-200 rounded-lg\">\r\n//         <div className=\"flex items-center mb-4\">\r\n//           <CheckCircle className=\"text-green-600 mr-2\" size={20} />\r\n//           <h3 className=\"font-medium text-green-800\">API Integration Status</h3>\r\n//         </div>\r\n//         <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-green-700\">\r\n//           <div>\r\n//             <strong>Sales API:</strong> Connected - Showing {sales.data.length} outstanding orders\r\n//           </div>\r\n//           <div>\r\n//             <strong>Customers API:</strong> Connected - {customers.data.length} active customers loaded\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"mt-4 text-xs text-green-600\">\r\n//           <strong>Note:</strong> Only unpaid or unfulfilled orders are displayed. Update your Bearer token in the code for live data.\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AccountsReceivable;\r\n\r\n//good\r\n// import React, { useState, useEffect } from 'react';\r\n// import { \r\n//   Users, \r\n//   DollarSign, \r\n//   CreditCard, \r\n//   AlertTriangle, \r\n//   Clock, \r\n//   Plus, \r\n//   Search, \r\n//   Filter, \r\n//   Eye, \r\n//   Edit, \r\n//   Download,\r\n//   CheckCircle,\r\n//   XCircle,\r\n//   Calendar,\r\n//   FileText,\r\n//   TrendingUp,\r\n//   Mail,\r\n//   Phone,\r\n//   Loader,\r\n//   RefreshCw\r\n// } from 'lucide-react';\r\n\r\n// // API Configuration\r\n// const API_BASE_URL_SALES = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/orders?start=0&size=200';\r\n// const API_CUSTOMERS = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/customers?status=Active';\r\n\r\n// // Replace with your actual Bearer token\r\n// const BEARER_TOKEN = 'your-bearer-token-here';\r\n\r\n// const AccountsReceivableAPI = () => {\r\n//   // State management\r\n//   const [sales, setSales] = useState({ loading: false, data: [], error: null });\r\n//   const [customers, setCustomers] = useState({ loading: false, data: [], error: null });\r\n//   const [activeTab, setActiveTab] = useState('overview');\r\n//   const [selectedCustomer, setSelectedCustomer] = useState(null);\r\n//   const [selectedOrder, setSelectedOrder] = useState(null);\r\n//   const [viewInvoice, setViewInvoice] = useState(null);\r\n//   const [showInvoiceForm, setShowInvoiceForm] = useState(false);\r\n//   const [filters, setFilters] = useState({\r\n//     customerType: 'all',\r\n//     status: 'all',\r\n//     dateRange: '30',\r\n//     searchTerm: ''\r\n//   });\r\n\r\n//   // API Functions\r\n//   const fetchSales = async () => {\r\n//     setSales(prev => ({ ...prev, loading: true, error: null }));\r\n//     try {\r\n//       const response = await fetch(API_BASE_URL_SALES, {\r\n//         method: 'GET',\r\n//         headers: {\r\n//           'Authorization': `Bearer ${BEARER_TOKEN}`,\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//       });\r\n      \r\n//       if (!response.ok) {\r\n//         throw new Error(`HTTP error! status: ${response.status}`);\r\n//       }\r\n      \r\n//       const data = await response.json();\r\n      \r\n//       // Show only records that are unpaid and fulfilled\r\n//       const filteredOrders = data.filter(order => \r\n//         !order.paid && order.fulfilled\r\n//       );\r\n      \r\n//       setSales({ loading: false, data: filteredOrders, error: null });\r\n//     } catch (error) {\r\n//       console.error('Error fetching sales:', error);\r\n//       setSales({ loading: false, data: [], error: error.message });\r\n//     }\r\n//   };\r\n\r\n//   const fetchCustomers = async () => {\r\n//     setCustomers(prev => ({ ...prev, loading: true, error: null }));\r\n//     try {\r\n//       const response = await fetch(API_CUSTOMERS, {\r\n//         method: 'GET',\r\n//         headers: {\r\n//           'Authorization': `Bearer ${BEARER_TOKEN}`,\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//       });\r\n      \r\n//       if (!response.ok) {\r\n//         throw new Error(`HTTP error! status: ${response.status}`);\r\n//       }\r\n      \r\n//       const data = await response.json();\r\n      \r\n//       // Transform API customers to match our structure\r\n//       const transformedCustomers = data.map(customer => ({\r\n//         id: customer.id,\r\n//         name: customer.name,\r\n//         email: customer.email,\r\n//         phone: customer.phoneNumber,\r\n//         address: customer.address.length > 0 ? customer.address[0] : 'No address provided',\r\n//         customerType: 'individual', // Default type since API doesn't provide this\r\n//         creditLimit: 50000, // Default credit limit\r\n//         paymentTerms: 30,\r\n//         totalOwed: calculateCustomerBalance(customer.id),\r\n//         overdueAmount: calculateCustomerOverdue(customer.id),\r\n//         lastPayment: '2025-01-15',\r\n//         creditStatus: 'good',\r\n//         accountBalance: -calculateCustomerBalance(customer.id),\r\n//         invoiceCount: getCustomerInvoiceCount(customer.id),\r\n//         avgPaymentDays: 25,\r\n//         status: customer.status\r\n//       }));\r\n      \r\n//       setCustomers({ loading: false, data: transformedCustomers, error: null });\r\n//     } catch (error) {\r\n//       console.error('Error fetching customers:', error);\r\n//       setCustomers({ loading: false, data: [], error: error.message });\r\n//     }\r\n//   };\r\n\r\n//   // Helper functions\r\n//   const calculateCustomerBalance = (customerId) => {\r\n//     return sales.data\r\n//       .filter(order => order.customerId === customerId && (!order.paid || !order.fulfilled))\r\n//       .reduce((sum, order) => sum + order.total, 0);\r\n//   };\r\n\r\n//   const calculateCustomerOverdue = (customerId) => {\r\n//     return sales.data\r\n//       .filter(order => order.customerId === customerId && !order.paid)\r\n//       .reduce((sum, order) => sum + order.total, 0);\r\n//   };\r\n\r\n//   const getCustomerInvoiceCount = (customerId) => {\r\n//     return sales.data.filter(order => order.customerId === customerId).length;\r\n//   };\r\n\r\n//   // Load data on component mount\r\n//   useEffect(() => {\r\n//     fetchSales();\r\n//     fetchCustomers();\r\n//   }, []);\r\n\r\n//   // Helper function to get customer name by ID\r\n//   const getCustomerName = (customerId) => {\r\n//     if (!customerId || customerId === 'null') return 'Walk-in Customer';\r\n//     const customer = customers.data.find(c => c.id === customerId);\r\n//     return customer ? customer.name : 'Unknown Customer';\r\n//   };\r\n\r\n//   // Helper function to get customer details by ID\r\n//   const getCustomerDetails = (customerId) => {\r\n//     if (!customerId || customerId === 'null') return null;\r\n//     return customers.data.find(c => c.id === customerId);\r\n//   };\r\n\r\n//   // Calculate AR summary\r\n//   const calculateARSummary = () => {\r\n//     const totalAR = customers.data.reduce((sum, customer) => sum + customer.totalOwed, 0);\r\n//     const totalOverdue = customers.data.reduce((sum, customer) => sum + customer.overdueAmount, 0);\r\n//     const customersWithBalance = customers.data.filter(customer => customer.totalOwed > 0).length;\r\n//     const avgDaysOutstanding = customers.data.length > 0 \r\n//       ? customers.data.reduce((sum, customer) => sum + customer.avgPaymentDays, 0) / customers.data.length \r\n//       : 0;\r\n\r\n//     return {\r\n//       totalAR,\r\n//       totalOverdue,\r\n//       customersWithBalance,\r\n//       avgDaysOutstanding: Math.round(avgDaysOutstanding)\r\n//     };\r\n//   };\r\n\r\n//   // Get aging data\r\n//   const getAgingData = () => {\r\n//     const aging = {\r\n//       current: 0,\r\n//       days30: 0,\r\n//       days60: 0,\r\n//       days90: 0,\r\n//       over90: 0\r\n//     };\r\n\r\n//     sales.data.forEach(order => {\r\n//       if (order.paid) return;\r\n      \r\n//       const daysPastDue = order.daysOverdue || 0;\r\n      \r\n//       if (daysPastDue <= 0) {\r\n//         aging.current += order.total;\r\n//       } else if (daysPastDue <= 30) {\r\n//         aging.days30 += order.total;\r\n//       } else if (daysPastDue <= 60) {\r\n//         aging.days60 += order.total;\r\n//       } else if (daysPastDue <= 90) {\r\n//         aging.days90 += order.total;\r\n//       } else {\r\n//         aging.over90 += order.total;\r\n//       }\r\n//     });\r\n\r\n//     return aging;\r\n//   };\r\n\r\n//   // Filter customers\r\n//   const getFilteredCustomers = () => {\r\n//     let filtered = [...customers.data];\r\n\r\n//     if (filters.customerType !== 'all') {\r\n//       filtered = filtered.filter(customer => customer.customerType === filters.customerType);\r\n//     }\r\n\r\n//     if (filters.status !== 'all') {\r\n//       filtered = filtered.filter(customer => {\r\n//         if (filters.status === 'overdue') return customer.overdueAmount > 0;\r\n//         if (filters.status === 'current') return customer.totalOwed > 0 && customer.overdueAmount === 0;\r\n//         if (filters.status === 'paid_up') return customer.totalOwed === 0;\r\n//         return true;\r\n//       });\r\n//     }\r\n\r\n//     if (filters.searchTerm) {\r\n//       const term = filters.searchTerm.toLowerCase();\r\n//       filtered = filtered.filter(customer =>\r\n//         customer.name.toLowerCase().includes(term) ||\r\n//         customer.email.toLowerCase().includes(term) ||\r\n//         customer.id.toLowerCase().includes(term)\r\n//       );\r\n//     }\r\n\r\n//     return filtered;\r\n//   };\r\n\r\n//   const getCreditStatusColor = (status) => {\r\n//     switch (status) {\r\n//       case 'excellent': return 'bg-green-100 text-green-800';\r\n//       case 'good': return 'bg-blue-100 text-blue-800';\r\n//       case 'watch': return 'bg-yellow-100 text-yellow-800';\r\n//       case 'hold': return 'bg-red-100 text-red-800';\r\n//       case 'cash_only': return 'bg-gray-100 text-gray-800';\r\n//       default: return 'bg-gray-100 text-gray-800';\r\n//     }\r\n//   };\r\n\r\n//   const getInvoiceStatusColor = (status) => {\r\n//     switch (status) {\r\n//       case 'paid': return 'bg-green-100 text-green-800';\r\n//       case 'outstanding': return 'bg-blue-100 text-blue-800';\r\n//       case 'overdue': return 'bg-red-100 text-red-800';\r\n//       case 'partial': return 'bg-yellow-100 text-yellow-800';\r\n//       default: return 'bg-gray-100 text-gray-800';\r\n//     }\r\n//   };\r\n\r\n//   const formatDate = (dateString) => {\r\n//     if (!dateString) return 'N/A';\r\n//     return dateString.split('.').slice(0, 3).join('/');\r\n//   };\r\n\r\n//   const formatCurrency = (amount) => {\r\n//     return new Intl.NumberFormat('en-US', {\r\n//       style: 'currency',\r\n//       currency: 'USD'\r\n//     }).format(amount);\r\n//   };\r\n\r\n//   const summary = calculateARSummary();\r\n//   const aging = getAgingData();\r\n//   const filteredCustomers = getFilteredCustomers();\r\n\r\n//   // Loading state\r\n//   if (sales.loading || customers.loading) {\r\n//     return (\r\n//       <div className=\"flex items-center justify-center min-h-screen\">\r\n//         <div className=\"flex items-center space-x-3\">\r\n//           <Loader className=\"animate-spin text-emerald-600\" size={24} />\r\n//           <span className=\"text-gray-600\">Loading data from API...</span>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   // Error state\r\n//   if (sales.error || customers.error) {\r\n//     return (\r\n//       <div className=\"max-w-7xl mx-auto p-6\">\r\n//         <div className=\"bg-red-50 border border-red-200 rounded-lg p-6\">\r\n//           <div className=\"flex items-center mb-4\">\r\n//             <AlertTriangle className=\"text-red-600 mr-2\" size={20} />\r\n//             <h3 className=\"font-medium text-red-800\">API Connection Error</h3>\r\n//           </div>\r\n//           <div className=\"text-red-700 mb-4\">\r\n//             {sales.error && <div>Sales API Error: {sales.error}</div>}\r\n//             {customers.error && <div>Customers API Error: {customers.error}</div>}\r\n//           </div>\r\n//           <button\r\n//             onClick={() => {\r\n//               fetchSales();\r\n//               fetchCustomers();\r\n//             }}\r\n//             className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 flex items-center space-x-2\"\r\n//           >\r\n//             <RefreshCw size={16} />\r\n//             <span>Retry Connection</span>\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"max-w-7xl mx-auto p-6 bg-white\">\r\n//       {/* Header */}\r\n//       <div className=\"mb-8\">\r\n//         <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\r\n//           <CreditCard className=\"mr-3 text-emerald-600\" />\r\n//           Accounts Receivable\r\n//         </h1>\r\n//         <p className=\"text-gray-600\">Manage customer invoicing, payments, and credit limits</p>\r\n//       </div>\r\n\r\n//       {/* Summary Cards */}\r\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\r\n//         <div className=\"bg-blue-50 p-6 rounded-lg border border-blue-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-blue-600 text-sm font-medium\">Total A/R</p>\r\n//               <p className=\"text-2xl font-bold text-blue-900\">{formatCurrency(summary.totalAR)}</p>\r\n//             </div>\r\n//             <DollarSign className=\"text-blue-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-blue-700 mt-2\">{summary.customersWithBalance} customers with balances</p>\r\n//         </div>\r\n\r\n//         <div className=\"bg-red-50 p-6 rounded-lg border border-red-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-red-600 text-sm font-medium\">Overdue Amount</p>\r\n//               <p className=\"text-2xl font-bold text-red-900\">{formatCurrency(summary.totalOverdue)}</p>\r\n//             </div>\r\n//             <AlertTriangle className=\"text-red-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-red-700 mt-2\">\r\n//             {summary.totalAR > 0 ? ((summary.totalOverdue / summary.totalAR) * 100).toFixed(1) : 0}% of total A/R\r\n//           </p>\r\n//         </div>\r\n\r\n//         <div className=\"bg-green-50 p-6 rounded-lg border border-green-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-green-600 text-sm font-medium\">Avg. Days Outstanding</p>\r\n//               <p className=\"text-2xl font-bold text-green-900\">{summary.avgDaysOutstanding}</p>\r\n//             </div>\r\n//             <Clock className=\"text-green-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-green-700 mt-2\">Collection performance</p>\r\n//         </div>\r\n\r\n//         <div className=\"bg-purple-50 p-6 rounded-lg border border-purple-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-purple-600 text-sm font-medium\">Active Customers</p>\r\n//               <p className=\"text-2xl font-bold text-purple-900\">{customers.data.length}</p>\r\n//             </div>\r\n//             <Users className=\"text-purple-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-purple-700 mt-2\">Total customer accounts</p>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Tabs */}\r\n//       <div className=\"mb-6\">\r\n//         <div className=\"border-b border-gray-200\">\r\n//           <nav className=\"-mb-px flex space-x-8\">\r\n//             {[\r\n//               { id: 'overview', name: 'Customer Overview', icon: Users },\r\n//               { id: 'invoices', name: 'Invoices', icon: FileText },\r\n//               { id: 'aging', name: 'Aging Report', icon: Clock },\r\n//               { id: 'payments', name: 'Payments', icon: CheckCircle }\r\n//             ].map((tab) => (\r\n//               <button\r\n//                 key={tab.id}\r\n//                 onClick={() => setActiveTab(tab.id)}\r\n//                 className={`flex items-center py-2 px-1 border-b-2 font-medium text-sm ${\r\n//                   activeTab === tab.id\r\n//                     ? 'border-emerald-500 text-emerald-600'\r\n//                     : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n//                 }`}\r\n//               >\r\n//                 <tab.icon className=\"mr-2\" size={16} />\r\n//                 {tab.name}\r\n//               </button>\r\n//             ))}\r\n//           </nav>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Tab Content */}\r\n//       {activeTab === 'overview' && (\r\n//         <div>\r\n//           {/* Filters */}\r\n//           <div className=\"flex flex-wrap items-center gap-4 mb-6\">\r\n//             <div className=\"relative\">\r\n//               <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n//               <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Search customers...\"\r\n//                 value={filters.searchTerm}\r\n//                 onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\r\n//                 className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               />\r\n//             </div>\r\n\r\n//             <select\r\n//               value={filters.customerType}\r\n//               onChange={(e) => setFilters({ ...filters, customerType: e.target.value })}\r\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//             >\r\n//               <option value=\"all\">All Customer Types</option>\r\n//               <option value=\"corporate\">Corporate</option>\r\n//               <option value=\"small_business\">Small Business</option>\r\n//               <option value=\"individual\">Individual</option>\r\n//               <option value=\"cash\">Cash Only</option>\r\n//             </select>\r\n\r\n//             <select\r\n//               value={filters.status}\r\n//               onChange={(e) => setFilters({ ...filters, status: e.target.value })}\r\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//             >\r\n//               <option value=\"all\">All Statuses</option>\r\n//               <option value=\"current\">Current</option>\r\n//               <option value=\"overdue\">Overdue</option>\r\n//               <option value=\"paid_up\">Paid Up</option>\r\n//             </select>\r\n\r\n//             <button\r\n//               onClick={() => setShowInvoiceForm(true)}\r\n//               className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\r\n//             >\r\n//               <Plus size={16} />\r\n//               <span>New Invoice</span>\r\n//             </button>\r\n//           </div>\r\n\r\n//           {/* Customer List */}\r\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//             <div className=\"overflow-x-auto\">\r\n//               <table className=\"w-full\">\r\n//                 <thead className=\"bg-gray-50\">\r\n//                   <tr>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Customer\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Type\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Credit Limit\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Balance\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Overdue\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Credit Status\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Last Payment\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Actions\r\n//                     </th>\r\n//                   </tr>\r\n//                 </thead>\r\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//                   {filteredCustomers.map((customer) => (\r\n//                     <tr key={customer.id} className=\"hover:bg-gray-50\">\r\n//                       <td className=\"px-6 py-4\">\r\n//                         <div>\r\n//                           <div className=\"text-sm font-medium text-gray-900\">{customer.name}</div>\r\n//                           <div className=\"text-sm text-gray-500\">{customer.id}</div>\r\n//                           <div className=\"text-xs text-gray-400 flex items-center mt-1\">\r\n//                             <Mail className=\"mr-1\" size={12} />\r\n//                             {customer.email}\r\n//                           </div>\r\n//                         </div>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-gray-100 text-gray-800\">\r\n//                           {customer.customerType.replace('_', ' ')}\r\n//                         </span>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {formatCurrency(customer.creditLimit)}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <div className=\"text-sm font-medium text-gray-900\">\r\n//                           {formatCurrency(customer.totalOwed)}\r\n//                         </div>\r\n//                         <div className=\"text-xs text-gray-500\">\r\n//                           {customer.invoiceCount} invoices\r\n//                         </div>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         {customer.overdueAmount > 0 ? (\r\n//                           <span className=\"text-red-600 font-medium\">\r\n//                             {formatCurrency(customer.overdueAmount)}\r\n//                           </span>\r\n//                         ) : (\r\n//                           <span className=\"text-green-600\">$0.00</span>\r\n//                         )}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(customer.creditStatus)}`}>\r\n//                           {customer.creditStatus.replace('_', ' ')}\r\n//                         </span>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {customer.lastPayment}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n//                         <button\r\n//                           onClick={() => setSelectedCustomer(customer)}\r\n//                           className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\r\n//                         >\r\n//                           <Eye size={16} />\r\n//                         </button>\r\n//                         <button className=\"text-blue-600 hover:text-blue-900\">\r\n//                           <Edit size={16} />\r\n//                         </button>\r\n//                       </td>\r\n//                     </tr>\r\n//                   ))}\r\n//                 </tbody>\r\n//               </table>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {activeTab === 'aging' && (\r\n//         <div>\r\n//           <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n//             {/* Aging Summary */}\r\n//             <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Aging Summary</h3>\r\n//               <div className=\"space-y-4\">\r\n//                 <div className=\"flex justify-between items-center p-3 bg-green-50 rounded\">\r\n//                   <span className=\"font-medium text-green-800\">Current (0-30 days)</span>\r\n//                   <span className=\"font-bold text-green-900\">{formatCurrency(aging.current)}</span>\r\n//                 </div>\r\n//                 <div className=\"flex justify-between items-center p-3 bg-yellow-50 rounded\">\r\n//                   <span className=\"font-medium text-yellow-800\">31-60 days</span>\r\n//                   <span className=\"font-bold text-yellow-900\">{formatCurrency(aging.days30)}</span>\r\n//                 </div>\r\n//                 <div className=\"flex justify-between items-center p-3 bg-orange-50 rounded\">\r\n//                   <span className=\"font-medium text-orange-800\">61-90 days</span>\r\n//                   <span className=\"font-bold text-orange-900\">{formatCurrency(aging.days60)}</span>\r\n//                 </div>\r\n//                 <div className=\"flex justify-between items-center p-3 bg-red-50 rounded\">\r\n//                   <span className=\"font-medium text-red-800\">Over 90 days</span>\r\n//                   <span className=\"font-bold text-red-900\">{formatCurrency(aging.over90)}</span>\r\n//                 </div>\r\n//               </div>\r\n//               <div className=\"mt-4 pt-4 border-t\">\r\n//                 <div className=\"flex justify-between items-center\">\r\n//                   <span className=\"text-lg font-semibold text-gray-900\">Total Outstanding</span>\r\n//                   <span className=\"text-xl font-bold text-gray-900\">\r\n//                     {formatCurrency(aging.current + aging.days30 + aging.days60 + aging.days90 + aging.over90)}\r\n//                   </span>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n\r\n//             {/* Collection Priority */}\r\n//             <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Collection Priority</h3>\r\n//               <div className=\"space-y-3\">\r\n//                 {customers.data\r\n//                   .filter(customer => customer.overdueAmount > 0)\r\n//                   .sort((a, b) => b.overdueAmount - a.overdueAmount)\r\n//                   .slice(0, 5)\r\n//                   .map((customer, index) => (\r\n//                     <div key={customer.id} className=\"flex items-center justify-between p-3 bg-red-50 rounded\">\r\n//                       <div>\r\n//                         <div className=\"font-medium text-gray-900\">{customer.name}</div>\r\n//                         <div className=\"text-sm text-gray-500\">\r\n//                           Last payment: {customer.lastPayment}\r\n//                         </div>\r\n//                       </div>\r\n//                       <div className=\"text-right\">\r\n//                         <div className=\"font-bold text-red-900\">{formatCurrency(customer.overdueAmount)}</div>\r\n//                         <div className=\"text-xs text-red-700\">#{index + 1} Priority</div>\r\n//                       </div>\r\n//                     </div>\r\n//                   ))}\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {activeTab === 'invoices' && (\r\n//         <div>\r\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-900\">Outstanding Orders/Invoices</h3>\r\n//             </div>\r\n//             <div className=\"overflow-x-auto\">\r\n//               <table className=\"w-full\">\r\n//                 <thead className=\"bg-gray-50\">\r\n//                   <tr>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Order #\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Customer\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Date\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Items\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Amount\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Payment Status\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Fulfillment\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Actions\r\n//                     </th>\r\n//                   </tr>\r\n//                 </thead>\r\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//                   {sales.data.map((order) => (\r\n//                     <tr key={order.orderId} className=\"hover:bg-gray-50\">\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <div className=\"text-sm font-medium text-gray-900\">#{order.orderId}</div>\r\n//                         <div className=\"text-xs text-gray-500\">{order.status}</div>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4\">\r\n//                         <div className=\"text-sm font-medium text-gray-900\">{getCustomerName(order.customerId)}</div>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {formatDate(order.createdAt)}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4\">\r\n//                         <div className=\"text-sm text-gray-900\">\r\n//                           {order.lineItems.map((item, index) => (\r\n//                             <div key={index} className=\"mb-1\">\r\n//                               <span className=\"font-medium\">{item.productName}</span>\r\n//                               <span className=\"text-gray-500 ml-2\">x{item.quantity}</span>\r\n//                             </div>\r\n//                           ))}\r\n//                         </div>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {formatCurrency(order.total)}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                           order.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\r\n//                         }`}>\r\n//                           {order.paid ? 'Paid' : 'Unpaid'}\r\n//                         </span>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                           order.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n//                         }`}>\r\n//                           {order.fulfilled ? 'Fulfilled' : 'Pending'}\r\n//                         </span>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n//                         <button\r\n//                           className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\r\n//                           onClick={() => setViewInvoice(order)}\r\n//                         >\r\n//                           <Eye size={16} />\r\n//                         </button>\r\n//                         <button className=\"text-blue-600 hover:text-blue-900\">\r\n//                           <Download size={16} />\r\n//                         </button>\r\n//                       </td>\r\n//                     </tr>\r\n//                   ))}\r\n//                 </tbody>\r\n//               </table>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {activeTab === 'payments' && (\r\n//         <div>\r\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-900\">Recent Payment Activities</h3>\r\n//             </div>\r\n//             <div className=\"overflow-x-auto\">\r\n//               <table className=\"w-full\">\r\n//                 <thead className=\"bg-gray-50\">\r\n//                   <tr>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Order ID\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Customer\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Date\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Amount\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Payment Status\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Payment Method\r\n//                     </th>\r\n//                   </tr>\r\n//                 </thead>\r\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//                   {sales.data.filter(order => order.paid).map((order) => (\r\n//                     <tr key={order.orderId} className=\"hover:bg-gray-50\">\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n//                         #{order.orderId}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {getCustomerName(order.customerId)}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {formatDate(order.createdAt)}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {formatCurrency(order.total)}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-green-100 text-green-800\">\r\n//                           Paid\r\n//                         </span>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-blue-100 text-blue-800\">\r\n//                           POS System\r\n//                         </span>\r\n//                       </td>\r\n//                     </tr>\r\n//                   ))}\r\n//                 </tbody>\r\n//               </table>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Customer Detail Modal */}\r\n//       {selectedCustomer && (\r\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\r\n//                   Customer Details - {selectedCustomer.name}\r\n//                 </h3>\r\n//                 <button\r\n//                   onClick={() => setSelectedCustomer(null)}\r\n//                   className=\"text-gray-400 hover:text-gray-600\"\r\n//                 >\r\n//                   <XCircle size={20} />\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <div className=\"px-6 py-4\">\r\n//               {/* Customer Info Grid */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n//                 <div className=\"space-y-4\">\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer ID</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.id}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Email</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.email}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Phone</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.phone}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Address</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.address}</p>\r\n//                   </div>\r\n//                 </div>\r\n                \r\n//                 <div className=\"space-y-4\">\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer Type</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.customerType.replace('_', ' ')}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Limit</label>\r\n//                     <p className=\"text-sm text-gray-900\">{formatCurrency(selectedCustomer.creditLimit)}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Payment Terms</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.paymentTerms} days</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Status</label>\r\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(selectedCustomer.creditStatus)}`}>\r\n//                       {selectedCustomer.creditStatus.replace('_', ' ')}\r\n//                     </span>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Financial Summary */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\r\n//                 <div className=\"bg-blue-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-blue-600\">Current Balance</div>\r\n//                   <div className=\"text-xl font-bold text-blue-900\">\r\n//                     {formatCurrency(selectedCustomer.totalOwed)}\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"bg-red-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-red-600\">Overdue Amount</div>\r\n//                   <div className=\"text-xl font-bold text-red-900\">\r\n//                     {formatCurrency(selectedCustomer.overdueAmount)}\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"bg-green-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-green-600\">Credit Available</div>\r\n//                   <div className=\"text-xl font-bold text-green-900\">\r\n//                     {formatCurrency(selectedCustomer.creditLimit - selectedCustomer.totalOwed)}\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"bg-purple-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-purple-600\">Avg Payment Days</div>\r\n//                   <div className=\"text-xl font-bold text-purple-900\">\r\n//                     {selectedCustomer.avgPaymentDays}\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Customer Orders */}\r\n//               <div className=\"mb-6\">\r\n//                 <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Customer Orders</h4>\r\n//                 <div className=\"overflow-x-auto\">\r\n//                   <table className=\"w-full border border-gray-200 rounded\">\r\n//                     <thead className=\"bg-gray-50\">\r\n//                       <tr>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Order</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Date</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Items</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Amount</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Payment</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Fulfillment</th>\r\n//                       </tr>\r\n//                     </thead>\r\n//                     <tbody className=\"divide-y divide-gray-200\">\r\n//                       {sales.data\r\n//                         .filter(order => order.customerId === selectedCustomer.id)\r\n//                         .map((order) => (\r\n//                           <tr key={order.orderId}>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">#{order.orderId}</td>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{formatDate(order.createdAt)}</td>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">\r\n//                               {order.lineItems.map(item => item.productName).join(', ')}\r\n//                             </td>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{formatCurrency(order.total)}</td>\r\n//                             <td className=\"px-4 py-2\">\r\n//                               <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                                 order.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\r\n//                               }`}>\r\n//                                 {order.paid ? 'Paid' : 'Unpaid'}\r\n//                               </span>\r\n//                             </td>\r\n//                             <td className=\"px-4 py-2\">\r\n//                               <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                                 order.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n//                               }`}>\r\n//                                 {order.fulfilled ? 'Fulfilled' : 'Pending'}\r\n//                               </span>\r\n//                             </td>\r\n//                           </tr>\r\n//                         ))}\r\n//                     </tbody>\r\n//                   </table>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Action Buttons */}\r\n//               <div className=\"flex space-x-3\">\r\n//                 <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\r\n//                   <Plus size={16} />\r\n//                   <span>New Invoice</span>\r\n//                 </button>\r\n//                 <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\r\n//                   <CheckCircle size={16} />\r\n//                   <span>Record Payment</span>\r\n//                 </button>\r\n//                 <button className=\"px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 flex items-center space-x-2\">\r\n//                   <Mail size={16} />\r\n//                   <span>Send Statement</span>\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Order/Invoice Detail Modal */}\r\n//       {viewInvoice && (\r\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\r\n//                   Order Details - #{viewInvoice.orderId}\r\n//                 </h3>\r\n//                 <button\r\n//                   onClick={() => setViewInvoice(null)}\r\n//                   className=\"text-gray-400 hover:text-gray-600\"\r\n//                 >\r\n//                   <XCircle size={20} />\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <div className=\"px-6 py-4\">\r\n//               {/* Order Info */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n//                 <div className=\"space-y-4\">\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Order ID</label>\r\n//                     <p className=\"text-sm text-gray-900\">{viewInvoice.orderId}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer</label>\r\n//                     <p className=\"text-sm text-gray-900\">{getCustomerName(viewInvoice.customerId)}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Created Date</label>\r\n//                     <p className=\"text-sm text-gray-900\">{formatDate(viewInvoice.createdAt)}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Status</label>\r\n//                     <p className=\"text-sm text-gray-900\">{viewInvoice.status}</p>\r\n//                   </div>\r\n//                 </div>\r\n                \r\n//                 <div className=\"space-y-4\">\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Payment Status</label>\r\n//                     <div>\r\n//                       <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                         viewInvoice.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\r\n//                       }`}>\r\n//                         {viewInvoice.paid ? 'Paid' : 'Unpaid'}\r\n//                       </span>\r\n//                     </div>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Fulfillment Status</label>\r\n//                     <div>\r\n//                       <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                         viewInvoice.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n//                       }`}>\r\n//                         {viewInvoice.fulfilled ? 'Fulfilled' : 'Pending'}\r\n//                       </span>\r\n//                     </div>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Total Amount</label>\r\n//                     <p className=\"text-lg font-bold text-gray-900\">{formatCurrency(viewInvoice.total)}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Payable Amount</label>\r\n//                     <p className=\"text-sm text-gray-900\">{formatCurrency(viewInvoice.payableAmount)}</p>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Line Items */}\r\n//               <div className=\"mb-6\">\r\n//                 <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Order Items</h4>\r\n//                 <div className=\"overflow-x-auto\">\r\n//                   <table className=\"w-full border border-gray-200 rounded\">\r\n//                     <thead className=\"bg-gray-50\">\r\n//                       <tr>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Product</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Quantity</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Unit Price</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Total</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Status</th>\r\n//                       </tr>\r\n//                     </thead>\r\n//                     <tbody className=\"divide-y divide-gray-200\">\r\n//                       {viewInvoice.lineItems.map((item, index) => (\r\n//                         <tr key={index}>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900\">{item.productName}</td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{item.quantity}</td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{formatCurrency(item.price)}</td>\r\n//                           <td className=\"px-4 py-2 text-sm font-medium text-gray-900 text-right\">{formatCurrency(item.total)}</td>\r\n//                           <td className=\"px-4 py-2\">\r\n//                             <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                               item.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n//                             }`}>\r\n//                               {item.status}\r\n//                             </span>\r\n//                           </td>\r\n//                         </tr>\r\n//                       ))}\r\n//                     </tbody>\r\n//                   </table>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Totals */}\r\n//               <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n//                 <div className=\"space-y-2\">\r\n//                   <div className=\"flex justify-between\">\r\n//                     <span className=\"text-sm text-gray-600\">Subtotal:</span>\r\n//                     <span className=\"text-sm text-gray-900\">{formatCurrency(viewInvoice.subTotal)}</span>\r\n//                   </div>\r\n//                   <div className=\"flex justify-between\">\r\n//                     <span className=\"text-sm text-gray-600\">Tax ({viewInvoice.taxRate}%):</span>\r\n//                     <span className=\"text-sm text-gray-900\">{formatCurrency(viewInvoice.taxAmount)}</span>\r\n//                   </div>\r\n//                   {viewInvoice.discountAmount > 0 && (\r\n//                     <div className=\"flex justify-between\">\r\n//                       <span className=\"text-sm text-gray-600\">Discount:</span>\r\n//                       <span className=\"text-sm text-red-600\">-{formatCurrency(viewInvoice.discountAmount)}</span>\r\n//                     </div>\r\n//                   )}\r\n//                   <div className=\"flex justify-between font-bold text-lg border-t pt-2\">\r\n//                     <span>Total:</span>\r\n//                     <span>{formatCurrency(viewInvoice.total)}</span>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Action Buttons */}\r\n//               <div className=\"flex space-x-3 mt-6\">\r\n//                 {!viewInvoice.paid && (\r\n//                   <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\r\n//                     <CheckCircle size={16} />\r\n//                     <span>Mark as Paid</span>\r\n//                   </button>\r\n//                 )}\r\n//                 {!viewInvoice.fulfilled && (\r\n//                   <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\r\n//                     <FileText size={16} />\r\n//                     <span>Mark as Fulfilled</span>\r\n//                   </button>\r\n//                 )}\r\n//                 <button className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\">\r\n//                   <Download size={16} />\r\n//                   <span>Download Invoice</span>\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* API Integration Status */}\r\n//       <div className=\"mt-8 p-6 bg-green-50 border border-green-200 rounded-lg\">\r\n//         <div className=\"flex items-center mb-4\">\r\n//           <CheckCircle className=\"text-green-600 mr-2\" size={20} />\r\n//           <h3 className=\"font-medium text-green-800\">POS Integration Active</h3>\r\n//         </div>\r\n//         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm text-green-700\">\r\n//           <div>\r\n//             <strong>Sales Orders:</strong> {sales.data.length} outstanding orders from POS system\r\n//           </div>\r\n//           <div>\r\n//             <strong>Customers:</strong> {customers.data.length} active customers synchronized\r\n//           </div>\r\n//           <div>\r\n//             <strong>Real-time Updates:</strong> Data refreshes automatically with POS transactions\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"mt-4 text-xs text-green-600\">\r\n//           <strong>Note:</strong> Only showing unpaid or unfulfilled orders. Replace Bearer token for live data connection.\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AccountsReceivableAPI;\r\n\r\n\r\n//excellent\r\n// import React, { useState, useEffect } from 'react';\r\n// import { \r\n//   Users, \r\n//   DollarSign, \r\n//   CreditCard, \r\n//   AlertTriangle, \r\n//   Clock, \r\n//   Plus, \r\n//   Search, \r\n//   Filter, \r\n//   Eye, \r\n//   Edit, \r\n//   Download,\r\n//   CheckCircle,\r\n//   XCircle,\r\n//   Calendar,\r\n//   FileText,\r\n//   TrendingUp,\r\n//   Mail,\r\n//   Phone,\r\n//   Loader,\r\n//   RefreshCw\r\n// } from 'lucide-react';\r\n\r\n// // API Configuration\r\n// const API_BASE_URL_SALES = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/orders?start=0&size=200';\r\n// const API_CUSTOMERS = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/customers?status=Active';\r\n\r\n// // Replace with your actual Bearer token\r\n// const BEARER_TOKEN = 'your-bearer-token-here';\r\n\r\n// const AccountsReceivableAPI = () => {\r\n//   // State management\r\n//   const [sales, setSales] = useState({ loading: false, data: [], error: null });\r\n//   const [customers, setCustomers] = useState({ loading: false, data: [], error: null });\r\n//   const [activeTab, setActiveTab] = useState('overview');\r\n//   const [selectedCustomer, setSelectedCustomer] = useState(null);\r\n//   const [selectedOrder, setSelectedOrder] = useState(null);\r\n//   const [viewInvoice, setViewInvoice] = useState(null);\r\n//   const [showInvoiceForm, setShowInvoiceForm] = useState(false);\r\n//   const [filters, setFilters] = useState({\r\n//     customerType: 'all',\r\n//     status: 'all',\r\n//     dateRange: '30',\r\n//     searchTerm: ''\r\n//   });\r\n\r\n//   // API Functions\r\n//   const fetchSales = async () => {\r\n//     setSales(prev => ({ ...prev, loading: true, error: null }));\r\n//     try {\r\n//       const response = await fetch(API_BASE_URL_SALES, {\r\n//         method: 'GET',\r\n//         headers: {\r\n//           'Authorization': `Bearer ${BEARER_TOKEN}`,\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//       });\r\n      \r\n//       if (!response.ok) {\r\n//         throw new Error(`HTTP error! status: ${response.status}`);\r\n//       }\r\n      \r\n//       const allData = await response.json();\r\n      \r\n//       // Store all data for customer calculations\r\n//       window.allSalesData = allData;\r\n      \r\n//       // Show only records that are unpaid and fulfilled for display\r\n//       const filteredOrders = allData.filter(order => \r\n//         !order.paid && order.fulfilled\r\n//       );\r\n      \r\n//       setSales({ loading: false, data: filteredOrders, error: null });\r\n//     } catch (error) {\r\n//       console.error('Error fetching sales:', error);\r\n//       setSales({ loading: false, data: [], error: error.message });\r\n//     }\r\n//   };\r\n\r\n//   const fetchCustomers = async () => {\r\n//     setCustomers(prev => ({ ...prev, loading: true, error: null }));\r\n//     try {\r\n//       const response = await fetch(API_CUSTOMERS, {\r\n//         method: 'GET',\r\n//         headers: {\r\n//           'Authorization': `Bearer ${BEARER_TOKEN}`,\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//       });\r\n      \r\n//       if (!response.ok) {\r\n//         throw new Error(`HTTP error! status: ${response.status}`);\r\n//       }\r\n      \r\n//       const data = await response.json();\r\n      \r\n//       // Use all sales data for customer calculations, not just filtered display data\r\n//       const allSalesData = window.allSalesData || [];\r\n      \r\n//       // Transform API customers to match our structure with real calculated data\r\n//       const transformedCustomers = data.map(customer => {\r\n//         // Get ALL orders for this customer (not just filtered ones)\r\n//         const customerOrders = allSalesData.filter(order => order.customerId === customer.id);\r\n        \r\n//         // Calculate total owed from ALL unpaid orders\r\n//         const totalOwed = customerOrders\r\n//           .filter(order => !order.paid)\r\n//           .reduce((sum, order) => sum + (order.total || 0), 0);\r\n        \r\n//         // Overdue amount = total owed (since all unpaid orders need collection)\r\n//         const overdueAmount = totalOwed;\r\n        \r\n//         // Total number of orders for this customer\r\n//         const invoiceCount = customerOrders.length;\r\n        \r\n//         // Determine customer type based on API data or order history\r\n//         let customerType = 'individual';\r\n//         const totalSpent = customerOrders\r\n//           .filter(order => order.paid)\r\n//           .reduce((sum, order) => sum + (order.total || 0), 0);\r\n        \r\n//         if (totalSpent > 500000 || customer.totalSpendOnOrder > 500000) {\r\n//           customerType = 'corporate';\r\n//         } else if (totalSpent > 100000 || customer.totalSpendOnOrder > 100000) {\r\n//           customerType = 'small_business';\r\n//         }\r\n        \r\n//         // Set credit limit based on customer type\r\n//         let creditLimit = 50000; // Default\r\n//         if (customerType === 'corporate') {\r\n//           creditLimit = 200000;\r\n//         } else if (customerType === 'small_business') {\r\n//           creditLimit = 100000;\r\n//         }\r\n        \r\n//         // Determine credit status based on payment behavior\r\n//         let creditStatus = 'good';\r\n//         if (totalOwed === 0) {\r\n//           creditStatus = 'excellent';\r\n//         } else if (totalOwed > creditLimit * 0.8) {\r\n//           creditStatus = 'hold';\r\n//         } else if (totalOwed > creditLimit * 0.5) {\r\n//           creditStatus = 'watch';\r\n//         }\r\n        \r\n//         // Calculate average payment days\r\n//         const paidOrders = customerOrders.filter(o => o.paid);\r\n//         const avgPaymentDays = paidOrders.length > 0 ? 30 : 45; // Default estimate\r\n        \r\n//         // Get last payment date from most recent paid order\r\n//         const lastPayment = paidOrders.length > 0 ? \r\n//           paidOrders.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))[0].createdAt.split('.').slice(0, 3).join('-') :\r\n//           'No payments';\r\n\r\n//         return {\r\n//           id: customer.id,\r\n//           name: customer.name,\r\n//           email: customer.email || 'No email provided',\r\n//           phone: customer.phoneNumber || 'No phone provided',\r\n//           address: customer.address && customer.address.length > 0 ? \r\n//             (typeof customer.address[0] === 'string' ? customer.address[0] : 'No address provided') : \r\n//             'No address provided',\r\n//           customerType: customerType,\r\n//           creditLimit: creditLimit,\r\n//           paymentTerms: customerType === 'corporate' ? 45 : (customerType === 'small_business' ? 30 : 15),\r\n//           totalOwed: totalOwed,\r\n//           overdueAmount: overdueAmount,\r\n//           lastPayment: lastPayment,\r\n//           creditStatus: creditStatus,\r\n//           accountBalance: -totalOwed,\r\n//           invoiceCount: invoiceCount,\r\n//           avgPaymentDays: avgPaymentDays,\r\n//           status: customer.status,\r\n//           totalSpendOnOrder: customer.totalSpendOnOrder || 0,\r\n//           averageOrderValue: customer.averageOrderValue || 0,\r\n//           numberOfOrders: customer.numberOfOrders || invoiceCount\r\n//         };\r\n//       });\r\n      \r\n//       setCustomers({ loading: false, data: transformedCustomers, error: null });\r\n//     } catch (error) {\r\n//       console.error('Error fetching customers:', error);\r\n//       setCustomers({ loading: false, data: [], error: error.message });\r\n//     }\r\n//   };\r\n\r\n//   // Also add refresh button functionality to recalculate customer data\r\n//   const refreshAllData = async () => {\r\n//     await fetchSales();\r\n//     setTimeout(() => fetchCustomers(), 500);\r\n//   };\r\n\r\n//   // Load data on component mount\r\n//   useEffect(() => {\r\n//     const loadData = async () => {\r\n//       await fetchSales();\r\n//       // Fetch customers after sales data is loaded to calculate balances correctly\r\n//       setTimeout(() => fetchCustomers(), 500);\r\n//     };\r\n//     loadData();\r\n//   }, []);\r\n\r\n//   // Helper function to get customer name by ID\r\n//   const getCustomerName = (customerId) => {\r\n//     if (!customerId || customerId === 'null') return 'Walk-in Customer';\r\n//     const customer = customers.data.find(c => c.id === customerId);\r\n//     return customer ? customer.name : 'Unknown Customer';\r\n//   };\r\n\r\n//   // Helper function to get customer details by ID\r\n//   const getCustomerDetails = (customerId) => {\r\n//     if (!customerId || customerId === 'null') return null;\r\n//     return customers.data.find(c => c.id === customerId);\r\n//   };\r\n\r\n//   // Calculate AR summary\r\n//   const calculateARSummary = () => {\r\n//     const totalAR = customers.data.reduce((sum, customer) => sum + customer.totalOwed, 0);\r\n//     const totalOverdue = customers.data.reduce((sum, customer) => sum + customer.overdueAmount, 0);\r\n//     const customersWithBalance = customers.data.filter(customer => customer.totalOwed > 0).length;\r\n//     const avgDaysOutstanding = customers.data.length > 0 \r\n//       ? customers.data.reduce((sum, customer) => sum + customer.avgPaymentDays, 0) / customers.data.length \r\n//       : 0;\r\n\r\n//     return {\r\n//       totalAR,\r\n//       totalOverdue,\r\n//       customersWithBalance,\r\n//       avgDaysOutstanding: Math.round(avgDaysOutstanding)\r\n//     };\r\n//   };\r\n\r\n//   // Get aging data\r\n//   const getAgingData = () => {\r\n//     const aging = {\r\n//       current: 0,\r\n//       days30: 0,\r\n//       days60: 0,\r\n//       days90: 0,\r\n//       over90: 0\r\n//     };\r\n\r\n//     sales.data.forEach(order => {\r\n//       if (order.paid) return;\r\n      \r\n//       const daysPastDue = order.daysOverdue || 0;\r\n      \r\n//       if (daysPastDue <= 0) {\r\n//         aging.current += order.total;\r\n//       } else if (daysPastDue <= 30) {\r\n//         aging.days30 += order.total;\r\n//       } else if (daysPastDue <= 60) {\r\n//         aging.days60 += order.total;\r\n//       } else if (daysPastDue <= 90) {\r\n//         aging.days90 += order.total;\r\n//       } else {\r\n//         aging.over90 += order.total;\r\n//       }\r\n//     });\r\n\r\n//     return aging;\r\n//   };\r\n\r\n//   // Filter customers\r\n//   const getFilteredCustomers = () => {\r\n//     let filtered = [...customers.data];\r\n\r\n//     if (filters.customerType !== 'all') {\r\n//       filtered = filtered.filter(customer => customer.customerType === filters.customerType);\r\n//     }\r\n\r\n//     if (filters.status !== 'all') {\r\n//       filtered = filtered.filter(customer => {\r\n//         if (filters.status === 'overdue') return customer.overdueAmount > 0;\r\n//         if (filters.status === 'current') return customer.totalOwed > 0 && customer.overdueAmount === 0;\r\n//         if (filters.status === 'paid_up') return customer.totalOwed === 0;\r\n//         return true;\r\n//       });\r\n//     }\r\n\r\n//     if (filters.searchTerm) {\r\n//       const term = filters.searchTerm.toLowerCase();\r\n//       filtered = filtered.filter(customer =>\r\n//         customer.name.toLowerCase().includes(term) ||\r\n//         customer.email.toLowerCase().includes(term) ||\r\n//         customer.id.toLowerCase().includes(term)\r\n//       );\r\n//     }\r\n\r\n//     return filtered;\r\n//   };\r\n\r\n//   const getCreditStatusColor = (status) => {\r\n//     switch (status) {\r\n//       case 'excellent': return 'bg-green-100 text-green-800';\r\n//       case 'good': return 'bg-blue-100 text-blue-800';\r\n//       case 'watch': return 'bg-yellow-100 text-yellow-800';\r\n//       case 'hold': return 'bg-red-100 text-red-800';\r\n//       case 'cash_only': return 'bg-gray-100 text-gray-800';\r\n//       default: return 'bg-gray-100 text-gray-800';\r\n//     }\r\n//   };\r\n\r\n//   const getInvoiceStatusColor = (status) => {\r\n//     switch (status) {\r\n//       case 'paid': return 'bg-green-100 text-green-800';\r\n//       case 'outstanding': return 'bg-blue-100 text-blue-800';\r\n//       case 'overdue': return 'bg-red-100 text-red-800';\r\n//       case 'partial': return 'bg-yellow-100 text-yellow-800';\r\n//       default: return 'bg-gray-100 text-gray-800';\r\n//     }\r\n//   };\r\n\r\n//   const formatDate = (dateString) => {\r\n//     if (!dateString) return 'N/A';\r\n//     return dateString.split('.').slice(0, 3).join('/');\r\n//   };\r\n\r\n//   const formatCurrency = (amount) => {\r\n//     return new Intl.NumberFormat('en-US', {\r\n//       style: 'currency',\r\n//       currency: 'USD'\r\n//     }).format(amount);\r\n//   };\r\n\r\n//   const summary = calculateARSummary();\r\n//   const aging = getAgingData();\r\n//   const filteredCustomers = getFilteredCustomers();\r\n\r\n//   // Loading state\r\n//   if (sales.loading || customers.loading) {\r\n//     return (\r\n//       <div className=\"flex items-center justify-center min-h-screen\">\r\n//         <div className=\"flex items-center space-x-3\">\r\n//           <Loader className=\"animate-spin text-emerald-600\" size={24} />\r\n//           <span className=\"text-gray-600\">Loading data from API...</span>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   // Error state\r\n//   if (sales.error || customers.error) {\r\n//     return (\r\n//       <div className=\"max-w-7xl mx-auto p-6\">\r\n//         <div className=\"bg-red-50 border border-red-200 rounded-lg p-6\">\r\n//           <div className=\"flex items-center mb-4\">\r\n//             <AlertTriangle className=\"text-red-600 mr-2\" size={20} />\r\n//             <h3 className=\"font-medium text-red-800\">API Connection Error</h3>\r\n//           </div>\r\n//           <div className=\"text-red-700 mb-4\">\r\n//             {sales.error && <div>Sales API Error: {sales.error}</div>}\r\n//             {customers.error && <div>Customers API Error: {customers.error}</div>}\r\n//           </div>\r\n//           <button\r\n//             onClick={() => {\r\n//               fetchSales();\r\n//               fetchCustomers();\r\n//             }}\r\n//             className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 flex items-center space-x-2\"\r\n//           >\r\n//             <RefreshCw size={16} />\r\n//             <span>Retry Connection</span>\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"max-w-7xl mx-auto p-6 bg-white\">\r\n//       {/* Header */}\r\n//       <div className=\"mb-8\">\r\n//         <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\r\n//           <CreditCard className=\"mr-3 text-emerald-600\" />\r\n//           Accounts Receivable\r\n//         </h1>\r\n//         <p className=\"text-gray-600\">Manage customer invoicing, payments, and credit limits</p>\r\n//       </div>\r\n\r\n//       {/* Summary Cards */}\r\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\r\n//         <div className=\"bg-blue-50 p-6 rounded-lg border border-blue-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-blue-600 text-sm font-medium\">Total A/R</p>\r\n//               <p className=\"text-2xl font-bold text-blue-900\">{formatCurrency(summary.totalAR)}</p>\r\n//             </div>\r\n//             <DollarSign className=\"text-blue-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-blue-700 mt-2\">{summary.customersWithBalance} customers with balances</p>\r\n//         </div>\r\n\r\n//         <div className=\"bg-red-50 p-6 rounded-lg border border-red-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-red-600 text-sm font-medium\">Overdue Amount</p>\r\n//               <p className=\"text-2xl font-bold text-red-900\">{formatCurrency(summary.totalOverdue)}</p>\r\n//             </div>\r\n//             <AlertTriangle className=\"text-red-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-red-700 mt-2\">\r\n//             {summary.totalAR > 0 ? ((summary.totalOverdue / summary.totalAR) * 100).toFixed(1) : 0}% of total A/R\r\n//           </p>\r\n//         </div>\r\n\r\n//         <div className=\"bg-green-50 p-6 rounded-lg border border-green-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-green-600 text-sm font-medium\">Avg. Days Outstanding</p>\r\n//               <p className=\"text-2xl font-bold text-green-900\">{summary.avgDaysOutstanding}</p>\r\n//             </div>\r\n//             <Clock className=\"text-green-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-green-700 mt-2\">Collection performance</p>\r\n//         </div>\r\n\r\n//         <div className=\"bg-purple-50 p-6 rounded-lg border border-purple-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-purple-600 text-sm font-medium\">Active Customers</p>\r\n//               <p className=\"text-2xl font-bold text-purple-900\">{customers.data.length}</p>\r\n//             </div>\r\n//             <Users className=\"text-purple-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-purple-700 mt-2\">Total customer accounts</p>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Tabs */}\r\n//       <div className=\"mb-6\">\r\n//         <div className=\"border-b border-gray-200\">\r\n//           <nav className=\"-mb-px flex space-x-8\">\r\n//             {[\r\n//               { id: 'overview', name: 'Customer Overview', icon: Users },\r\n//               { id: 'invoices', name: 'Invoices', icon: FileText },\r\n//               { id: 'aging', name: 'Aging Report', icon: Clock },\r\n//               { id: 'payments', name: 'Payments', icon: CheckCircle }\r\n//             ].map((tab) => (\r\n//               <button\r\n//                 key={tab.id}\r\n//                 onClick={() => setActiveTab(tab.id)}\r\n//                 className={`flex items-center py-2 px-1 border-b-2 font-medium text-sm ${\r\n//                   activeTab === tab.id\r\n//                     ? 'border-emerald-500 text-emerald-600'\r\n//                     : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n//                 }`}\r\n//               >\r\n//                 <tab.icon className=\"mr-2\" size={16} />\r\n//                 {tab.name}\r\n//               </button>\r\n//             ))}\r\n//           </nav>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Tab Content */}\r\n//       {activeTab === 'overview' && (\r\n//         <div>\r\n//           {/* Filters */}\r\n//           <div className=\"flex flex-wrap items-center gap-4 mb-6\">\r\n//             <div className=\"relative\">\r\n//               <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n//               <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Search customers...\"\r\n//                 value={filters.searchTerm}\r\n//                 onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\r\n//                 className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               />\r\n//             </div>\r\n\r\n//             <select\r\n//               value={filters.customerType}\r\n//               onChange={(e) => setFilters({ ...filters, customerType: e.target.value })}\r\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//             >\r\n//               <option value=\"all\">All Customer Types</option>\r\n//               <option value=\"corporate\">Corporate</option>\r\n//               <option value=\"small_business\">Small Business</option>\r\n//               <option value=\"individual\">Individual</option>\r\n//               <option value=\"cash\">Cash Only</option>\r\n//             </select>\r\n\r\n//             <select\r\n//               value={filters.status}\r\n//               onChange={(e) => setFilters({ ...filters, status: e.target.value })}\r\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//             >\r\n//               <option value=\"all\">All Statuses</option>\r\n//               <option value=\"current\">Current</option>\r\n//               <option value=\"overdue\">Overdue</option>\r\n//               <option value=\"paid_up\">Paid Up</option>\r\n//             </select>\r\n\r\n//             <button\r\n//               onClick={() => setShowInvoiceForm(true)}\r\n//               className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\r\n//             >\r\n//               <Plus size={16} />\r\n//               <span>New Invoice</span>\r\n//             </button>\r\n//           </div>\r\n\r\n//           {/* Customer List */}\r\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//             <div className=\"overflow-x-auto\">\r\n//               <table className=\"w-full\">\r\n//                 <thead className=\"bg-gray-50\">\r\n//                   <tr>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Customer\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Type\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Credit Limit\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Balance\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Overdue\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Credit Status\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Last Payment\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Actions\r\n//                     </th>\r\n//                   </tr>\r\n//                 </thead>\r\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//                   {filteredCustomers.map((customer) => (\r\n//                     <tr key={customer.id} className=\"hover:bg-gray-50\">\r\n//                       <td className=\"px-6 py-4\">\r\n//                         <div>\r\n//                           <div className=\"text-sm font-medium text-gray-900\">{customer.name}</div>\r\n//                           <div className=\"text-sm text-gray-500\">{customer.id}</div>\r\n//                           <div className=\"text-xs text-gray-400 flex items-center mt-1\">\r\n//                             <Mail className=\"mr-1\" size={12} />\r\n//                             {customer.email}\r\n//                           </div>\r\n//                         </div>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-gray-100 text-gray-800\">\r\n//                           {customer.customerType.replace('_', ' ')}\r\n//                         </span>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {formatCurrency(customer.creditLimit)}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <div className=\"text-sm font-medium text-gray-900\">\r\n//                           {formatCurrency(customer.totalOwed)}\r\n//                         </div>\r\n//                         <div className=\"text-xs text-gray-500\">\r\n//                           {customer.invoiceCount} invoices\r\n//                         </div>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         {customer.overdueAmount > 0 ? (\r\n//                           <span className=\"text-red-600 font-medium\">\r\n//                             {formatCurrency(customer.overdueAmount)}\r\n//                           </span>\r\n//                         ) : (\r\n//                           <span className=\"text-green-600\">$0.00</span>\r\n//                         )}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(customer.creditStatus)}`}>\r\n//                           {customer.creditStatus.replace('_', ' ')}\r\n//                         </span>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {customer.lastPayment}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n//                         <button\r\n//                           onClick={() => setSelectedCustomer(customer)}\r\n//                           className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\r\n//                         >\r\n//                           <Eye size={16} />\r\n//                         </button>\r\n//                         <button className=\"text-blue-600 hover:text-blue-900\">\r\n//                           <Edit size={16} />\r\n//                         </button>\r\n//                       </td>\r\n//                     </tr>\r\n//                   ))}\r\n//                 </tbody>\r\n//               </table>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {activeTab === 'aging' && (\r\n//         <div>\r\n//           <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n//             {/* Aging Summary */}\r\n//             <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Aging Summary</h3>\r\n//               <div className=\"space-y-4\">\r\n//                 <div className=\"flex justify-between items-center p-3 bg-green-50 rounded\">\r\n//                   <span className=\"font-medium text-green-800\">Current (0-30 days)</span>\r\n//                   <span className=\"font-bold text-green-900\">{formatCurrency(aging.current)}</span>\r\n//                 </div>\r\n//                 <div className=\"flex justify-between items-center p-3 bg-yellow-50 rounded\">\r\n//                   <span className=\"font-medium text-yellow-800\">31-60 days</span>\r\n//                   <span className=\"font-bold text-yellow-900\">{formatCurrency(aging.days30)}</span>\r\n//                 </div>\r\n//                 <div className=\"flex justify-between items-center p-3 bg-orange-50 rounded\">\r\n//                   <span className=\"font-medium text-orange-800\">61-90 days</span>\r\n//                   <span className=\"font-bold text-orange-900\">{formatCurrency(aging.days60)}</span>\r\n//                 </div>\r\n//                 <div className=\"flex justify-between items-center p-3 bg-red-50 rounded\">\r\n//                   <span className=\"font-medium text-red-800\">Over 90 days</span>\r\n//                   <span className=\"font-bold text-red-900\">{formatCurrency(aging.over90)}</span>\r\n//                 </div>\r\n//               </div>\r\n//               <div className=\"mt-4 pt-4 border-t\">\r\n//                 <div className=\"flex justify-between items-center\">\r\n//                   <span className=\"text-lg font-semibold text-gray-900\">Total Outstanding</span>\r\n//                   <span className=\"text-xl font-bold text-gray-900\">\r\n//                     {formatCurrency(aging.current + aging.days30 + aging.days60 + aging.days90 + aging.over90)}\r\n//                   </span>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n\r\n//             {/* Collection Priority */}\r\n//             <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Collection Priority</h3>\r\n//               <div className=\"space-y-3\">\r\n//                 {customers.data\r\n//                   .filter(customer => customer.overdueAmount > 0)\r\n//                   .sort((a, b) => b.overdueAmount - a.overdueAmount)\r\n//                   .slice(0, 5)\r\n//                   .map((customer, index) => (\r\n//                     <div key={customer.id} className=\"flex items-center justify-between p-3 bg-red-50 rounded\">\r\n//                       <div>\r\n//                         <div className=\"font-medium text-gray-900\">{customer.name}</div>\r\n//                         <div className=\"text-sm text-gray-500\">\r\n//                           Last payment: {customer.lastPayment}\r\n//                         </div>\r\n//                       </div>\r\n//                       <div className=\"text-right\">\r\n//                         <div className=\"font-bold text-red-900\">{formatCurrency(customer.overdueAmount)}</div>\r\n//                         <div className=\"text-xs text-red-700\">#{index + 1} Priority</div>\r\n//                       </div>\r\n//                     </div>\r\n//                   ))}\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {activeTab === 'invoices' && (\r\n//         <div>\r\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-900\">Outstanding Orders/Invoices</h3>\r\n//             </div>\r\n//             <div className=\"overflow-x-auto\">\r\n//               <table className=\"w-full\">\r\n//                 <thead className=\"bg-gray-50\">\r\n//                   <tr>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Order #\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Customer\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Date\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Items\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Amount\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Payment Status\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Fulfillment\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Actions\r\n//                     </th>\r\n//                   </tr>\r\n//                 </thead>\r\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//                   {sales.data.map((order) => (\r\n//                     <tr key={order.orderId} className=\"hover:bg-gray-50\">\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <div className=\"text-sm font-medium text-gray-900\">#{order.orderId}</div>\r\n//                         <div className=\"text-xs text-gray-500\">{order.status}</div>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4\">\r\n//                         <div className=\"text-sm font-medium text-gray-900\">{getCustomerName(order.customerId)}</div>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {formatDate(order.createdAt)}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4\">\r\n//                         <div className=\"text-sm text-gray-900\">\r\n//                           {order.lineItems.map((item, index) => (\r\n//                             <div key={index} className=\"mb-1\">\r\n//                               <span className=\"font-medium\">{item.productName}</span>\r\n//                               <span className=\"text-gray-500 ml-2\">x{item.quantity}</span>\r\n//                             </div>\r\n//                           ))}\r\n//                         </div>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {formatCurrency(order.total)}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                           order.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\r\n//                         }`}>\r\n//                           {order.paid ? 'Paid' : 'Unpaid'}\r\n//                         </span>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                           order.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n//                         }`}>\r\n//                           {order.fulfilled ? 'Fulfilled' : 'Pending'}\r\n//                         </span>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n//                         <button\r\n//                           className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\r\n//                           onClick={() => setViewInvoice(order)}\r\n//                         >\r\n//                           <Eye size={16} />\r\n//                         </button>\r\n//                         <button className=\"text-blue-600 hover:text-blue-900\">\r\n//                           <Download size={16} />\r\n//                         </button>\r\n//                       </td>\r\n//                     </tr>\r\n//                   ))}\r\n//                 </tbody>\r\n//               </table>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {activeTab === 'payments' && (\r\n//         <div>\r\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-900\">Recent Payment Activities</h3>\r\n//             </div>\r\n//             <div className=\"overflow-x-auto\">\r\n//               <table className=\"w-full\">\r\n//                 <thead className=\"bg-gray-50\">\r\n//                   <tr>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Order ID\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Customer\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Date\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Amount\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Payment Status\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Payment Method\r\n//                     </th>\r\n//                   </tr>\r\n//                 </thead>\r\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//                   {sales.data.filter(order => order.paid).map((order) => (\r\n//                     <tr key={order.orderId} className=\"hover:bg-gray-50\">\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n//                         #{order.orderId}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {getCustomerName(order.customerId)}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {formatDate(order.createdAt)}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {formatCurrency(order.total)}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-green-100 text-green-800\">\r\n//                           Paid\r\n//                         </span>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-blue-100 text-blue-800\">\r\n//                           POS System\r\n//                         </span>\r\n//                       </td>\r\n//                     </tr>\r\n//                   ))}\r\n//                 </tbody>\r\n//               </table>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Customer Detail Modal */}\r\n//       {selectedCustomer && (\r\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\r\n//                   Customer Details - {selectedCustomer.name}\r\n//                 </h3>\r\n//                 <button\r\n//                   onClick={() => setSelectedCustomer(null)}\r\n//                   className=\"text-gray-400 hover:text-gray-600\"\r\n//                 >\r\n//                   <XCircle size={20} />\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <div className=\"px-6 py-4\">\r\n//               {/* Customer Info Grid */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n//                 <div className=\"space-y-4\">\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer ID</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.id}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Email</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.email}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Phone</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.phone}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Address</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.address}</p>\r\n//                   </div>\r\n//                 </div>\r\n                \r\n//                 <div className=\"space-y-4\">\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer Type</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.customerType.replace('_', ' ')}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Limit</label>\r\n//                     <p className=\"text-sm text-gray-900\">{formatCurrency(selectedCustomer.creditLimit)}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Payment Terms</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.paymentTerms} days</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Status</label>\r\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(selectedCustomer.creditStatus)}`}>\r\n//                       {selectedCustomer.creditStatus.replace('_', ' ')}\r\n//                     </span>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Financial Summary */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\r\n//                 <div className=\"bg-blue-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-blue-600\">Current Balance</div>\r\n//                   <div className=\"text-xl font-bold text-blue-900\">\r\n//                     {formatCurrency(selectedCustomer.totalOwed)}\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"bg-red-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-red-600\">Overdue Amount</div>\r\n//                   <div className=\"text-xl font-bold text-red-900\">\r\n//                     {formatCurrency(selectedCustomer.overdueAmount)}\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"bg-green-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-green-600\">Credit Available</div>\r\n//                   <div className=\"text-xl font-bold text-green-900\">\r\n//                     {formatCurrency(selectedCustomer.creditLimit - selectedCustomer.totalOwed)}\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"bg-purple-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-purple-600\">Avg Payment Days</div>\r\n//                   <div className=\"text-xl font-bold text-purple-900\">\r\n//                     {selectedCustomer.avgPaymentDays}\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Customer Orders */}\r\n//               <div className=\"mb-6\">\r\n//                 <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Customer Orders</h4>\r\n//                 <div className=\"overflow-x-auto\">\r\n//                   <table className=\"w-full border border-gray-200 rounded\">\r\n//                     <thead className=\"bg-gray-50\">\r\n//                       <tr>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Order</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Date</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Items</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Amount</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Payment</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Fulfillment</th>\r\n//                       </tr>\r\n//                     </thead>\r\n//                     <tbody className=\"divide-y divide-gray-200\">\r\n//                       {sales.data\r\n//                         .filter(order => order.customerId === selectedCustomer.id)\r\n//                         .map((order) => (\r\n//                           <tr key={order.orderId}>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">#{order.orderId}</td>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{formatDate(order.createdAt)}</td>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">\r\n//                               {order.lineItems.map(item => item.productName).join(', ')}\r\n//                             </td>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{formatCurrency(order.total)}</td>\r\n//                             <td className=\"px-4 py-2\">\r\n//                               <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                                 order.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\r\n//                               }`}>\r\n//                                 {order.paid ? 'Paid' : 'Unpaid'}\r\n//                               </span>\r\n//                             </td>\r\n//                             <td className=\"px-4 py-2\">\r\n//                               <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                                 order.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n//                               }`}>\r\n//                                 {order.fulfilled ? 'Fulfilled' : 'Pending'}\r\n//                               </span>\r\n//                             </td>\r\n//                           </tr>\r\n//                         ))}\r\n//                     </tbody>\r\n//                   </table>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Action Buttons */}\r\n//               <div className=\"flex space-x-3\">\r\n//                 <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\r\n//                   <Plus size={16} />\r\n//                   <span>New Invoice</span>\r\n//                 </button>\r\n//                 <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\r\n//                   <CheckCircle size={16} />\r\n//                   <span>Record Payment</span>\r\n//                 </button>\r\n//                 <button className=\"px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 flex items-center space-x-2\">\r\n//                   <Mail size={16} />\r\n//                   <span>Send Statement</span>\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Order/Invoice Detail Modal */}\r\n//       {viewInvoice && (\r\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\r\n//                   Order Details - #{viewInvoice.orderId}\r\n//                 </h3>\r\n//                 <button\r\n//                   onClick={() => setViewInvoice(null)}\r\n//                   className=\"text-gray-400 hover:text-gray-600\"\r\n//                 >\r\n//                   <XCircle size={20} />\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <div className=\"px-6 py-4\">\r\n//               {/* Order Info */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n//                 <div className=\"space-y-4\">\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Order ID</label>\r\n//                     <p className=\"text-sm text-gray-900\">{viewInvoice.orderId}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer</label>\r\n//                     <p className=\"text-sm text-gray-900\">{getCustomerName(viewInvoice.customerId)}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Created Date</label>\r\n//                     <p className=\"text-sm text-gray-900\">{formatDate(viewInvoice.createdAt)}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Status</label>\r\n//                     <p className=\"text-sm text-gray-900\">{viewInvoice.status}</p>\r\n//                   </div>\r\n//                 </div>\r\n                \r\n//                 <div className=\"space-y-4\">\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Payment Status</label>\r\n//                     <div>\r\n//                       <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                         viewInvoice.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\r\n//                       }`}>\r\n//                         {viewInvoice.paid ? 'Paid' : 'Unpaid'}\r\n//                       </span>\r\n//                     </div>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Fulfillment Status</label>\r\n//                     <div>\r\n//                       <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                         viewInvoice.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n//                       }`}>\r\n//                         {viewInvoice.fulfilled ? 'Fulfilled' : 'Pending'}\r\n//                       </span>\r\n//                     </div>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Total Amount</label>\r\n//                     <p className=\"text-lg font-bold text-gray-900\">{formatCurrency(viewInvoice.total)}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Payable Amount</label>\r\n//                     <p className=\"text-sm text-gray-900\">{formatCurrency(viewInvoice.payableAmount)}</p>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Line Items */}\r\n//               <div className=\"mb-6\">\r\n//                 <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Order Items</h4>\r\n//                 <div className=\"overflow-x-auto\">\r\n//                   <table className=\"w-full border border-gray-200 rounded\">\r\n//                     <thead className=\"bg-gray-50\">\r\n//                       <tr>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Product</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Quantity</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Unit Price</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Total</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Status</th>\r\n//                       </tr>\r\n//                     </thead>\r\n//                     <tbody className=\"divide-y divide-gray-200\">\r\n//                       {viewInvoice.lineItems.map((item, index) => (\r\n//                         <tr key={index}>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900\">{item.productName}</td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{item.quantity}</td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{formatCurrency(item.price)}</td>\r\n//                           <td className=\"px-4 py-2 text-sm font-medium text-gray-900 text-right\">{formatCurrency(item.total)}</td>\r\n//                           <td className=\"px-4 py-2\">\r\n//                             <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                               item.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n//                             }`}>\r\n//                               {item.status}\r\n//                             </span>\r\n//                           </td>\r\n//                         </tr>\r\n//                       ))}\r\n//                     </tbody>\r\n//                   </table>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Totals */}\r\n//               <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n//                 <div className=\"space-y-2\">\r\n//                   <div className=\"flex justify-between\">\r\n//                     <span className=\"text-sm text-gray-600\">Subtotal:</span>\r\n//                     <span className=\"text-sm text-gray-900\">{formatCurrency(viewInvoice.subTotal)}</span>\r\n//                   </div>\r\n//                   <div className=\"flex justify-between\">\r\n//                     <span className=\"text-sm text-gray-600\">Tax ({viewInvoice.taxRate}%):</span>\r\n//                     <span className=\"text-sm text-gray-900\">{formatCurrency(viewInvoice.taxAmount)}</span>\r\n//                   </div>\r\n//                   {viewInvoice.discountAmount > 0 && (\r\n//                     <div className=\"flex justify-between\">\r\n//                       <span className=\"text-sm text-gray-600\">Discount:</span>\r\n//                       <span className=\"text-sm text-red-600\">-{formatCurrency(viewInvoice.discountAmount)}</span>\r\n//                     </div>\r\n//                   )}\r\n//                   <div className=\"flex justify-between font-bold text-lg border-t pt-2\">\r\n//                     <span>Total:</span>\r\n//                     <span>{formatCurrency(viewInvoice.total)}</span>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Action Buttons */}\r\n//               <div className=\"flex space-x-3 mt-6\">\r\n//                 {!viewInvoice.paid && (\r\n//                   <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\r\n//                     <CheckCircle size={16} />\r\n//                     <span>Mark as Paid</span>\r\n//                   </button>\r\n//                 )}\r\n//                 {!viewInvoice.fulfilled && (\r\n//                   <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\r\n//                     <FileText size={16} />\r\n//                     <span>Mark as Fulfilled</span>\r\n//                   </button>\r\n//                 )}\r\n//                 <button className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\">\r\n//                   <Download size={16} />\r\n//                   <span>Download Invoice</span>\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* API Integration Status */}\r\n//       <div className=\"mt-8 p-6 bg-green-50 border border-green-200 rounded-lg\">\r\n//         <div className=\"flex items-center mb-4\">\r\n//           <CheckCircle className=\"text-green-600 mr-2\" size={20} />\r\n//           <h3 className=\"font-medium text-green-800\">POS Integration Active</h3>\r\n//         </div>\r\n//         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm text-green-700\">\r\n//           <div>\r\n//             <strong>Sales Orders:</strong> {sales.data.length} outstanding orders from POS system\r\n//           </div>\r\n//           <div>\r\n//             <strong>Customers:</strong> {customers.data.length} active customers synchronized\r\n//           </div>\r\n//           <div>\r\n//             <strong>Real-time Updates:</strong> Data refreshes automatically with POS transactions\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"mt-4 text-xs text-green-600\">\r\n//           <strong>Note:</strong> Only showing unpaid or unfulfilled orders. Replace Bearer token for live data connection.\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AccountsReceivableAPI;\r\n\r\n\r\n// //very excellent\r\n// import React, { useState, useEffect } from 'react';\r\n// import { \r\n//   Users, \r\n//   DollarSign, \r\n//   CreditCard, \r\n//   AlertTriangle, \r\n//   Clock, \r\n//   Plus, \r\n//   Search, \r\n//   Filter, \r\n//   Eye, \r\n//   Edit, \r\n//   Download,\r\n//   CheckCircle,\r\n//   XCircle,\r\n//   Calendar,\r\n//   FileText,\r\n//   TrendingUp,\r\n//   Mail,\r\n//   Phone,\r\n//   Loader,\r\n//   RefreshCw\r\n// } from 'lucide-react';\r\n\r\n// // API Configuration\r\n// const API_BASE_URL_SALES = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/orders?start=0&size=200';\r\n// const API_CUSTOMERS = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/customers?status=Active';\r\n\r\n// // Replace with your actual Bearer token\r\n// const BEARER_TOKEN = 'your-bearer-token-here';\r\n\r\n// const AccountsReceivable = () => {\r\n//   // State management\r\n//   const [sales, setSales] = useState({ loading: false, data: [], error: null });\r\n//   const [customers, setCustomers] = useState({ loading: false, data: [], error: null });\r\n//   const [activeTab, setActiveTab] = useState('overview');\r\n//   const [selectedCustomer, setSelectedCustomer] = useState(null);\r\n//   const [selectedOrder, setSelectedOrder] = useState(null);\r\n//   const [viewInvoice, setViewInvoice] = useState(null);\r\n//   const [showInvoiceForm, setShowInvoiceForm] = useState(false);\r\n//   const [filters, setFilters] = useState({\r\n//     customerType: 'all',\r\n//     status: 'all',\r\n//     dateRange: '30',\r\n//     searchTerm: ''\r\n//   });\r\n\r\n//   // API Functions\r\n//   const fetchSales = async () => {\r\n//     setSales(prev => ({ ...prev, loading: true, error: null }));\r\n//     try {\r\n//       const response = await fetch(API_BASE_URL_SALES, {\r\n//         method: 'GET',\r\n//         headers: {\r\n//           'Authorization': `Bearer ${BEARER_TOKEN}`,\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//       });\r\n      \r\n//       if (!response.ok) {\r\n//         throw new Error(`HTTP error! status: ${response.status}`);\r\n//       }\r\n      \r\n//       const allData = await response.json();\r\n      \r\n//       // Store all data for customer calculations\r\n//       window.allSalesData = allData;\r\n      \r\n//       // Show only records that are unpaid and fulfilled for display\r\n//       const filteredOrders = allData.filter(order => \r\n//         !order.paid && order.fulfilled\r\n//       );\r\n      \r\n//       setSales({ loading: false, data: filteredOrders, error: null });\r\n//     } catch (error) {\r\n//       console.error('Error fetching sales:', error);\r\n//       setSales({ loading: false, data: [], error: error.message });\r\n//     }\r\n//   };\r\n\r\n//   const fetchCustomers = async () => {\r\n//     setCustomers(prev => ({ ...prev, loading: true, error: null }));\r\n//     try {\r\n//       const response = await fetch(API_CUSTOMERS, {\r\n//         method: 'GET',\r\n//         headers: {\r\n//           'Authorization': `Bearer ${BEARER_TOKEN}`,\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//       });\r\n      \r\n//       if (!response.ok) {\r\n//         throw new Error(`HTTP error! status: ${response.status}`);\r\n//       }\r\n      \r\n//       const data = await response.json();\r\n      \r\n//       // Use all sales data for customer calculations, not just filtered display data\r\n//       const allSalesData = window.allSalesData || [];\r\n      \r\n//       // Transform API customers to match our structure with real calculated data\r\n//       const transformedCustomers = data.map(customer => {\r\n//         // Get ALL orders for this customer (not just filtered ones)\r\n//         const customerOrders = allSalesData.filter(order => order.customerId === customer.id);\r\n        \r\n//         // Calculate total owed from ALL unpaid orders\r\n//         const totalOwed = customerOrders\r\n//           .filter(order => !order.paid)\r\n//           .reduce((sum, order) => sum + (order.total || 0), 0);\r\n        \r\n//         // Overdue amount = total owed (since all unpaid orders need collection)\r\n//         const overdueAmount = totalOwed;\r\n        \r\n//         // Total number of orders for this customer\r\n//         const invoiceCount = customerOrders.length;\r\n        \r\n//         // Determine customer type based on API data or order history\r\n//         let customerType = 'individual';\r\n//         const totalSpent = customerOrders\r\n//           .filter(order => order.paid)\r\n//           .reduce((sum, order) => sum + (order.total || 0), 0);\r\n        \r\n//         if (totalSpent > 500000 || customer.totalSpendOnOrder > 500000) {\r\n//           customerType = 'corporate';\r\n//         } else if (totalSpent > 100000 || customer.totalSpendOnOrder > 100000) {\r\n//           customerType = 'small_business';\r\n//         }\r\n        \r\n//         // Set credit limit based on customer type\r\n//         let creditLimit = 25000; // Default for individual\r\n//         if (customerType === 'corporate') {\r\n//           creditLimit = 500000;\r\n//         } else if (customerType === 'small_business') {\r\n//           creditLimit = 100000;\r\n//         }\r\n        \r\n//         // Determine credit status based on payment behavior\r\n//         let creditStatus = 'good';\r\n//         if (totalOwed === 0) {\r\n//           creditStatus = 'excellent';\r\n//         } else if (totalOwed > creditLimit * 0.9) {\r\n//           creditStatus = 'hold'; // Hold means credit limit exceeded, stop further credit\r\n//         } else if (totalOwed > creditLimit * 0.7) {\r\n//           creditStatus = 'watch'; // Watch means monitor closely\r\n//         }\r\n        \r\n//         // Get last payment date from most recent paid order\r\n//         const paidOrders = customerOrders.filter(o => o.paid);\r\n//         const lastPayment = paidOrders.length > 0 ? \r\n//           paidOrders.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))[0].createdAt.split('.').slice(0, 3).join('-') :\r\n//           'No payments';\r\n\r\n//         return {\r\n//           id: customer.id,\r\n//           name: customer.name,\r\n//           email: customer.email || 'No email provided',\r\n//           phone: customer.phoneNumber || 'No phone provided',\r\n//           address: customer.address && customer.address.length > 0 ? \r\n//             (typeof customer.address[0] === 'string' ? customer.address[0] : 'No address provided') : \r\n//             'No address provided',\r\n//           customerType: customerType,\r\n//           creditLimit: creditLimit,\r\n//           paymentTerms: customerType === 'corporate' ? 45 : (customerType === 'small_business' ? 30 : 15),\r\n//           totalOwed: totalOwed,\r\n//           overdueAmount: overdueAmount,\r\n//           lastPayment: lastPayment,\r\n//           creditStatus: creditStatus,\r\n//           accountBalance: -totalOwed,\r\n//           invoiceCount: invoiceCount,\r\n//           avgPaymentDays: 30, // Default estimate\r\n//           status: customer.status,\r\n//           totalSpendOnOrder: customer.totalSpendOnOrder || 0,\r\n//           averageOrderValue: customer.averageOrderValue || 0,\r\n//           numberOfOrders: customer.numberOfOrders || invoiceCount\r\n//         };\r\n//       });\r\n      \r\n//       // Also add walk-in customers (null customerId) as a single entry\r\n//       const walkInOrders = allSalesData.filter(order => !order.customerId || order.customerId === 'null');\r\n//       if (walkInOrders.length > 0) {\r\n//         const walkInTotalOwed = walkInOrders\r\n//           .filter(order => !order.paid)\r\n//           .reduce((sum, order) => sum + (order.total || 0), 0);\r\n        \r\n//         const walkInPaidOrders = walkInOrders.filter(o => o.paid);\r\n//         const walkInLastPayment = walkInPaidOrders.length > 0 ? \r\n//           walkInPaidOrders.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))[0].createdAt.split('.').slice(0, 3).join('-') :\r\n//           'No payments';\r\n        \r\n//         transformedCustomers.push({\r\n//           id: 'walk-in',\r\n//           name: 'Walk-in Customers',\r\n//           email: 'cash@pos.system',\r\n//           phone: '+966-50-000-0000',\r\n//           address: 'Point of Sale',\r\n//           customerType: 'cash',\r\n//           creditLimit: 0,\r\n//           paymentTerms: 0,\r\n//           totalOwed: walkInTotalOwed,\r\n//           overdueAmount: walkInTotalOwed,\r\n//           lastPayment: walkInLastPayment,\r\n//           creditStatus: 'cash_only',\r\n//           accountBalance: -walkInTotalOwed,\r\n//           invoiceCount: walkInOrders.length,\r\n//           avgPaymentDays: 0,\r\n//           status: 'Active',\r\n//           totalSpendOnOrder: walkInOrders.reduce((sum, order) => sum + (order.total || 0), 0),\r\n//           averageOrderValue: walkInOrders.length > 0 ? walkInOrders.reduce((sum, order) => sum + (order.total || 0), 0) / walkInOrders.length : 0,\r\n//           numberOfOrders: walkInOrders.length\r\n//         });\r\n//       }\r\n      \r\n//       setCustomers({ loading: false, data: transformedCustomers, error: null });\r\n//     } catch (error) {\r\n//       console.error('Error fetching customers:', error);\r\n//       setCustomers({ loading: false, data: [], error: error.message });\r\n//     }\r\n//   };\r\n\r\n//   // Also add refresh button functionality to recalculate customer data\r\n//   const refreshAllData = async () => {\r\n//     await fetchSales();\r\n//     setTimeout(() => fetchCustomers(), 500);\r\n//   };\r\n\r\n//   // Load data on component mount\r\n//   useEffect(() => {\r\n//     const loadData = async () => {\r\n//       await fetchSales();\r\n//       // Fetch customers after sales data is loaded to calculate balances correctly\r\n//       setTimeout(() => fetchCustomers(), 500);\r\n//     };\r\n//     loadData();\r\n//   }, []);\r\n\r\n//   // Helper function to get customer name by ID\r\n//   const getCustomerName = (customerId) => {\r\n//     if (!customerId || customerId === 'null') return 'Walk-in Customer';\r\n//     const customer = customers.data.find(c => c.id === customerId);\r\n//     return customer ? customer.name : 'Unknown Customer';\r\n//   };\r\n\r\n//   // Helper function to get customer details by ID\r\n//   const getCustomerDetails = (customerId) => {\r\n//     if (!customerId || customerId === 'null') return null;\r\n//     return customers.data.find(c => c.id === customerId);\r\n//   };\r\n\r\n//   // Calculate AR summary\r\n//   const calculateARSummary = () => {\r\n//     const totalAR = customers.data.reduce((sum, customer) => sum + customer.totalOwed, 0);\r\n//     const totalOverdue = customers.data.reduce((sum, customer) => sum + customer.overdueAmount, 0);\r\n//     const customersWithBalance = customers.data.filter(customer => customer.totalOwed > 0).length;\r\n//     const avgDaysOutstanding = customers.data.length > 0 \r\n//       ? customers.data.reduce((sum, customer) => sum + customer.avgPaymentDays, 0) / customers.data.length \r\n//       : 0;\r\n\r\n//     return {\r\n//       totalAR,\r\n//       totalOverdue,\r\n//       customersWithBalance,\r\n//       avgDaysOutstanding: Math.round(avgDaysOutstanding)\r\n//     };\r\n//   };\r\n\r\n//   // Get aging data\r\n//   const getAgingData = () => {\r\n//     const aging = {\r\n//       current: 0,\r\n//       days30: 0,\r\n//       days60: 0,\r\n//       days90: 0,\r\n//       over90: 0\r\n//     };\r\n\r\n//     sales.data.forEach(order => {\r\n//       if (order.paid) return;\r\n      \r\n//       const daysPastDue = order.daysOverdue || 0;\r\n      \r\n//       if (daysPastDue <= 0) {\r\n//         aging.current += order.total;\r\n//       } else if (daysPastDue <= 30) {\r\n//         aging.days30 += order.total;\r\n//       } else if (daysPastDue <= 60) {\r\n//         aging.days60 += order.total;\r\n//       } else if (daysPastDue <= 90) {\r\n//         aging.days90 += order.total;\r\n//       } else {\r\n//         aging.over90 += order.total;\r\n//       }\r\n//     });\r\n\r\n//     return aging;\r\n//   };\r\n\r\n//   // Filter customers\r\n//   const getFilteredCustomers = () => {\r\n//     let filtered = [...customers.data];\r\n\r\n//     if (filters.customerType !== 'all') {\r\n//       filtered = filtered.filter(customer => customer.customerType === filters.customerType);\r\n//     }\r\n\r\n//     if (filters.status !== 'all') {\r\n//       filtered = filtered.filter(customer => {\r\n//         if (filters.status === 'overdue') return customer.overdueAmount > 0;\r\n//         if (filters.status === 'current') return customer.totalOwed > 0 && customer.overdueAmount === 0;\r\n//         if (filters.status === 'paid_up') return customer.totalOwed === 0;\r\n//         return true;\r\n//       });\r\n//     }\r\n\r\n//     if (filters.searchTerm) {\r\n//       const term = filters.searchTerm.toLowerCase();\r\n//       filtered = filtered.filter(customer =>\r\n//         customer.name.toLowerCase().includes(term) ||\r\n//         customer.email.toLowerCase().includes(term) ||\r\n//         customer.id.toLowerCase().includes(term)\r\n//       );\r\n//     }\r\n\r\n//     return filtered;\r\n//   };\r\n\r\n//   const getCreditStatusColor = (status) => {\r\n//     switch (status) {\r\n//       case 'excellent': return 'bg-green-100 text-green-800';\r\n//       case 'good': return 'bg-blue-100 text-blue-800';\r\n//       case 'watch': return 'bg-yellow-100 text-yellow-800';\r\n//       case 'hold': return 'bg-red-100 text-red-800';\r\n//       case 'cash_only': return 'bg-gray-100 text-gray-800';\r\n//       default: return 'bg-gray-100 text-gray-800';\r\n//     }\r\n//   };\r\n\r\n//   const getInvoiceStatusColor = (status) => {\r\n//     switch (status) {\r\n//       case 'paid': return 'bg-green-100 text-green-800';\r\n//       case 'outstanding': return 'bg-blue-100 text-blue-800';\r\n//       case 'overdue': return 'bg-red-100 text-red-800';\r\n//       case 'partial': return 'bg-yellow-100 text-yellow-800';\r\n//       default: return 'bg-gray-100 text-gray-800';\r\n//     }\r\n//   };\r\n\r\n//   const formatDate = (dateString) => {\r\n//     if (!dateString) return 'N/A';\r\n//     return dateString.split('.').slice(0, 3).join('/');\r\n//   };\r\n\r\n//   const formatCurrency = (amount) => {\r\n//     return new Intl.NumberFormat('en-US', {\r\n//       style: 'currency',\r\n//       currency: 'USD'\r\n//     }).format(amount);\r\n//   };\r\n\r\n//   const summary = calculateARSummary();\r\n//   const aging = getAgingData();\r\n//   const filteredCustomers = getFilteredCustomers();\r\n\r\n//   // Loading state\r\n//   if (sales.loading || customers.loading) {\r\n//     return (\r\n//       <div className=\"flex items-center justify-center min-h-screen\">\r\n//         <div className=\"flex items-center space-x-3\">\r\n//           <Loader className=\"animate-spin text-emerald-600\" size={24} />\r\n//           <span className=\"text-gray-600\">Loading data from API...</span>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   // Error state\r\n//   if (sales.error || customers.error) {\r\n//     return (\r\n//       <div className=\"max-w-7xl mx-auto p-6\">\r\n//         <div className=\"bg-red-50 border border-red-200 rounded-lg p-6\">\r\n//           <div className=\"flex items-center mb-4\">\r\n//             <AlertTriangle className=\"text-red-600 mr-2\" size={20} />\r\n//             <h3 className=\"font-medium text-red-800\">API Connection Error</h3>\r\n//           </div>\r\n//           <div className=\"text-red-700 mb-4\">\r\n//             {sales.error && <div>Sales API Error: {sales.error}</div>}\r\n//             {customers.error && <div>Customers API Error: {customers.error}</div>}\r\n//           </div>\r\n//           <button\r\n//             onClick={() => {\r\n//               fetchSales();\r\n//               fetchCustomers();\r\n//             }}\r\n//             className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 flex items-center space-x-2\"\r\n//           >\r\n//             <RefreshCw size={16} />\r\n//             <span>Retry Connection</span>\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"max-w-7xl mx-auto p-6 bg-white\">\r\n//       {/* Header */}\r\n//       <div className=\"mb-8\">\r\n//         <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\r\n//           <CreditCard className=\"mr-3 text-emerald-600\" />\r\n//           Accounts Receivable\r\n//         </h1>\r\n//         <p className=\"text-gray-600\">Manage customer invoicing, payments, and credit limits</p>\r\n//       </div>\r\n\r\n//       {/* Summary Cards */}\r\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\r\n//         <div className=\"bg-blue-50 p-6 rounded-lg border border-blue-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-blue-600 text-sm font-medium\">Total A/R</p>\r\n//               <p className=\"text-2xl font-bold text-blue-900\">{formatCurrency(summary.totalAR)}</p>\r\n//             </div>\r\n//             <DollarSign className=\"text-blue-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-blue-700 mt-2\">{summary.customersWithBalance} customers with balances</p>\r\n//         </div>\r\n\r\n//         <div className=\"bg-red-50 p-6 rounded-lg border border-red-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-red-600 text-sm font-medium\">Overdue Amount</p>\r\n//               <p className=\"text-2xl font-bold text-red-900\">{formatCurrency(summary.totalOverdue)}</p>\r\n//             </div>\r\n//             <AlertTriangle className=\"text-red-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-red-700 mt-2\">\r\n//             {summary.totalAR > 0 ? ((summary.totalOverdue / summary.totalAR) * 100).toFixed(1) : 0}% of total A/R\r\n//           </p>\r\n//         </div>\r\n\r\n//         <div className=\"bg-green-50 p-6 rounded-lg border border-green-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-green-600 text-sm font-medium\">Avg. Days Outstanding</p>\r\n//               <p className=\"text-2xl font-bold text-green-900\">{summary.avgDaysOutstanding}</p>\r\n//             </div>\r\n//             <Clock className=\"text-green-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-green-700 mt-2\">Collection performance</p>\r\n//         </div>\r\n\r\n//         <div className=\"bg-purple-50 p-6 rounded-lg border border-purple-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-purple-600 text-sm font-medium\">Active Customers</p>\r\n//               <p className=\"text-2xl font-bold text-purple-900\">{customers.data.length}</p>\r\n//             </div>\r\n//             <Users className=\"text-purple-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-purple-700 mt-2\">Total customer accounts</p>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Tabs */}\r\n//       <div className=\"mb-6\">\r\n//         <div className=\"border-b border-gray-200\">\r\n//           <nav className=\"-mb-px flex space-x-8\">\r\n//             {[\r\n//               { id: 'overview', name: 'Customer Overview', icon: Users },\r\n//               { id: 'invoices', name: 'Invoices', icon: FileText },\r\n//               { id: 'aging', name: 'Aging Report', icon: Clock },\r\n//               { id: 'payments', name: 'Payments', icon: CheckCircle }\r\n//             ].map((tab) => (\r\n//               <button\r\n//                 key={tab.id}\r\n//                 onClick={() => setActiveTab(tab.id)}\r\n//                 className={`flex items-center py-2 px-1 border-b-2 font-medium text-sm ${\r\n//                   activeTab === tab.id\r\n//                     ? 'border-emerald-500 text-emerald-600'\r\n//                     : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n//                 }`}\r\n//               >\r\n//                 <tab.icon className=\"mr-2\" size={16} />\r\n//                 {tab.name}\r\n//               </button>\r\n//             ))}\r\n//           </nav>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Tab Content */}\r\n//       {activeTab === 'overview' && (\r\n//         <div>\r\n//           {/* Filters */}\r\n//           <div className=\"flex flex-wrap items-center gap-4 mb-6\">\r\n//             <div className=\"relative\">\r\n//               <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n//               <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Search customers...\"\r\n//                 value={filters.searchTerm}\r\n//                 onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\r\n//                 className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               />\r\n//             </div>\r\n\r\n//             <select\r\n//               value={filters.customerType}\r\n//               onChange={(e) => setFilters({ ...filters, customerType: e.target.value })}\r\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//             >\r\n//               <option value=\"all\">All Customer Types</option>\r\n//               <option value=\"corporate\">Corporate</option>\r\n//               <option value=\"small_business\">Small Business</option>\r\n//               <option value=\"individual\">Individual</option>\r\n//               <option value=\"cash\">Cash Only</option>\r\n//             </select>\r\n\r\n//             <select\r\n//               value={filters.status}\r\n//               onChange={(e) => setFilters({ ...filters, status: e.target.value })}\r\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//             >\r\n//               <option value=\"all\">All Statuses</option>\r\n//               <option value=\"current\">Current</option>\r\n//               <option value=\"overdue\">Overdue</option>\r\n//               <option value=\"paid_up\">Paid Up</option>\r\n//             </select>\r\n\r\n//             <button\r\n//               onClick={() => setShowInvoiceForm(true)}\r\n//               className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\r\n//             >\r\n//               <Plus size={16} />\r\n//               <span>New Invoice</span>\r\n//             </button>\r\n//           </div>\r\n\r\n//           {/* Customer List */}\r\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//             <div className=\"overflow-x-auto\">\r\n//               <table className=\"w-full\">\r\n//                 <thead className=\"bg-gray-50\">\r\n//                   <tr>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Customer\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Type\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Credit Limit\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Balance\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Overdue\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Credit Status\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Last Payment\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Actions\r\n//                     </th>\r\n//                   </tr>\r\n//                 </thead>\r\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//                   {filteredCustomers.map((customer) => (\r\n//                     <tr key={customer.id} className=\"hover:bg-gray-50\">\r\n//                       <td className=\"px-6 py-4\">\r\n//                         <div>\r\n//                           <div className=\"text-sm font-medium text-gray-900\">{customer.name}</div>\r\n//                           <div className=\"text-sm text-gray-500\">{customer.id}</div>\r\n//                           <div className=\"text-xs text-gray-400 flex items-center mt-1\">\r\n//                             <Mail className=\"mr-1\" size={12} />\r\n//                             {customer.email}\r\n//                           </div>\r\n//                         </div>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-gray-100 text-gray-800\">\r\n//                           {customer.customerType.replace('_', ' ')}\r\n//                         </span>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {formatCurrency(customer.creditLimit)}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <div className=\"text-sm font-medium text-gray-900\">\r\n//                           {formatCurrency(customer.totalOwed)}\r\n//                         </div>\r\n//                         <div className=\"text-xs text-gray-500\">\r\n//                           {customer.invoiceCount} invoices\r\n//                         </div>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         {customer.overdueAmount > 0 ? (\r\n//                           <span className=\"text-red-600 font-medium\">\r\n//                             {formatCurrency(customer.overdueAmount)}\r\n//                           </span>\r\n//                         ) : (\r\n//                           <span className=\"text-green-600\">$0.00</span>\r\n//                         )}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(customer.creditStatus)}`}>\r\n//                           {customer.creditStatus.replace('_', ' ')}\r\n//                         </span>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {customer.lastPayment}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n//                         <button\r\n//                           onClick={() => setSelectedCustomer(customer)}\r\n//                           className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\r\n//                         >\r\n//                           <Eye size={16} />\r\n//                         </button>\r\n//                         <button className=\"text-blue-600 hover:text-blue-900\">\r\n//                           <Edit size={16} />\r\n//                         </button>\r\n//                       </td>\r\n//                     </tr>\r\n//                   ))}\r\n//                 </tbody>\r\n//               </table>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {activeTab === 'aging' && (\r\n//         <div>\r\n//           <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n//             {/* Aging Summary */}\r\n//             <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Aging Summary</h3>\r\n//               <div className=\"space-y-4\">\r\n//                 <div className=\"flex justify-between items-center p-3 bg-green-50 rounded\">\r\n//                   <span className=\"font-medium text-green-800\">Current (0-30 days)</span>\r\n//                   <span className=\"font-bold text-green-900\">{formatCurrency(aging.current)}</span>\r\n//                 </div>\r\n//                 <div className=\"flex justify-between items-center p-3 bg-yellow-50 rounded\">\r\n//                   <span className=\"font-medium text-yellow-800\">31-60 days</span>\r\n//                   <span className=\"font-bold text-yellow-900\">{formatCurrency(aging.days30)}</span>\r\n//                 </div>\r\n//                 <div className=\"flex justify-between items-center p-3 bg-orange-50 rounded\">\r\n//                   <span className=\"font-medium text-orange-800\">61-90 days</span>\r\n//                   <span className=\"font-bold text-orange-900\">{formatCurrency(aging.days60)}</span>\r\n//                 </div>\r\n//                 <div className=\"flex justify-between items-center p-3 bg-red-50 rounded\">\r\n//                   <span className=\"font-medium text-red-800\">Over 90 days</span>\r\n//                   <span className=\"font-bold text-red-900\">{formatCurrency(aging.over90)}</span>\r\n//                 </div>\r\n//               </div>\r\n//               <div className=\"mt-4 pt-4 border-t\">\r\n//                 <div className=\"flex justify-between items-center\">\r\n//                   <span className=\"text-lg font-semibold text-gray-900\">Total Outstanding</span>\r\n//                   <span className=\"text-xl font-bold text-gray-900\">\r\n//                     {formatCurrency(aging.current + aging.days30 + aging.days60 + aging.days90 + aging.over90)}\r\n//                   </span>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n\r\n//             {/* Collection Priority */}\r\n//             <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Collection Priority</h3>\r\n//               <div className=\"space-y-3\">\r\n//                 {customers.data\r\n//                   .filter(customer => customer.overdueAmount > 0)\r\n//                   .sort((a, b) => b.overdueAmount - a.overdueAmount)\r\n//                   .slice(0, 5)\r\n//                   .map((customer, index) => (\r\n//                     <div key={customer.id} className=\"flex items-center justify-between p-3 bg-red-50 rounded\">\r\n//                       <div>\r\n//                         <div className=\"font-medium text-gray-900\">{customer.name}</div>\r\n//                         <div className=\"text-sm text-gray-500\">\r\n//                           Last payment: {customer.lastPayment}\r\n//                         </div>\r\n//                       </div>\r\n//                       <div className=\"text-right\">\r\n//                         <div className=\"font-bold text-red-900\">{formatCurrency(customer.overdueAmount)}</div>\r\n//                         <div className=\"text-xs text-red-700\">#{index + 1} Priority</div>\r\n//                       </div>\r\n//                     </div>\r\n//                   ))}\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {activeTab === 'invoices' && (\r\n//         <div>\r\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-900\">Outstanding Orders/Invoices</h3>\r\n//             </div>\r\n//             <div className=\"overflow-x-auto\">\r\n//               <table className=\"w-full\">\r\n//                 <thead className=\"bg-gray-50\">\r\n//                   <tr>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Order #\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Customer\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Date\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Items\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Amount\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Payment Status\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Fulfillment\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Actions\r\n//                     </th>\r\n//                   </tr>\r\n//                 </thead>\r\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//                   {sales.data.map((order) => (\r\n//                     <tr key={order.orderId} className=\"hover:bg-gray-50\">\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <div className=\"text-sm font-medium text-gray-900\">#{order.orderId}</div>\r\n//                         <div className=\"text-xs text-gray-500\">{order.status}</div>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4\">\r\n//                         <div className=\"text-sm font-medium text-gray-900\">{getCustomerName(order.customerId)}</div>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {formatDate(order.createdAt)}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4\">\r\n//                         <div className=\"text-sm text-gray-900\">\r\n//                           {order.lineItems.map((item, index) => (\r\n//                             <div key={index} className=\"mb-1\">\r\n//                               <span className=\"font-medium\">{item.productName}</span>\r\n//                               <span className=\"text-gray-500 ml-2\">x{item.quantity}</span>\r\n//                             </div>\r\n//                           ))}\r\n//                         </div>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {formatCurrency(order.total)}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                           order.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\r\n//                         }`}>\r\n//                           {order.paid ? 'Paid' : 'Unpaid'}\r\n//                         </span>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                           order.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n//                         }`}>\r\n//                           {order.fulfilled ? 'Fulfilled' : 'Pending'}\r\n//                         </span>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n//                         <button\r\n//                           className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\r\n//                           onClick={() => setViewInvoice(order)}\r\n//                         >\r\n//                           <Eye size={16} />\r\n//                         </button>\r\n//                         <button className=\"text-blue-600 hover:text-blue-900\">\r\n//                           <Download size={16} />\r\n//                         </button>\r\n//                       </td>\r\n//                     </tr>\r\n//                   ))}\r\n//                 </tbody>\r\n//               </table>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {activeTab === 'payments' && (\r\n//         <div>\r\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-900\">Payment History</h3>\r\n//             </div>\r\n//             <div className=\"overflow-x-auto\">\r\n//               <table className=\"w-full\">\r\n//                 <thead className=\"bg-gray-50\">\r\n//                   <tr>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Order ID\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Customer\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Date\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Amount\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Payment Status\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Fulfillment Status\r\n//                     </th>\r\n//                   </tr>\r\n//                 </thead>\r\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//                   {window.allSalesData?.filter(order => order.paid).map((order) => (\r\n//                     <tr key={order.orderId} className=\"hover:bg-gray-50\">\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n//                         #{order.orderId}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {getCustomerName(order.customerId)}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {formatDate(order.createdAt)}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {formatCurrency(order.total)}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-green-100 text-green-800\">\r\n//                           Paid\r\n//                         </span>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                           order.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n//                         }`}>\r\n//                           {order.fulfilled ? 'Fulfilled' : 'Pending'}\r\n//                         </span>\r\n//                       </td>\r\n//                     </tr>\r\n//                   ))}\r\n//                 </tbody>\r\n//               </table>\r\n//             </div>\r\n            \r\n//             {(!window.allSalesData?.filter(order => order.paid).length || window.allSalesData?.filter(order => order.paid).length === 0) && (\r\n//               <div className=\"text-center py-12\">\r\n//                 <div className=\"text-gray-500 text-lg\">No payments found</div>\r\n//                 <p className=\"text-gray-400 mt-2\">All orders are currently unpaid</p>\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Customer Detail Modal */}\r\n//       {selectedCustomer && (\r\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\r\n//                   Customer Details - {selectedCustomer.name}\r\n//                 </h3>\r\n//                 <button\r\n//                   onClick={() => setSelectedCustomer(null)}\r\n//                   className=\"text-gray-400 hover:text-gray-600\"\r\n//                 >\r\n//                   <XCircle size={20} />\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <div className=\"px-6 py-4\">\r\n//               {/* Customer Info Grid */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n//                 <div className=\"space-y-4\">\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer ID</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.id}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Email</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.email}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Phone</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.phone}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Address</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.address}</p>\r\n//                   </div>\r\n//                 </div>\r\n                \r\n//                 <div className=\"space-y-4\">\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer Type</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.customerType.replace('_', ' ')}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Limit</label>\r\n//                     <p className=\"text-sm text-gray-900\">{formatCurrency(selectedCustomer.creditLimit)}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Payment Terms</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.paymentTerms} days</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Status</label>\r\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(selectedCustomer.creditStatus)}`}>\r\n//                       {selectedCustomer.creditStatus.replace('_', ' ')}\r\n//                     </span>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Financial Summary */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\r\n//                 <div className=\"bg-blue-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-blue-600\">Current Balance</div>\r\n//                   <div className=\"text-xl font-bold text-blue-900\">\r\n//                     {formatCurrency(selectedCustomer.totalOwed)}\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"bg-red-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-red-600\">Overdue Amount</div>\r\n//                   <div className=\"text-xl font-bold text-red-900\">\r\n//                     {formatCurrency(selectedCustomer.overdueAmount)}\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"bg-green-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-green-600\">Credit Available</div>\r\n//                   <div className=\"text-xl font-bold text-green-900\">\r\n//                     {formatCurrency(selectedCustomer.creditLimit - selectedCustomer.totalOwed)}\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"bg-purple-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-purple-600\">Avg Payment Days</div>\r\n//                   <div className=\"text-xl font-bold text-purple-900\">\r\n//                     {selectedCustomer.avgPaymentDays}\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Customer Orders */}\r\n//               <div className=\"mb-6\">\r\n//                 <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Customer Orders</h4>\r\n//                 <div className=\"overflow-x-auto\">\r\n//                   <table className=\"w-full border border-gray-200 rounded\">\r\n//                     <thead className=\"bg-gray-50\">\r\n//                       <tr>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Order</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Date</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Items</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Amount</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Payment</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Fulfillment</th>\r\n//                       </tr>\r\n//                     </thead>\r\n//                     <tbody className=\"divide-y divide-gray-200\">\r\n//                       {(window.allSalesData || [])\r\n//                         .filter(order => {\r\n//                           if (selectedCustomer.id === 'walk-in') {\r\n//                             return !order.customerId || order.customerId === 'null';\r\n//                           }\r\n//                           return order.customerId === selectedCustomer.id;\r\n//                         })\r\n//                         .map((order) => (\r\n//                           <tr key={order.orderId}>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">#{order.orderId}</td>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{formatDate(order.createdAt)}</td>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">\r\n//                               {order.lineItems.map(item => item.productName).join(', ')}\r\n//                             </td>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{formatCurrency(order.total)}</td>\r\n//                             <td className=\"px-4 py-2\">\r\n//                               <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                                 order.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\r\n//                               }`}>\r\n//                                 {order.paid ? 'Paid' : 'Unpaid'}\r\n//                               </span>\r\n//                             </td>\r\n//                             <td className=\"px-4 py-2\">\r\n//                               <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                                 order.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n//                               }`}>\r\n//                                 {order.fulfilled ? 'Fulfilled' : 'Pending'}\r\n//                               </span>\r\n//                             </td>\r\n//                           </tr>\r\n//                         ))}\r\n//                     </tbody>\r\n//                   </table>\r\n//                 </div>\r\n                \r\n//                 {(window.allSalesData || [])\r\n//                   .filter(order => {\r\n//                     if (selectedCustomer.id === 'walk-in') {\r\n//                       return !order.customerId || order.customerId === 'null';\r\n//                     }\r\n//                     return order.customerId === selectedCustomer.id;\r\n//                   }).length === 0 && (\r\n//                     <div className=\"text-center py-4 text-gray-500\">\r\n//                       No orders found for this customer\r\n//                     </div>\r\n//                   )}\r\n//               </div>\r\n\r\n//               {/* Action Buttons */}\r\n//               <div className=\"flex space-x-3\">\r\n//                 <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\r\n//                   <Plus size={16} />\r\n//                   <span>New Invoice</span>\r\n//                 </button>\r\n//                 <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\r\n//                   <CheckCircle size={16} />\r\n//                   <span>Record Payment</span>\r\n//                 </button>\r\n//                 <button className=\"px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 flex items-center space-x-2\">\r\n//                   <Mail size={16} />\r\n//                   <span>Send Statement</span>\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Order/Invoice Detail Modal */}\r\n//       {viewInvoice && (\r\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\r\n//                   Order Details - #{viewInvoice.orderId}\r\n//                 </h3>\r\n//                 <button\r\n//                   onClick={() => setViewInvoice(null)}\r\n//                   className=\"text-gray-400 hover:text-gray-600\"\r\n//                 >\r\n//                   <XCircle size={20} />\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <div className=\"px-6 py-4\">\r\n//               {/* Order Info */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n//                 <div className=\"space-y-4\">\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Order ID</label>\r\n//                     <p className=\"text-sm text-gray-900\">{viewInvoice.orderId}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer</label>\r\n//                     <p className=\"text-sm text-gray-900\">{getCustomerName(viewInvoice.customerId)}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Created Date</label>\r\n//                     <p className=\"text-sm text-gray-900\">{formatDate(viewInvoice.createdAt)}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Status</label>\r\n//                     <p className=\"text-sm text-gray-900\">{viewInvoice.status}</p>\r\n//                   </div>\r\n//                 </div>\r\n                \r\n//                 <div className=\"space-y-4\">\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Payment Status</label>\r\n//                     <div>\r\n//                       <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                         viewInvoice.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\r\n//                       }`}>\r\n//                         {viewInvoice.paid ? 'Paid' : 'Unpaid'}\r\n//                       </span>\r\n//                     </div>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Fulfillment Status</label>\r\n//                     <div>\r\n//                       <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                         viewInvoice.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n//                       }`}>\r\n//                         {viewInvoice.fulfilled ? 'Fulfilled' : 'Pending'}\r\n//                       </span>\r\n//                     </div>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Total Amount</label>\r\n//                     <p className=\"text-lg font-bold text-gray-900\">{formatCurrency(viewInvoice.total)}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Payable Amount</label>\r\n//                     <p className=\"text-sm text-gray-900\">{formatCurrency(viewInvoice.payableAmount)}</p>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Line Items */}\r\n//               <div className=\"mb-6\">\r\n//                 <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Order Items</h4>\r\n//                 <div className=\"overflow-x-auto\">\r\n//                   <table className=\"w-full border border-gray-200 rounded\">\r\n//                     <thead className=\"bg-gray-50\">\r\n//                       <tr>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Product</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Quantity</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Unit Price</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Total</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Status</th>\r\n//                       </tr>\r\n//                     </thead>\r\n//                     <tbody className=\"divide-y divide-gray-200\">\r\n//                       {viewInvoice.lineItems.map((item, index) => (\r\n//                         <tr key={index}>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900\">{item.productName}</td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{item.quantity}</td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{formatCurrency(item.price)}</td>\r\n//                           <td className=\"px-4 py-2 text-sm font-medium text-gray-900 text-right\">{formatCurrency(item.total)}</td>\r\n//                           <td className=\"px-4 py-2\">\r\n//                             <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                               item.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n//                             }`}>\r\n//                               {item.status}\r\n//                             </span>\r\n//                           </td>\r\n//                         </tr>\r\n//                       ))}\r\n//                     </tbody>\r\n//                   </table>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Totals */}\r\n//               <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n//                 <div className=\"space-y-2\">\r\n//                   <div className=\"flex justify-between\">\r\n//                     <span className=\"text-sm text-gray-600\">Subtotal:</span>\r\n//                     <span className=\"text-sm text-gray-900\">{formatCurrency(viewInvoice.subTotal)}</span>\r\n//                   </div>\r\n//                   <div className=\"flex justify-between\">\r\n//                     <span className=\"text-sm text-gray-600\">Tax ({viewInvoice.taxRate}%):</span>\r\n//                     <span className=\"text-sm text-gray-900\">{formatCurrency(viewInvoice.taxAmount)}</span>\r\n//                   </div>\r\n//                   {viewInvoice.discountAmount > 0 && (\r\n//                     <div className=\"flex justify-between\">\r\n//                       <span className=\"text-sm text-gray-600\">Discount:</span>\r\n//                       <span className=\"text-sm text-red-600\">-{formatCurrency(viewInvoice.discountAmount)}</span>\r\n//                     </div>\r\n//                   )}\r\n//                   <div className=\"flex justify-between font-bold text-lg border-t pt-2\">\r\n//                     <span>Total:</span>\r\n//                     <span>{formatCurrency(viewInvoice.total)}</span>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Action Buttons */}\r\n//               <div className=\"flex space-x-3 mt-6\">\r\n//                 {!viewInvoice.paid && (\r\n//                   <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\r\n//                     <CheckCircle size={16} />\r\n//                     <span>Mark as Paid</span>\r\n//                   </button>\r\n//                 )}\r\n//                 {!viewInvoice.fulfilled && (\r\n//                   <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\r\n//                     <FileText size={16} />\r\n//                     <span>Mark as Fulfilled</span>\r\n//                   </button>\r\n//                 )}\r\n//                 <button className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\">\r\n//                   <Download size={16} />\r\n//                   <span>Download Invoice</span>\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* API Integration Status */}\r\n//       <div className=\"mt-8 p-6 bg-green-50 border border-green-200 rounded-lg\">\r\n//         <div className=\"flex items-center mb-4\">\r\n//           <CheckCircle className=\"text-green-600 mr-2\" size={20} />\r\n//           <h3 className=\"font-medium text-green-800\">POS Integration Active</h3>\r\n//         </div>\r\n//         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm text-green-700\">\r\n//           <div>\r\n//             <strong>Sales Orders:</strong> {sales.data.length} outstanding orders from POS system\r\n//           </div>\r\n//           <div>\r\n//             <strong>Customers:</strong> {customers.data.length} active customers synchronized\r\n//           </div>\r\n//           <div>\r\n//             <strong>Real-time Updates:</strong> Data refreshes automatically with POS transactions\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"mt-4 text-xs text-green-600\">\r\n//           <strong>Note:</strong> Only showing unpaid or unfulfilled orders. Replace Bearer token for live data connection.\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AccountsReceivable;\r\n\r\n//very very excellent\r\n// import React, { useState, useEffect } from 'react';\r\n// import { \r\n//   Users, \r\n//   DollarSign, \r\n//   CreditCard, \r\n//   AlertTriangle, \r\n//   Clock, \r\n//   Plus, \r\n//   Search, \r\n//   Filter, \r\n//   Eye, \r\n//   Edit, \r\n//   Download,\r\n//   CheckCircle,\r\n//   XCircle,\r\n//   Calendar,\r\n//   FileText,\r\n//   TrendingUp,\r\n//   Mail,\r\n//   Phone,\r\n//   Loader,\r\n//   RefreshCw\r\n// } from 'lucide-react';\r\n\r\n// // API Configuration\r\n// const API_BASE_URL_SALES = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/orders?start=0&size=200';\r\n// const API_CUSTOMERS = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/customers?status=Active';\r\n\r\n// // Replace with your actual Bearer token\r\n// const BEARER_TOKEN = 'your-bearer-token-here';\r\n\r\n// const AccountsReceivable = () => {\r\n//   // State management\r\n//   const [sales, setSales] = useState({ loading: false, data: [], error: null });\r\n//   const [customers, setCustomers] = useState({ loading: false, data: [], error: null });\r\n//   const [activeTab, setActiveTab] = useState('overview');\r\n//   const [selectedCustomer, setSelectedCustomer] = useState(null);\r\n//   const [selectedOrder, setSelectedOrder] = useState(null);\r\n//   const [viewInvoice, setViewInvoice] = useState(null);\r\n//   const [showInvoiceForm, setShowInvoiceForm] = useState(false);\r\n//   const [filters, setFilters] = useState({\r\n//     customerType: 'all',\r\n//     status: 'all',\r\n//     dateRange: '30',\r\n//     searchTerm: ''\r\n//   });\r\n\r\n//   // API Functions\r\n//   const fetchSales = async () => {\r\n//     setSales(prev => ({ ...prev, loading: true, error: null }));\r\n//     try {\r\n//       const response = await fetch(API_BASE_URL_SALES, {\r\n//         method: 'GET',\r\n//         headers: {\r\n//           'Authorization': `Bearer ${BEARER_TOKEN}`,\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//       });\r\n      \r\n//       if (!response.ok) {\r\n//         throw new Error(`HTTP error! status: ${response.status}`);\r\n//       }\r\n      \r\n//       const allData = await response.json();\r\n      \r\n//       // Store all data for customer calculations\r\n//       window.allSalesData = allData;\r\n      \r\n//       // Show only records that are unpaid and fulfilled for display\r\n//       const filteredOrders = allData.filter(order => \r\n//         !order.paid && order.fulfilled\r\n//       );\r\n      \r\n//       setSales({ loading: false, data: filteredOrders, error: null });\r\n//     } catch (error) {\r\n//       console.error('Error fetching sales:', error);\r\n//       setSales({ loading: false, data: [], error: error.message });\r\n//     }\r\n//   };\r\n\r\n//   const fetchCustomers = async () => {\r\n//     setCustomers(prev => ({ ...prev, loading: true, error: null }));\r\n//     try {\r\n//       const response = await fetch(API_CUSTOMERS, {\r\n//         method: 'GET',\r\n//         headers: {\r\n//           'Authorization': `Bearer ${BEARER_TOKEN}`,\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//       });\r\n      \r\n//       if (!response.ok) {\r\n//         throw new Error(`HTTP error! status: ${response.status}`);\r\n//       }\r\n      \r\n//       const data = await response.json();\r\n      \r\n//       // Use all sales data for customer calculations, not just filtered display data\r\n//       const allSalesData = window.allSalesData || [];\r\n      \r\n//       // Transform API customers to match our structure with real calculated data\r\n//       const transformedCustomers = data.map(customer => {\r\n//         // Get ALL orders for this customer (not just filtered ones)\r\n//         const customerOrders = allSalesData.filter(order => order.customerId === customer.id);\r\n        \r\n//         // Calculate total owed from ALL unpaid orders\r\n//         const totalOwed = customerOrders\r\n//           .filter(order => !order.paid)\r\n//           .reduce((sum, order) => sum + (order.total || 0), 0);\r\n        \r\n//         // Overdue amount = total owed (since all unpaid orders need collection)\r\n//         const overdueAmount = totalOwed;\r\n        \r\n//         // Total number of orders for this customer\r\n//         const invoiceCount = customerOrders.length;\r\n        \r\n//         // Determine customer type based on API data or order history\r\n//         let customerType = 'individual';\r\n//         const totalSpent = customerOrders\r\n//           .filter(order => order.paid)\r\n//           .reduce((sum, order) => sum + (order.total || 0), 0);\r\n        \r\n//         if (totalSpent > 500000 || customer.totalSpendOnOrder > 500000) {\r\n//           customerType = 'corporate';\r\n//         } else if (totalSpent > 100000 || customer.totalSpendOnOrder > 100000) {\r\n//           customerType = 'small_business';\r\n//         }\r\n        \r\n//         // Set credit limit based on customer type\r\n//         let creditLimit = 25000; // Default for individual\r\n//         if (customerType === 'corporate') {\r\n//           creditLimit = 500000;\r\n//         } else if (customerType === 'small_business') {\r\n//           creditLimit = 100000;\r\n//         }\r\n        \r\n//         // Determine credit status based on payment behavior\r\n//         let creditStatus = 'good';\r\n//         if (totalOwed === 0) {\r\n//           creditStatus = 'excellent';\r\n//         } else if (totalOwed > creditLimit * 0.9) {\r\n//           creditStatus = 'hold'; // Hold means credit limit exceeded, stop further credit\r\n//         } else if (totalOwed > creditLimit * 0.7) {\r\n//           creditStatus = 'watch'; // Watch means monitor closely\r\n//         }\r\n        \r\n//         // Get last payment date from most recent paid order\r\n//         const paidOrders = customerOrders.filter(o => o.paid);\r\n//         const lastPayment = paidOrders.length > 0 ? \r\n//           paidOrders.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))[0].createdAt.split('.').slice(0, 3).join('-') :\r\n//           'No payments';\r\n\r\n//         return {\r\n//           id: customer.id,\r\n//           name: customer.name,\r\n//           email: customer.email || 'No email provided',\r\n//           phone: customer.phoneNumber || 'No phone provided',\r\n//           address: customer.address && customer.address.length > 0 ? \r\n//             (typeof customer.address[0] === 'string' ? customer.address[0] : 'No address provided') : \r\n//             'No address provided',\r\n//           customerType: customerType,\r\n//           creditLimit: creditLimit,\r\n//           paymentTerms: customerType === 'corporate' ? 45 : (customerType === 'small_business' ? 30 : 15),\r\n//           totalOwed: totalOwed,\r\n//           overdueAmount: overdueAmount,\r\n//           lastPayment: lastPayment,\r\n//           creditStatus: creditStatus,\r\n//           accountBalance: -totalOwed,\r\n//           invoiceCount: invoiceCount,\r\n//           avgPaymentDays: 30, // Default estimate\r\n//           status: customer.status,\r\n//           totalSpendOnOrder: customer.totalSpendOnOrder || 0,\r\n//           averageOrderValue: customer.averageOrderValue || 0,\r\n//           numberOfOrders: customer.numberOfOrders || invoiceCount\r\n//         };\r\n//       });\r\n      \r\n//       // Also add walk-in customers (null customerId) as separate entries for each order\r\n//       const walkInOrders = allSalesData.filter(order => !order.customerId || order.customerId === 'null');\r\n//       walkInOrders.forEach((order, index) => {\r\n//         const guestNumber = index + 1;\r\n//         const guestTotalOwed = order.paid ? 0 : order.total;\r\n//         const guestLastPayment = order.paid ? \r\n//           order.createdAt.split('.').slice(0, 3).join('-') : \r\n//           'No payments';\r\n        \r\n//         transformedCustomers.push({\r\n//           id: `guest-${order.orderId}`,\r\n//           name: `Guest Customer #${guestNumber}`,\r\n//           email: 'guest@pos.system',\r\n//           phone: '+000-000-0000',\r\n//           address: 'Walk-in Sale',\r\n//           customerType: 'cash',\r\n//           creditLimit: 0,\r\n//           paymentTerms: 0,\r\n//           totalOwed: guestTotalOwed,\r\n//           overdueAmount: guestTotalOwed,\r\n//           lastPayment: guestLastPayment,\r\n//           creditStatus: 'cash_only',\r\n//           accountBalance: -guestTotalOwed,\r\n//           invoiceCount: 1,\r\n//           avgPaymentDays: 0,\r\n//           status: 'Active',\r\n//           totalSpendOnOrder: order.total,\r\n//           averageOrderValue: order.total,\r\n//           numberOfOrders: 1,\r\n//           orderId: order.orderId // Store order ID for reference\r\n//         });\r\n//       });\r\n      \r\n//       setCustomers({ loading: false, data: transformedCustomers, error: null });\r\n//     } catch (error) {\r\n//       console.error('Error fetching customers:', error);\r\n//       setCustomers({ loading: false, data: [], error: error.message });\r\n//     }\r\n//   };\r\n\r\n//   // Also add refresh button functionality to recalculate customer data\r\n//   const refreshAllData = async () => {\r\n//     await fetchSales();\r\n//     setTimeout(() => fetchCustomers(), 500);\r\n//   };\r\n\r\n//   // Load data on component mount\r\n//   useEffect(() => {\r\n//     const loadData = async () => {\r\n//       await fetchSales();\r\n//       // Fetch customers after sales data is loaded to calculate balances correctly\r\n//       setTimeout(() => fetchCustomers(), 500);\r\n//     };\r\n//     loadData();\r\n//   }, []);\r\n\r\n//   // Helper function to get customer name by ID\r\n//   const getCustomerName = (customerId) => {\r\n//     if (!customerId || customerId === 'null') return 'Guest Customer';\r\n//     const customer = customers.data.find(c => c.id === customerId);\r\n//     return customer ? customer.name : 'Unknown Customer';\r\n//   };\r\n\r\n//   // Helper function to get customer details by ID\r\n//   const getCustomerDetails = (customerId) => {\r\n//     if (!customerId || customerId === 'null') return null;\r\n//     return customers.data.find(c => c.id === customerId);\r\n//   };\r\n\r\n//   // Calculate AR summary\r\n//   const calculateARSummary = () => {\r\n//     const totalAR = customers.data.reduce((sum, customer) => sum + customer.totalOwed, 0);\r\n//     const totalOverdue = customers.data.reduce((sum, customer) => sum + customer.overdueAmount, 0);\r\n//     const customersWithBalance = customers.data.filter(customer => customer.totalOwed > 0).length;\r\n//     const avgDaysOutstanding = customers.data.length > 0 \r\n//       ? customers.data.reduce((sum, customer) => sum + customer.avgPaymentDays, 0) / customers.data.length \r\n//       : 0;\r\n\r\n//     return {\r\n//       totalAR,\r\n//       totalOverdue,\r\n//       customersWithBalance,\r\n//       avgDaysOutstanding: Math.round(avgDaysOutstanding)\r\n//     };\r\n//   };\r\n\r\n//   // Get aging data\r\n//   const getAgingData = () => {\r\n//     const aging = {\r\n//       current: 0,\r\n//       days30: 0,\r\n//       days60: 0,\r\n//       days90: 0,\r\n//       over90: 0\r\n//     };\r\n\r\n//     sales.data.forEach(order => {\r\n//       if (order.paid) return;\r\n      \r\n//       const daysPastDue = order.daysOverdue || 0;\r\n      \r\n//       if (daysPastDue <= 0) {\r\n//         aging.current += order.total;\r\n//       } else if (daysPastDue <= 30) {\r\n//         aging.days30 += order.total;\r\n//       } else if (daysPastDue <= 60) {\r\n//         aging.days60 += order.total;\r\n//       } else if (daysPastDue <= 90) {\r\n//         aging.days90 += order.total;\r\n//       } else {\r\n//         aging.over90 += order.total;\r\n//       }\r\n//     });\r\n\r\n//     return aging;\r\n//   };\r\n\r\n//   // Filter customers\r\n//   const getFilteredCustomers = () => {\r\n//     let filtered = [...customers.data];\r\n\r\n//     if (filters.customerType !== 'all') {\r\n//       filtered = filtered.filter(customer => customer.customerType === filters.customerType);\r\n//     }\r\n\r\n//     if (filters.status !== 'all') {\r\n//       filtered = filtered.filter(customer => {\r\n//         if (filters.status === 'overdue') return customer.overdueAmount > 0;\r\n//         if (filters.status === 'current') return customer.totalOwed > 0 && customer.overdueAmount === 0;\r\n//         if (filters.status === 'paid_up') return customer.totalOwed === 0;\r\n//         return true;\r\n//       });\r\n//     }\r\n\r\n//     if (filters.searchTerm) {\r\n//       const term = filters.searchTerm.toLowerCase();\r\n//       filtered = filtered.filter(customer =>\r\n//         customer.name.toLowerCase().includes(term) ||\r\n//         customer.email.toLowerCase().includes(term) ||\r\n//         customer.id.toLowerCase().includes(term)\r\n//       );\r\n//     }\r\n\r\n//     return filtered;\r\n//   };\r\n\r\n//   const getCreditStatusColor = (status) => {\r\n//     switch (status) {\r\n//       case 'excellent': return 'bg-green-100 text-green-800';\r\n//       case 'good': return 'bg-blue-100 text-blue-800';\r\n//       case 'watch': return 'bg-yellow-100 text-yellow-800';\r\n//       case 'hold': return 'bg-red-100 text-red-800';\r\n//       case 'cash_only': return 'bg-gray-100 text-gray-800';\r\n//       default: return 'bg-gray-100 text-gray-800';\r\n//     }\r\n//   };\r\n\r\n//   const getInvoiceStatusColor = (status) => {\r\n//     switch (status) {\r\n//       case 'paid': return 'bg-green-100 text-green-800';\r\n//       case 'outstanding': return 'bg-blue-100 text-blue-800';\r\n//       case 'overdue': return 'bg-red-100 text-red-800';\r\n//       case 'partial': return 'bg-yellow-100 text-yellow-800';\r\n//       default: return 'bg-gray-100 text-gray-800';\r\n//     }\r\n//   };\r\n\r\n//   const formatDate = (dateString) => {\r\n//     if (!dateString) return 'N/A';\r\n//     return dateString.split('.').slice(0, 3).join('/');\r\n//   };\r\n\r\n//   const formatCurrency = (amount) => {\r\n//     return new Intl.NumberFormat('en-US', {\r\n//       style: 'currency',\r\n//       currency: 'USD'\r\n//     }).format(amount);\r\n//   };\r\n\r\n//   const summary = calculateARSummary();\r\n//   const aging = getAgingData();\r\n//   const filteredCustomers = getFilteredCustomers();\r\n\r\n//   // Loading state\r\n//   if (sales.loading || customers.loading) {\r\n//     return (\r\n//       <div className=\"flex items-center justify-center min-h-screen\">\r\n//         <div className=\"flex items-center space-x-3\">\r\n//           <Loader className=\"animate-spin text-emerald-600\" size={24} />\r\n//           <span className=\"text-gray-600\">Loading data from API...</span>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   // Error state\r\n//   if (sales.error || customers.error) {\r\n//     return (\r\n//       <div className=\"max-w-7xl mx-auto p-6\">\r\n//         <div className=\"bg-red-50 border border-red-200 rounded-lg p-6\">\r\n//           <div className=\"flex items-center mb-4\">\r\n//             <AlertTriangle className=\"text-red-600 mr-2\" size={20} />\r\n//             <h3 className=\"font-medium text-red-800\">API Connection Error</h3>\r\n//           </div>\r\n//           <div className=\"text-red-700 mb-4\">\r\n//             {sales.error && <div>Sales API Error: {sales.error}</div>}\r\n//             {customers.error && <div>Customers API Error: {customers.error}</div>}\r\n//           </div>\r\n//           <button\r\n//             onClick={() => {\r\n//               fetchSales();\r\n//               fetchCustomers();\r\n//             }}\r\n//             className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 flex items-center space-x-2\"\r\n//           >\r\n//             <RefreshCw size={16} />\r\n//             <span>Retry Connection</span>\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"max-w-7xl mx-auto p-6 bg-white\">\r\n//       {/* Header */}\r\n//       <div className=\"mb-8\">\r\n//         <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\r\n//           <CreditCard className=\"mr-3 text-emerald-600\" />\r\n//           Accounts Receivable\r\n//         </h1>\r\n//         <p className=\"text-gray-600\">Manage customer invoicing, payments, and credit limits</p>\r\n//       </div>\r\n\r\n//       {/* Summary Cards */}\r\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\r\n//         <div className=\"bg-blue-50 p-6 rounded-lg border border-blue-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-blue-600 text-sm font-medium\">Total A/R</p>\r\n//               <p className=\"text-2xl font-bold text-blue-900\">{formatCurrency(summary.totalAR)}</p>\r\n//             </div>\r\n//             <DollarSign className=\"text-blue-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-blue-700 mt-2\">{summary.customersWithBalance} customers with balances</p>\r\n//         </div>\r\n\r\n//         <div className=\"bg-red-50 p-6 rounded-lg border border-red-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-red-600 text-sm font-medium\">Overdue Amount</p>\r\n//               <p className=\"text-2xl font-bold text-red-900\">{formatCurrency(summary.totalOverdue)}</p>\r\n//             </div>\r\n//             <AlertTriangle className=\"text-red-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-red-700 mt-2\">\r\n//             {summary.totalAR > 0 ? ((summary.totalOverdue / summary.totalAR) * 100).toFixed(1) : 0}% of total A/R\r\n//           </p>\r\n//         </div>\r\n\r\n//         <div className=\"bg-green-50 p-6 rounded-lg border border-green-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-green-600 text-sm font-medium\">Avg. Days Outstanding</p>\r\n//               <p className=\"text-2xl font-bold text-green-900\">{summary.avgDaysOutstanding}</p>\r\n//             </div>\r\n//             <Clock className=\"text-green-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-green-700 mt-2\">Collection performance</p>\r\n//         </div>\r\n\r\n//         <div className=\"bg-purple-50 p-6 rounded-lg border border-purple-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-purple-600 text-sm font-medium\">Active Customers</p>\r\n//               <p className=\"text-2xl font-bold text-purple-900\">{customers.data.length}</p>\r\n//             </div>\r\n//             <Users className=\"text-purple-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-purple-700 mt-2\">Total customer accounts</p>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Tabs */}\r\n//       <div className=\"mb-6\">\r\n//         <div className=\"border-b border-gray-200\">\r\n//           <nav className=\"-mb-px flex space-x-8\">\r\n//             {[\r\n//               { id: 'overview', name: 'Customer Overview', icon: Users },\r\n//               { id: 'invoices', name: 'Invoices', icon: FileText },\r\n//               { id: 'aging', name: 'Aging Report', icon: Clock },\r\n//               { id: 'payments', name: 'Payments', icon: CheckCircle }\r\n//             ].map((tab) => (\r\n//               <button\r\n//                 key={tab.id}\r\n//                 onClick={() => setActiveTab(tab.id)}\r\n//                 className={`flex items-center py-2 px-1 border-b-2 font-medium text-sm ${\r\n//                   activeTab === tab.id\r\n//                     ? 'border-emerald-500 text-emerald-600'\r\n//                     : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n//                 }`}\r\n//               >\r\n//                 <tab.icon className=\"mr-2\" size={16} />\r\n//                 {tab.name}\r\n//               </button>\r\n//             ))}\r\n//           </nav>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Tab Content */}\r\n//       {activeTab === 'overview' && (\r\n//         <div>\r\n//           {/* Filters */}\r\n//           <div className=\"flex flex-wrap items-center gap-4 mb-6\">\r\n//             <div className=\"relative\">\r\n//               <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n//               <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Search customers...\"\r\n//                 value={filters.searchTerm}\r\n//                 onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\r\n//                 className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               />\r\n//             </div>\r\n\r\n//             <select\r\n//               value={filters.customerType}\r\n//               onChange={(e) => setFilters({ ...filters, customerType: e.target.value })}\r\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//             >\r\n//               <option value=\"all\">All Customer Types</option>\r\n//               <option value=\"corporate\">Corporate</option>\r\n//               <option value=\"small_business\">Small Business</option>\r\n//               <option value=\"individual\">Individual</option>\r\n//               <option value=\"cash\">Cash Only</option>\r\n//             </select>\r\n\r\n//             <select\r\n//               value={filters.status}\r\n//               onChange={(e) => setFilters({ ...filters, status: e.target.value })}\r\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//             >\r\n//               <option value=\"all\">All Statuses</option>\r\n//               <option value=\"current\">Current</option>\r\n//               <option value=\"overdue\">Overdue</option>\r\n//               <option value=\"paid_up\">Paid Up</option>\r\n//             </select>\r\n\r\n//             <button\r\n//               onClick={() => setShowInvoiceForm(true)}\r\n//               className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\r\n//             >\r\n//               <Plus size={16} />\r\n//               <span>New Invoice</span>\r\n//             </button>\r\n//           </div>\r\n\r\n//           {/* Customer List */}\r\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//             <div className=\"overflow-x-auto\">\r\n//               <table className=\"w-full\">\r\n//                 <thead className=\"bg-gray-50\">\r\n//                   <tr>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Customer\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Type\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Credit Limit\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Balance\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Overdue\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Credit Status\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Last Payment\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Actions\r\n//                     </th>\r\n//                   </tr>\r\n//                 </thead>\r\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//                   {filteredCustomers.map((customer) => (\r\n//                     <tr key={customer.id} className=\"hover:bg-gray-50\">\r\n//                       <td className=\"px-6 py-4\">\r\n//                         <div>\r\n//                           <div className=\"text-sm font-medium text-gray-900\">{customer.name}</div>\r\n//                           <div className=\"text-sm text-gray-500\">{customer.id}</div>\r\n//                           <div className=\"text-xs text-gray-400 flex items-center mt-1\">\r\n//                             <Mail className=\"mr-1\" size={12} />\r\n//                             {customer.email}\r\n//                           </div>\r\n//                         </div>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-gray-100 text-gray-800\">\r\n//                           {customer.customerType.replace('_', ' ')}\r\n//                         </span>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {formatCurrency(customer.creditLimit)}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <div className=\"text-sm font-medium text-gray-900\">\r\n//                           {formatCurrency(customer.totalOwed)}\r\n//                         </div>\r\n//                         <div className=\"text-xs text-gray-500\">\r\n//                           {customer.invoiceCount} invoices\r\n//                         </div>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         {customer.overdueAmount > 0 ? (\r\n//                           <span className=\"text-red-600 font-medium\">\r\n//                             {formatCurrency(customer.overdueAmount)}\r\n//                           </span>\r\n//                         ) : (\r\n//                           <span className=\"text-green-600\">$0.00</span>\r\n//                         )}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(customer.creditStatus)}`}>\r\n//                           {customer.creditStatus.replace('_', ' ')}\r\n//                         </span>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {customer.lastPayment}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n//                         <button\r\n//                           onClick={() => setSelectedCustomer(customer)}\r\n//                           className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\r\n//                         >\r\n//                           <Eye size={16} />\r\n//                         </button>\r\n//                         <button className=\"text-blue-600 hover:text-blue-900\">\r\n//                           <Edit size={16} />\r\n//                         </button>\r\n//                       </td>\r\n//                     </tr>\r\n//                   ))}\r\n//                 </tbody>\r\n//               </table>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {activeTab === 'aging' && (\r\n//         <div>\r\n//           <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n//             {/* Aging Summary */}\r\n//             <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Aging Summary</h3>\r\n//               <div className=\"space-y-4\">\r\n//                 <div className=\"flex justify-between items-center p-3 bg-green-50 rounded\">\r\n//                   <span className=\"font-medium text-green-800\">Current (0-30 days)</span>\r\n//                   <span className=\"font-bold text-green-900\">{formatCurrency(aging.current)}</span>\r\n//                 </div>\r\n//                 <div className=\"flex justify-between items-center p-3 bg-yellow-50 rounded\">\r\n//                   <span className=\"font-medium text-yellow-800\">31-60 days</span>\r\n//                   <span className=\"font-bold text-yellow-900\">{formatCurrency(aging.days30)}</span>\r\n//                 </div>\r\n//                 <div className=\"flex justify-between items-center p-3 bg-orange-50 rounded\">\r\n//                   <span className=\"font-medium text-orange-800\">61-90 days</span>\r\n//                   <span className=\"font-bold text-orange-900\">{formatCurrency(aging.days60)}</span>\r\n//                 </div>\r\n//                 <div className=\"flex justify-between items-center p-3 bg-red-50 rounded\">\r\n//                   <span className=\"font-medium text-red-800\">Over 90 days</span>\r\n//                   <span className=\"font-bold text-red-900\">{formatCurrency(aging.over90)}</span>\r\n//                 </div>\r\n//               </div>\r\n//               <div className=\"mt-4 pt-4 border-t\">\r\n//                 <div className=\"flex justify-between items-center\">\r\n//                   <span className=\"text-lg font-semibold text-gray-900\">Total Outstanding</span>\r\n//                   <span className=\"text-xl font-bold text-gray-900\">\r\n//                     {formatCurrency(aging.current + aging.days30 + aging.days60 + aging.days90 + aging.over90)}\r\n//                   </span>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n\r\n//             {/* Collection Priority */}\r\n//             <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Collection Priority</h3>\r\n//               <div className=\"space-y-3\">\r\n//                 {customers.data\r\n//                   .filter(customer => customer.overdueAmount > 0)\r\n//                   .sort((a, b) => b.overdueAmount - a.overdueAmount)\r\n//                   .slice(0, 5)\r\n//                   .map((customer, index) => (\r\n//                     <div key={customer.id} className=\"flex items-center justify-between p-3 bg-red-50 rounded\">\r\n//                       <div>\r\n//                         <div className=\"font-medium text-gray-900\">{customer.name}</div>\r\n//                         <div className=\"text-sm text-gray-500\">\r\n//                           Last payment: {customer.lastPayment}\r\n//                         </div>\r\n//                       </div>\r\n//                       <div className=\"text-right\">\r\n//                         <div className=\"font-bold text-red-900\">{formatCurrency(customer.overdueAmount)}</div>\r\n//                         <div className=\"text-xs text-red-700\">#{index + 1} Priority</div>\r\n//                       </div>\r\n//                     </div>\r\n//                   ))}\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {activeTab === 'invoices' && (\r\n//         <div>\r\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-900\">Outstanding Orders/Invoices</h3>\r\n//             </div>\r\n//             <div className=\"overflow-x-auto\">\r\n//               <table className=\"w-full\">\r\n//                 <thead className=\"bg-gray-50\">\r\n//                   <tr>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Order #\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Customer\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Date\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Items\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Amount\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Payment Status\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Fulfillment\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Actions\r\n//                     </th>\r\n//                   </tr>\r\n//                 </thead>\r\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//                   {sales.data.map((order) => (\r\n//                     <tr key={order.orderId} className=\"hover:bg-gray-50\">\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <div className=\"text-sm font-medium text-gray-900\">#{order.orderId}</div>\r\n//                         <div className=\"text-xs text-gray-500\">{order.status}</div>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4\">\r\n//                         <div className=\"text-sm font-medium text-gray-900\">{getCustomerName(order.customerId)}</div>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {formatDate(order.createdAt)}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4\">\r\n//                         <div className=\"text-sm text-gray-900\">\r\n//                           {order.lineItems.map((item, index) => (\r\n//                             <div key={index} className=\"mb-1\">\r\n//                               <span className=\"font-medium\">{item.productName}</span>\r\n//                               <span className=\"text-gray-500 ml-2\">x{item.quantity}</span>\r\n//                             </div>\r\n//                           ))}\r\n//                         </div>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {formatCurrency(order.total)}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                           order.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\r\n//                         }`}>\r\n//                           {order.paid ? 'Paid' : 'Unpaid'}\r\n//                         </span>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                           order.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n//                         }`}>\r\n//                           {order.fulfilled ? 'Fulfilled' : 'Pending'}\r\n//                         </span>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n//                         <button\r\n//                           className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\r\n//                           onClick={() => setViewInvoice(order)}\r\n//                         >\r\n//                           <Eye size={16} />\r\n//                         </button>\r\n//                         <button className=\"text-blue-600 hover:text-blue-900\">\r\n//                           <Download size={16} />\r\n//                         </button>\r\n//                       </td>\r\n//                     </tr>\r\n//                   ))}\r\n//                 </tbody>\r\n//               </table>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {activeTab === 'payments' && (\r\n//         <div>\r\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-900\">Payment History</h3>\r\n//             </div>\r\n//             <div className=\"overflow-x-auto\">\r\n//               <table className=\"w-full\">\r\n//                 <thead className=\"bg-gray-50\">\r\n//                   <tr>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Order ID\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Customer\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Date\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Amount\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Payment Status\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Fulfillment Status\r\n//                     </th>\r\n//                   </tr>\r\n//                 </thead>\r\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//                   {window.allSalesData?.filter(order => order.paid).map((order) => (\r\n//                     <tr key={order.orderId} className=\"hover:bg-gray-50\">\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n//                         #{order.orderId}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {getCustomerName(order.customerId)}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {formatDate(order.createdAt)}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {formatCurrency(order.total)}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-green-100 text-green-800\">\r\n//                           Paid\r\n//                         </span>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                           order.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n//                         }`}>\r\n//                           {order.fulfilled ? 'Fulfilled' : 'Pending'}\r\n//                         </span>\r\n//                       </td>\r\n//                     </tr>\r\n//                   ))}\r\n//                 </tbody>\r\n//               </table>\r\n//             </div>\r\n            \r\n//             {(!window.allSalesData?.filter(order => order.paid).length || window.allSalesData?.filter(order => order.paid).length === 0) && (\r\n//               <div className=\"text-center py-12\">\r\n//                 <div className=\"text-gray-500 text-lg\">No payments found</div>\r\n//                 <p className=\"text-gray-400 mt-2\">All orders are currently unpaid</p>\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Customer Detail Modal */}\r\n//       {selectedCustomer && (\r\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\r\n//                   Customer Details - {selectedCustomer.name}\r\n//                 </h3>\r\n//                 <button\r\n//                   onClick={() => setSelectedCustomer(null)}\r\n//                   className=\"text-gray-400 hover:text-gray-600\"\r\n//                 >\r\n//                   <XCircle size={20} />\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <div className=\"px-6 py-4\">\r\n//               {/* Customer Info Grid */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n//                 <div className=\"space-y-4\">\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer ID</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.id}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Email</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.email}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Phone</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.phone}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Address</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.address}</p>\r\n//                   </div>\r\n//                 </div>\r\n                \r\n//                 <div className=\"space-y-4\">\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer Type</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.customerType.replace('_', ' ')}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Limit</label>\r\n//                     <p className=\"text-sm text-gray-900\">{formatCurrency(selectedCustomer.creditLimit)}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Payment Terms</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.paymentTerms} days</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Status</label>\r\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(selectedCustomer.creditStatus)}`}>\r\n//                       {selectedCustomer.creditStatus.replace('_', ' ')}\r\n//                     </span>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Financial Summary */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\r\n//                 <div className=\"bg-blue-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-blue-600\">Current Balance</div>\r\n//                   <div className=\"text-xl font-bold text-blue-900\">\r\n//                     {formatCurrency(selectedCustomer.totalOwed)}\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"bg-red-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-red-600\">Overdue Amount</div>\r\n//                   <div className=\"text-xl font-bold text-red-900\">\r\n//                     {formatCurrency(selectedCustomer.overdueAmount)}\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"bg-green-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-green-600\">Credit Available</div>\r\n//                   <div className=\"text-xl font-bold text-green-900\">\r\n//                     {formatCurrency(selectedCustomer.creditLimit - selectedCustomer.totalOwed)}\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"bg-purple-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-purple-600\">Avg Payment Days</div>\r\n//                   <div className=\"text-xl font-bold text-purple-900\">\r\n//                     {selectedCustomer.avgPaymentDays}\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Customer Orders */}\r\n//               <div className=\"mb-6\">\r\n//                 <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Customer Orders</h4>\r\n//                 <div className=\"overflow-x-auto\">\r\n//                   <table className=\"w-full border border-gray-200 rounded\">\r\n//                     <thead className=\"bg-gray-50\">\r\n//                       <tr>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Order</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Date</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Items</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Amount</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Payment</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Fulfillment</th>\r\n//                       </tr>\r\n//                     </thead>\r\n//                     <tbody className=\"divide-y divide-gray-200\">\r\n//                       {(window.allSalesData || [])\r\n//                         .filter(order => {\r\n//                           if (selectedCustomer.id.startsWith('guest-')) {\r\n//                             return order.orderId === selectedCustomer.orderId;\r\n//                           }\r\n//                           return order.customerId === selectedCustomer.id;\r\n//                         })\r\n//                         .map((order) => (\r\n//                           <tr key={order.orderId}>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">#{order.orderId}</td>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{formatDate(order.createdAt)}</td>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">\r\n//                               {order.lineItems.map(item => item.productName).join(', ')}\r\n//                             </td>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{formatCurrency(order.total)}</td>\r\n//                             <td className=\"px-4 py-2\">\r\n//                               <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                                 order.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\r\n//                               }`}>\r\n//                                 {order.paid ? 'Paid' : 'Unpaid'}\r\n//                               </span>\r\n//                             </td>\r\n//                             <td className=\"px-4 py-2\">\r\n//                               <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                                 order.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n//                               }`}>\r\n//                                 {order.fulfilled ? 'Fulfilled' : 'Pending'}\r\n//                               </span>\r\n//                             </td>\r\n//                           </tr>\r\n//                         ))}\r\n//                     </tbody>\r\n//                   </table>\r\n//                 </div>\r\n                \r\n//                 {(window.allSalesData || [])\r\n//                   .filter(order => {\r\n//                     if (selectedCustomer.id.startsWith('guest-')) {\r\n//                       return order.orderId === selectedCustomer.orderId;\r\n//                     }\r\n//                     return order.customerId === selectedCustomer.id;\r\n//                   }).length === 0 && (\r\n//                     <div className=\"text-center py-4 text-gray-500\">\r\n//                       No orders found for this customer\r\n//                     </div>\r\n//                   )}\r\n//               </div>\r\n\r\n//               {/* Action Buttons */}\r\n//               <div className=\"flex space-x-3\">\r\n//                 <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\r\n//                   <Plus size={16} />\r\n//                   <span>New Invoice</span>\r\n//                 </button>\r\n//                 <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\r\n//                   <CheckCircle size={16} />\r\n//                   <span>Record Payment</span>\r\n//                 </button>\r\n//                 <button className=\"px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 flex items-center space-x-2\">\r\n//                   <Mail size={16} />\r\n//                   <span>Send Statement</span>\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Order/Invoice Detail Modal */}\r\n//       {viewInvoice && (\r\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\r\n//                   Order Details - #{viewInvoice.orderId}\r\n//                 </h3>\r\n//                 <button\r\n//                   onClick={() => setViewInvoice(null)}\r\n//                   className=\"text-gray-400 hover:text-gray-600\"\r\n//                 >\r\n//                   <XCircle size={20} />\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <div className=\"px-6 py-4\">\r\n//               {/* Order Info */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n//                 <div className=\"space-y-4\">\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Order ID</label>\r\n//                     <p className=\"text-sm text-gray-900\">{viewInvoice.orderId}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer</label>\r\n//                     <p className=\"text-sm text-gray-900\">{getCustomerName(viewInvoice.customerId)}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Created Date</label>\r\n//                     <p className=\"text-sm text-gray-900\">{formatDate(viewInvoice.createdAt)}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Status</label>\r\n//                     <p className=\"text-sm text-gray-900\">{viewInvoice.status}</p>\r\n//                   </div>\r\n//                 </div>\r\n                \r\n//                 <div className=\"space-y-4\">\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Payment Status</label>\r\n//                     <div>\r\n//                       <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                         viewInvoice.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\r\n//                       }`}>\r\n//                         {viewInvoice.paid ? 'Paid' : 'Unpaid'}\r\n//                       </span>\r\n//                     </div>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Fulfillment Status</label>\r\n//                     <div>\r\n//                       <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                         viewInvoice.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n//                       }`}>\r\n//                         {viewInvoice.fulfilled ? 'Fulfilled' : 'Pending'}\r\n//                       </span>\r\n//                     </div>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Total Amount</label>\r\n//                     <p className=\"text-lg font-bold text-gray-900\">{formatCurrency(viewInvoice.total)}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Payable Amount</label>\r\n//                     <p className=\"text-sm text-gray-900\">{formatCurrency(viewInvoice.payableAmount)}</p>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Line Items */}\r\n//               <div className=\"mb-6\">\r\n//                 <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Order Items</h4>\r\n//                 <div className=\"overflow-x-auto\">\r\n//                   <table className=\"w-full border border-gray-200 rounded\">\r\n//                     <thead className=\"bg-gray-50\">\r\n//                       <tr>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Product</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Quantity</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Unit Price</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Total</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Status</th>\r\n//                       </tr>\r\n//                     </thead>\r\n//                     <tbody className=\"divide-y divide-gray-200\">\r\n//                       {viewInvoice.lineItems.map((item, index) => (\r\n//                         <tr key={index}>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900\">{item.productName}</td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{item.quantity}</td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{formatCurrency(item.price)}</td>\r\n//                           <td className=\"px-4 py-2 text-sm font-medium text-gray-900 text-right\">{formatCurrency(item.total)}</td>\r\n//                           <td className=\"px-4 py-2\">\r\n//                             <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                               item.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n//                             }`}>\r\n//                               {item.status}\r\n//                             </span>\r\n//                           </td>\r\n//                         </tr>\r\n//                       ))}\r\n//                     </tbody>\r\n//                   </table>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Totals */}\r\n//               <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n//                 <div className=\"space-y-2\">\r\n//                   <div className=\"flex justify-between\">\r\n//                     <span className=\"text-sm text-gray-600\">Subtotal:</span>\r\n//                     <span className=\"text-sm text-gray-900\">{formatCurrency(viewInvoice.subTotal)}</span>\r\n//                   </div>\r\n//                   <div className=\"flex justify-between\">\r\n//                     <span className=\"text-sm text-gray-600\">Tax ({viewInvoice.taxRate}%):</span>\r\n//                     <span className=\"text-sm text-gray-900\">{formatCurrency(viewInvoice.taxAmount)}</span>\r\n//                   </div>\r\n//                   {viewInvoice.discountAmount > 0 && (\r\n//                     <div className=\"flex justify-between\">\r\n//                       <span className=\"text-sm text-gray-600\">Discount:</span>\r\n//                       <span className=\"text-sm text-red-600\">-{formatCurrency(viewInvoice.discountAmount)}</span>\r\n//                     </div>\r\n//                   )}\r\n//                   <div className=\"flex justify-between font-bold text-lg border-t pt-2\">\r\n//                     <span>Total:</span>\r\n//                     <span>{formatCurrency(viewInvoice.total)}</span>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Action Buttons */}\r\n//               <div className=\"flex space-x-3 mt-6\">\r\n//                 {!viewInvoice.paid && (\r\n//                   <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\r\n//                     <CheckCircle size={16} />\r\n//                     <span>Mark as Paid</span>\r\n//                   </button>\r\n//                 )}\r\n//                 {!viewInvoice.fulfilled && (\r\n//                   <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\r\n//                     <FileText size={16} />\r\n//                     <span>Mark as Fulfilled</span>\r\n//                   </button>\r\n//                 )}\r\n//                 <button className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\">\r\n//                   <Download size={16} />\r\n//                   <span>Download Invoice</span>\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* API Integration Status */}\r\n//       <div className=\"mt-8 p-6 bg-green-50 border border-green-200 rounded-lg\">\r\n//         <div className=\"flex items-center mb-4\">\r\n//           <CheckCircle className=\"text-green-600 mr-2\" size={20} />\r\n//           <h3 className=\"font-medium text-green-800\">POS Integration Active</h3>\r\n//         </div>\r\n//         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm text-green-700\">\r\n//           <div>\r\n//             <strong>Sales Orders:</strong> {sales.data.length} outstanding orders from POS system\r\n//           </div>\r\n//           <div>\r\n//             <strong>Customers:</strong> {customers.data.length} active customers synchronized\r\n//           </div>\r\n//           <div>\r\n//             <strong>Real-time Updates:</strong> Data refreshes automatically with POS transactions\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"mt-4 text-xs text-green-600\">\r\n//           <strong>Note:</strong> Only showing unpaid or unfulfilled orders. Replace Bearer token for live data connection.\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AccountsReceivable;\r\n\r\n//very very very excellent\r\n// import React, { useState, useEffect } from 'react';\r\n// import { \r\n//   Users, \r\n//   DollarSign, \r\n//   CreditCard, \r\n//   AlertTriangle, \r\n//   Clock, \r\n//   Plus, \r\n//   Search, \r\n//   Filter, \r\n//   Eye, \r\n//   Edit, \r\n//   Download,\r\n//   CheckCircle,\r\n//   XCircle,\r\n//   Calendar,\r\n//   FileText,\r\n//   TrendingUp,\r\n//   Mail,\r\n//   Phone,\r\n//   Loader,\r\n//   RefreshCw\r\n// } from 'lucide-react';\r\n\r\n// // API Configuration\r\n// const API_BASE_URL_SALES = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/orders?start=0&size=200';\r\n// const API_CUSTOMERS = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/customers?status=Active';\r\n\r\n// // Replace with your actual Bearer token\r\n// const BEARER_TOKEN = 'your-bearer-token-here';\r\n\r\n// const AccountsReceivableAPI = () => {\r\n//   // State management\r\n//   const [sales, setSales] = useState({ loading: false, data: [], error: null });\r\n//   const [customers, setCustomers] = useState({ loading: false, data: [], error: null });\r\n//   const [activeTab, setActiveTab] = useState('overview');\r\n//   const [selectedCustomer, setSelectedCustomer] = useState(null);\r\n//   const [selectedOrder, setSelectedOrder] = useState(null);\r\n//   const [viewInvoice, setViewInvoice] = useState(null);\r\n//   const [showInvoiceForm, setShowInvoiceForm] = useState(false);\r\n//   const [filters, setFilters] = useState({\r\n//     customerType: 'all',\r\n//     status: 'all',\r\n//     dateRange: '30',\r\n//     searchTerm: ''\r\n//   });\r\n\r\n//   // API Functions\r\n//   const fetchSales = async () => {\r\n//     setSales(prev => ({ ...prev, loading: true, error: null }));\r\n//     try {\r\n//       const response = await fetch(API_BASE_URL_SALES, {\r\n//         method: 'GET',\r\n//         headers: {\r\n//           'Authorization': `Bearer ${BEARER_TOKEN}`,\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//       });\r\n      \r\n//       if (!response.ok) {\r\n//         throw new Error(`HTTP error! status: ${response.status}`);\r\n//       }\r\n      \r\n//       const allData = await response.json();\r\n      \r\n//       // Store all data for customer calculations\r\n//       window.allSalesData = allData;\r\n      \r\n//       // Show only records that are unpaid and fulfilled for display\r\n//       const filteredOrders = allData.filter(order => \r\n//         !order.paid && order.fulfilled\r\n//       );\r\n      \r\n//       setSales({ loading: false, data: filteredOrders, error: null });\r\n//     } catch (error) {\r\n//       console.error('Error fetching sales:', error);\r\n//       setSales({ loading: false, data: [], error: error.message });\r\n//     }\r\n//   };\r\n\r\n//   const fetchCustomers = async () => {\r\n//     setCustomers(prev => ({ ...prev, loading: true, error: null }));\r\n//     try {\r\n//       const response = await fetch(API_CUSTOMERS, {\r\n//         method: 'GET',\r\n//         headers: {\r\n//           'Authorization': `Bearer ${BEARER_TOKEN}`,\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//       });\r\n      \r\n//       if (!response.ok) {\r\n//         throw new Error(`HTTP error! status: ${response.status}`);\r\n//       }\r\n      \r\n//       const data = await response.json();\r\n      \r\n//       // Use all sales data for customer calculations, not just filtered display data\r\n//       const allSalesData = window.allSalesData || [];\r\n      \r\n//       // Transform API customers to match our structure with real calculated data\r\n//       const transformedCustomers = data.map(customer => {\r\n//         // Get ALL orders for this customer (not just filtered ones)\r\n//         const customerOrders = allSalesData.filter(order => order.customerId === customer.id);\r\n        \r\n//         // Calculate total owed from ALL unpaid orders\r\n//         const totalOwed = customerOrders\r\n//           .filter(order => !order.paid)\r\n//           .reduce((sum, order) => sum + (order.total || 0), 0);\r\n        \r\n//         // Overdue amount = total owed (since all unpaid orders need collection)\r\n//         const overdueAmount = totalOwed;\r\n        \r\n//         // Total number of orders for this customer\r\n//         const invoiceCount = customerOrders.length;\r\n        \r\n//         // Determine customer type based on API data or order history\r\n//         let customerType = 'individual';\r\n//         const totalSpent = customerOrders\r\n//           .filter(order => order.paid)\r\n//           .reduce((sum, order) => sum + (order.total || 0), 0);\r\n        \r\n//         if (totalSpent > 500000 || customer.totalSpendOnOrder > 500000) {\r\n//           customerType = 'corporate';\r\n//         } else if (totalSpent > 100000 || customer.totalSpendOnOrder > 100000) {\r\n//           customerType = 'small_business';\r\n//         }\r\n        \r\n//         // Set credit limit based on customer type\r\n//         let creditLimit = 25000; // Default for individual\r\n//         if (customerType === 'corporate') {\r\n//           creditLimit = 500000;\r\n//         } else if (customerType === 'small_business') {\r\n//           creditLimit = 100000;\r\n//         }\r\n        \r\n//         // Determine credit status based on payment behavior\r\n//         let creditStatus = 'good';\r\n//         if (totalOwed === 0) {\r\n//           creditStatus = 'excellent';\r\n//         } else if (totalOwed > creditLimit * 0.9) {\r\n//           creditStatus = 'hold'; // Hold means credit limit exceeded, stop further credit\r\n//         } else if (totalOwed > creditLimit * 0.7) {\r\n//           creditStatus = 'watch'; // Watch means monitor closely\r\n//         }\r\n        \r\n//         // Get last payment date from most recent paid order\r\n//         const paidOrders = customerOrders.filter(o => o.paid);\r\n//         const lastPayment = paidOrders.length > 0 ? \r\n//           paidOrders.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))[0].createdAt.split('.').slice(0, 3).join('-') :\r\n//           'No payments';\r\n\r\n//         return {\r\n//           id: customer.id,\r\n//           name: customer.name,\r\n//           email: customer.email || 'No email provided',\r\n//           phone: customer.phoneNumber || 'No phone provided',\r\n//           address: customer.address && customer.address.length > 0 ? \r\n//             (typeof customer.address[0] === 'string' ? customer.address[0] : 'No address provided') : \r\n//             'No address provided',\r\n//           customerType: customerType,\r\n//           creditLimit: creditLimit,\r\n//           paymentTerms: customerType === 'corporate' ? 45 : (customerType === 'small_business' ? 30 : 15),\r\n//           totalOwed: totalOwed,\r\n//           overdueAmount: overdueAmount,\r\n//           lastPayment: lastPayment,\r\n//           creditStatus: creditStatus,\r\n//           accountBalance: -totalOwed,\r\n//           invoiceCount: invoiceCount,\r\n//           avgPaymentDays: 30, // Default estimate\r\n//           status: customer.status,\r\n//           totalSpendOnOrder: customer.totalSpendOnOrder || 0,\r\n//           averageOrderValue: customer.averageOrderValue || 0,\r\n//           numberOfOrders: customer.numberOfOrders || invoiceCount\r\n//         };\r\n//       });\r\n      \r\n//       // Also add walk-in customers (null customerId) as separate entries for each order\r\n//       const walkInOrders = allSalesData.filter(order => !order.customerId || order.customerId === 'null');\r\n//       walkInOrders.forEach((order, index) => {\r\n//         const guestNumber = index + 1;\r\n//         const guestTotalOwed = order.paid ? 0 : order.total;\r\n//         const guestLastPayment = order.paid ? \r\n//           order.createdAt.split('.').slice(0, 3).join('-') : \r\n//           'No payments';\r\n        \r\n//         transformedCustomers.push({\r\n//           id: `guest-${order.orderId}`,\r\n//           name: `Guest Customer #${guestNumber}`,\r\n//           email: 'guest@pos.system',\r\n//           phone: '+000-000-0000',\r\n//           address: 'Walk-in Sale',\r\n//           customerType: 'cash',\r\n//           creditLimit: 0,\r\n//           paymentTerms: 0,\r\n//           totalOwed: guestTotalOwed,\r\n//           overdueAmount: guestTotalOwed,\r\n//           lastPayment: guestLastPayment,\r\n//           creditStatus: 'cash_only',\r\n//           accountBalance: -guestTotalOwed,\r\n//           invoiceCount: 1,\r\n//           avgPaymentDays: 0,\r\n//           status: 'Active',\r\n//           totalSpendOnOrder: order.total,\r\n//           averageOrderValue: order.total,\r\n//           numberOfOrders: 1,\r\n//           orderId: order.orderId // Store order ID for reference\r\n//         });\r\n//       });\r\n      \r\n//       setCustomers({ loading: false, data: transformedCustomers, error: null });\r\n//     } catch (error) {\r\n//       console.error('Error fetching customers:', error);\r\n//       setCustomers({ loading: false, data: [], error: error.message });\r\n//     }\r\n//   };\r\n\r\n//   // Also add refresh button functionality to recalculate customer data\r\n//   const refreshAllData = async () => {\r\n//     await fetchSales();\r\n//     setTimeout(() => fetchCustomers(), 500);\r\n//   };\r\n\r\n//   // Load data on component mount\r\n//   useEffect(() => {\r\n//     const loadData = async () => {\r\n//       await fetchSales();\r\n//       // Fetch customers after sales data is loaded to calculate balances correctly\r\n//       setTimeout(() => fetchCustomers(), 500);\r\n//     };\r\n//     loadData();\r\n//   }, []);\r\n\r\n//   // Helper function to get customer name by ID\r\n//   const getCustomerName = (customerId) => {\r\n//     if (!customerId || customerId === 'null') return 'Guest Customer';\r\n//     const customer = customers.data.find(c => c.id === customerId);\r\n//     return customer ? customer.name : 'Unknown Customer';\r\n//   };\r\n\r\n//   // Helper function to get customer details by ID\r\n//   const getCustomerDetails = (customerId) => {\r\n//     if (!customerId || customerId === 'null') return null;\r\n//     return customers.data.find(c => c.id === customerId);\r\n//   };\r\n\r\n//   // Calculate AR summary\r\n//   const calculateARSummary = () => {\r\n//     const totalAR = customers.data.reduce((sum, customer) => sum + customer.totalOwed, 0);\r\n//     const totalOverdue = customers.data.reduce((sum, customer) => sum + customer.overdueAmount, 0);\r\n//     const customersWithBalance = customers.data.filter(customer => customer.totalOwed > 0).length;\r\n    \r\n//     // Calculate real average days outstanding from actual order data\r\n//     const allSalesData = window.allSalesData || [];\r\n//     let totalDaysOutstanding = 0;\r\n//     let orderCount = 0;\r\n    \r\n//     allSalesData.forEach(order => {\r\n//       // Convert order creation date from \"2025.08.18.10.08.54.569\" to proper date\r\n//       const orderDateStr = order.createdAt.split('.').slice(0, 3).join('-'); // \"2025-08-18\"\r\n//       const orderDate = new Date(orderDateStr);\r\n//       const today = new Date();\r\n      \r\n//       // Calculate days between order creation and today\r\n//       const timeDiff = today.getTime() - orderDate.getTime();\r\n//       const daysDiff = Math.floor(timeDiff / (1000 * 3600 * 24));\r\n      \r\n//       totalDaysOutstanding += daysDiff;\r\n//       orderCount++;\r\n//     });\r\n    \r\n//     const avgDaysOutstanding = orderCount > 0 ? Math.round(totalDaysOutstanding / orderCount) : 0;\r\n\r\n//     return {\r\n//       totalAR,\r\n//       totalOverdue,\r\n//       customersWithBalance,\r\n//       avgDaysOutstanding\r\n//     };\r\n//   };\r\n\r\n//   // Get aging data\r\n//   const getAgingData = () => {\r\n//     const aging = {\r\n//       current: 0,\r\n//       days30: 0,\r\n//       days60: 0,\r\n//       days90: 0,\r\n//       over90: 0\r\n//     };\r\n\r\n//     sales.data.forEach(order => {\r\n//       if (order.paid) return;\r\n      \r\n//       const daysPastDue = order.daysOverdue || 0;\r\n      \r\n//       if (daysPastDue <= 0) {\r\n//         aging.current += order.total;\r\n//       } else if (daysPastDue <= 30) {\r\n//         aging.days30 += order.total;\r\n//       } else if (daysPastDue <= 60) {\r\n//         aging.days60 += order.total;\r\n//       } else if (daysPastDue <= 90) {\r\n//         aging.days90 += order.total;\r\n//       } else {\r\n//         aging.over90 += order.total;\r\n//       }\r\n//     });\r\n\r\n//     return aging;\r\n//   };\r\n\r\n//   // Filter customers\r\n//   const getFilteredCustomers = () => {\r\n//     let filtered = [...customers.data];\r\n\r\n//     if (filters.customerType !== 'all') {\r\n//       filtered = filtered.filter(customer => customer.customerType === filters.customerType);\r\n//     }\r\n\r\n//     if (filters.status !== 'all') {\r\n//       filtered = filtered.filter(customer => {\r\n//         if (filters.status === 'overdue') return customer.overdueAmount > 0;\r\n//         if (filters.status === 'current') return customer.totalOwed > 0 && customer.overdueAmount === 0;\r\n//         if (filters.status === 'paid_up') return customer.totalOwed === 0;\r\n//         return true;\r\n//       });\r\n//     }\r\n\r\n//     if (filters.searchTerm) {\r\n//       const term = filters.searchTerm.toLowerCase();\r\n//       filtered = filtered.filter(customer =>\r\n//         customer.name.toLowerCase().includes(term) ||\r\n//         customer.email.toLowerCase().includes(term) ||\r\n//         customer.id.toLowerCase().includes(term)\r\n//       );\r\n//     }\r\n\r\n//     return filtered;\r\n//   };\r\n\r\n//   const getCreditStatusColor = (status) => {\r\n//     switch (status) {\r\n//       case 'excellent': return 'bg-green-100 text-green-800';\r\n//       case 'good': return 'bg-blue-100 text-blue-800';\r\n//       case 'watch': return 'bg-yellow-100 text-yellow-800';\r\n//       case 'hold': return 'bg-red-100 text-red-800';\r\n//       case 'cash_only': return 'bg-gray-100 text-gray-800';\r\n//       default: return 'bg-gray-100 text-gray-800';\r\n//     }\r\n//   };\r\n\r\n//   const getInvoiceStatusColor = (status) => {\r\n//     switch (status) {\r\n//       case 'paid': return 'bg-green-100 text-green-800';\r\n//       case 'outstanding': return 'bg-blue-100 text-blue-800';\r\n//       case 'overdue': return 'bg-red-100 text-red-800';\r\n//       case 'partial': return 'bg-yellow-100 text-yellow-800';\r\n//       default: return 'bg-gray-100 text-gray-800';\r\n//     }\r\n//   };\r\n\r\n//   const formatDate = (dateString) => {\r\n//     if (!dateString) return 'N/A';\r\n//     return dateString.split('.').slice(0, 3).join('/');\r\n//   };\r\n\r\n//   const formatCurrency = (amount) => {\r\n//     return new Intl.NumberFormat('en-US', {\r\n//       style: 'currency',\r\n//       currency: 'USD'\r\n//     }).format(amount);\r\n//   };\r\n\r\n//   const summary = calculateARSummary();\r\n//   const aging = getAgingData();\r\n//   const filteredCustomers = getFilteredCustomers();\r\n\r\n//   // Loading state\r\n//   if (sales.loading || customers.loading) {\r\n//     return (\r\n//       <div className=\"flex items-center justify-center min-h-screen\">\r\n//         <div className=\"flex items-center space-x-3\">\r\n//           <Loader className=\"animate-spin text-emerald-600\" size={24} />\r\n//           <span className=\"text-gray-600\">Loading data from API...</span>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   // Error state\r\n//   if (sales.error || customers.error) {\r\n//     return (\r\n//       <div className=\"max-w-7xl mx-auto p-6\">\r\n//         <div className=\"bg-red-50 border border-red-200 rounded-lg p-6\">\r\n//           <div className=\"flex items-center mb-4\">\r\n//             <AlertTriangle className=\"text-red-600 mr-2\" size={20} />\r\n//             <h3 className=\"font-medium text-red-800\">API Connection Error</h3>\r\n//           </div>\r\n//           <div className=\"text-red-700 mb-4\">\r\n//             {sales.error && <div>Sales API Error: {sales.error}</div>}\r\n//             {customers.error && <div>Customers API Error: {customers.error}</div>}\r\n//           </div>\r\n//           <button\r\n//             onClick={() => {\r\n//               fetchSales();\r\n//               fetchCustomers();\r\n//             }}\r\n//             className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 flex items-center space-x-2\"\r\n//           >\r\n//             <RefreshCw size={16} />\r\n//             <span>Retry Connection</span>\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"max-w-7xl mx-auto p-6 bg-white\">\r\n//       {/* Header */}\r\n//       <div className=\"mb-8\">\r\n//         <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\r\n//           <CreditCard className=\"mr-3 text-emerald-600\" />\r\n//           Accounts Receivable\r\n//         </h1>\r\n//         <p className=\"text-gray-600\">Manage customer invoicing, payments, and credit limits</p>\r\n//       </div>\r\n\r\n//       {/* Summary Cards */}\r\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\r\n//         <div className=\"bg-blue-50 p-6 rounded-lg border border-blue-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-blue-600 text-sm font-medium\">Total A/R</p>\r\n//               <p className=\"text-2xl font-bold text-blue-900\">{formatCurrency(summary.totalAR)}</p>\r\n//             </div>\r\n//             <DollarSign className=\"text-blue-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-blue-700 mt-2\">{summary.customersWithBalance} customers with balances</p>\r\n//         </div>\r\n\r\n//         <div className=\"bg-red-50 p-6 rounded-lg border border-red-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-red-600 text-sm font-medium\">Overdue Amount</p>\r\n//               <p className=\"text-2xl font-bold text-red-900\">{formatCurrency(summary.totalOverdue)}</p>\r\n//             </div>\r\n//             <AlertTriangle className=\"text-red-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-red-700 mt-2\">\r\n//             {summary.totalAR > 0 ? ((summary.totalOverdue / summary.totalAR) * 100).toFixed(1) : 0}% of total A/R\r\n//           </p>\r\n//         </div>\r\n\r\n//         <div className=\"bg-green-50 p-6 rounded-lg border border-green-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-green-600 text-sm font-medium\">Avg. Days Outstanding</p>\r\n//               <p className=\"text-2xl font-bold text-green-900\">{summary.avgDaysOutstanding}</p>\r\n//             </div>\r\n//             <Clock className=\"text-green-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-green-700 mt-2\">Collection performance</p>\r\n//         </div>\r\n\r\n//         <div className=\"bg-purple-50 p-6 rounded-lg border border-purple-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-purple-600 text-sm font-medium\">Active Customers</p>\r\n//               <p className=\"text-2xl font-bold text-purple-900\">{customers.data.length}</p>\r\n//             </div>\r\n//             <Users className=\"text-purple-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-purple-700 mt-2\">Total customer accounts</p>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Tabs */}\r\n//       <div className=\"mb-6\">\r\n//         <div className=\"border-b border-gray-200\">\r\n//           <nav className=\"-mb-px flex space-x-8\">\r\n//             {[\r\n//               { id: 'overview', name: 'Customer Overview', icon: Users },\r\n//               { id: 'invoices', name: 'Invoices', icon: FileText },\r\n//               { id: 'aging', name: 'Aging Report', icon: Clock },\r\n//               { id: 'payments', name: 'Payments', icon: CheckCircle }\r\n//             ].map((tab) => (\r\n//               <button\r\n//                 key={tab.id}\r\n//                 onClick={() => setActiveTab(tab.id)}\r\n//                 className={`flex items-center py-2 px-1 border-b-2 font-medium text-sm ${\r\n//                   activeTab === tab.id\r\n//                     ? 'border-emerald-500 text-emerald-600'\r\n//                     : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n//                 }`}\r\n//               >\r\n//                 <tab.icon className=\"mr-2\" size={16} />\r\n//                 {tab.name}\r\n//               </button>\r\n//             ))}\r\n//           </nav>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Tab Content */}\r\n//       {activeTab === 'overview' && (\r\n//         <div>\r\n//           {/* Filters */}\r\n//           <div className=\"flex flex-wrap items-center gap-4 mb-6\">\r\n//             <div className=\"relative\">\r\n//               <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n//               <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Search customers...\"\r\n//                 value={filters.searchTerm}\r\n//                 onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\r\n//                 className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               />\r\n//             </div>\r\n\r\n//             <select\r\n//               value={filters.customerType}\r\n//               onChange={(e) => setFilters({ ...filters, customerType: e.target.value })}\r\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//             >\r\n//               <option value=\"all\">All Customer Types</option>\r\n//               <option value=\"corporate\">Corporate</option>\r\n//               <option value=\"small_business\">Small Business</option>\r\n//               <option value=\"individual\">Individual</option>\r\n//               <option value=\"cash\">Cash Only</option>\r\n//             </select>\r\n\r\n//             <select\r\n//               value={filters.status}\r\n//               onChange={(e) => setFilters({ ...filters, status: e.target.value })}\r\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//             >\r\n//               <option value=\"all\">All Statuses</option>\r\n//               <option value=\"current\">Current</option>\r\n//               <option value=\"overdue\">Overdue</option>\r\n//               <option value=\"paid_up\">Paid Up</option>\r\n//             </select>\r\n\r\n//             <button\r\n//               onClick={() => setShowInvoiceForm(true)}\r\n//               className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\r\n//             >\r\n//               <Plus size={16} />\r\n//               <span>New Invoice</span>\r\n//             </button>\r\n//           </div>\r\n\r\n//           {/* Customer List */}\r\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//             <div className=\"overflow-x-auto\">\r\n//               <table className=\"w-full\">\r\n//                 <thead className=\"bg-gray-50\">\r\n//                   <tr>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Customer\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Type\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Credit Limit\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Balance\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Overdue\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Credit Status\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Last Payment\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Actions\r\n//                     </th>\r\n//                   </tr>\r\n//                 </thead>\r\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//                   {filteredCustomers.map((customer) => (\r\n//                     <tr key={customer.id} className=\"hover:bg-gray-50\">\r\n//                       <td className=\"px-6 py-4\">\r\n//                         <div>\r\n//                           <div className=\"text-sm font-medium text-gray-900\">{customer.name}</div>\r\n//                           <div className=\"text-sm text-gray-500\">{customer.id}</div>\r\n//                           <div className=\"text-xs text-gray-400 flex items-center mt-1\">\r\n//                             <Mail className=\"mr-1\" size={12} />\r\n//                             {customer.email}\r\n//                           </div>\r\n//                         </div>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-gray-100 text-gray-800\">\r\n//                           {customer.customerType.replace('_', ' ')}\r\n//                         </span>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {formatCurrency(customer.creditLimit)}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <div className=\"text-sm font-medium text-gray-900\">\r\n//                           {formatCurrency(customer.totalOwed)}\r\n//                         </div>\r\n//                         <div className=\"text-xs text-gray-500\">\r\n//                           {customer.invoiceCount} invoices\r\n//                         </div>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         {customer.overdueAmount > 0 ? (\r\n//                           <span className=\"text-red-600 font-medium\">\r\n//                             {formatCurrency(customer.overdueAmount)}\r\n//                           </span>\r\n//                         ) : (\r\n//                           <span className=\"text-green-600\">$0.00</span>\r\n//                         )}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(customer.creditStatus)}`}>\r\n//                           {customer.creditStatus.replace('_', ' ')}\r\n//                         </span>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {customer.lastPayment}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n//                         <button\r\n//                           onClick={() => setSelectedCustomer(customer)}\r\n//                           className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\r\n//                         >\r\n//                           <Eye size={16} />\r\n//                         </button>\r\n//                         <button className=\"text-blue-600 hover:text-blue-900\">\r\n//                           <Edit size={16} />\r\n//                         </button>\r\n//                       </td>\r\n//                     </tr>\r\n//                   ))}\r\n//                 </tbody>\r\n//               </table>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {activeTab === 'aging' && (\r\n//         <div>\r\n//           <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n//             {/* Aging Summary */}\r\n//             <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Aging Summary</h3>\r\n//               <div className=\"space-y-4\">\r\n//                 <div className=\"flex justify-between items-center p-3 bg-green-50 rounded\">\r\n//                   <span className=\"font-medium text-green-800\">Current (0-30 days)</span>\r\n//                   <span className=\"font-bold text-green-900\">{formatCurrency(aging.current)}</span>\r\n//                 </div>\r\n//                 <div className=\"flex justify-between items-center p-3 bg-yellow-50 rounded\">\r\n//                   <span className=\"font-medium text-yellow-800\">31-60 days</span>\r\n//                   <span className=\"font-bold text-yellow-900\">{formatCurrency(aging.days30)}</span>\r\n//                 </div>\r\n//                 <div className=\"flex justify-between items-center p-3 bg-orange-50 rounded\">\r\n//                   <span className=\"font-medium text-orange-800\">61-90 days</span>\r\n//                   <span className=\"font-bold text-orange-900\">{formatCurrency(aging.days60)}</span>\r\n//                 </div>\r\n//                 <div className=\"flex justify-between items-center p-3 bg-red-50 rounded\">\r\n//                   <span className=\"font-medium text-red-800\">Over 90 days</span>\r\n//                   <span className=\"font-bold text-red-900\">{formatCurrency(aging.over90)}</span>\r\n//                 </div>\r\n//               </div>\r\n//               <div className=\"mt-4 pt-4 border-t\">\r\n//                 <div className=\"flex justify-between items-center\">\r\n//                   <span className=\"text-lg font-semibold text-gray-900\">Total Outstanding</span>\r\n//                   <span className=\"text-xl font-bold text-gray-900\">\r\n//                     {formatCurrency(aging.current + aging.days30 + aging.days60 + aging.days90 + aging.over90)}\r\n//                   </span>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n\r\n//             {/* Collection Priority */}\r\n//             <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Collection Priority</h3>\r\n//               <div className=\"space-y-3\">\r\n//                 {customers.data\r\n//                   .filter(customer => customer.overdueAmount > 0)\r\n//                   .sort((a, b) => b.overdueAmount - a.overdueAmount)\r\n//                   .slice(0, 5)\r\n//                   .map((customer, index) => (\r\n//                     <div key={customer.id} className=\"flex items-center justify-between p-3 bg-red-50 rounded\">\r\n//                       <div>\r\n//                         <div className=\"font-medium text-gray-900\">{customer.name}</div>\r\n//                         <div className=\"text-sm text-gray-500\">\r\n//                           Last payment: {customer.lastPayment}\r\n//                         </div>\r\n//                       </div>\r\n//                       <div className=\"text-right\">\r\n//                         <div className=\"font-bold text-red-900\">{formatCurrency(customer.overdueAmount)}</div>\r\n//                         <div className=\"text-xs text-red-700\">#{index + 1} Priority</div>\r\n//                       </div>\r\n//                     </div>\r\n//                   ))}\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {activeTab === 'invoices' && (\r\n//         <div>\r\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-900\">Outstanding Orders/Invoices</h3>\r\n//             </div>\r\n//             <div className=\"overflow-x-auto\">\r\n//               <table className=\"w-full\">\r\n//                 <thead className=\"bg-gray-50\">\r\n//                   <tr>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Order #\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Customer\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Date\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Items\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Amount\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Payment Status\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Fulfillment\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Actions\r\n//                     </th>\r\n//                   </tr>\r\n//                 </thead>\r\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//                   {sales.data.map((order) => (\r\n//                     <tr key={order.orderId} className=\"hover:bg-gray-50\">\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <div className=\"text-sm font-medium text-gray-900\">#{order.orderId}</div>\r\n//                         <div className=\"text-xs text-gray-500\">{order.status}</div>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4\">\r\n//                         <div className=\"text-sm font-medium text-gray-900\">{getCustomerName(order.customerId)}</div>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {formatDate(order.createdAt)}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4\">\r\n//                         <div className=\"text-sm text-gray-900\">\r\n//                           {order.lineItems.map((item, index) => (\r\n//                             <div key={index} className=\"mb-1\">\r\n//                               <span className=\"font-medium\">{item.productName}</span>\r\n//                               <span className=\"text-gray-500 ml-2\">x{item.quantity}</span>\r\n//                             </div>\r\n//                           ))}\r\n//                         </div>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {formatCurrency(order.total)}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                           order.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\r\n//                         }`}>\r\n//                           {order.paid ? 'Paid' : 'Unpaid'}\r\n//                         </span>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                           order.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n//                         }`}>\r\n//                           {order.fulfilled ? 'Fulfilled' : 'Pending'}\r\n//                         </span>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n//                         <button\r\n//                           className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\r\n//                           onClick={() => setViewInvoice(order)}\r\n//                         >\r\n//                           <Eye size={16} />\r\n//                         </button>\r\n//                         <button className=\"text-blue-600 hover:text-blue-900\">\r\n//                           <Download size={16} />\r\n//                         </button>\r\n//                       </td>\r\n//                     </tr>\r\n//                   ))}\r\n//                 </tbody>\r\n//               </table>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {activeTab === 'payments' && (\r\n//         <div>\r\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-900\">Payment History</h3>\r\n//             </div>\r\n//             <div className=\"overflow-x-auto\">\r\n//               <table className=\"w-full\">\r\n//                 <thead className=\"bg-gray-50\">\r\n//                   <tr>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Order ID\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Customer\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Date\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Amount\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Payment Status\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Fulfillment Status\r\n//                     </th>\r\n//                   </tr>\r\n//                 </thead>\r\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//                   {window.allSalesData?.filter(order => order.paid).map((order) => (\r\n//                     <tr key={order.orderId} className=\"hover:bg-gray-50\">\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n//                         #{order.orderId}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {getCustomerName(order.customerId)}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {formatDate(order.createdAt)}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {formatCurrency(order.total)}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-green-100 text-green-800\">\r\n//                           Paid\r\n//                         </span>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                           order.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n//                         }`}>\r\n//                           {order.fulfilled ? 'Fulfilled' : 'Pending'}\r\n//                         </span>\r\n//                       </td>\r\n//                     </tr>\r\n//                   ))}\r\n//                 </tbody>\r\n//               </table>\r\n//             </div>\r\n            \r\n//             {(!window.allSalesData?.filter(order => order.paid).length || window.allSalesData?.filter(order => order.paid).length === 0) && (\r\n//               <div className=\"text-center py-12\">\r\n//                 <div className=\"text-gray-500 text-lg\">No payments found</div>\r\n//                 <p className=\"text-gray-400 mt-2\">All orders are currently unpaid</p>\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Customer Detail Modal */}\r\n//       {selectedCustomer && (\r\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\r\n//                   Customer Details - {selectedCustomer.name}\r\n//                 </h3>\r\n//                 <button\r\n//                   onClick={() => setSelectedCustomer(null)}\r\n//                   className=\"text-gray-400 hover:text-gray-600\"\r\n//                 >\r\n//                   <XCircle size={20} />\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <div className=\"px-6 py-4\">\r\n//               {/* Customer Info Grid */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n//                 <div className=\"space-y-4\">\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer ID</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.id}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Email</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.email}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Phone</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.phone}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Address</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.address}</p>\r\n//                   </div>\r\n//                 </div>\r\n                \r\n//                 <div className=\"space-y-4\">\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer Type</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.customerType.replace('_', ' ')}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Limit</label>\r\n//                     <p className=\"text-sm text-gray-900\">{formatCurrency(selectedCustomer.creditLimit)}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Payment Terms</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.paymentTerms} days</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Status</label>\r\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(selectedCustomer.creditStatus)}`}>\r\n//                       {selectedCustomer.creditStatus.replace('_', ' ')}\r\n//                     </span>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Financial Summary */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\r\n//                 <div className=\"bg-blue-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-blue-600\">Current Balance</div>\r\n//                   <div className=\"text-xl font-bold text-blue-900\">\r\n//                     {formatCurrency(selectedCustomer.totalOwed)}\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"bg-red-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-red-600\">Overdue Amount</div>\r\n//                   <div className=\"text-xl font-bold text-red-900\">\r\n//                     {formatCurrency(selectedCustomer.overdueAmount)}\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"bg-green-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-green-600\">Credit Available</div>\r\n//                   <div className=\"text-xl font-bold text-green-900\">\r\n//                     {formatCurrency(selectedCustomer.creditLimit - selectedCustomer.totalOwed)}\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"bg-purple-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-purple-600\">Avg Payment Days</div>\r\n//                   <div className=\"text-xl font-bold text-purple-900\">\r\n//                     {selectedCustomer.avgPaymentDays}\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Customer Orders */}\r\n//               <div className=\"mb-6\">\r\n//                 <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Customer Orders</h4>\r\n//                 <div className=\"overflow-x-auto\">\r\n//                   <table className=\"w-full border border-gray-200 rounded\">\r\n//                     <thead className=\"bg-gray-50\">\r\n//                       <tr>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Order</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Date</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Items</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Amount</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Payment</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Fulfillment</th>\r\n//                       </tr>\r\n//                     </thead>\r\n//                     <tbody className=\"divide-y divide-gray-200\">\r\n//                       {(window.allSalesData || [])\r\n//                         .filter(order => {\r\n//                           if (selectedCustomer.id.startsWith('guest-')) {\r\n//                             return order.orderId === selectedCustomer.orderId;\r\n//                           }\r\n//                           return order.customerId === selectedCustomer.id;\r\n//                         })\r\n//                         .map((order) => (\r\n//                           <tr key={order.orderId}>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">#{order.orderId}</td>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{formatDate(order.createdAt)}</td>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">\r\n//                               {order.lineItems.map(item => item.productName).join(', ')}\r\n//                             </td>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{formatCurrency(order.total)}</td>\r\n//                             <td className=\"px-4 py-2\">\r\n//                               <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                                 order.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\r\n//                               }`}>\r\n//                                 {order.paid ? 'Paid' : 'Unpaid'}\r\n//                               </span>\r\n//                             </td>\r\n//                             <td className=\"px-4 py-2\">\r\n//                               <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                                 order.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n//                               }`}>\r\n//                                 {order.fulfilled ? 'Fulfilled' : 'UnFulfilled'}\r\n//                               </span>\r\n//                             </td>\r\n//                           </tr>\r\n//                         ))}\r\n//                     </tbody>\r\n//                   </table>\r\n//                 </div>\r\n                \r\n//                 {(window.allSalesData || [])\r\n//                   .filter(order => {\r\n//                     if (selectedCustomer.id.startsWith('guest-')) {\r\n//                       return order.orderId === selectedCustomer.orderId;\r\n//                     }\r\n//                     return order.customerId === selectedCustomer.id;\r\n//                   }).length === 0 && (\r\n//                     <div className=\"text-center py-4 text-gray-500\">\r\n//                       No orders found for this customer\r\n//                     </div>\r\n//                   )}\r\n//               </div>\r\n\r\n//               {/* Action Buttons */}\r\n//               <div className=\"flex space-x-3\">\r\n//                 <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\r\n//                   <Plus size={16} />\r\n//                   <span>New Invoice</span>\r\n//                 </button>\r\n//                 <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\r\n//                   <CheckCircle size={16} />\r\n//                   <span>Record Payment</span>\r\n//                 </button>\r\n//                 <button className=\"px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 flex items-center space-x-2\">\r\n//                   <Mail size={16} />\r\n//                   <span>Send Statement</span>\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Order/Invoice Detail Modal */}\r\n//       {viewInvoice && (\r\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\r\n//                   Order Details - #{viewInvoice.orderId}\r\n//                 </h3>\r\n//                 <button\r\n//                   onClick={() => setViewInvoice(null)}\r\n//                   className=\"text-gray-400 hover:text-gray-600\"\r\n//                 >\r\n//                   <XCircle size={20} />\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <div className=\"px-6 py-4\">\r\n//               {/* Order Info */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n//                 <div className=\"space-y-4\">\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Order ID</label>\r\n//                     <p className=\"text-sm text-gray-900\">{viewInvoice.orderId}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer</label>\r\n//                     <p className=\"text-sm text-gray-900\">{getCustomerName(viewInvoice.customerId)}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Created Date</label>\r\n//                     <p className=\"text-sm text-gray-900\">{formatDate(viewInvoice.createdAt)}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Status</label>\r\n//                     <p className=\"text-sm text-gray-900\">{viewInvoice.status}</p>\r\n//                   </div>\r\n//                 </div>\r\n                \r\n//                 <div className=\"space-y-4\">\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Payment Status</label>\r\n//                     <div>\r\n//                       <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                         viewInvoice.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\r\n//                       }`}>\r\n//                         {viewInvoice.paid ? 'Paid' : 'Unpaid'}\r\n//                       </span>\r\n//                     </div>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Fulfillment Status</label>\r\n//                     <div>\r\n//                       <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                         viewInvoice.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n//                       }`}>\r\n//                         {viewInvoice.fulfilled ? 'Fulfilled' : 'Pending'}\r\n//                       </span>\r\n//                     </div>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Total Amount</label>\r\n//                     <p className=\"text-lg font-bold text-gray-900\">{formatCurrency(viewInvoice.total)}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Payable Amount</label>\r\n//                     <p className=\"text-sm text-gray-900\">{formatCurrency(viewInvoice.payableAmount)}</p>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Line Items */}\r\n//               <div className=\"mb-6\">\r\n//                 <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Order Items</h4>\r\n//                 <div className=\"overflow-x-auto\">\r\n//                   <table className=\"w-full border border-gray-200 rounded\">\r\n//                     <thead className=\"bg-gray-50\">\r\n//                       <tr>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Product</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Quantity</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Unit Price</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Total</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Status</th>\r\n//                       </tr>\r\n//                     </thead>\r\n//                     <tbody className=\"divide-y divide-gray-200\">\r\n//                       {viewInvoice.lineItems.map((item, index) => (\r\n//                         <tr key={index}>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900\">{item.productName}</td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{item.quantity}</td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{formatCurrency(item.price)}</td>\r\n//                           <td className=\"px-4 py-2 text-sm font-medium text-gray-900 text-right\">{formatCurrency(item.total)}</td>\r\n//                           <td className=\"px-4 py-2\">\r\n//                             <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                               item.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n//                             }`}>\r\n//                               {item.status}\r\n//                             </span>\r\n//                           </td>\r\n//                         </tr>\r\n//                       ))}\r\n//                     </tbody>\r\n//                   </table>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Totals */}\r\n//               <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n//                 <div className=\"space-y-2\">\r\n//                   <div className=\"flex justify-between\">\r\n//                     <span className=\"text-sm text-gray-600\">Subtotal:</span>\r\n//                     <span className=\"text-sm text-gray-900\">{formatCurrency(viewInvoice.subTotal)}</span>\r\n//                   </div>\r\n//                   <div className=\"flex justify-between\">\r\n//                     <span className=\"text-sm text-gray-600\">Tax ({viewInvoice.taxRate}%):</span>\r\n//                     <span className=\"text-sm text-gray-900\">{formatCurrency(viewInvoice.taxAmount)}</span>\r\n//                   </div>\r\n//                   {viewInvoice.discountAmount > 0 && (\r\n//                     <div className=\"flex justify-between\">\r\n//                       <span className=\"text-sm text-gray-600\">Discount:</span>\r\n//                       <span className=\"text-sm text-red-600\">-{formatCurrency(viewInvoice.discountAmount)}</span>\r\n//                     </div>\r\n//                   )}\r\n//                   <div className=\"flex justify-between font-bold text-lg border-t pt-2\">\r\n//                     <span>Total:</span>\r\n//                     <span>{formatCurrency(viewInvoice.total)}</span>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Action Buttons */}\r\n//               <div className=\"flex space-x-3 mt-6\">\r\n//                 {!viewInvoice.paid && (\r\n//                   <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\r\n//                     <CheckCircle size={16} />\r\n//                     <span>Mark as Paid</span>\r\n//                   </button>\r\n//                 )}\r\n//                 {!viewInvoice.fulfilled && (\r\n//                   <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\r\n//                     <FileText size={16} />\r\n//                     <span>Mark as Fulfilled</span>\r\n//                   </button>\r\n//                 )}\r\n//                 <button className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\">\r\n//                   <Download size={16} />\r\n//                   <span>Download Invoice</span>\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* API Integration Status */}\r\n//       <div className=\"mt-8 p-6 bg-green-50 border border-green-200 rounded-lg\">\r\n//         <div className=\"flex items-center mb-4\">\r\n//           <CheckCircle className=\"text-green-600 mr-2\" size={20} />\r\n//           <h3 className=\"font-medium text-green-800\">POS Integration Active</h3>\r\n//         </div>\r\n//         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm text-green-700\">\r\n//           <div>\r\n//             <strong>Sales Orders:</strong> {sales.data.length} outstanding orders from POS system\r\n//           </div>\r\n//           <div>\r\n//             <strong>Customers:</strong> {customers.data.length} active customers synchronized\r\n//           </div>\r\n//           <div>\r\n//             <strong>Real-time Updates:</strong> Data refreshes automatically with POS transactions\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"mt-4 text-xs text-green-600\">\r\n//           <strong>Note:</strong> Only showing unpaid or unfulfilled orders. Replace Bearer token for live data connection.\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AccountsReceivableAPI;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { \r\n  Users, \r\n  DollarSign, \r\n  CreditCard, \r\n  AlertTriangle, \r\n  Clock, \r\n  Plus, \r\n  Search, \r\n  Filter, \r\n  Eye, \r\n  Edit, \r\n  Download,\r\n  CheckCircle,\r\n  XCircle,\r\n  Calendar,\r\n  FileText,\r\n  TrendingUp,\r\n  Mail,\r\n  Phone,\r\n  Loader,\r\n  RefreshCw\r\n} from 'lucide-react';\r\n\r\n// API Configuration\r\nconst API_BASE_URL_SALES = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/orders?start=0&size=200';\r\nconst API_CUSTOMERS = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/customers?status=Active';\r\n\r\n// Replace with your actual Bearer token\r\nconst BEARER_TOKEN = 'your-bearer-token-here';\r\n\r\nconst AccountsReceivable = () => {\r\n  // State management\r\n  const [sales, setSales] = useState({ loading: false, data: [], error: null });\r\n  const [customers, setCustomers] = useState({ loading: false, data: [], error: null });\r\n  const [activeTab, setActiveTab] = useState('overview');\r\n  const [selectedCustomer, setSelectedCustomer] = useState(null);\r\n  const [selectedOrder, setSelectedOrder] = useState(null);\r\n  const [viewInvoice, setViewInvoice] = useState(null);\r\n  const [showInvoiceForm, setShowInvoiceForm] = useState(false);\r\n  const [filters, setFilters] = useState({\r\n    customerType: 'all',\r\n    status: 'all',\r\n    dateRange: '30',\r\n    searchTerm: ''\r\n  });\r\n\r\n  // API Functions\r\n  const fetchSales = async () => {\r\n    setSales(prev => ({ ...prev, loading: true, error: null }));\r\n    try {\r\n      const response = await fetch(API_BASE_URL_SALES, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': `Bearer ${BEARER_TOKEN}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      \r\n      const allData = await response.json();\r\n      \r\n      // Store all data for customer calculations\r\n      window.allSalesData = allData;\r\n      \r\n      // Show only records that are unpaid and fulfilled for display\r\n      const filteredOrders = allData.filter(order => \r\n        !order.paid && order.fulfilled\r\n      );\r\n      \r\n      setSales({ loading: false, data: filteredOrders, error: null });\r\n    } catch (error) {\r\n      console.error('Error fetching sales:', error);\r\n      setSales({ loading: false, data: [], error: error.message });\r\n    }\r\n  };\r\n\r\n  const fetchCustomers = async () => {\r\n    setCustomers(prev => ({ ...prev, loading: true, error: null }));\r\n    try {\r\n      const response = await fetch(API_CUSTOMERS, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': `Bearer ${BEARER_TOKEN}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      \r\n      // Use all sales data for customer calculations, not just filtered display data\r\n      const allSalesData = window.allSalesData || [];\r\n      \r\n      // Transform API customers to match our structure with real calculated data\r\n      const transformedCustomers = data.map(customer => {\r\n        // Get ALL orders for this customer (not just filtered ones)\r\n        const customerOrders = allSalesData.filter(order => order.customerId === customer.id);\r\n        \r\n        // Calculate total owed from ALL unpaid orders\r\n        const totalOwed = customerOrders\r\n          .filter(order => !order.paid)\r\n          .reduce((sum, order) => sum + (order.total || 0), 0);\r\n        \r\n        // Overdue amount = total owed (since all unpaid orders need collection)\r\n        const overdueAmount = totalOwed;\r\n        \r\n        // Total number of orders for this customer\r\n        const invoiceCount = customerOrders.length;\r\n        \r\n        // Determine customer type based on actual order history, not API totalSpendOnOrder\r\n        let customerType = 'individual';\r\n        const totalSpentFromOrders = customerOrders.reduce((sum, order) => sum + (order.total || 0), 0);\r\n        \r\n        // Use actual order amounts to determine customer type\r\n        if (totalSpentFromOrders > 500000) {\r\n          customerType = 'corporate';\r\n        } else if (totalSpentFromOrders > 200000) {\r\n          customerType = 'small_business';\r\n        } else {\r\n          customerType = 'individual';\r\n        }\r\n        \r\n        // Set credit limit based on customer type\r\n        let creditLimit = 25000; // Default for individual\r\n        if (customerType === 'corporate') {\r\n          creditLimit = 500000;\r\n        } else if (customerType === 'small_business') {\r\n          creditLimit = 100000;\r\n        }\r\n        \r\n        // Determine credit status based on payment behavior\r\n        let creditStatus = 'good';\r\n        if (totalOwed === 0) {\r\n          creditStatus = 'excellent';\r\n        } else if (totalOwed > creditLimit * 0.9) {\r\n          creditStatus = 'hold'; // Hold means credit limit exceeded, stop further credit\r\n        } else if (totalOwed > creditLimit * 0.7) {\r\n          creditStatus = 'watch'; // Watch means monitor closely\r\n        }\r\n        \r\n        // Get last payment date from most recent paid order\r\n        const paidOrders = customerOrders.filter(o => o.paid);\r\n        const lastPayment = paidOrders.length > 0 ? \r\n          paidOrders.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))[0].createdAt.split('.').slice(0, 3).join('-') :\r\n          'No payments';\r\n\r\n        return {\r\n          id: customer.id,\r\n          name: customer.name,\r\n          email: customer.email || 'No email provided',\r\n          phone: customer.phoneNumber || 'No phone provided',\r\n          address: customer.address && customer.address.length > 0 ? \r\n            (typeof customer.address[0] === 'string' ? customer.address[0] : 'No address provided') : \r\n            'No address provided',\r\n          customerType: customerType,\r\n          creditLimit: creditLimit,\r\n          paymentTerms: customerType === 'corporate' ? 45 : (customerType === 'small_business' ? 30 : 15),\r\n          totalOwed: totalOwed,\r\n          overdueAmount: overdueAmount,\r\n          lastPayment: lastPayment,\r\n          creditStatus: creditStatus,\r\n          accountBalance: -totalOwed,\r\n          invoiceCount: invoiceCount,\r\n          avgPaymentDays: 30, // Default estimate\r\n          status: customer.status,\r\n          totalSpendOnOrder: customer.totalSpendOnOrder || 0,\r\n          averageOrderValue: customer.averageOrderValue || 0,\r\n          numberOfOrders: customer.numberOfOrders || invoiceCount\r\n        };\r\n      });\r\n      \r\n      // Also add walk-in customers (null customerId) as separate entries for each order\r\n      const walkInOrders = allSalesData.filter(order => !order.customerId || order.customerId === 'null');\r\n      walkInOrders.forEach((order, index) => {\r\n        const guestNumber = index + 1;\r\n        const guestTotalOwed = order.paid ? 0 : order.total;\r\n        const guestLastPayment = order.paid ? \r\n          order.createdAt.split('.').slice(0, 3).join('-') : \r\n          'No payments';\r\n        \r\n        transformedCustomers.push({\r\n          id: `guest-${order.orderId}`,\r\n          name: `Guest Customer #${guestNumber}`,\r\n          email: 'guest@pos.system',\r\n          phone: '+000-000-0000',\r\n          address: 'Walk-in Sale',\r\n          customerType: 'cash',\r\n          creditLimit: 0,\r\n          paymentTerms: 0,\r\n          totalOwed: guestTotalOwed,\r\n          overdueAmount: guestTotalOwed,\r\n          lastPayment: guestLastPayment,\r\n          creditStatus: 'cash_only',\r\n          accountBalance: -guestTotalOwed,\r\n          invoiceCount: 1,\r\n          avgPaymentDays: 0,\r\n          status: 'Active',\r\n          totalSpendOnOrder: order.total,\r\n          averageOrderValue: order.total,\r\n          numberOfOrders: 1,\r\n          orderId: order.orderId // Store order ID for reference\r\n        });\r\n      });\r\n      \r\n      setCustomers({ loading: false, data: transformedCustomers, error: null });\r\n    } catch (error) {\r\n      console.error('Error fetching customers:', error);\r\n      setCustomers({ loading: false, data: [], error: error.message });\r\n    }\r\n  };\r\n\r\n  // Also add refresh button functionality to recalculate customer data\r\n  const refreshAllData = async () => {\r\n    await fetchSales();\r\n    setTimeout(() => fetchCustomers(), 500);\r\n  };\r\n\r\n  // Load data on component mount\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      await fetchSales();\r\n      // Fetch customers after sales data is loaded to calculate balances correctly\r\n      setTimeout(() => fetchCustomers(), 500);\r\n    };\r\n    loadData();\r\n  }, []);\r\n\r\n  // Helper function to get customer name by ID\r\n  const getCustomerName = (customerId) => {\r\n    if (!customerId || customerId === 'null') return 'Guest Customer';\r\n    const customer = customers.data.find(c => c.id === customerId);\r\n    return customer ? customer.name : 'Unknown Customer';\r\n  };\r\n\r\n  // Helper function to get customer details by ID\r\n  const getCustomerDetails = (customerId) => {\r\n    if (!customerId || customerId === 'null') return null;\r\n    return customers.data.find(c => c.id === customerId);\r\n  };\r\n\r\n  // Calculate AR summary\r\n  const calculateARSummary = () => {\r\n    const totalAR = customers.data.reduce((sum, customer) => sum + customer.totalOwed, 0);\r\n    const totalOverdue = customers.data.reduce((sum, customer) => sum + customer.overdueAmount, 0);\r\n    const customersWithBalance = customers.data.filter(customer => customer.totalOwed > 0).length;\r\n    \r\n    // Calculate real average days outstanding from actual order data\r\n    const allSalesData = window.allSalesData || [];\r\n    let totalDaysOutstanding = 0;\r\n    let orderCount = 0;\r\n    \r\n    allSalesData.forEach(order => {\r\n      // Convert order creation date from \"2025.08.18.10.08.54.569\" to proper date\r\n      const orderDateStr = order.createdAt.split('.').slice(0, 3).join('-'); // \"2025-08-18\"\r\n      const orderDate = new Date(orderDateStr);\r\n      const today = new Date();\r\n      \r\n      // Calculate days between order creation and today\r\n      const timeDiff = today.getTime() - orderDate.getTime();\r\n      const daysDiff = Math.floor(timeDiff / (1000 * 3600 * 24));\r\n      \r\n      totalDaysOutstanding += daysDiff;\r\n      orderCount++;\r\n    });\r\n    \r\n    const avgDaysOutstanding = orderCount > 0 ? Math.round(totalDaysOutstanding / orderCount) : 0;\r\n\r\n    return {\r\n      totalAR,\r\n      totalOverdue,\r\n      customersWithBalance,\r\n      avgDaysOutstanding\r\n    };\r\n  };\r\n\r\n  // Get aging data\r\n  const getAgingData = () => {\r\n    const aging = {\r\n      current: 0,\r\n      days30: 0,\r\n      days60: 0,\r\n      days90: 0,\r\n      over90: 0\r\n    };\r\n\r\n    sales.data.forEach(order => {\r\n      if (order.paid) return;\r\n      \r\n      const daysPastDue = order.daysOverdue || 0;\r\n      \r\n      if (daysPastDue <= 0) {\r\n        aging.current += order.total;\r\n      } else if (daysPastDue <= 30) {\r\n        aging.days30 += order.total;\r\n      } else if (daysPastDue <= 60) {\r\n        aging.days60 += order.total;\r\n      } else if (daysPastDue <= 90) {\r\n        aging.days90 += order.total;\r\n      } else {\r\n        aging.over90 += order.total;\r\n      }\r\n    });\r\n\r\n    return aging;\r\n  };\r\n\r\n  // Filter customers\r\n  const getFilteredCustomers = () => {\r\n    let filtered = [...customers.data];\r\n\r\n    if (filters.customerType !== 'all') {\r\n      filtered = filtered.filter(customer => customer.customerType === filters.customerType);\r\n    }\r\n\r\n    if (filters.status !== 'all') {\r\n      filtered = filtered.filter(customer => {\r\n        if (filters.status === 'overdue') return customer.overdueAmount > 0;\r\n        if (filters.status === 'current') return customer.totalOwed > 0 && customer.overdueAmount === 0;\r\n        if (filters.status === 'paid_up') return customer.totalOwed === 0;\r\n        return true;\r\n      });\r\n    }\r\n\r\n    if (filters.searchTerm) {\r\n      const term = filters.searchTerm.toLowerCase();\r\n      filtered = filtered.filter(customer =>\r\n        customer.name.toLowerCase().includes(term) ||\r\n        customer.email.toLowerCase().includes(term) ||\r\n        customer.id.toLowerCase().includes(term)\r\n      );\r\n    }\r\n\r\n    return filtered;\r\n  };\r\n\r\n  const getCreditStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'excellent': return 'bg-green-100 text-green-800';\r\n      case 'good': return 'bg-blue-100 text-blue-800';\r\n      case 'watch': return 'bg-yellow-100 text-yellow-800';\r\n      case 'hold': return 'bg-red-100 text-red-800';\r\n      case 'cash_only': return 'bg-gray-100 text-gray-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getInvoiceStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'paid': return 'bg-green-100 text-green-800';\r\n      case 'outstanding': return 'bg-blue-100 text-blue-800';\r\n      case 'overdue': return 'bg-red-100 text-red-800';\r\n      case 'partial': return 'bg-yellow-100 text-yellow-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return 'N/A';\r\n    return dateString.split('.').slice(0, 3).join('/');\r\n  };\r\n\r\n  const formatCurrency = (amount) => {\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD'\r\n    }).format(amount);\r\n  };\r\n\r\n  const summary = calculateARSummary();\r\n  const aging = getAgingData();\r\n  const filteredCustomers = getFilteredCustomers();\r\n\r\n  // Loading state\r\n  if (sales.loading || customers.loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <Loader className=\"animate-spin text-emerald-600\" size={24} />\r\n          <span className=\"text-gray-600\">Loading data from API...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Error state\r\n  if (sales.error || customers.error) {\r\n    return (\r\n      <div className=\"max-w-7xl mx-auto p-6\">\r\n        <div className=\"bg-red-50 border border-red-200 rounded-lg p-6\">\r\n          <div className=\"flex items-center mb-4\">\r\n            <AlertTriangle className=\"text-red-600 mr-2\" size={20} />\r\n            <h3 className=\"font-medium text-red-800\">API Connection Error</h3>\r\n          </div>\r\n          <div className=\"text-red-700 mb-4\">\r\n            {sales.error && <div>Sales API Error: {sales.error}</div>}\r\n            {customers.error && <div>Customers API Error: {customers.error}</div>}\r\n          </div>\r\n          <button\r\n            onClick={() => {\r\n              fetchSales();\r\n              fetchCustomers();\r\n            }}\r\n            className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 flex items-center space-x-2\"\r\n          >\r\n            <RefreshCw size={16} />\r\n            <span>Retry Connection</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto p-6 bg-white\">\r\n      {/* Header */}\r\n      <div className=\"mb-8\">\r\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\r\n          <CreditCard className=\"mr-3 text-emerald-600\" />\r\n          Accounts Receivable\r\n        </h1>\r\n        <p className=\"text-gray-600\">Manage customer invoicing, payments, and credit limits</p>\r\n      </div>\r\n\r\n      {/* Summary Cards */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\r\n        <div className=\"bg-blue-50 p-6 rounded-lg border border-blue-200\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-blue-600 text-sm font-medium\">Total A/R</p>\r\n              <p className=\"text-2xl font-bold text-blue-900\">{formatCurrency(summary.totalAR)}</p>\r\n            </div>\r\n            <DollarSign className=\"text-blue-600\" size={24} />\r\n          </div>\r\n          <p className=\"text-sm text-blue-700 mt-2\">{summary.customersWithBalance} customers with balances</p>\r\n        </div>\r\n\r\n        <div className=\"bg-red-50 p-6 rounded-lg border border-red-200\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-red-600 text-sm font-medium\">Overdue Amount</p>\r\n              <p className=\"text-2xl font-bold text-red-900\">{formatCurrency(summary.totalOverdue)}</p>\r\n            </div>\r\n            <AlertTriangle className=\"text-red-600\" size={24} />\r\n          </div>\r\n          <p className=\"text-sm text-red-700 mt-2\">\r\n            {summary.totalAR > 0 ? ((summary.totalOverdue / summary.totalAR) * 100).toFixed(1) : 0}% of total A/R\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"bg-green-50 p-6 rounded-lg border border-green-200\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-green-600 text-sm font-medium\">Avg. Days Outstanding</p>\r\n              <p className=\"text-2xl font-bold text-green-900\">{summary.avgDaysOutstanding}</p>\r\n            </div>\r\n            <Clock className=\"text-green-600\" size={24} />\r\n          </div>\r\n          <p className=\"text-sm text-green-700 mt-2\">Collection performance</p>\r\n        </div>\r\n\r\n        <div className=\"bg-purple-50 p-6 rounded-lg border border-purple-200\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-purple-600 text-sm font-medium\">Active Customers</p>\r\n              <p className=\"text-2xl font-bold text-purple-900\">{customers.data.length}</p>\r\n            </div>\r\n            <Users className=\"text-purple-600\" size={24} />\r\n          </div>\r\n          <p className=\"text-sm text-purple-700 mt-2\">Total customer accounts</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tabs */}\r\n      <div className=\"mb-6\">\r\n        <div className=\"border-b border-gray-200\">\r\n          <nav className=\"-mb-px flex space-x-8\">\r\n            {[\r\n              { id: 'overview', name: 'Customer Overview', icon: Users },\r\n              { id: 'invoices', name: 'Invoices', icon: FileText },\r\n              { id: 'aging', name: 'Aging Report', icon: Clock },\r\n              { id: 'payments', name: 'Payments', icon: CheckCircle }\r\n            ].map((tab) => (\r\n              <button\r\n                key={tab.id}\r\n                onClick={() => setActiveTab(tab.id)}\r\n                className={`flex items-center py-2 px-1 border-b-2 font-medium text-sm ${\r\n                  activeTab === tab.id\r\n                    ? 'border-emerald-500 text-emerald-600'\r\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n                }`}\r\n              >\r\n                <tab.icon className=\"mr-2\" size={16} />\r\n                {tab.name}\r\n              </button>\r\n            ))}\r\n          </nav>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tab Content */}\r\n      {activeTab === 'overview' && (\r\n        <div>\r\n          {/* Filters */}\r\n          <div className=\"flex flex-wrap items-center gap-4 mb-6\">\r\n            <div className=\"relative\">\r\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search customers...\"\r\n                value={filters.searchTerm}\r\n                onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\r\n                className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n              />\r\n            </div>\r\n\r\n            <select\r\n              value={filters.customerType}\r\n              onChange={(e) => setFilters({ ...filters, customerType: e.target.value })}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n            >\r\n              <option value=\"all\">All Customer Types</option>\r\n              <option value=\"corporate\">Corporate</option>\r\n              <option value=\"small_business\">Small Business</option>\r\n              <option value=\"individual\">Individual</option>\r\n              <option value=\"cash\">Cash Only</option>\r\n            </select>\r\n\r\n            <select\r\n              value={filters.status}\r\n              onChange={(e) => setFilters({ ...filters, status: e.target.value })}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n            >\r\n              <option value=\"all\">All Statuses</option>\r\n              <option value=\"current\">Current</option>\r\n              <option value=\"overdue\">Overdue</option>\r\n              <option value=\"paid_up\">Paid Up</option>\r\n            </select>\r\n\r\n            <button\r\n              onClick={() => setShowInvoiceForm(true)}\r\n              className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\r\n            >\r\n              <Plus size={16} />\r\n              <span>New Invoice</span>\r\n            </button>\r\n          </div>\r\n\r\n          {/* Customer List */}\r\n          <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"w-full\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Customer\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Type\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Credit Limit\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Balance\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Overdue\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Credit Status\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Last Payment\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Actions\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {filteredCustomers.map((customer) => (\r\n                    <tr key={customer.id} className=\"hover:bg-gray-50\">\r\n                      <td className=\"px-6 py-4\">\r\n                        <div>\r\n                          <div className=\"text-sm font-medium text-gray-900\">{customer.name}</div>\r\n                          <div className=\"text-sm text-gray-500\">{customer.id}</div>\r\n                          <div className=\"text-xs text-gray-400 flex items-center mt-1\">\r\n                            <Mail className=\"mr-1\" size={12} />\r\n                            {customer.email}\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-gray-100 text-gray-800\">\r\n                          {customer.customerType.replace('_', ' ')}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                        {formatCurrency(customer.creditLimit)}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"text-sm font-medium text-gray-900\">\r\n                          {formatCurrency(customer.totalOwed)}\r\n                        </div>\r\n                        <div className=\"text-xs text-gray-500\">\r\n                          {customer.invoiceCount} invoices\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        {customer.overdueAmount > 0 ? (\r\n                          <span className=\"text-red-600 font-medium\">\r\n                            {formatCurrency(customer.overdueAmount)}\r\n                          </span>\r\n                        ) : (\r\n                          <span className=\"text-green-600\">$0.00</span>\r\n                        )}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(customer.creditStatus)}`}>\r\n                          {customer.creditStatus.replace('_', ' ')}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                        {customer.lastPayment}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                        <button\r\n                          onClick={() => setSelectedCustomer(customer)}\r\n                          className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\r\n                        >\r\n                          <Eye size={16} />\r\n                        </button>\r\n                        <button className=\"text-blue-600 hover:text-blue-900\">\r\n                          <Edit size={16} />\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {activeTab === 'aging' && (\r\n        <div>\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n            {/* Aging Summary */}\r\n            <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Aging Summary</h3>\r\n              <div className=\"space-y-4\">\r\n                <div className=\"flex justify-between items-center p-3 bg-green-50 rounded\">\r\n                  <span className=\"font-medium text-green-800\">Current (0-30 days)</span>\r\n                  <span className=\"font-bold text-green-900\">{formatCurrency(aging.current)}</span>\r\n                </div>\r\n                <div className=\"flex justify-between items-center p-3 bg-yellow-50 rounded\">\r\n                  <span className=\"font-medium text-yellow-800\">31-60 days</span>\r\n                  <span className=\"font-bold text-yellow-900\">{formatCurrency(aging.days30)}</span>\r\n                </div>\r\n                <div className=\"flex justify-between items-center p-3 bg-orange-50 rounded\">\r\n                  <span className=\"font-medium text-orange-800\">61-90 days</span>\r\n                  <span className=\"font-bold text-orange-900\">{formatCurrency(aging.days60)}</span>\r\n                </div>\r\n                <div className=\"flex justify-between items-center p-3 bg-red-50 rounded\">\r\n                  <span className=\"font-medium text-red-800\">Over 90 days</span>\r\n                  <span className=\"font-bold text-red-900\">{formatCurrency(aging.over90)}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"mt-4 pt-4 border-t\">\r\n                <div className=\"flex justify-between items-center\">\r\n                  <span className=\"text-lg font-semibold text-gray-900\">Total Outstanding</span>\r\n                  <span className=\"text-xl font-bold text-gray-900\">\r\n                    {formatCurrency(aging.current + aging.days30 + aging.days60 + aging.days90 + aging.over90)}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Collection Priority */}\r\n            <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Collection Priority</h3>\r\n              <div className=\"space-y-3\">\r\n                {customers.data\r\n                  .filter(customer => customer.overdueAmount > 0)\r\n                  .sort((a, b) => b.overdueAmount - a.overdueAmount)\r\n                  .slice(0, 5)\r\n                  .map((customer, index) => (\r\n                    <div key={customer.id} className=\"flex items-center justify-between p-3 bg-red-50 rounded\">\r\n                      <div>\r\n                        <div className=\"font-medium text-gray-900\">{customer.name}</div>\r\n                        <div className=\"text-sm text-gray-500\">\r\n                          Last payment: {customer.lastPayment}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"text-right\">\r\n                        <div className=\"font-bold text-red-900\">{formatCurrency(customer.overdueAmount)}</div>\r\n                        <div className=\"text-xs text-red-700\">#{index + 1} Priority</div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {activeTab === 'invoices' && (\r\n        <div>\r\n          <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n            <div className=\"px-6 py-4 border-b border-gray-200\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">Outstanding Orders/Invoices</h3>\r\n            </div>\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"w-full\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Order #\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Customer\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Date\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Items\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Amount\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Payment Status\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Fulfillment\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Actions\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {sales.data.map((order) => (\r\n                    <tr key={order.orderId} className=\"hover:bg-gray-50\">\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"text-sm font-medium text-gray-900\">#{order.orderId}</div>\r\n                        <div className=\"text-xs text-gray-500\">{order.status}</div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4\">\r\n                        <div className=\"text-sm font-medium text-gray-900\">{getCustomerName(order.customerId)}</div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                        {formatDate(order.createdAt)}\r\n                      </td>\r\n                      <td className=\"px-6 py-4\">\r\n                        <div className=\"text-sm text-gray-900\">\r\n                          {order.lineItems.map((item, index) => (\r\n                            <div key={index} className=\"mb-1\">\r\n                              <span className=\"font-medium\">{item.productName}</span>\r\n                              <span className=\"text-gray-500 ml-2\">x{item.quantity}</span>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                        {formatCurrency(order.total)}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n                          order.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\r\n                        }`}>\r\n                          {order.paid ? 'Paid' : 'Unpaid'}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n                          order.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n                        }`}>\r\n                          {order.fulfilled ? 'Fulfilled' : 'UnFulfilled'}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                        <button\r\n                          className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\r\n                          onClick={() => setViewInvoice(order)}\r\n                        >\r\n                          <Eye size={16} />\r\n                        </button>\r\n                        <button className=\"text-blue-600 hover:text-blue-900\">\r\n                          <Download size={16} />\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {activeTab === 'payments' && (\r\n        <div>\r\n          <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n            <div className=\"px-6 py-4 border-b border-gray-200\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">Payment History</h3>\r\n            </div>\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"w-full\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Order ID\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Customer\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Date\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Amount\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Payment Status\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Fulfillment Status\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {window.allSalesData?.filter(order => order.paid).map((order) => (\r\n                    <tr key={order.orderId} className=\"hover:bg-gray-50\">\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                        #{order.orderId}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                        {getCustomerName(order.customerId)}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                        {formatDate(order.createdAt)}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                        {formatCurrency(order.total)}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-green-100 text-green-800\">\r\n                          Paid\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n                          order.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n                        }`}>\r\n                          {order.fulfilled ? 'Fulfilled' : 'Pending'}\r\n                        </span>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            \r\n            {(!window.allSalesData?.filter(order => order.paid).length || window.allSalesData?.filter(order => order.paid).length === 0) && (\r\n              <div className=\"text-center py-12\">\r\n                <div className=\"text-gray-500 text-lg\">No payments found</div>\r\n                <p className=\"text-gray-400 mt-2\">All orders are currently unpaid</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Customer Detail Modal */}\r\n      {selectedCustomer && (\r\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n          <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n            <div className=\"px-6 py-4 border-b border-gray-200\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900\">\r\n                  Customer Details - {selectedCustomer.name}\r\n                </h3>\r\n                <button\r\n                  onClick={() => setSelectedCustomer(null)}\r\n                  className=\"text-gray-400 hover:text-gray-600\"\r\n                >\r\n                  <XCircle size={20} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"px-6 py-4\">\r\n              {/* Customer Info Grid */}\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n                <div className=\"space-y-4\">\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Customer ID</label>\r\n                    <p className=\"text-sm text-gray-900\">{selectedCustomer.id}</p>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Email</label>\r\n                    <p className=\"text-sm text-gray-900\">{selectedCustomer.email}</p>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Phone</label>\r\n                    <p className=\"text-sm text-gray-900\">{selectedCustomer.phone}</p>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Address</label>\r\n                    <p className=\"text-sm text-gray-900\">{selectedCustomer.address}</p>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"space-y-4\">\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Customer Type</label>\r\n                    <p className=\"text-sm text-gray-900\">{selectedCustomer.customerType.replace('_', ' ')}</p>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Credit Limit</label>\r\n                    <p className=\"text-sm text-gray-900\">{formatCurrency(selectedCustomer.creditLimit)}</p>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Payment Terms</label>\r\n                    <p className=\"text-sm text-gray-900\">{selectedCustomer.paymentTerms} days</p>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Credit Status</label>\r\n                    <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(selectedCustomer.creditStatus)}`}>\r\n                      {selectedCustomer.creditStatus.replace('_', ' ')}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Financial Summary */}\r\n              <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\r\n                <div className=\"bg-blue-50 p-4 rounded-lg\">\r\n                  <div className=\"text-sm font-medium text-blue-600\">Current Balance</div>\r\n                  <div className=\"text-xl font-bold text-blue-900\">\r\n                    {formatCurrency(selectedCustomer.totalOwed)}\r\n                  </div>\r\n                </div>\r\n                <div className=\"bg-red-50 p-4 rounded-lg\">\r\n                  <div className=\"text-sm font-medium text-red-600\">Overdue Amount</div>\r\n                  <div className=\"text-xl font-bold text-red-900\">\r\n                    {formatCurrency(selectedCustomer.overdueAmount)}\r\n                  </div>\r\n                </div>\r\n                <div className=\"bg-green-50 p-4 rounded-lg\">\r\n                  <div className=\"text-sm font-medium text-green-600\">Credit Available</div>\r\n                  <div className=\"text-xl font-bold text-green-900\">\r\n                    {formatCurrency(selectedCustomer.creditLimit - selectedCustomer.totalOwed)}\r\n                  </div>\r\n                </div>\r\n                <div className=\"bg-purple-50 p-4 rounded-lg\">\r\n                  <div className=\"text-sm font-medium text-purple-600\">Avg Payment Days</div>\r\n                  <div className=\"text-xl font-bold text-purple-900\">\r\n                    {selectedCustomer.avgPaymentDays}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Customer Orders */}\r\n              <div className=\"mb-6\">\r\n                <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Customer Orders</h4>\r\n                <div className=\"overflow-x-auto\">\r\n                  <table className=\"w-full border border-gray-200 rounded\">\r\n                    <thead className=\"bg-gray-50\">\r\n                      <tr>\r\n                        <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Order</th>\r\n                        <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Date</th>\r\n                        <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Items</th>\r\n                        <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Amount</th>\r\n                        <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Payment</th>\r\n                        <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Fulfillment</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody className=\"divide-y divide-gray-200\">\r\n                      {(window.allSalesData || [])\r\n                        .filter(order => {\r\n                          if (selectedCustomer.id.startsWith('guest-')) {\r\n                            return order.orderId === selectedCustomer.orderId;\r\n                          }\r\n                          return order.customerId === selectedCustomer.id;\r\n                        })\r\n                        .map((order) => (\r\n                          <tr key={order.orderId}>\r\n                            <td className=\"px-4 py-2 text-sm text-gray-900\">#{order.orderId}</td>\r\n                            <td className=\"px-4 py-2 text-sm text-gray-900\">{formatDate(order.createdAt)}</td>\r\n                            <td className=\"px-4 py-2 text-sm text-gray-900\">\r\n                              {order.lineItems.map(item => item.productName).join(', ')}\r\n                            </td>\r\n                            <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{formatCurrency(order.total)}</td>\r\n                            <td className=\"px-4 py-2\">\r\n                              <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n                                order.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\r\n                              }`}>\r\n                                {order.paid ? 'Paid' : 'Unpaid'}\r\n                              </span>\r\n                            </td>\r\n                            <td className=\"px-4 py-2\">\r\n                              <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n                                order.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n                              }`}>\r\n                                {order.fulfilled ? 'Fulfilled' : 'Pending'}\r\n                              </span>\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                \r\n                {(window.allSalesData || [])\r\n                  .filter(order => {\r\n                    if (selectedCustomer.id.startsWith('guest-')) {\r\n                      return order.orderId === selectedCustomer.orderId;\r\n                    }\r\n                    return order.customerId === selectedCustomer.id;\r\n                  }).length === 0 && (\r\n                    <div className=\"text-center py-4 text-gray-500\">\r\n                      No orders found for this customer\r\n                    </div>\r\n                  )}\r\n              </div>\r\n\r\n              {/* Action Buttons */}\r\n              <div className=\"flex space-x-3\">\r\n                <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\r\n                  <Plus size={16} />\r\n                  <span>New Invoice</span>\r\n                </button>\r\n                <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\r\n                  <CheckCircle size={16} />\r\n                  <span>Record Payment</span>\r\n                </button>\r\n                <button className=\"px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 flex items-center space-x-2\">\r\n                  <Mail size={16} />\r\n                  <span>Send Statement</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Order/Invoice Detail Modal */}\r\n      {viewInvoice && (\r\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n          <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n            <div className=\"px-6 py-4 border-b border-gray-200\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900\">\r\n                  Order Details - #{viewInvoice.orderId}\r\n                </h3>\r\n                <button\r\n                  onClick={() => setViewInvoice(null)}\r\n                  className=\"text-gray-400 hover:text-gray-600\"\r\n                >\r\n                  <XCircle size={20} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"px-6 py-4\">\r\n              {/* Order Info */}\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n                <div className=\"space-y-4\">\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Order ID</label>\r\n                    <p className=\"text-sm text-gray-900\">{viewInvoice.orderId}</p>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Customer</label>\r\n                    <p className=\"text-sm text-gray-900\">{getCustomerName(viewInvoice.customerId)}</p>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Created Date</label>\r\n                    <p className=\"text-sm text-gray-900\">{formatDate(viewInvoice.createdAt)}</p>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Status</label>\r\n                    <p className=\"text-sm text-gray-900\">{viewInvoice.status}</p>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"space-y-4\">\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Payment Status</label>\r\n                    <div>\r\n                      <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n                        viewInvoice.paid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\r\n                      }`}>\r\n                        {viewInvoice.paid ? 'Paid' : 'Unpaid'}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Fulfillment Status</label>\r\n                    <div>\r\n                      <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n                        viewInvoice.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n                      }`}>\r\n                        {viewInvoice.fulfilled ? 'Fulfilled' : 'Pending'}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Total Amount</label>\r\n                    <p className=\"text-lg font-bold text-gray-900\">{formatCurrency(viewInvoice.total)}</p>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Payable Amount</label>\r\n                    <p className=\"text-sm text-gray-900\">{formatCurrency(viewInvoice.payableAmount)}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Line Items */}\r\n              <div className=\"mb-6\">\r\n                <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Order Items</h4>\r\n                <div className=\"overflow-x-auto\">\r\n                  <table className=\"w-full border border-gray-200 rounded\">\r\n                    <thead className=\"bg-gray-50\">\r\n                      <tr>\r\n                        <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Product</th>\r\n                        <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Quantity</th>\r\n                        <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Unit Price</th>\r\n                        <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Total</th>\r\n                        <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Status</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody className=\"divide-y divide-gray-200\">\r\n                      {viewInvoice.lineItems.map((item, index) => (\r\n                        <tr key={index}>\r\n                          <td className=\"px-4 py-2 text-sm text-gray-900\">{item.productName}</td>\r\n                          <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{item.quantity}</td>\r\n                          <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">{formatCurrency(item.price)}</td>\r\n                          <td className=\"px-4 py-2 text-sm font-medium text-gray-900 text-right\">{formatCurrency(item.total)}</td>\r\n                          <td className=\"px-4 py-2\">\r\n                            <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n                              item.fulfilled ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n                            }`}>\r\n                              {item.status}\r\n                            </span>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Totals */}\r\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-sm text-gray-600\">Subtotal:</span>\r\n                    <span className=\"text-sm text-gray-900\">{formatCurrency(viewInvoice.subTotal)}</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-sm text-gray-600\">Tax ({viewInvoice.taxRate}%):</span>\r\n                    <span className=\"text-sm text-gray-900\">{formatCurrency(viewInvoice.taxAmount)}</span>\r\n                  </div>\r\n                  {viewInvoice.discountAmount > 0 && (\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-sm text-gray-600\">Discount:</span>\r\n                      <span className=\"text-sm text-red-600\">-{formatCurrency(viewInvoice.discountAmount)}</span>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"flex justify-between font-bold text-lg border-t pt-2\">\r\n                    <span>Total:</span>\r\n                    <span>{formatCurrency(viewInvoice.total)}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Action Buttons */}\r\n              <div className=\"flex space-x-3 mt-6\">\r\n                {!viewInvoice.paid && (\r\n                  <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\r\n                    <CheckCircle size={16} />\r\n                    <span>Mark as Paid</span>\r\n                  </button>\r\n                )}\r\n                {!viewInvoice.fulfilled && (\r\n                  <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\r\n                    <FileText size={16} />\r\n                    <span>Mark as Fulfilled</span>\r\n                  </button>\r\n                )}\r\n                <button className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\">\r\n                  <Download size={16} />\r\n                  <span>Download Invoice</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* API Integration Status */}\r\n      <div className=\"mt-8 p-6 bg-green-50 border border-green-200 rounded-lg\">\r\n        <div className=\"flex items-center mb-4\">\r\n          <CheckCircle className=\"text-green-600 mr-2\" size={20} />\r\n          <h3 className=\"font-medium text-green-800\">POS Integration Active</h3>\r\n        </div>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm text-green-700\">\r\n          <div>\r\n            <strong>Sales Orders:</strong> {sales.data.length} outstanding orders from POS system\r\n          </div>\r\n          <div>\r\n            <strong>Customers:</strong> {customers.data.length} active customers synchronized\r\n          </div>\r\n          <div>\r\n            <strong>Real-time Updates:</strong> Data refreshes automatically with POS transactions\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-4 text-xs text-green-600\">\r\n          <strong>Note:</strong> Only showing unpaid or unfulfilled orders. Replace Bearer token for live data connection.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountsReceivable;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}