{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Logic-Unit\\\\my-account\\\\src\\\\components\\\\AccountsReceivable\\\\APPaymentsTab.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { formatCurrency, formatDate } from './AccountsReceivableUtils/formatters';\n// import { RefreshCw, CheckCircle, Clock, XCircle } from 'lucide-react';\n\n// const APPaymentsTab = ({ allSalesData, getCustomerName }) => {\n//   const [payments, setPayments] = useState([]);\n//   const [refreshing, setRefreshing] = useState(false);\n\n//   const loadPayments = () => {\n//     // Load payments from localStorage\n//     const storedPayments = JSON.parse(localStorage.getItem('payments') || '[]');\n\n//     // Sort payments by date (newest first)\n//     const sortedPayments = storedPayments.sort((a, b) => \n//       new Date(b.date || b.createdAt) - new Date(a.date || a.createdAt)\n//     );\n\n//     setPayments(sortedPayments);\n//   };\n\n//   useEffect(() => {\n//     loadPayments();\n\n//     // Set up a listener for storage changes to sync across tabs\n//     const handleStorageChange = (e) => {\n//       if (e.key === 'payments') {\n//         loadPayments();\n//       }\n//     };\n\n//     window.addEventListener('storage', handleStorageChange);\n//     return () => window.removeEventListener('storage', handleStorageChange);\n//   }, []);\n\n//   const refreshData = () => {\n//     setRefreshing(true);\n//     loadPayments();\n//     setTimeout(() => setRefreshing(false), 500);\n//   };\n\n//   // Get paid orders from API data\n//   const paidOrders = allSalesData?.filter(order => order.paid && order.fulfilled) || [];\n//   console.log('paidOrders',paidOrders)\n//   // Combine with manual payment records\n//   const combinedPayments = [...payments];\n\n//   // Add API orders that don't have manual payment records\n//   paidOrders.forEach(order => {\n//     const hasPaymentRecord = payments.some(p => p.invoiceId === order.orderId);\n//     if (!hasPaymentRecord) {\n//       combinedPayments.push({\n//         id: `API-${order.orderId}`,\n//         invoiceId: order.orderId,\n//         customerId: order.customerId,\n//         date: order.paymentDate || order.createdAt,\n//         amount: order.total,\n//         paymentMethod: order.paymentMethod || 'Not specified',\n//         accountType:order.accountType,\n//         status: 'paid',\n//         source: 'api'\n//       });\n//     }\n//   });\n\n//   const getStatusIcon = (status) => {\n//     switch (status) {\n//       case 'paid':\n//       case 'completed':\n//         return <CheckCircle size={16} className=\"text-green-600\" />;\n//       case 'partial':\n//         return <Clock size={16} className=\"text-orange-600\" />;\n//       case 'failed':\n//         return <XCircle size={16} className=\"text-red-600\" />;\n//       default:\n//         return null;\n//     }\n//   };\n\n//   const getStatusBadge = (payment) => {\n//     const status = payment.status || 'paid';\n//     const statusStyles = {\n//       paid: 'bg-green-100 text-green-800',\n//       completed: 'bg-green-100 text-green-800',\n//       partial: 'bg-orange-100 text-orange-800',\n//       pending: 'bg-yellow-100 text-yellow-800',\n//       failed: 'bg-red-100 text-red-800'\n//     };\n\n//     return (\n//       <span className={`inline-flex items-center gap-1 px-2 py-1 text-xs font-medium rounded-full ${statusStyles[status] || 'bg-gray-100 text-gray-800'}`}>\n//         {getStatusIcon(status)}\n//         {status.charAt(0).toUpperCase() + status.slice(1)}\n//         {payment.remainingAmount > 0 && (\n//           <span className=\"ml-1 text-xs\">\n//             ({formatCurrency(payment.remainingAmount)} remaining)\n//           </span>\n//         )}\n//       </span>\n//     );\n//   };\n\n//   const getPaymentMethodLabel = (method) => {\n//     const methodLabels = {\n//       cash: 'Cash',\n//       check: 'Check',\n//       bank_transfer: 'Bank Transfer',\n//       credit_card: 'Credit Card',\n//       debit_card: 'Debit Card',\n//       online: 'Online Payment',\n//       eft: 'Electronic Funds Transfer'\n//     };\n//     return methodLabels[method] || method || 'Not specified';\n//   };\n// const getAccountTypeLabel = (type) => {\n//   switch (type) {\n//     case \"Assets\":\n//       return \"Assets\";\n//     case \"Liabilities\":\n//       return \"Liabilities\";\n//     case \"Equity\":\n//       return \"Equity\";\n//     case \"Income\":\n//       return \"Income\";\n//     case \"Expense\":\n//       return \"Expense\";\n//     default:\n//       return type || \"Not specified\"; // ✅ fallback: show raw type\n//   }\n// };\n\n//   return (\n//     <div>\n//       <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//         <div className=\"px-6 py-4 border-b border-gray-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <h3 className=\"text-lg font-semibold text-gray-900\">Payment History</h3>\n//             <button\n//               onClick={refreshData}\n//               className=\"flex items-center gap-2 px-3 py-1 text-sm text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded transition-colors\"\n//             >\n//               <RefreshCw size={16} className={refreshing ? 'animate-spin' : ''} />\n//               Refresh\n//             </button>\n//           </div>\n//         </div>\n\n//         <div className=\"overflow-x-auto\">\n//           <table className=\"w-full\">\n//            <thead className=\"bg-gray-50\">\n//               <tr>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Invoice ID\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Customer\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Payment Date\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Amount\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Payment Method\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Account Name\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Account Type\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Status\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Memo\n//                 </th>\n//               </tr>\n//             </thead>\n\n//            <tbody className=\"bg-white divide-y divide-gray-200\">\n//                 {combinedPayments.map((payment) => (\n//                   <tr key={payment.id} className=\"hover:bg-gray-50\">\n//                     <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n//                       {payment.invoiceId || payment.orderId}\n//                     </td>\n//                     <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                       {payment.customerId \n//                         ? getCustomerName(payment.customerId) || 'Unknown Customer'\n//                         : 'Walk-in Customer'}\n//                     </td>\n//                     <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                       {formatDate(payment.date || payment.createdAt)}\n//                     </td>\n//                     <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                       <span className=\"font-medium\">{formatCurrency(payment.amount || payment.total)}</span>\n//                     </td>\n//                     <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                       {getPaymentMethodLabel(payment.paymentMethod)}\n//                     </td>\n//                     <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                       {payment.accountName || 'Not specified'}\n//                     </td>\n//                     <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                       {getAccountTypeLabel(payment.accountType)}\n//                     </td>\n//                     <td className=\"px-6 py-4 whitespace-nowrap\">\n//                       {getStatusBadge(payment)}\n//                     </td>\n//                     <td className=\"px-6 py-4 text-sm text-gray-600\">\n//                       <div className=\"max-w-xs truncate\">\n//                         {payment.memo || '-'}\n//                       </div>\n//                     </td>\n//                   </tr>\n//                 ))}\n\n//               {combinedPayments.length === 0 && (\n//                 <tr>\n//                   <td colSpan={7} className=\"px-6 py-12 text-center\">\n//                     <div className=\"flex flex-col items-center justify-center text-gray-500\">\n//                       <XCircle size={48} className=\"mb-3 text-gray-300\" />\n//                       <p className=\"text-lg font-medium\">No payments recorded</p>\n//                       <p className=\"text-sm mt-1\">Payment records will appear here once processed</p>\n//                     </div>\n//                   </td>\n//                 </tr>\n//               )}\n//             </tbody>\n//           </table>\n//         </div>\n\n//         {/* Summary Footer */}\n//         {combinedPayments.length > 0 && (\n//           <div className=\"px-6 py-4 bg-gray-50 border-t border-gray-200\">\n//             <div className=\"flex items-center justify-between text-sm\">\n//               <div className=\"text-gray-600\">\n//                 Showing {combinedPayments.length} payment{combinedPayments.length !== 1 ? 's' : ''}\n//               </div>\n//               <div className=\"font-medium text-gray-900\">\n//                 Total: {formatCurrency(\n//                   combinedPayments.reduce((sum, p) => sum + (p.amount || p.total || 0), 0)\n//                 )}\n//               </div>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default APPaymentsTab;\n\nimport React, { useState, useEffect } from \"react\";\nimport { formatCurrency, formatDate } from \"./AccountsReceivableUtils/formatters\";\nimport { RefreshCw, CheckCircle, Clock, XCircle } from \"lucide-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst APPaymentsTab = ({\n  allSalesData,\n  getCustomerName\n}) => {\n  _s();\n  const [payments, setPayments] = useState([]);\n  const [refreshing, setRefreshing] = useState(false);\n  const [filters, setFilters] = useState({\n    invoiceId: \"\",\n    customer: \"\",\n    date: \"\",\n    amount: \"\",\n    method: \"\",\n    accountName: \"\",\n    accountType: \"\",\n    status: \"\",\n    memo: \"\"\n  });\n  const loadPayments = () => {\n    const storedPayments = JSON.parse(localStorage.getItem(\"payments\") || \"[]\");\n    const sortedPayments = storedPayments.sort((a, b) => new Date(b.date || b.createdAt) - new Date(a.date || a.createdAt));\n    setPayments(sortedPayments);\n  };\n  useEffect(() => {\n    loadPayments();\n    const handleStorageChange = e => {\n      if (e.key === \"payments\") {\n        loadPayments();\n      }\n    };\n    window.addEventListener(\"storage\", handleStorageChange);\n    return () => window.removeEventListener(\"storage\", handleStorageChange);\n  }, []);\n  const refreshData = () => {\n    setRefreshing(true);\n    loadPayments();\n    setTimeout(() => setRefreshing(false), 500);\n  };\n  const paidOrders = (allSalesData === null || allSalesData === void 0 ? void 0 : allSalesData.filter(order => order.paid && order.fulfilled)) || [];\n  const combinedPayments = [...payments];\n  paidOrders.forEach(order => {\n    const hasPaymentRecord = payments.some(p => p.invoiceId === order.orderId);\n    if (!hasPaymentRecord) {\n      combinedPayments.push({\n        id: `API-${order.orderId}`,\n        invoiceId: order.orderId,\n        customerId: order.customerId,\n        date: order.paymentDate || order.createdAt,\n        amount: order.total,\n        paymentMethod: order.paymentMethod || \"Not specified\",\n        accountType: order.accountType,\n        status: \"paid\",\n        source: \"api\"\n      });\n    }\n  });\n  const getStatusIcon = status => {\n    switch (status) {\n      case \"paid\":\n      case \"completed\":\n        return /*#__PURE__*/_jsxDEV(CheckCircle, {\n          size: 16,\n          className: \"text-green-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 16\n        }, this);\n      case \"partial\":\n        return /*#__PURE__*/_jsxDEV(Clock, {\n          size: 16,\n          className: \"text-orange-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 16\n        }, this);\n      case \"failed\":\n        return /*#__PURE__*/_jsxDEV(XCircle, {\n          size: 16,\n          className: \"text-red-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 16\n        }, this);\n      default:\n        return null;\n    }\n  };\n  const getStatusBadge = payment => {\n    const status = payment.status || \"paid\";\n    const statusStyles = {\n      paid: \"bg-green-100 text-green-800\",\n      completed: \"bg-green-100 text-green-800\",\n      partial: \"bg-orange-100 text-orange-800\",\n      pending: \"bg-yellow-100 text-yellow-800\",\n      failed: \"bg-red-100 text-red-800\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `inline-flex items-center gap-1 px-2 py-1 text-xs font-medium rounded-full ${statusStyles[status] || \"bg-gray-100 text-gray-800\"}`,\n      children: [getStatusIcon(status), status.charAt(0).toUpperCase() + status.slice(1), payment.remainingAmount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-1 text-xs\",\n        children: [\"(\", formatCurrency(payment.remainingAmount), \" remaining)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this);\n  };\n  const getPaymentMethodLabel = method => {\n    const methodLabels = {\n      cash: \"Cash\",\n      check: \"Check\",\n      bank_transfer: \"Bank Transfer\",\n      credit_card: \"Credit Card\",\n      debit_card: \"Debit Card\",\n      online: \"Online Payment\",\n      eft: \"Electronic Funds Transfer\"\n    };\n    return methodLabels[method] || method || \"Not specified\";\n  };\n  const getAccountTypeLabel = type => {\n    switch (type) {\n      case \"Assets\":\n        return \"Assets\";\n      case \"Liabilities\":\n        return \"Liabilities\";\n      case \"Equity\":\n        return \"Equity\";\n      case \"Income\":\n        return \"Income\";\n      case \"Expense\":\n        return \"Expense\";\n      default:\n        return type || \"Not specified\";\n    }\n  };\n\n  // 🔍 Apply filters\n  const filteredPayments = combinedPayments.filter(p => {\n    return (!filters.invoiceId || String(p.invoiceId).includes(filters.invoiceId)) && (!filters.customer || (getCustomerName(p.customerId) || \"Walk-in Customer\").toLowerCase().includes(filters.customer.toLowerCase())) && (!filters.method || getPaymentMethodLabel(p.paymentMethod) === filters.method) && (!filters.accountName || (p.accountName || \"Not specified\") === filters.accountName) && (!filters.accountType || getAccountTypeLabel(p.accountType) === filters.accountType) && (!filters.status || (p.status || \"paid\") === filters.status);\n  });\n\n  // 🔽 Collect unique filter values\n  const uniqueValues = (key, mapper) => Array.from(new Set(combinedPayments.map(p => mapper(p) || \"Not specified\")));\n  const customers = uniqueValues(\"customer\", p => getCustomerName(p.customerId) || \"Walk-in Customer\");\n  const methods = uniqueValues(\"method\", p => getPaymentMethodLabel(p.paymentMethod));\n  const accounts = uniqueValues(\"accountName\", p => p.accountName);\n  const types = uniqueValues(\"accountType\", p => getAccountTypeLabel(p.accountType));\n  const statuses = uniqueValues(\"status\", p => p.status || \"paid\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white border border-gray-200 rounded-lg overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-6 py-4 border-b border-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-gray-900\",\n            children: \"Payment History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: refreshData,\n            className: \"flex items-center gap-2 px-3 py-1 text-sm text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded transition-colors\",\n            children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n              size: 16,\n              className: refreshing ? \"animate-spin\" : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 15\n            }, this), \"Refresh\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"bg-gray-50\",\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [\"Invoice ID\", \"Customer\", \"Payment Date\", \"Amount\", \"Payment Method\", \"Account Name\", \"Account Type\", \"Status\", \"Memo\"].map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: col\n              }, col, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"bg-gray-100\",\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-2\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"w-full border rounded px-2 py-1 text-xs\",\n                  placeholder: \"Filter...\",\n                  value: filters.invoiceId,\n                  onChange: e => setFilters({\n                    ...filters,\n                    invoiceId: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 474,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-2\",\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"w-full border rounded px-2 py-1 text-xs\",\n                  value: filters.customer,\n                  onChange: e => setFilters({\n                    ...filters,\n                    customer: e.target.value\n                  }),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"All\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 491,\n                    columnNumber: 21\n                  }, this), customers.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: c,\n                    children: c\n                  }, c, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 493,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-2\",\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"w-full border rounded px-2 py-1 text-xs\",\n                  value: filters.method,\n                  onChange: e => setFilters({\n                    ...filters,\n                    method: e.target.value\n                  }),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"All\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 509,\n                    columnNumber: 21\n                  }, this), methods.map(m => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: m,\n                    children: m\n                  }, m, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 511,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-2\",\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"w-full border rounded px-2 py-1 text-xs\",\n                  value: filters.accountName,\n                  onChange: e => setFilters({\n                    ...filters,\n                    accountName: e.target.value\n                  }),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"All\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 525,\n                    columnNumber: 21\n                  }, this), accounts.map(a => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: a,\n                    children: a\n                  }, a, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 527,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-2\",\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"w-full border rounded px-2 py-1 text-xs\",\n                  value: filters.accountType,\n                  onChange: e => setFilters({\n                    ...filters,\n                    accountType: e.target.value\n                  }),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"All\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 541,\n                    columnNumber: 21\n                  }, this), types.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: t,\n                    children: t\n                  }, t, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 543,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 534,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-2\",\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"w-full border rounded px-2 py-1 text-xs\",\n                  value: filters.status,\n                  onChange: e => setFilters({\n                    ...filters,\n                    status: e.target.value\n                  }),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"All\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 557,\n                    columnNumber: 21\n                  }, this), statuses.map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: s,\n                    children: s\n                  }, s, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 559,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 550,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            className: \"bg-white divide-y divide-gray-200\",\n            children: [filteredPayments.map(payment => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"hover:bg-gray-50\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\",\n                children: payment.invoiceId || payment.orderId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900\",\n                children: payment.customerId ? getCustomerName(payment.customerId) || \"Unknown Customer\" : \"Walk-in Customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 575,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900\",\n                children: formatDate(payment.date || payment.createdAt)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 581,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium\",\n                  children: formatCurrency(payment.amount || payment.total)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 585,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900\",\n                children: getPaymentMethodLabel(payment.paymentMethod)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 589,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900\",\n                children: payment.accountName || \"Not specified\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 592,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900\",\n                children: getAccountTypeLabel(payment.accountType)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 595,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap\",\n                children: getStatusBadge(payment)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 598,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 text-sm text-gray-600\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"max-w-xs truncate\",\n                  children: payment.memo || \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 602,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 19\n              }, this)]\n            }, payment.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 17\n            }, this)), filteredPayments.length === 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: 9,\n                className: \"px-6 py-12 text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex flex-col items-center justify-center text-gray-500\",\n                  children: [/*#__PURE__*/_jsxDEV(XCircle, {\n                    size: 48,\n                    className: \"mb-3 text-gray-300\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 613,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-lg font-medium\",\n                    children: \"No payments found\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 614,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm mt-1\",\n                    children: \"Adjust filters or add new payments\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 617,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 612,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 611,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this), filteredPayments.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-6 py-4 bg-gray-50 border-t border-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between text-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray-600\",\n            children: [\"Showing \", filteredPayments.length, \" payment\", filteredPayments.length !== 1 ? \"s\" : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-medium text-gray-900\",\n            children: [\"Total:\", \" \", formatCurrency(filteredPayments.reduce((sum, p) => sum + (p.amount || p.total || 0), 0))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 429,\n    columnNumber: 5\n  }, this);\n};\n_s(APPaymentsTab, \"MHJWTDGabE3xzpA+isYmWvgWOeM=\");\n_c = APPaymentsTab;\nexport default APPaymentsTab;\nvar _c;\n$RefreshReg$(_c, \"APPaymentsTab\");","map":{"version":3,"names":["React","useState","useEffect","formatCurrency","formatDate","RefreshCw","CheckCircle","Clock","XCircle","jsxDEV","_jsxDEV","APPaymentsTab","allSalesData","getCustomerName","_s","payments","setPayments","refreshing","setRefreshing","filters","setFilters","invoiceId","customer","date","amount","method","accountName","accountType","status","memo","loadPayments","storedPayments","JSON","parse","localStorage","getItem","sortedPayments","sort","a","b","Date","createdAt","handleStorageChange","e","key","window","addEventListener","removeEventListener","refreshData","setTimeout","paidOrders","filter","order","paid","fulfilled","combinedPayments","forEach","hasPaymentRecord","some","p","orderId","push","id","customerId","paymentDate","total","paymentMethod","source","getStatusIcon","size","className","fileName","_jsxFileName","lineNumber","columnNumber","getStatusBadge","payment","statusStyles","completed","partial","pending","failed","children","charAt","toUpperCase","slice","remainingAmount","getPaymentMethodLabel","methodLabels","cash","check","bank_transfer","credit_card","debit_card","online","eft","getAccountTypeLabel","type","filteredPayments","String","includes","toLowerCase","uniqueValues","mapper","Array","from","Set","map","customers","methods","accounts","types","statuses","onClick","col","placeholder","value","onChange","target","c","m","t","s","length","colSpan","reduce","sum","_c","$RefreshReg$"],"sources":["C:/Users/Logic-Unit/my-account/src/components/AccountsReceivable/APPaymentsTab.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { formatCurrency, formatDate } from './AccountsReceivableUtils/formatters';\r\n// import { RefreshCw, CheckCircle, Clock, XCircle } from 'lucide-react';\r\n\r\n// const APPaymentsTab = ({ allSalesData, getCustomerName }) => {\r\n//   const [payments, setPayments] = useState([]);\r\n//   const [refreshing, setRefreshing] = useState(false);\r\n\r\n//   const loadPayments = () => {\r\n//     // Load payments from localStorage\r\n//     const storedPayments = JSON.parse(localStorage.getItem('payments') || '[]');\r\n    \r\n//     // Sort payments by date (newest first)\r\n//     const sortedPayments = storedPayments.sort((a, b) => \r\n//       new Date(b.date || b.createdAt) - new Date(a.date || a.createdAt)\r\n//     );\r\n    \r\n//     setPayments(sortedPayments);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     loadPayments();\r\n    \r\n//     // Set up a listener for storage changes to sync across tabs\r\n//     const handleStorageChange = (e) => {\r\n//       if (e.key === 'payments') {\r\n//         loadPayments();\r\n//       }\r\n//     };\r\n    \r\n//     window.addEventListener('storage', handleStorageChange);\r\n//     return () => window.removeEventListener('storage', handleStorageChange);\r\n//   }, []);\r\n\r\n//   const refreshData = () => {\r\n//     setRefreshing(true);\r\n//     loadPayments();\r\n//     setTimeout(() => setRefreshing(false), 500);\r\n//   };\r\n\r\n//   // Get paid orders from API data\r\n//   const paidOrders = allSalesData?.filter(order => order.paid && order.fulfilled) || [];\r\n//   console.log('paidOrders',paidOrders)\r\n//   // Combine with manual payment records\r\n//   const combinedPayments = [...payments];\r\n  \r\n//   // Add API orders that don't have manual payment records\r\n//   paidOrders.forEach(order => {\r\n//     const hasPaymentRecord = payments.some(p => p.invoiceId === order.orderId);\r\n//     if (!hasPaymentRecord) {\r\n//       combinedPayments.push({\r\n//         id: `API-${order.orderId}`,\r\n//         invoiceId: order.orderId,\r\n//         customerId: order.customerId,\r\n//         date: order.paymentDate || order.createdAt,\r\n//         amount: order.total,\r\n//         paymentMethod: order.paymentMethod || 'Not specified',\r\n//         accountType:order.accountType,\r\n//         status: 'paid',\r\n//         source: 'api'\r\n//       });\r\n//     }\r\n//   });\r\n\r\n//   const getStatusIcon = (status) => {\r\n//     switch (status) {\r\n//       case 'paid':\r\n//       case 'completed':\r\n//         return <CheckCircle size={16} className=\"text-green-600\" />;\r\n//       case 'partial':\r\n//         return <Clock size={16} className=\"text-orange-600\" />;\r\n//       case 'failed':\r\n//         return <XCircle size={16} className=\"text-red-600\" />;\r\n//       default:\r\n//         return null;\r\n//     }\r\n//   };\r\n\r\n//   const getStatusBadge = (payment) => {\r\n//     const status = payment.status || 'paid';\r\n//     const statusStyles = {\r\n//       paid: 'bg-green-100 text-green-800',\r\n//       completed: 'bg-green-100 text-green-800',\r\n//       partial: 'bg-orange-100 text-orange-800',\r\n//       pending: 'bg-yellow-100 text-yellow-800',\r\n//       failed: 'bg-red-100 text-red-800'\r\n//     };\r\n\r\n//     return (\r\n//       <span className={`inline-flex items-center gap-1 px-2 py-1 text-xs font-medium rounded-full ${statusStyles[status] || 'bg-gray-100 text-gray-800'}`}>\r\n//         {getStatusIcon(status)}\r\n//         {status.charAt(0).toUpperCase() + status.slice(1)}\r\n//         {payment.remainingAmount > 0 && (\r\n//           <span className=\"ml-1 text-xs\">\r\n//             ({formatCurrency(payment.remainingAmount)} remaining)\r\n//           </span>\r\n//         )}\r\n//       </span>\r\n//     );\r\n//   };\r\n\r\n//   const getPaymentMethodLabel = (method) => {\r\n//     const methodLabels = {\r\n//       cash: 'Cash',\r\n//       check: 'Check',\r\n//       bank_transfer: 'Bank Transfer',\r\n//       credit_card: 'Credit Card',\r\n//       debit_card: 'Debit Card',\r\n//       online: 'Online Payment',\r\n//       eft: 'Electronic Funds Transfer'\r\n//     };\r\n//     return methodLabels[method] || method || 'Not specified';\r\n//   };\r\n// const getAccountTypeLabel = (type) => {\r\n//   switch (type) {\r\n//     case \"Assets\":\r\n//       return \"Assets\";\r\n//     case \"Liabilities\":\r\n//       return \"Liabilities\";\r\n//     case \"Equity\":\r\n//       return \"Equity\";\r\n//     case \"Income\":\r\n//       return \"Income\";\r\n//     case \"Expense\":\r\n//       return \"Expense\";\r\n//     default:\r\n//       return type || \"Not specified\"; // ✅ fallback: show raw type\r\n//   }\r\n// };\r\n\r\n//   return (\r\n//     <div>\r\n//       <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//         <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <h3 className=\"text-lg font-semibold text-gray-900\">Payment History</h3>\r\n//             <button\r\n//               onClick={refreshData}\r\n//               className=\"flex items-center gap-2 px-3 py-1 text-sm text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded transition-colors\"\r\n//             >\r\n//               <RefreshCw size={16} className={refreshing ? 'animate-spin' : ''} />\r\n//               Refresh\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n        \r\n//         <div className=\"overflow-x-auto\">\r\n//           <table className=\"w-full\">\r\n//            <thead className=\"bg-gray-50\">\r\n//               <tr>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Invoice ID\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Customer\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Payment Date\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Amount\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Payment Method\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Account Name\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Account Type\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Status\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Memo\r\n//                 </th>\r\n//               </tr>\r\n//             </thead>\r\n\r\n//            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//                 {combinedPayments.map((payment) => (\r\n//                   <tr key={payment.id} className=\"hover:bg-gray-50\">\r\n//                     <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n//                       {payment.invoiceId || payment.orderId}\r\n//                     </td>\r\n//                     <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                       {payment.customerId \r\n//                         ? getCustomerName(payment.customerId) || 'Unknown Customer'\r\n//                         : 'Walk-in Customer'}\r\n//                     </td>\r\n//                     <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                       {formatDate(payment.date || payment.createdAt)}\r\n//                     </td>\r\n//                     <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                       <span className=\"font-medium\">{formatCurrency(payment.amount || payment.total)}</span>\r\n//                     </td>\r\n//                     <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                       {getPaymentMethodLabel(payment.paymentMethod)}\r\n//                     </td>\r\n//                     <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                       {payment.accountName || 'Not specified'}\r\n//                     </td>\r\n//                     <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                       {getAccountTypeLabel(payment.accountType)}\r\n//                     </td>\r\n//                     <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                       {getStatusBadge(payment)}\r\n//                     </td>\r\n//                     <td className=\"px-6 py-4 text-sm text-gray-600\">\r\n//                       <div className=\"max-w-xs truncate\">\r\n//                         {payment.memo || '-'}\r\n//                       </div>\r\n//                     </td>\r\n//                   </tr>\r\n//                 ))}\r\n\r\n\r\n//               {combinedPayments.length === 0 && (\r\n//                 <tr>\r\n//                   <td colSpan={7} className=\"px-6 py-12 text-center\">\r\n//                     <div className=\"flex flex-col items-center justify-center text-gray-500\">\r\n//                       <XCircle size={48} className=\"mb-3 text-gray-300\" />\r\n//                       <p className=\"text-lg font-medium\">No payments recorded</p>\r\n//                       <p className=\"text-sm mt-1\">Payment records will appear here once processed</p>\r\n//                     </div>\r\n//                   </td>\r\n//                 </tr>\r\n//               )}\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n\r\n//         {/* Summary Footer */}\r\n//         {combinedPayments.length > 0 && (\r\n//           <div className=\"px-6 py-4 bg-gray-50 border-t border-gray-200\">\r\n//             <div className=\"flex items-center justify-between text-sm\">\r\n//               <div className=\"text-gray-600\">\r\n//                 Showing {combinedPayments.length} payment{combinedPayments.length !== 1 ? 's' : ''}\r\n//               </div>\r\n//               <div className=\"font-medium text-gray-900\">\r\n//                 Total: {formatCurrency(\r\n//                   combinedPayments.reduce((sum, p) => sum + (p.amount || p.total || 0), 0)\r\n//                 )}\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default APPaymentsTab;\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { formatCurrency, formatDate } from \"./AccountsReceivableUtils/formatters\";\r\nimport { RefreshCw, CheckCircle, Clock, XCircle } from \"lucide-react\";\r\n\r\nconst APPaymentsTab = ({ allSalesData, getCustomerName }) => {\r\n  const [payments, setPayments] = useState([]);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [filters, setFilters] = useState({\r\n    invoiceId: \"\",\r\n    customer: \"\",\r\n    date: \"\",\r\n    amount: \"\",\r\n    method: \"\",\r\n    accountName: \"\",\r\n    accountType: \"\",\r\n    status: \"\",\r\n    memo: \"\",\r\n  });\r\n\r\n  const loadPayments = () => {\r\n    const storedPayments = JSON.parse(localStorage.getItem(\"payments\") || \"[]\");\r\n    const sortedPayments = storedPayments.sort(\r\n      (a, b) => new Date(b.date || b.createdAt) - new Date(a.date || a.createdAt)\r\n    );\r\n    setPayments(sortedPayments);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadPayments();\r\n    const handleStorageChange = (e) => {\r\n      if (e.key === \"payments\") {\r\n        loadPayments();\r\n      }\r\n    };\r\n    window.addEventListener(\"storage\", handleStorageChange);\r\n    return () => window.removeEventListener(\"storage\", handleStorageChange);\r\n  }, []);\r\n\r\n  const refreshData = () => {\r\n    setRefreshing(true);\r\n    loadPayments();\r\n    setTimeout(() => setRefreshing(false), 500);\r\n  };\r\n\r\n  const paidOrders =\r\n    allSalesData?.filter((order) => order.paid && order.fulfilled) || [];\r\n  const combinedPayments = [...payments];\r\n  paidOrders.forEach((order) => {\r\n    const hasPaymentRecord = payments.some((p) => p.invoiceId === order.orderId);\r\n    if (!hasPaymentRecord) {\r\n      combinedPayments.push({\r\n        id: `API-${order.orderId}`,\r\n        invoiceId: order.orderId,\r\n        customerId: order.customerId,\r\n        date: order.paymentDate || order.createdAt,\r\n        amount: order.total,\r\n        paymentMethod: order.paymentMethod || \"Not specified\",\r\n        accountType: order.accountType,\r\n        status: \"paid\",\r\n        source: \"api\",\r\n      });\r\n    }\r\n  });\r\n\r\n  const getStatusIcon = (status) => {\r\n    switch (status) {\r\n      case \"paid\":\r\n      case \"completed\":\r\n        return <CheckCircle size={16} className=\"text-green-600\" />;\r\n      case \"partial\":\r\n        return <Clock size={16} className=\"text-orange-600\" />;\r\n      case \"failed\":\r\n        return <XCircle size={16} className=\"text-red-600\" />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const getStatusBadge = (payment) => {\r\n    const status = payment.status || \"paid\";\r\n    const statusStyles = {\r\n      paid: \"bg-green-100 text-green-800\",\r\n      completed: \"bg-green-100 text-green-800\",\r\n      partial: \"bg-orange-100 text-orange-800\",\r\n      pending: \"bg-yellow-100 text-yellow-800\",\r\n      failed: \"bg-red-100 text-red-800\",\r\n    };\r\n\r\n    return (\r\n      <span\r\n        className={`inline-flex items-center gap-1 px-2 py-1 text-xs font-medium rounded-full ${\r\n          statusStyles[status] || \"bg-gray-100 text-gray-800\"\r\n        }`}\r\n      >\r\n        {getStatusIcon(status)}\r\n        {status.charAt(0).toUpperCase() + status.slice(1)}\r\n        {payment.remainingAmount > 0 && (\r\n          <span className=\"ml-1 text-xs\">\r\n            ({formatCurrency(payment.remainingAmount)} remaining)\r\n          </span>\r\n        )}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  const getPaymentMethodLabel = (method) => {\r\n    const methodLabels = {\r\n      cash: \"Cash\",\r\n      check: \"Check\",\r\n      bank_transfer: \"Bank Transfer\",\r\n      credit_card: \"Credit Card\",\r\n      debit_card: \"Debit Card\",\r\n      online: \"Online Payment\",\r\n      eft: \"Electronic Funds Transfer\",\r\n    };\r\n    return methodLabels[method] || method || \"Not specified\";\r\n  };\r\n\r\n  const getAccountTypeLabel = (type) => {\r\n    switch (type) {\r\n      case \"Assets\":\r\n        return \"Assets\";\r\n      case \"Liabilities\":\r\n        return \"Liabilities\";\r\n      case \"Equity\":\r\n        return \"Equity\";\r\n      case \"Income\":\r\n        return \"Income\";\r\n      case \"Expense\":\r\n        return \"Expense\";\r\n      default:\r\n        return type || \"Not specified\";\r\n    }\r\n  };\r\n\r\n  // 🔍 Apply filters\r\n  const filteredPayments = combinedPayments.filter((p) => {\r\n    return (\r\n      (!filters.invoiceId || String(p.invoiceId).includes(filters.invoiceId)) &&\r\n      (!filters.customer ||\r\n        (getCustomerName(p.customerId) || \"Walk-in Customer\")\r\n          .toLowerCase()\r\n          .includes(filters.customer.toLowerCase())) &&\r\n      (!filters.method ||\r\n        getPaymentMethodLabel(p.paymentMethod) === filters.method) &&\r\n      (!filters.accountName ||\r\n        (p.accountName || \"Not specified\") === filters.accountName) &&\r\n      (!filters.accountType ||\r\n        getAccountTypeLabel(p.accountType) === filters.accountType) &&\r\n      (!filters.status || (p.status || \"paid\") === filters.status)\r\n    );\r\n  });\r\n\r\n  // 🔽 Collect unique filter values\r\n  const uniqueValues = (key, mapper) =>\r\n    Array.from(\r\n      new Set(combinedPayments.map((p) => mapper(p) || \"Not specified\"))\r\n    );\r\n\r\n  const customers = uniqueValues(\"customer\", (p) =>\r\n    getCustomerName(p.customerId) || \"Walk-in Customer\"\r\n  );\r\n  const methods = uniqueValues(\"method\", (p) =>\r\n    getPaymentMethodLabel(p.paymentMethod)\r\n  );\r\n  const accounts = uniqueValues(\"accountName\", (p) => p.accountName);\r\n  const types = uniqueValues(\"accountType\", (p) =>\r\n    getAccountTypeLabel(p.accountType)\r\n  );\r\n  const statuses = uniqueValues(\"status\", (p) => p.status || \"paid\");\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n        <div className=\"px-6 py-4 border-b border-gray-200\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900\">\r\n              Payment History\r\n            </h3>\r\n            <button\r\n              onClick={refreshData}\r\n              className=\"flex items-center gap-2 px-3 py-1 text-sm text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded transition-colors\"\r\n            >\r\n              <RefreshCw\r\n                size={16}\r\n                className={refreshing ? \"animate-spin\" : \"\"}\r\n              />\r\n              Refresh\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"w-full\">\r\n            <thead className=\"bg-gray-50\">\r\n              <tr>\r\n                {[\r\n                  \"Invoice ID\",\r\n                  \"Customer\",\r\n                  \"Payment Date\",\r\n                  \"Amount\",\r\n                  \"Payment Method\",\r\n                  \"Account Name\",\r\n                  \"Account Type\",\r\n                  \"Status\",\r\n                  \"Memo\",\r\n                ].map((col) => (\r\n                  <th\r\n                    key={col}\r\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                  >\r\n                    {col}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n              <tr className=\"bg-gray-100\">\r\n                <th className=\"px-6 py-2\">\r\n                  <input\r\n                    className=\"w-full border rounded px-2 py-1 text-xs\"\r\n                    placeholder=\"Filter...\"\r\n                    value={filters.invoiceId}\r\n                    onChange={(e) =>\r\n                      setFilters({ ...filters, invoiceId: e.target.value })\r\n                    }\r\n                  />\r\n                </th>\r\n                <th className=\"px-6 py-2\">\r\n                  <select\r\n                    className=\"w-full border rounded px-2 py-1 text-xs\"\r\n                    value={filters.customer}\r\n                    onChange={(e) =>\r\n                      setFilters({ ...filters, customer: e.target.value })\r\n                    }\r\n                  >\r\n                    <option value=\"\">All</option>\r\n                    {customers.map((c) => (\r\n                      <option key={c} value={c}>\r\n                        {c}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </th>\r\n                <th></th>\r\n                <th></th>\r\n                <th className=\"px-6 py-2\">\r\n                  <select\r\n                    className=\"w-full border rounded px-2 py-1 text-xs\"\r\n                    value={filters.method}\r\n                    onChange={(e) =>\r\n                      setFilters({ ...filters, method: e.target.value })\r\n                    }\r\n                  >\r\n                    <option value=\"\">All</option>\r\n                    {methods.map((m) => (\r\n                      <option key={m} value={m}>\r\n                        {m}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </th>\r\n                <th className=\"px-6 py-2\">\r\n                  <select\r\n                    className=\"w-full border rounded px-2 py-1 text-xs\"\r\n                    value={filters.accountName}\r\n                    onChange={(e) =>\r\n                      setFilters({ ...filters, accountName: e.target.value })\r\n                    }\r\n                  >\r\n                    <option value=\"\">All</option>\r\n                    {accounts.map((a) => (\r\n                      <option key={a} value={a}>\r\n                        {a}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </th>\r\n                <th className=\"px-6 py-2\">\r\n                  <select\r\n                    className=\"w-full border rounded px-2 py-1 text-xs\"\r\n                    value={filters.accountType}\r\n                    onChange={(e) =>\r\n                      setFilters({ ...filters, accountType: e.target.value })\r\n                    }\r\n                  >\r\n                    <option value=\"\">All</option>\r\n                    {types.map((t) => (\r\n                      <option key={t} value={t}>\r\n                        {t}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </th>\r\n                <th className=\"px-6 py-2\">\r\n                  <select\r\n                    className=\"w-full border rounded px-2 py-1 text-xs\"\r\n                    value={filters.status}\r\n                    onChange={(e) =>\r\n                      setFilters({ ...filters, status: e.target.value })\r\n                    }\r\n                  >\r\n                    <option value=\"\">All</option>\r\n                    {statuses.map((s) => (\r\n                      <option key={s} value={s}>\r\n                        {s}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n              {filteredPayments.map((payment) => (\r\n                <tr key={payment.id} className=\"hover:bg-gray-50\">\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                    {payment.invoiceId || payment.orderId}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                    {payment.customerId\r\n                      ? getCustomerName(payment.customerId) ||\r\n                        \"Unknown Customer\"\r\n                      : \"Walk-in Customer\"}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                    {formatDate(payment.date || payment.createdAt)}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                    <span className=\"font-medium\">\r\n                      {formatCurrency(payment.amount || payment.total)}\r\n                    </span>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                    {getPaymentMethodLabel(payment.paymentMethod)}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                    {payment.accountName || \"Not specified\"}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                    {getAccountTypeLabel(payment.accountType)}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    {getStatusBadge(payment)}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 text-sm text-gray-600\">\r\n                    <div className=\"max-w-xs truncate\">\r\n                      {payment.memo || \"-\"}\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n\r\n              {filteredPayments.length === 0 && (\r\n                <tr>\r\n                  <td colSpan={9} className=\"px-6 py-12 text-center\">\r\n                    <div className=\"flex flex-col items-center justify-center text-gray-500\">\r\n                      <XCircle size={48} className=\"mb-3 text-gray-300\" />\r\n                      <p className=\"text-lg font-medium\">\r\n                        No payments found\r\n                      </p>\r\n                      <p className=\"text-sm mt-1\">\r\n                        Adjust filters or add new payments\r\n                      </p>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        {filteredPayments.length > 0 && (\r\n          <div className=\"px-6 py-4 bg-gray-50 border-t border-gray-200\">\r\n            <div className=\"flex items-center justify-between text-sm\">\r\n              <div className=\"text-gray-600\">\r\n                Showing {filteredPayments.length} payment\r\n                {filteredPayments.length !== 1 ? \"s\" : \"\"}\r\n              </div>\r\n              <div className=\"font-medium text-gray-900\">\r\n                Total:{\" \"}\r\n                {formatCurrency(\r\n                  filteredPayments.reduce(\r\n                    (sum, p) => sum + (p.amount || p.total || 0),\r\n                    0\r\n                  )\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default APPaymentsTab;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}