{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Logic-Unit\\\\my-account\\\\src\\\\pages\\\\ChartOfAccounts.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { ChevronDown, ChevronRight, Plus, Edit, Trash2, Save, X, Search, Filter } from 'lucide-react';\n\n// const ChartOfAccounts = () => {\n//   const [accounts, setAccounts] = useState([]);\n//   const [expandedNodes, setExpandedNodes] = useState(new Set());\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [selectedCategory, setSelectedCategory] = useState('all');\n//   const [isAddingAccount, setIsAddingAccount] = useState(false);\n//   const [editingAccount, setEditingAccount] = useState(null);\n//   const [formData, setFormData] = useState({\n//     code: '',\n//     name: '',\n//     type: 'assets',\n//     category: 'account',\n//     parentId: null,\n//     description: '',\n//     isActive: true\n//   });\n\n//   // Initialize with default account structure\n//   useEffect(() => {\n//     const defaultAccounts = [\n//       // Assets\n//       { id: '1000', code: '1000', name: 'Assets', type: 'assets', category: 'header', parentId: null, level: 0, isActive: true, description: 'All company assets' },\n//       { id: '1100', code: '1100', name: 'Current Assets', type: 'assets', category: 'group', parentId: '1000', level: 1, isActive: true, description: 'Assets expected to be converted to cash within one year' },\n//       { id: '1110', code: '1110', name: 'Cash and Cash Equivalents', type: 'assets', category: 'account', parentId: '1100', level: 2, isActive: true, description: 'Cash in hand and bank accounts' },\n//       { id: '1111', code: '1111', name: 'Petty Cash', type: 'assets', category: 'account', parentId: '1110', level: 3, isActive: true, description: 'Small cash amounts for daily expenses' },\n//       { id: '1112', code: '1112', name: 'Bank - Main Account', type: 'assets', category: 'account', parentId: '1110', level: 3, isActive: true, description: 'Primary business bank account' },\n//       { id: '1120', code: '1120', name: 'Accounts Receivable', type: 'assets', category: 'account', parentId: '1100', level: 2, isActive: true, description: 'Money owed by customers' },\n//       { id: '1130', code: '1130', name: 'Inventory', type: 'assets', category: 'account', parentId: '1100', level: 2, isActive: true, description: 'Products held for sale' },\n//       { id: '1200', code: '1200', name: 'Fixed Assets', type: 'assets', category: 'group', parentId: '1000', level: 1, isActive: true, description: 'Long-term assets used in business operations' },\n//       { id: '1210', code: '1210', name: 'Equipment', type: 'assets', category: 'account', parentId: '1200', level: 2, isActive: true, description: 'Business equipment and machinery' },\n//       { id: '1220', code: '1220', name: 'Accumulated Depreciation - Equipment', type: 'assets', category: 'account', parentId: '1200', level: 2, isActive: true, description: 'Accumulated depreciation on equipment' },\n\n//       // Liabilities\n//       { id: '2000', code: '2000', name: 'Liabilities', type: 'liabilities', category: 'header', parentId: null, level: 0, isActive: true, description: 'All company liabilities' },\n//       { id: '2100', code: '2100', name: 'Current Liabilities', type: 'liabilities', category: 'group', parentId: '2000', level: 1, isActive: true, description: 'Debts due within one year' },\n//       { id: '2110', code: '2110', name: 'Accounts Payable', type: 'liabilities', category: 'account', parentId: '2100', level: 2, isActive: true, description: 'Money owed to suppliers' },\n//       { id: '2120', code: '2120', name: 'Accrued Expenses', type: 'liabilities', category: 'account', parentId: '2100', level: 2, isActive: true, description: 'Expenses incurred but not yet paid' },\n//       { id: '2130', code: '2130', name: 'Sales Tax Payable', type: 'liabilities', category: 'account', parentId: '2100', level: 2, isActive: true, description: 'Sales tax collected from customers' },\n\n//       // Equity\n//       { id: '3000', code: '3000', name: 'Equity', type: 'equity', category: 'header', parentId: null, level: 0, isActive: true, description: 'Owner equity in the business' },\n//       { id: '3100', code: '3100', name: 'Owner Equity', type: 'equity', category: 'account', parentId: '3000', level: 1, isActive: true, description: 'Owner investment in business' },\n//       { id: '3200', code: '3200', name: 'Retained Earnings', type: 'equity', category: 'account', parentId: '3000', level: 1, isActive: true, description: 'Accumulated profits retained in business' },\n\n//       // Revenue\n//       { id: '4000', code: '4000', name: 'Revenue', type: 'revenue', category: 'header', parentId: null, level: 0, isActive: true, description: 'All company revenue' },\n//       { id: '4100', code: '4100', name: 'Sales Revenue', type: 'revenue', category: 'account', parentId: '4000', level: 1, isActive: true, description: 'Revenue from product sales' },\n//       { id: '4200', code: '4200', name: 'Service Revenue', type: 'revenue', category: 'account', parentId: '4000', level: 1, isActive: true, description: 'Revenue from services provided' },\n\n//       // Expenses\n//       { id: '5000', code: '5000', name: 'Expenses', type: 'expenses', category: 'header', parentId: null, level: 0, isActive: true, description: 'All company expenses' },\n//       { id: '5100', code: '5100', name: 'Cost of Goods Sold', type: 'expenses', category: 'account', parentId: '5000', level: 1, isActive: true, description: 'Direct costs of products sold' },\n//       { id: '5200', code: '5200', name: 'Operating Expenses', type: 'expenses', category: 'group', parentId: '5000', level: 1, isActive: true, description: 'Day-to-day business operating expenses' },\n//       { id: '5210', code: '5210', name: 'Rent Expense', type: 'expenses', category: 'account', parentId: '5200', level: 2, isActive: true, description: 'Monthly rent payments' },\n//       { id: '5220', code: '5220', name: 'Utilities Expense', type: 'expenses', category: 'account', parentId: '5200', level: 2, isActive: true, description: 'Electricity, water, internet costs' },\n//       { id: '5230', code: '5230', name: 'Salaries and Wages', type: 'expenses', category: 'account', parentId: '5200', level: 2, isActive: true, description: 'Employee compensation' },\n//     ];\n\n//     setAccounts(defaultAccounts);\n//     // Expand main categories by default\n//     setExpandedNodes(new Set(['1000', '2000', '3000', '4000', '5000']));\n//   }, []);\n\n//   const accountTypes = {\n//     assets: { label: 'Assets', color: 'bg-green-100 text-green-800', codeRange: '1000-1999' },\n//     liabilities: { label: 'Liabilities', color: 'bg-red-100 text-red-800', codeRange: '2000-2999' },\n//     equity: { label: 'Equity', color: 'bg-blue-100 text-blue-800', codeRange: '3000-3999' },\n//     revenue: { label: 'Revenue', color: 'bg-purple-100 text-purple-800', codeRange: '4000-4999' },\n//     expenses: { label: 'Expenses', color: 'bg-orange-100 text-orange-800', codeRange: '5000-5999' }\n//   };\n\n//   const getFilteredAccounts = () => {\n//     let filtered = accounts;\n\n//     if (searchTerm) {\n//       filtered = filtered.filter(account => \n//         account.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//         account.code.includes(searchTerm) ||\n//         account.description.toLowerCase().includes(searchTerm.toLowerCase())\n//       );\n//     }\n\n//     if (selectedCategory !== 'all') {\n//       filtered = filtered.filter(account => account.type === selectedCategory);\n//     }\n\n//     return filtered;\n//   };\n\n//   const buildHierarchy = (accounts, parentId = null) => {\n//     return accounts\n//       .filter(account => account.parentId === parentId)\n//       .sort((a, b) => a.code.localeCompare(b.code))\n//       .map(account => ({\n//         ...account,\n//         children: buildHierarchy(accounts, account.id)\n//       }));\n//   };\n\n//   const toggleExpand = (nodeId) => {\n//     const newExpanded = new Set(expandedNodes);\n//     if (newExpanded.has(nodeId)) {\n//       newExpanded.delete(nodeId);\n//     } else {\n//       newExpanded.add(nodeId);\n//     }\n//     setExpandedNodes(newExpanded);\n//   };\n\n//   const handleAddAccount = (parentId = null) => {\n//     const parentAccount = parentId ? accounts.find(a => a.id === parentId) : null;\n//     const accountType = parentAccount ? parentAccount.type : 'assets';\n\n//     setFormData({\n//       code: generateAccountCode(accountType, parentId),\n//       name: '',\n//       type: accountType,\n//       category: 'account',\n//       parentId,\n//       description: '',\n//       isActive: true\n//     });\n//     setIsAddingAccount(true);\n//   };\n\n//   const handleEditAccount = (account) => {\n//     setFormData({\n//       code: account.code,\n//       name: account.name,\n//       type: account.type,\n//       category: account.category,\n//       parentId: account.parentId,\n//       description: account.description || '',\n//       isActive: account.isActive\n//     });\n//     setEditingAccount(account.id);\n//   };\n\n//   const generateAccountCode = (type, parentId = null) => {\n//     const typeRanges = {\n//       assets: { start: 1000, end: 1999 },\n//       liabilities: { start: 2000, end: 2999 },\n//       equity: { start: 3000, end: 3999 },\n//       revenue: { start: 4000, end: 4999 },\n//       expenses: { start: 5000, end: 5999 }\n//     };\n\n//     let baseCode = typeRanges[type].start;\n\n//     if (parentId) {\n//       const parent = accounts.find(a => a.id === parentId);\n//       if (parent) {\n//         const siblingCodes = accounts\n//           .filter(a => a.parentId === parentId)\n//           .map(a => parseInt(a.code))\n//           .sort((a, b) => a - b);\n\n//         if (siblingCodes.length > 0) {\n//           baseCode = Math.max(...siblingCodes) + 1;\n//         } else {\n//           baseCode = parseInt(parent.code) + 10;\n//         }\n//       }\n//     } else {\n//       const existingCodes = accounts\n//         .filter(a => a.type === type)\n//         .map(a => parseInt(a.code))\n//         .sort((a, b) => a - b);\n\n//       if (existingCodes.length > 0) {\n//         baseCode = Math.max(...existingCodes) + 100;\n//       }\n//     }\n\n//     return baseCode.toString();\n//   };\n\n//   const handleSaveAccount = () => {\n//     if (!formData.code || !formData.name) {\n//       alert('Please fill in required fields (Code and Name)');\n//       return;\n//     }\n\n//     // Check for duplicate codes\n//     if (accounts.some(a => a.code === formData.code && a.id !== editingAccount)) {\n//       alert('Account code already exists');\n//       return;\n//     }\n\n//     if (editingAccount) {\n//       // Edit existing account\n//       setAccounts(accounts.map(account => \n//         account.id === editingAccount \n//           ? { ...account, ...formData }\n//           : account\n//       ));\n//       setEditingAccount(null);\n//     } else {\n//       // Add new account\n//       const newId = (Math.max(...accounts.map(a => parseInt(a.id))) + 1).toString();\n//       const parentLevel = formData.parentId \n//         ? accounts.find(a => a.id === formData.parentId)?.level || 0\n//         : 0;\n\n//       const newAccount = {\n//         id: newId,\n//         ...formData,\n//         level: parentLevel + 1\n//       };\n\n//       setAccounts([...accounts, newAccount]);\n//       setIsAddingAccount(false);\n//     }\n\n//     // Reset form\n//     setFormData({\n//       code: '',\n//       name: '',\n//       type: 'assets',\n//       category: 'account',\n//       parentId: null,\n//       description: '',\n//       isActive: true\n//     });\n//   };\n\n//   const handleDeleteAccount = (accountId) => {\n//     // Check if account has children\n//     const hasChildren = accounts.some(a => a.parentId === accountId);\n//     if (hasChildren) {\n//       alert('Cannot delete account with sub-accounts. Please delete sub-accounts first.');\n//       return;\n//     }\n\n//     if (window.confirm('Are you sure you want to delete this account?')) {\n//       setAccounts(accounts.filter(a => a.id !== accountId));\n//     }\n//   };\n\n//   const handleCancel = () => {\n//     setIsAddingAccount(false);\n//     setEditingAccount(null);\n//     setFormData({\n//       code: '',\n//       name: '',\n//       type: 'assets',\n//       category: 'account',\n//       parentId: null,\n//       description: '',\n//       isActive: true\n//     });\n//   };\n\n//   const renderAccountNode = (account) => {\n//     const hasChildren = account.children && account.children.length > 0;\n//     const isExpanded = expandedNodes.has(account.id);\n//     const typeConfig = accountTypes[account.type];\n\n//     return (\n//       <div key={account.id} className=\"account-node\">\n//         <div \n//           className={`flex items-center py-2 px-4 hover:bg-gray-50 border-l-4 ${\n//             account.category === 'header' ? 'border-gray-400 bg-gray-100 font-bold' :\n//             account.category === 'group' ? 'border-gray-300 bg-gray-50 font-semibold' :\n//             'border-transparent'\n//           }`}\n//           style={{ paddingLeft: `${account.level * 20 + 16}px` }}\n//         >\n//           {hasChildren && (\n//             <button\n//               onClick={() => toggleExpand(account.id)}\n//               className=\"mr-2 p-1 hover:bg-gray-200 rounded\"\n//             >\n//               {isExpanded ? <ChevronDown size={16} /> : <ChevronRight size={16} />}\n//             </button>\n//           )}\n\n//           <div className=\"flex-1 flex items-center space-x-4\">\n//             <span className=\"font-mono text-sm text-gray-600 min-w-[80px]\">\n//               {account.code}\n//             </span>\n\n//             <span className={`flex-1 ${account.category === 'header' ? 'text-lg' : ''}`}>\n//               {account.name}\n//             </span>\n\n//             <span className={`px-2 py-1 rounded-full text-xs font-medium ${typeConfig.color}`}>\n//               {typeConfig.label}\n//             </span>\n\n//             {account.category !== 'header' && (\n//               <div className=\"flex space-x-1\">\n//                 <button\n//                   onClick={() => handleEditAccount(account)}\n//                   className=\"p-1 hover:bg-blue-100 rounded text-blue-600\"\n//                   title=\"Edit Account\"\n//                 >\n//                   <Edit size={14} />\n//                 </button>\n//                 <button\n//                   onClick={() => handleDeleteAccount(account.id)}\n//                   className=\"p-1 hover:bg-red-100 rounded text-red-600\"\n//                   disabled={account.category === 'header'}\n//                   title=\"Delete Account\"\n//                 >\n//                   <Trash2 size={14} />\n//                 </button>\n//                 <button\n//                   onClick={() => handleAddAccount(account.id)}\n//                   className=\"p-1 hover:bg-green-100 rounded text-green-600\"\n//                   title=\"Add Sub-Account\"\n//                 >\n//                   <Plus size={14} />\n//                 </button>\n//               </div>\n//             )}\n//           </div>\n//         </div>\n\n//         {account.description && (\n//           <div className=\"px-4 py-1 text-sm text-gray-500\" style={{ paddingLeft: `${account.level * 20 + 36}px` }}>\n//             {account.description}\n//           </div>\n//         )}\n\n//         {isExpanded && hasChildren && (\n//           <div>\n//             {account.children.map(child => renderAccountNode(child))}\n//           </div>\n//         )}\n//       </div>\n//     );\n//   };\n\n//   const filteredAccounts = getFilteredAccounts();\n//   const hierarchicalAccounts = buildHierarchy(filteredAccounts);\n\n//   return (\n//     <div className=\"max-w-7xl mx-auto p-6 bg-white\">\n//       <div className=\"mb-6\">\n//         <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Chart of Accounts</h1>\n//         <p className=\"text-gray-600\">Manage your company's account structure and hierarchy</p>\n//       </div>\n\n//       {/* Controls */}\n//       <div className=\"mb-6 flex flex-wrap items-center justify-between gap-4\">\n//         <div className=\"flex items-center space-x-4\">\n//           <div className=\"relative\">\n//             <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={20} />\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search accounts...\"\n//               value={searchTerm}\n//               onChange={(e) => setSearchTerm(e.target.value)}\n//               className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n//             />\n//           </div>\n\n//           <div className=\"relative\">\n//             <Filter className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={20} />\n//             <select\n//               value={selectedCategory}\n//               onChange={(e) => setSelectedCategory(e.target.value)}\n//               className=\"pl-10 pr-8 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n//             >\n//               <option value=\"all\">All Types</option>\n//               {Object.entries(accountTypes).map(([key, type]) => (\n//                 <option key={key} value={key}>{type.label}</option>\n//               ))}\n//             </select>\n//           </div>\n//         </div>\n\n//         <button\n//           onClick={() => handleAddAccount()}\n//           className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\"\n//         >\n//           <Plus size={20} />\n//           <span>Add Account</span>\n//         </button>\n//       </div>\n\n//       {/* Account Form */}\n//       {(isAddingAccount || editingAccount) && (\n//         <div className=\"mb-6 p-6 bg-gray-50 rounded-lg border\">\n//           <h3 className=\"text-lg font-semibold mb-4\">\n//             {editingAccount ? 'Edit Account' : 'Add New Account'}\n//           </h3>\n\n//           <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n//             <div>\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n//                 Account Code *\n//               </label>\n//               <input\n//                 type=\"text\"\n//                 value={formData.code}\n//                 onChange={(e) => setFormData({...formData, code: e.target.value})}\n//                 placeholder=\"Enter account code\"\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n//               />\n//             </div>\n\n//             <div>\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n//                 Account Name *\n//               </label>\n//               <input\n//                 type=\"text\"\n//                 value={formData.name}\n//                 onChange={(e) => setFormData({...formData, name: e.target.value})}\n//                 placeholder=\"Enter account name\"\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n//               />\n//             </div>\n\n//             <div>\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n//                 Account Type\n//               </label>\n//               <select\n//                 value={formData.type}\n//                 onChange={(e) => setFormData({...formData, type: e.target.value})}\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n//               >\n//                 {Object.entries(accountTypes).map(([key, type]) => (\n//                   <option key={key} value={key}>{type.label} ({type.codeRange})</option>\n//                 ))}\n//               </select>\n//             </div>\n\n//             <div>\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n//                 Category\n//               </label>\n//               <select\n//                 value={formData.category}\n//                 onChange={(e) => setFormData({...formData, category: e.target.value})}\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n//               >\n//                 <option value=\"header\">Header</option>\n//                 <option value=\"group\">Group</option>\n//                 <option value=\"account\">Account</option>\n//               </select>\n//             </div>\n\n//             <div>\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n//                 Parent Account\n//               </label>\n//               <select\n//                 value={formData.parentId || ''}\n//                 onChange={(e) => setFormData({...formData, parentId: e.target.value || null})}\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n//               >\n//                 <option value=\"\">None (Top Level)</option>\n//                 {accounts\n//                   .filter(a => a.id !== editingAccount && a.category !== 'account')\n//                   .map(account => (\n//                     <option key={account.id} value={account.id}>\n//                       {account.code} - {account.name}\n//                     </option>\n//                   ))\n//                 }\n//               </select>\n//             </div>\n\n//             <div className=\"flex items-center\">\n//               <input\n//                 type=\"checkbox\"\n//                 id=\"isActive\"\n//                 checked={formData.isActive}\n//                 onChange={(e) => setFormData({...formData, isActive: e.target.checked})}\n//                 className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n//               />\n//               <label htmlFor=\"isActive\" className=\"ml-2 block text-sm text-gray-900\">\n//                 Active\n//               </label>\n//             </div>\n\n//             <div className=\"md:col-span-2 lg:col-span-3\">\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n//                 Description\n//               </label>\n//               <textarea\n//                 value={formData.description}\n//                 onChange={(e) => setFormData({...formData, description: e.target.value})}\n//                 rows={2}\n//                 placeholder=\"Enter account description\"\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n//               />\n//             </div>\n//           </div>\n\n//           <div className=\"mt-4 flex space-x-3\">\n//             <button\n//               onClick={handleSaveAccount}\n//               className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 flex items-center space-x-2\"\n//             >\n//               <Save size={16} />\n//               <span>Save</span>\n//             </button>\n//             <button\n//               onClick={handleCancel}\n//               className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\"\n//             >\n//               <X size={16} />\n//               <span>Cancel</span>\n//             </button>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Accounts Tree */}\n//       <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//         <div className=\"px-4 py-3 bg-gray-50 border-b border-gray-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <h2 className=\"text-lg font-semibold text-gray-900\">Account Structure</h2>\n//             <span className=\"text-sm text-gray-500\">\n//               {filteredAccounts.length} accounts\n//             </span>\n//           </div>\n//         </div>\n\n//         <div className=\"max-h-[600px] overflow-y-auto\">\n//           {hierarchicalAccounts.length > 0 ? (\n//             hierarchicalAccounts.map(account => renderAccountNode(account))\n//           ) : (\n//             <div className=\"p-8 text-center text-gray-500\">\n//               No accounts found matching your criteria.\n//             </div>\n//           )}\n//         </div>\n//       </div>\n\n//       {/* Account Type Legend */}\n//       <div className=\"mt-6 p-4 bg-gray-50 rounded-lg\">\n//         <h3 className=\"text-sm font-semibold text-gray-700 mb-3\">Account Types & Code Ranges</h3>\n//         <div className=\"flex flex-wrap gap-4\">\n//           {Object.entries(accountTypes).map(([key, type]) => (\n//             <div key={key} className=\"flex items-center space-x-2\">\n//               <span className={`px-2 py-1 rounded-full text-xs font-medium ${type.color}`}>\n//                 {type.label}\n//               </span>\n//               <span className=\"text-sm text-gray-600 font-mono\">{type.codeRange}</span>\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n\n//       {/* Quick Actions Info */}\n//       <div className=\"mt-6 p-4 bg-blue-50 rounded-lg\">\n//         <h3 className=\"text-sm font-semibold text-blue-800 mb-2\">Quick Actions Guide</h3>\n//         <div className=\"text-xs text-blue-700 space-y-1\">\n//           <p>• Click the expand/collapse arrow to show/hide sub-accounts</p>\n//           <p>• Use the Edit button to modify account details</p>\n//           <p>• Use the Plus button to add a sub-account under any account</p>\n//           <p>• Delete accounts that have no sub-accounts or transactions</p>\n//           <p>• Search by account code, name, or description</p>\n//           <p>• Filter by account type to focus on specific categories</p>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ChartOfAccounts;\n\nimport React, { useState, useEffect } from 'react';\nimport { ChevronDown, ChevronRight, Plus, Edit, Trash2, Save, X, Search, Filter, RefreshCw } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartOfAccounts = () => {\n  _s();\n  const [accounts, setAccounts] = useState([]);\n  const [expandedNodes, setExpandedNodes] = useState(new Set());\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const [isAddingAccount, setIsAddingAccount] = useState(false);\n  const [editingAccount, setEditingAccount] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [formData, setFormData] = useState({\n    code: '',\n    name: '',\n    type: 'assets',\n    category: 'account',\n    parentId: null,\n    description: '',\n    active: true\n  });\n\n  // API Base URL\n  const API_BASE_URL = 'http://localhost:8080/api/accounts';\n\n  // Account types configuration\n  const accountTypes = {\n    assets: {\n      label: 'Assets',\n      color: 'bg-green-100 text-green-800',\n      codeRange: '1000-1999'\n    },\n    liabilities: {\n      label: 'Liabilities',\n      color: 'bg-red-100 text-red-800',\n      codeRange: '2000-2999'\n    },\n    equity: {\n      label: 'Equity',\n      color: 'bg-blue-100 text-blue-800',\n      codeRange: '3000-3999'\n    },\n    revenue: {\n      label: 'Revenue',\n      color: 'bg-purple-100 text-purple-800',\n      codeRange: '4000-4999'\n    },\n    expenses: {\n      label: 'Expenses',\n      color: 'bg-orange-100 text-orange-800',\n      codeRange: '5000-5999'\n    }\n  };\n\n  // Fetch accounts from API\n  const fetchAccounts = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch(API_BASE_URL);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setAccounts(data);\n\n      // Expand main categories by default\n      const mainCategories = data.filter(account => account.level === 0).map(account => account.id);\n      setExpandedNodes(new Set(mainCategories));\n    } catch (err) {\n      setError('Failed to fetch accounts: ' + err.message);\n      console.error('Error fetching accounts:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Initialize component\n  useEffect(() => {\n    fetchAccounts();\n  }, []);\n\n  // Create account\n  const createAccount = async accountData => {\n    try {\n      setLoading(true);\n      const response = await fetch(API_BASE_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(accountData)\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(errorText || `HTTP error! status: ${response.status}`);\n      }\n      await fetchAccounts(); // Refresh the list\n      return true;\n    } catch (err) {\n      setError('Failed to create account: ' + err.message);\n      console.error('Error creating account:', err);\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Update account\n  const updateAccount = async (accountId, accountData) => {\n    try {\n      setLoading(true);\n      const response = await fetch(`${API_BASE_URL}/${accountId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(accountData)\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(errorText || `HTTP error! status: ${response.status}`);\n      }\n      await fetchAccounts(); // Refresh the list\n      return true;\n    } catch (err) {\n      setError('Failed to update account: ' + err.message);\n      console.error('Error updating account:', err);\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete account\n  const deleteAccount = async accountId => {\n    try {\n      setLoading(true);\n      const response = await fetch(`${API_BASE_URL}/${accountId}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(errorText || `HTTP error! status: ${response.status}`);\n      }\n      await fetchAccounts(); // Refresh the list\n      return true;\n    } catch (err) {\n      setError('Failed to delete account: ' + err.message);\n      console.error('Error deleting account:', err);\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Helper function to flatten hierarchy for filtering\n  const flattenAccounts = accounts => {\n    const result = [];\n    const flatten = items => {\n      items.forEach(item => {\n        result.push(item);\n        if (item.children && item.children.length > 0) {\n          flatten(item.children);\n        }\n      });\n    };\n    flatten(accounts);\n    return result;\n  };\n\n  // Filter accounts based on search and category\n  const getFilteredAccounts = () => {\n    const flatAccounts = flattenAccounts(accounts);\n    let filtered = flatAccounts;\n    if (searchTerm) {\n      filtered = filtered.filter(account => account.name.toLowerCase().includes(searchTerm.toLowerCase()) || account.code.includes(searchTerm) || account.description && account.description.toLowerCase().includes(searchTerm.toLowerCase()));\n    }\n    if (selectedCategory !== 'all') {\n      filtered = filtered.filter(account => account.type === selectedCategory);\n    }\n    return filtered;\n  };\n\n  // Build hierarchy from flat accounts (for display when not searching)\n  const buildHierarchy = (accounts, parentId = null) => {\n    return accounts.filter(account => account.parentId === parentId).sort((a, b) => a.code.localeCompare(b.code)).map(account => ({\n      ...account,\n      children: buildHierarchy(accounts, account.id)\n    }));\n  };\n\n  // Toggle expand/collapse\n  const toggleExpand = nodeId => {\n    const newExpanded = new Set(expandedNodes);\n    if (newExpanded.has(nodeId)) {\n      newExpanded.delete(nodeId);\n    } else {\n      newExpanded.add(nodeId);\n    }\n    setExpandedNodes(newExpanded);\n  };\n\n  // Handle add account\n  const handleAddAccount = (parentId = null) => {\n    const flatAccounts = flattenAccounts(accounts);\n    const parentAccount = parentId ? flatAccounts.find(a => a.id === parentId) : null;\n    const accountType = parentAccount ? parentAccount.type : 'assets';\n    setFormData({\n      code: '',\n      // Will be generated by backend\n      name: '',\n      type: accountType,\n      category: 'account',\n      parentId,\n      description: '',\n      active: true\n    });\n    setIsAddingAccount(true);\n  };\n\n  // Handle edit account\n  const handleEditAccount = account => {\n    setFormData({\n      code: account.code,\n      name: account.name,\n      type: account.type,\n      category: account.category,\n      parentId: account.parentId,\n      description: account.description || '',\n      active: account.active !== undefined ? account.active : true\n    });\n    setEditingAccount(account.id);\n  };\n\n  // Handle save account\n  const handleSaveAccount = async () => {\n    if (!formData.name) {\n      alert('Please fill in the account name');\n      return;\n    }\n    const success = editingAccount ? await updateAccount(editingAccount, formData) : await createAccount(formData);\n    if (success) {\n      // Reset form\n      setFormData({\n        code: '',\n        name: '',\n        type: 'assets',\n        category: 'account',\n        parentId: null,\n        description: '',\n        active: true\n      });\n      setIsAddingAccount(false);\n      setEditingAccount(null);\n    }\n  };\n\n  // Handle delete account\n  const handleDeleteAccount = async accountId => {\n    const flatAccounts = flattenAccounts(accounts);\n    const hasChildren = flatAccounts.some(a => a.parentId === accountId);\n    if (hasChildren) {\n      alert('Cannot delete account with sub-accounts. Please delete sub-accounts first.');\n      return;\n    }\n    if (window.confirm('Are you sure you want to delete this account?')) {\n      await deleteAccount(accountId);\n    }\n  };\n\n  // Handle cancel\n  const handleCancel = () => {\n    setIsAddingAccount(false);\n    setEditingAccount(null);\n    setFormData({\n      code: '',\n      name: '',\n      type: 'assets',\n      category: 'account',\n      parentId: null,\n      description: '',\n      active: true\n    });\n  };\n\n  // Render account node\n  const renderAccountNode = account => {\n    const hasChildren = account.children && account.children.length > 0;\n    const isExpanded = expandedNodes.has(account.id);\n    const typeConfig = accountTypes[account.type];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"account-node\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex items-center py-2 px-4 hover:bg-gray-50 border-l-4 ${account.category === 'header' ? 'border-gray-400 bg-gray-100 font-bold' : account.category === 'group' ? 'border-gray-300 bg-gray-50 font-semibold' : 'border-transparent'}`,\n        style: {\n          paddingLeft: `${account.level * 20 + 16}px`\n        },\n        children: [hasChildren && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleExpand(account.id),\n          className: \"mr-2 p-1 hover:bg-gray-200 rounded\",\n          children: isExpanded ? /*#__PURE__*/_jsxDEV(ChevronDown, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 886,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(ChevronRight, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 886,\n            columnNumber: 57\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 882,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 flex items-center space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-mono text-sm text-gray-600 min-w-[80px]\",\n            children: account.code\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 891,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `flex-1 ${account.category === 'header' ? 'text-lg' : ''}`,\n            children: [account.name, !account.active && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ml-2 text-red-500 text-xs\",\n              children: \"(Inactive)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 897,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 895,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `px-2 py-1 rounded-full text-xs font-medium ${typeConfig.color}`,\n            children: typeConfig.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 900,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditAccount(account),\n              className: \"p-1 hover:bg-blue-100 rounded text-blue-600\",\n              title: \"Edit Account\",\n              disabled: loading,\n              children: /*#__PURE__*/_jsxDEV(Edit, {\n                size: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 911,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 905,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteAccount(account.id),\n              className: \"p-1 hover:bg-red-100 rounded text-red-600\",\n              title: \"Delete Account\",\n              disabled: loading,\n              children: /*#__PURE__*/_jsxDEV(Trash2, {\n                size: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 919,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 913,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleAddAccount(account.id),\n              className: \"p-1 hover:bg-green-100 rounded text-green-600\",\n              title: \"Add Sub-Account\",\n              disabled: loading,\n              children: /*#__PURE__*/_jsxDEV(Plus, {\n                size: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 927,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 921,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 904,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 890,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 873,\n        columnNumber: 9\n      }, this), account.description && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-4 py-1 text-sm text-gray-500\",\n        style: {\n          paddingLeft: `${account.level * 20 + 36}px`\n        },\n        children: account.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 934,\n        columnNumber: 11\n      }, this), isExpanded && hasChildren && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: account.children.map(child => renderAccountNode(child))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 940,\n        columnNumber: 11\n      }, this)]\n    }, account.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 872,\n      columnNumber: 7\n    }, this);\n  };\n  const flatAccounts = flattenAccounts(accounts);\n  const filteredAccounts = getFilteredAccounts();\n  const displayAccounts = searchTerm || selectedCategory !== 'all' ? filteredAccounts : buildHierarchy(flatAccounts);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-7xl mx-auto p-6 bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-gray-900 mb-2\",\n        children: \"Chart of Accounts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 957,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"Manage your company's account structure and hierarchy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 958,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 956,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-4 bg-red-50 border border-red-200 rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-700\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 966,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 965,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setError(null),\n          className: \"text-red-400 hover:text-red-600\",\n          children: /*#__PURE__*/_jsxDEV(X, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 972,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 968,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 964,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 963,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 flex flex-wrap items-center justify-between gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(Search, {\n            className: \"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\",\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 982,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search accounts...\",\n            value: searchTerm,\n            onChange: e => setSearchTerm(e.target.value),\n            className: \"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 983,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 981,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(Filter, {\n            className: \"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\",\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 993,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedCategory,\n            onChange: e => setSelectedCategory(e.target.value),\n            className: \"pl-10 pr-8 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"all\",\n              children: \"All Types\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 999,\n              columnNumber: 15\n            }, this), Object.entries(accountTypes).map(([key, type]) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: key,\n              children: type.label\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1001,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 994,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 992,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchAccounts,\n          className: \"px-3 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 flex items-center space-x-2\",\n          disabled: loading,\n          children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n            size: 16,\n            className: loading ? 'animate-spin' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1011,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Refresh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1012,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1006,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 980,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAddAccount(),\n        className: \"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\",\n        disabled: loading,\n        children: [/*#__PURE__*/_jsxDEV(Plus, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1021,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Add Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1022,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1016,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 979,\n      columnNumber: 7\n    }, this), (isAddingAccount || editingAccount) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 p-6 bg-gray-50 rounded-lg border\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold mb-4\",\n        children: editingAccount ? 'Edit Account' : 'Add New Account'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1029,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Account Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1035,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: formData.code,\n            onChange: e => setFormData({\n              ...formData,\n              code: e.target.value\n            }),\n            placeholder: \"Auto-generated if empty\",\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1038,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-500 mt-1\",\n            children: \"Leave empty for auto-generation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1045,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1034,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Account Name *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1049,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: formData.name,\n            onChange: e => setFormData({\n              ...formData,\n              name: e.target.value\n            }),\n            placeholder: \"Enter account name\",\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1052,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1048,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Account Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1063,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: formData.type,\n            onChange: e => setFormData({\n              ...formData,\n              type: e.target.value\n            }),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n            children: Object.entries(accountTypes).map(([key, type]) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: key,\n              children: [type.label, \" (\", type.codeRange, \")\"]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1072,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1066,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1062,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1078,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: formData.category,\n            onChange: e => setFormData({\n              ...formData,\n              category: e.target.value\n            }),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"header\",\n              children: \"Header\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1086,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"group\",\n              children: \"Group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1087,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"account\",\n              children: \"Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1088,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1081,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1077,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Parent Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1093,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: formData.parentId || '',\n            onChange: e => setFormData({\n              ...formData,\n              parentId: e.target.value || null\n            }),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"None (Top Level)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1101,\n              columnNumber: 17\n            }, this), flatAccounts.filter(a => a.id !== editingAccount && a.category !== 'account').map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: account.id,\n              children: [account.code, \" - \", account.name]\n            }, account.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1105,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1096,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1092,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"active\",\n            checked: formData.active,\n            onChange: e => setFormData({\n              ...formData,\n              active: e.target.checked\n            }),\n            className: \"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"active\",\n            className: \"ml-2 block text-sm text-gray-900\",\n            children: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1121,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"md:col-span-2 lg:col-span-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: formData.description,\n            onChange: e => setFormData({\n              ...formData,\n              description: e.target.value\n            }),\n            rows: 2,\n            placeholder: \"Enter account description\",\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1130,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1033,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 flex space-x-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSaveAccount,\n          className: \"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 flex items-center space-x-2\",\n          disabled: loading,\n          children: [/*#__PURE__*/_jsxDEV(Save, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: loading ? 'Saving...' : 'Save'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1147,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancel,\n          className: \"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\",\n          disabled: loading,\n          children: [/*#__PURE__*/_jsxDEV(X, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1155,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1149,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1140,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1028,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white border border-gray-200 rounded-lg overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-4 py-3 bg-gray-50 border-b border-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-semibold text-gray-900\",\n            children: \"Account Structure\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-500\",\n            children: [filteredAccounts.length, \" accounts\", loading && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ml-2 text-blue-600\",\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1168,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-h-[600px] overflow-y-auto\",\n        children: loading && accounts.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-8 text-center text-gray-500\",\n          children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n            className: \"animate-spin mx-auto mb-2\",\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1176,\n            columnNumber: 15\n          }, this), \"Loading accounts...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1175,\n          columnNumber: 13\n        }, this) : displayAccounts.length > 0 ? searchTerm || selectedCategory !== 'all' ?\n        /*#__PURE__*/\n        // Flat view for search results\n        _jsxDEV(\"div\", {\n          children: filteredAccounts.map(account => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: renderAccountNode({\n              ...account,\n              children: []\n            })\n          }, account.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1184,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1182,\n          columnNumber: 15\n        }, this) :\n        // Hierarchical view\n        displayAccounts.map(account => renderAccountNode(account)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-8 text-center text-gray-500\",\n          children: \"No accounts found matching your criteria.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1194,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 p-4 bg-gray-50 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-sm font-semibold text-gray-700 mb-3\",\n        children: \"Account Types & Code Ranges\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-4\",\n        children: Object.entries(accountTypes).map(([key, type]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `px-2 py-1 rounded-full text-xs font-medium ${type.color}`,\n            children: type.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1207,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600 font-mono\",\n            children: type.codeRange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1210,\n            columnNumber: 15\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1206,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 p-4 bg-blue-50 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-sm font-semibold text-blue-800 mb-2\",\n        children: \"API Integration Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs text-blue-700 space-y-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u2022 Connected to: \", API_BASE_URL]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2022 Auto-refresh after CRUD operations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2022 Real-time data from Spring Boot backend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2022 Hierarchical structure maintained server-side\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1217,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 955,\n    columnNumber: 5\n  }, this);\n};\n_s(ChartOfAccounts, \"6kGTfXTuwQ6eSIdMfTJZbde9fD8=\");\n_c = ChartOfAccounts;\nexport default ChartOfAccounts;\nvar _c;\n$RefreshReg$(_c, \"ChartOfAccounts\");","map":{"version":3,"names":["React","useState","useEffect","ChevronDown","ChevronRight","Plus","Edit","Trash2","Save","X","Search","Filter","RefreshCw","jsxDEV","_jsxDEV","ChartOfAccounts","_s","accounts","setAccounts","expandedNodes","setExpandedNodes","Set","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","isAddingAccount","setIsAddingAccount","editingAccount","setEditingAccount","loading","setLoading","error","setError","formData","setFormData","code","name","type","category","parentId","description","active","API_BASE_URL","accountTypes","assets","label","color","codeRange","liabilities","equity","revenue","expenses","fetchAccounts","response","fetch","ok","Error","status","data","json","mainCategories","filter","account","level","map","id","err","message","console","createAccount","accountData","method","headers","body","JSON","stringify","errorText","text","updateAccount","accountId","deleteAccount","flattenAccounts","result","flatten","items","forEach","item","push","children","length","getFilteredAccounts","flatAccounts","filtered","toLowerCase","includes","buildHierarchy","sort","a","b","localeCompare","toggleExpand","nodeId","newExpanded","has","delete","add","handleAddAccount","parentAccount","find","accountType","handleEditAccount","undefined","handleSaveAccount","alert","success","handleDeleteAccount","hasChildren","some","window","confirm","handleCancel","renderAccountNode","isExpanded","typeConfig","className","style","paddingLeft","onClick","size","fileName","_jsxFileName","lineNumber","columnNumber","title","disabled","child","filteredAccounts","displayAccounts","placeholder","value","onChange","e","target","Object","entries","key","required","checked","htmlFor","rows","_c","$RefreshReg$"],"sources":["C:/Users/Logic-Unit/my-account/src/pages/ChartOfAccounts.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { ChevronDown, ChevronRight, Plus, Edit, Trash2, Save, X, Search, Filter } from 'lucide-react';\r\n\r\n// const ChartOfAccounts = () => {\r\n//   const [accounts, setAccounts] = useState([]);\r\n//   const [expandedNodes, setExpandedNodes] = useState(new Set());\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n//   const [selectedCategory, setSelectedCategory] = useState('all');\r\n//   const [isAddingAccount, setIsAddingAccount] = useState(false);\r\n//   const [editingAccount, setEditingAccount] = useState(null);\r\n//   const [formData, setFormData] = useState({\r\n//     code: '',\r\n//     name: '',\r\n//     type: 'assets',\r\n//     category: 'account',\r\n//     parentId: null,\r\n//     description: '',\r\n//     isActive: true\r\n//   });\r\n\r\n//   // Initialize with default account structure\r\n//   useEffect(() => {\r\n//     const defaultAccounts = [\r\n//       // Assets\r\n//       { id: '1000', code: '1000', name: 'Assets', type: 'assets', category: 'header', parentId: null, level: 0, isActive: true, description: 'All company assets' },\r\n//       { id: '1100', code: '1100', name: 'Current Assets', type: 'assets', category: 'group', parentId: '1000', level: 1, isActive: true, description: 'Assets expected to be converted to cash within one year' },\r\n//       { id: '1110', code: '1110', name: 'Cash and Cash Equivalents', type: 'assets', category: 'account', parentId: '1100', level: 2, isActive: true, description: 'Cash in hand and bank accounts' },\r\n//       { id: '1111', code: '1111', name: 'Petty Cash', type: 'assets', category: 'account', parentId: '1110', level: 3, isActive: true, description: 'Small cash amounts for daily expenses' },\r\n//       { id: '1112', code: '1112', name: 'Bank - Main Account', type: 'assets', category: 'account', parentId: '1110', level: 3, isActive: true, description: 'Primary business bank account' },\r\n//       { id: '1120', code: '1120', name: 'Accounts Receivable', type: 'assets', category: 'account', parentId: '1100', level: 2, isActive: true, description: 'Money owed by customers' },\r\n//       { id: '1130', code: '1130', name: 'Inventory', type: 'assets', category: 'account', parentId: '1100', level: 2, isActive: true, description: 'Products held for sale' },\r\n//       { id: '1200', code: '1200', name: 'Fixed Assets', type: 'assets', category: 'group', parentId: '1000', level: 1, isActive: true, description: 'Long-term assets used in business operations' },\r\n//       { id: '1210', code: '1210', name: 'Equipment', type: 'assets', category: 'account', parentId: '1200', level: 2, isActive: true, description: 'Business equipment and machinery' },\r\n//       { id: '1220', code: '1220', name: 'Accumulated Depreciation - Equipment', type: 'assets', category: 'account', parentId: '1200', level: 2, isActive: true, description: 'Accumulated depreciation on equipment' },\r\n\r\n//       // Liabilities\r\n//       { id: '2000', code: '2000', name: 'Liabilities', type: 'liabilities', category: 'header', parentId: null, level: 0, isActive: true, description: 'All company liabilities' },\r\n//       { id: '2100', code: '2100', name: 'Current Liabilities', type: 'liabilities', category: 'group', parentId: '2000', level: 1, isActive: true, description: 'Debts due within one year' },\r\n//       { id: '2110', code: '2110', name: 'Accounts Payable', type: 'liabilities', category: 'account', parentId: '2100', level: 2, isActive: true, description: 'Money owed to suppliers' },\r\n//       { id: '2120', code: '2120', name: 'Accrued Expenses', type: 'liabilities', category: 'account', parentId: '2100', level: 2, isActive: true, description: 'Expenses incurred but not yet paid' },\r\n//       { id: '2130', code: '2130', name: 'Sales Tax Payable', type: 'liabilities', category: 'account', parentId: '2100', level: 2, isActive: true, description: 'Sales tax collected from customers' },\r\n\r\n//       // Equity\r\n//       { id: '3000', code: '3000', name: 'Equity', type: 'equity', category: 'header', parentId: null, level: 0, isActive: true, description: 'Owner equity in the business' },\r\n//       { id: '3100', code: '3100', name: 'Owner Equity', type: 'equity', category: 'account', parentId: '3000', level: 1, isActive: true, description: 'Owner investment in business' },\r\n//       { id: '3200', code: '3200', name: 'Retained Earnings', type: 'equity', category: 'account', parentId: '3000', level: 1, isActive: true, description: 'Accumulated profits retained in business' },\r\n\r\n//       // Revenue\r\n//       { id: '4000', code: '4000', name: 'Revenue', type: 'revenue', category: 'header', parentId: null, level: 0, isActive: true, description: 'All company revenue' },\r\n//       { id: '4100', code: '4100', name: 'Sales Revenue', type: 'revenue', category: 'account', parentId: '4000', level: 1, isActive: true, description: 'Revenue from product sales' },\r\n//       { id: '4200', code: '4200', name: 'Service Revenue', type: 'revenue', category: 'account', parentId: '4000', level: 1, isActive: true, description: 'Revenue from services provided' },\r\n\r\n//       // Expenses\r\n//       { id: '5000', code: '5000', name: 'Expenses', type: 'expenses', category: 'header', parentId: null, level: 0, isActive: true, description: 'All company expenses' },\r\n//       { id: '5100', code: '5100', name: 'Cost of Goods Sold', type: 'expenses', category: 'account', parentId: '5000', level: 1, isActive: true, description: 'Direct costs of products sold' },\r\n//       { id: '5200', code: '5200', name: 'Operating Expenses', type: 'expenses', category: 'group', parentId: '5000', level: 1, isActive: true, description: 'Day-to-day business operating expenses' },\r\n//       { id: '5210', code: '5210', name: 'Rent Expense', type: 'expenses', category: 'account', parentId: '5200', level: 2, isActive: true, description: 'Monthly rent payments' },\r\n//       { id: '5220', code: '5220', name: 'Utilities Expense', type: 'expenses', category: 'account', parentId: '5200', level: 2, isActive: true, description: 'Electricity, water, internet costs' },\r\n//       { id: '5230', code: '5230', name: 'Salaries and Wages', type: 'expenses', category: 'account', parentId: '5200', level: 2, isActive: true, description: 'Employee compensation' },\r\n//     ];\r\n\r\n//     setAccounts(defaultAccounts);\r\n//     // Expand main categories by default\r\n//     setExpandedNodes(new Set(['1000', '2000', '3000', '4000', '5000']));\r\n//   }, []);\r\n\r\n//   const accountTypes = {\r\n//     assets: { label: 'Assets', color: 'bg-green-100 text-green-800', codeRange: '1000-1999' },\r\n//     liabilities: { label: 'Liabilities', color: 'bg-red-100 text-red-800', codeRange: '2000-2999' },\r\n//     equity: { label: 'Equity', color: 'bg-blue-100 text-blue-800', codeRange: '3000-3999' },\r\n//     revenue: { label: 'Revenue', color: 'bg-purple-100 text-purple-800', codeRange: '4000-4999' },\r\n//     expenses: { label: 'Expenses', color: 'bg-orange-100 text-orange-800', codeRange: '5000-5999' }\r\n//   };\r\n\r\n//   const getFilteredAccounts = () => {\r\n//     let filtered = accounts;\r\n\r\n//     if (searchTerm) {\r\n//       filtered = filtered.filter(account => \r\n//         account.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n//         account.code.includes(searchTerm) ||\r\n//         account.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n//       );\r\n//     }\r\n\r\n//     if (selectedCategory !== 'all') {\r\n//       filtered = filtered.filter(account => account.type === selectedCategory);\r\n//     }\r\n\r\n//     return filtered;\r\n//   };\r\n\r\n//   const buildHierarchy = (accounts, parentId = null) => {\r\n//     return accounts\r\n//       .filter(account => account.parentId === parentId)\r\n//       .sort((a, b) => a.code.localeCompare(b.code))\r\n//       .map(account => ({\r\n//         ...account,\r\n//         children: buildHierarchy(accounts, account.id)\r\n//       }));\r\n//   };\r\n\r\n//   const toggleExpand = (nodeId) => {\r\n//     const newExpanded = new Set(expandedNodes);\r\n//     if (newExpanded.has(nodeId)) {\r\n//       newExpanded.delete(nodeId);\r\n//     } else {\r\n//       newExpanded.add(nodeId);\r\n//     }\r\n//     setExpandedNodes(newExpanded);\r\n//   };\r\n\r\n//   const handleAddAccount = (parentId = null) => {\r\n//     const parentAccount = parentId ? accounts.find(a => a.id === parentId) : null;\r\n//     const accountType = parentAccount ? parentAccount.type : 'assets';\r\n    \r\n//     setFormData({\r\n//       code: generateAccountCode(accountType, parentId),\r\n//       name: '',\r\n//       type: accountType,\r\n//       category: 'account',\r\n//       parentId,\r\n//       description: '',\r\n//       isActive: true\r\n//     });\r\n//     setIsAddingAccount(true);\r\n//   };\r\n\r\n//   const handleEditAccount = (account) => {\r\n//     setFormData({\r\n//       code: account.code,\r\n//       name: account.name,\r\n//       type: account.type,\r\n//       category: account.category,\r\n//       parentId: account.parentId,\r\n//       description: account.description || '',\r\n//       isActive: account.isActive\r\n//     });\r\n//     setEditingAccount(account.id);\r\n//   };\r\n\r\n//   const generateAccountCode = (type, parentId = null) => {\r\n//     const typeRanges = {\r\n//       assets: { start: 1000, end: 1999 },\r\n//       liabilities: { start: 2000, end: 2999 },\r\n//       equity: { start: 3000, end: 3999 },\r\n//       revenue: { start: 4000, end: 4999 },\r\n//       expenses: { start: 5000, end: 5999 }\r\n//     };\r\n\r\n//     let baseCode = typeRanges[type].start;\r\n    \r\n//     if (parentId) {\r\n//       const parent = accounts.find(a => a.id === parentId);\r\n//       if (parent) {\r\n//         const siblingCodes = accounts\r\n//           .filter(a => a.parentId === parentId)\r\n//           .map(a => parseInt(a.code))\r\n//           .sort((a, b) => a - b);\r\n        \r\n//         if (siblingCodes.length > 0) {\r\n//           baseCode = Math.max(...siblingCodes) + 1;\r\n//         } else {\r\n//           baseCode = parseInt(parent.code) + 10;\r\n//         }\r\n//       }\r\n//     } else {\r\n//       const existingCodes = accounts\r\n//         .filter(a => a.type === type)\r\n//         .map(a => parseInt(a.code))\r\n//         .sort((a, b) => a - b);\r\n      \r\n//       if (existingCodes.length > 0) {\r\n//         baseCode = Math.max(...existingCodes) + 100;\r\n//       }\r\n//     }\r\n\r\n//     return baseCode.toString();\r\n//   };\r\n\r\n//   const handleSaveAccount = () => {\r\n//     if (!formData.code || !formData.name) {\r\n//       alert('Please fill in required fields (Code and Name)');\r\n//       return;\r\n//     }\r\n\r\n//     // Check for duplicate codes\r\n//     if (accounts.some(a => a.code === formData.code && a.id !== editingAccount)) {\r\n//       alert('Account code already exists');\r\n//       return;\r\n//     }\r\n\r\n//     if (editingAccount) {\r\n//       // Edit existing account\r\n//       setAccounts(accounts.map(account => \r\n//         account.id === editingAccount \r\n//           ? { ...account, ...formData }\r\n//           : account\r\n//       ));\r\n//       setEditingAccount(null);\r\n//     } else {\r\n//       // Add new account\r\n//       const newId = (Math.max(...accounts.map(a => parseInt(a.id))) + 1).toString();\r\n//       const parentLevel = formData.parentId \r\n//         ? accounts.find(a => a.id === formData.parentId)?.level || 0\r\n//         : 0;\r\n      \r\n//       const newAccount = {\r\n//         id: newId,\r\n//         ...formData,\r\n//         level: parentLevel + 1\r\n//       };\r\n      \r\n//       setAccounts([...accounts, newAccount]);\r\n//       setIsAddingAccount(false);\r\n//     }\r\n\r\n//     // Reset form\r\n//     setFormData({\r\n//       code: '',\r\n//       name: '',\r\n//       type: 'assets',\r\n//       category: 'account',\r\n//       parentId: null,\r\n//       description: '',\r\n//       isActive: true\r\n//     });\r\n//   };\r\n\r\n//   const handleDeleteAccount = (accountId) => {\r\n//     // Check if account has children\r\n//     const hasChildren = accounts.some(a => a.parentId === accountId);\r\n//     if (hasChildren) {\r\n//       alert('Cannot delete account with sub-accounts. Please delete sub-accounts first.');\r\n//       return;\r\n//     }\r\n\r\n//     if (window.confirm('Are you sure you want to delete this account?')) {\r\n//       setAccounts(accounts.filter(a => a.id !== accountId));\r\n//     }\r\n//   };\r\n\r\n//   const handleCancel = () => {\r\n//     setIsAddingAccount(false);\r\n//     setEditingAccount(null);\r\n//     setFormData({\r\n//       code: '',\r\n//       name: '',\r\n//       type: 'assets',\r\n//       category: 'account',\r\n//       parentId: null,\r\n//       description: '',\r\n//       isActive: true\r\n//     });\r\n//   };\r\n\r\n//   const renderAccountNode = (account) => {\r\n//     const hasChildren = account.children && account.children.length > 0;\r\n//     const isExpanded = expandedNodes.has(account.id);\r\n//     const typeConfig = accountTypes[account.type];\r\n\r\n//     return (\r\n//       <div key={account.id} className=\"account-node\">\r\n//         <div \r\n//           className={`flex items-center py-2 px-4 hover:bg-gray-50 border-l-4 ${\r\n//             account.category === 'header' ? 'border-gray-400 bg-gray-100 font-bold' :\r\n//             account.category === 'group' ? 'border-gray-300 bg-gray-50 font-semibold' :\r\n//             'border-transparent'\r\n//           }`}\r\n//           style={{ paddingLeft: `${account.level * 20 + 16}px` }}\r\n//         >\r\n//           {hasChildren && (\r\n//             <button\r\n//               onClick={() => toggleExpand(account.id)}\r\n//               className=\"mr-2 p-1 hover:bg-gray-200 rounded\"\r\n//             >\r\n//               {isExpanded ? <ChevronDown size={16} /> : <ChevronRight size={16} />}\r\n//             </button>\r\n//           )}\r\n          \r\n//           <div className=\"flex-1 flex items-center space-x-4\">\r\n//             <span className=\"font-mono text-sm text-gray-600 min-w-[80px]\">\r\n//               {account.code}\r\n//             </span>\r\n            \r\n//             <span className={`flex-1 ${account.category === 'header' ? 'text-lg' : ''}`}>\r\n//               {account.name}\r\n//             </span>\r\n            \r\n//             <span className={`px-2 py-1 rounded-full text-xs font-medium ${typeConfig.color}`}>\r\n//               {typeConfig.label}\r\n//             </span>\r\n            \r\n//             {account.category !== 'header' && (\r\n//               <div className=\"flex space-x-1\">\r\n//                 <button\r\n//                   onClick={() => handleEditAccount(account)}\r\n//                   className=\"p-1 hover:bg-blue-100 rounded text-blue-600\"\r\n//                   title=\"Edit Account\"\r\n//                 >\r\n//                   <Edit size={14} />\r\n//                 </button>\r\n//                 <button\r\n//                   onClick={() => handleDeleteAccount(account.id)}\r\n//                   className=\"p-1 hover:bg-red-100 rounded text-red-600\"\r\n//                   disabled={account.category === 'header'}\r\n//                   title=\"Delete Account\"\r\n//                 >\r\n//                   <Trash2 size={14} />\r\n//                 </button>\r\n//                 <button\r\n//                   onClick={() => handleAddAccount(account.id)}\r\n//                   className=\"p-1 hover:bg-green-100 rounded text-green-600\"\r\n//                   title=\"Add Sub-Account\"\r\n//                 >\r\n//                   <Plus size={14} />\r\n//                 </button>\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n        \r\n//         {account.description && (\r\n//           <div className=\"px-4 py-1 text-sm text-gray-500\" style={{ paddingLeft: `${account.level * 20 + 36}px` }}>\r\n//             {account.description}\r\n//           </div>\r\n//         )}\r\n\r\n//         {isExpanded && hasChildren && (\r\n//           <div>\r\n//             {account.children.map(child => renderAccountNode(child))}\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     );\r\n//   };\r\n\r\n//   const filteredAccounts = getFilteredAccounts();\r\n//   const hierarchicalAccounts = buildHierarchy(filteredAccounts);\r\n\r\n//   return (\r\n//     <div className=\"max-w-7xl mx-auto p-6 bg-white\">\r\n//       <div className=\"mb-6\">\r\n//         <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Chart of Accounts</h1>\r\n//         <p className=\"text-gray-600\">Manage your company's account structure and hierarchy</p>\r\n//       </div>\r\n\r\n//       {/* Controls */}\r\n//       <div className=\"mb-6 flex flex-wrap items-center justify-between gap-4\">\r\n//         <div className=\"flex items-center space-x-4\">\r\n//           <div className=\"relative\">\r\n//             <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={20} />\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Search accounts...\"\r\n//               value={searchTerm}\r\n//               onChange={(e) => setSearchTerm(e.target.value)}\r\n//               className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n//             />\r\n//           </div>\r\n          \r\n//           <div className=\"relative\">\r\n//             <Filter className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={20} />\r\n//             <select\r\n//               value={selectedCategory}\r\n//               onChange={(e) => setSelectedCategory(e.target.value)}\r\n//               className=\"pl-10 pr-8 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n//             >\r\n//               <option value=\"all\">All Types</option>\r\n//               {Object.entries(accountTypes).map(([key, type]) => (\r\n//                 <option key={key} value={key}>{type.label}</option>\r\n//               ))}\r\n//             </select>\r\n//           </div>\r\n//         </div>\r\n\r\n//         <button\r\n//           onClick={() => handleAddAccount()}\r\n//           className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\"\r\n//         >\r\n//           <Plus size={20} />\r\n//           <span>Add Account</span>\r\n//         </button>\r\n//       </div>\r\n\r\n//       {/* Account Form */}\r\n//       {(isAddingAccount || editingAccount) && (\r\n//         <div className=\"mb-6 p-6 bg-gray-50 rounded-lg border\">\r\n//           <h3 className=\"text-lg font-semibold mb-4\">\r\n//             {editingAccount ? 'Edit Account' : 'Add New Account'}\r\n//           </h3>\r\n          \r\n//           <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n//             <div>\r\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n//                 Account Code *\r\n//               </label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 value={formData.code}\r\n//                 onChange={(e) => setFormData({...formData, code: e.target.value})}\r\n//                 placeholder=\"Enter account code\"\r\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n//               />\r\n//             </div>\r\n            \r\n//             <div>\r\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n//                 Account Name *\r\n//               </label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 value={formData.name}\r\n//                 onChange={(e) => setFormData({...formData, name: e.target.value})}\r\n//                 placeholder=\"Enter account name\"\r\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n//               />\r\n//             </div>\r\n            \r\n//             <div>\r\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n//                 Account Type\r\n//               </label>\r\n//               <select\r\n//                 value={formData.type}\r\n//                 onChange={(e) => setFormData({...formData, type: e.target.value})}\r\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n//               >\r\n//                 {Object.entries(accountTypes).map(([key, type]) => (\r\n//                   <option key={key} value={key}>{type.label} ({type.codeRange})</option>\r\n//                 ))}\r\n//               </select>\r\n//             </div>\r\n            \r\n//             <div>\r\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n//                 Category\r\n//               </label>\r\n//               <select\r\n//                 value={formData.category}\r\n//                 onChange={(e) => setFormData({...formData, category: e.target.value})}\r\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n//               >\r\n//                 <option value=\"header\">Header</option>\r\n//                 <option value=\"group\">Group</option>\r\n//                 <option value=\"account\">Account</option>\r\n//               </select>\r\n//             </div>\r\n            \r\n//             <div>\r\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n//                 Parent Account\r\n//               </label>\r\n//               <select\r\n//                 value={formData.parentId || ''}\r\n//                 onChange={(e) => setFormData({...formData, parentId: e.target.value || null})}\r\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n//               >\r\n//                 <option value=\"\">None (Top Level)</option>\r\n//                 {accounts\r\n//                   .filter(a => a.id !== editingAccount && a.category !== 'account')\r\n//                   .map(account => (\r\n//                     <option key={account.id} value={account.id}>\r\n//                       {account.code} - {account.name}\r\n//                     </option>\r\n//                   ))\r\n//                 }\r\n//               </select>\r\n//             </div>\r\n            \r\n//             <div className=\"flex items-center\">\r\n//               <input\r\n//                 type=\"checkbox\"\r\n//                 id=\"isActive\"\r\n//                 checked={formData.isActive}\r\n//                 onChange={(e) => setFormData({...formData, isActive: e.target.checked})}\r\n//                 className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\r\n//               />\r\n//               <label htmlFor=\"isActive\" className=\"ml-2 block text-sm text-gray-900\">\r\n//                 Active\r\n//               </label>\r\n//             </div>\r\n            \r\n//             <div className=\"md:col-span-2 lg:col-span-3\">\r\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n//                 Description\r\n//               </label>\r\n//               <textarea\r\n//                 value={formData.description}\r\n//                 onChange={(e) => setFormData({...formData, description: e.target.value})}\r\n//                 rows={2}\r\n//                 placeholder=\"Enter account description\"\r\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n//               />\r\n//             </div>\r\n//           </div>\r\n          \r\n//           <div className=\"mt-4 flex space-x-3\">\r\n//             <button\r\n//               onClick={handleSaveAccount}\r\n//               className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 flex items-center space-x-2\"\r\n//             >\r\n//               <Save size={16} />\r\n//               <span>Save</span>\r\n//             </button>\r\n//             <button\r\n//               onClick={handleCancel}\r\n//               className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\"\r\n//             >\r\n//               <X size={16} />\r\n//               <span>Cancel</span>\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Accounts Tree */}\r\n//       <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//         <div className=\"px-4 py-3 bg-gray-50 border-b border-gray-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <h2 className=\"text-lg font-semibold text-gray-900\">Account Structure</h2>\r\n//             <span className=\"text-sm text-gray-500\">\r\n//               {filteredAccounts.length} accounts\r\n//             </span>\r\n//           </div>\r\n//         </div>\r\n        \r\n//         <div className=\"max-h-[600px] overflow-y-auto\">\r\n//           {hierarchicalAccounts.length > 0 ? (\r\n//             hierarchicalAccounts.map(account => renderAccountNode(account))\r\n//           ) : (\r\n//             <div className=\"p-8 text-center text-gray-500\">\r\n//               No accounts found matching your criteria.\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Account Type Legend */}\r\n//       <div className=\"mt-6 p-4 bg-gray-50 rounded-lg\">\r\n//         <h3 className=\"text-sm font-semibold text-gray-700 mb-3\">Account Types & Code Ranges</h3>\r\n//         <div className=\"flex flex-wrap gap-4\">\r\n//           {Object.entries(accountTypes).map(([key, type]) => (\r\n//             <div key={key} className=\"flex items-center space-x-2\">\r\n//               <span className={`px-2 py-1 rounded-full text-xs font-medium ${type.color}`}>\r\n//                 {type.label}\r\n//               </span>\r\n//               <span className=\"text-sm text-gray-600 font-mono\">{type.codeRange}</span>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Quick Actions Info */}\r\n//       <div className=\"mt-6 p-4 bg-blue-50 rounded-lg\">\r\n//         <h3 className=\"text-sm font-semibold text-blue-800 mb-2\">Quick Actions Guide</h3>\r\n//         <div className=\"text-xs text-blue-700 space-y-1\">\r\n//           <p>• Click the expand/collapse arrow to show/hide sub-accounts</p>\r\n//           <p>• Use the Edit button to modify account details</p>\r\n//           <p>• Use the Plus button to add a sub-account under any account</p>\r\n//           <p>• Delete accounts that have no sub-accounts or transactions</p>\r\n//           <p>• Search by account code, name, or description</p>\r\n//           <p>• Filter by account type to focus on specific categories</p>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ChartOfAccounts;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { ChevronDown, ChevronRight, Plus, Edit, Trash2, Save, X, Search, Filter, RefreshCw } from 'lucide-react';\r\n\r\nconst ChartOfAccounts = () => {\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [expandedNodes, setExpandedNodes] = useState(new Set());\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedCategory, setSelectedCategory] = useState('all');\r\n  const [isAddingAccount, setIsAddingAccount] = useState(false);\r\n  const [editingAccount, setEditingAccount] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [formData, setFormData] = useState({\r\n    code: '',\r\n    name: '',\r\n    type: 'assets',\r\n    category: 'account',\r\n    parentId: null,\r\n    description: '',\r\n    active: true\r\n  });\r\n\r\n  // API Base URL\r\n  const API_BASE_URL = 'http://localhost:8080/api/accounts';\r\n\r\n  // Account types configuration\r\n  const accountTypes = {\r\n    assets: { label: 'Assets', color: 'bg-green-100 text-green-800', codeRange: '1000-1999' },\r\n    liabilities: { label: 'Liabilities', color: 'bg-red-100 text-red-800', codeRange: '2000-2999' },\r\n    equity: { label: 'Equity', color: 'bg-blue-100 text-blue-800', codeRange: '3000-3999' },\r\n    revenue: { label: 'Revenue', color: 'bg-purple-100 text-purple-800', codeRange: '4000-4999' },\r\n    expenses: { label: 'Expenses', color: 'bg-orange-100 text-orange-800', codeRange: '5000-5999' }\r\n  };\r\n\r\n  // Fetch accounts from API\r\n  const fetchAccounts = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const response = await fetch(API_BASE_URL);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setAccounts(data);\r\n      \r\n      // Expand main categories by default\r\n      const mainCategories = data\r\n        .filter(account => account.level === 0)\r\n        .map(account => account.id);\r\n      setExpandedNodes(new Set(mainCategories));\r\n      \r\n    } catch (err) {\r\n      setError('Failed to fetch accounts: ' + err.message);\r\n      console.error('Error fetching accounts:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Initialize component\r\n  useEffect(() => {\r\n    fetchAccounts();\r\n  }, []);\r\n\r\n  // Create account\r\n  const createAccount = async (accountData) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch(API_BASE_URL, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(accountData)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(errorText || `HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      await fetchAccounts(); // Refresh the list\r\n      return true;\r\n    } catch (err) {\r\n      setError('Failed to create account: ' + err.message);\r\n      console.error('Error creating account:', err);\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Update account\r\n  const updateAccount = async (accountId, accountData) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch(`${API_BASE_URL}/${accountId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(accountData)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(errorText || `HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      await fetchAccounts(); // Refresh the list\r\n      return true;\r\n    } catch (err) {\r\n      setError('Failed to update account: ' + err.message);\r\n      console.error('Error updating account:', err);\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Delete account\r\n  const deleteAccount = async (accountId) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch(`${API_BASE_URL}/${accountId}`, {\r\n        method: 'DELETE'\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(errorText || `HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      await fetchAccounts(); // Refresh the list\r\n      return true;\r\n    } catch (err) {\r\n      setError('Failed to delete account: ' + err.message);\r\n      console.error('Error deleting account:', err);\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Helper function to flatten hierarchy for filtering\r\n  const flattenAccounts = (accounts) => {\r\n    const result = [];\r\n    const flatten = (items) => {\r\n      items.forEach(item => {\r\n        result.push(item);\r\n        if (item.children && item.children.length > 0) {\r\n          flatten(item.children);\r\n        }\r\n      });\r\n    };\r\n    flatten(accounts);\r\n    return result;\r\n  };\r\n\r\n  // Filter accounts based on search and category\r\n  const getFilteredAccounts = () => {\r\n    const flatAccounts = flattenAccounts(accounts);\r\n    let filtered = flatAccounts;\r\n\r\n    if (searchTerm) {\r\n      filtered = filtered.filter(account => \r\n        account.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        account.code.includes(searchTerm) ||\r\n        (account.description && account.description.toLowerCase().includes(searchTerm.toLowerCase()))\r\n      );\r\n    }\r\n\r\n    if (selectedCategory !== 'all') {\r\n      filtered = filtered.filter(account => account.type === selectedCategory);\r\n    }\r\n\r\n    return filtered;\r\n  };\r\n\r\n  // Build hierarchy from flat accounts (for display when not searching)\r\n  const buildHierarchy = (accounts, parentId = null) => {\r\n    return accounts\r\n      .filter(account => account.parentId === parentId)\r\n      .sort((a, b) => a.code.localeCompare(b.code))\r\n      .map(account => ({\r\n        ...account,\r\n        children: buildHierarchy(accounts, account.id)\r\n      }));\r\n  };\r\n\r\n  // Toggle expand/collapse\r\n  const toggleExpand = (nodeId) => {\r\n    const newExpanded = new Set(expandedNodes);\r\n    if (newExpanded.has(nodeId)) {\r\n      newExpanded.delete(nodeId);\r\n    } else {\r\n      newExpanded.add(nodeId);\r\n    }\r\n    setExpandedNodes(newExpanded);\r\n  };\r\n\r\n  // Handle add account\r\n  const handleAddAccount = (parentId = null) => {\r\n    const flatAccounts = flattenAccounts(accounts);\r\n    const parentAccount = parentId ? flatAccounts.find(a => a.id === parentId) : null;\r\n    const accountType = parentAccount ? parentAccount.type : 'assets';\r\n    \r\n    setFormData({\r\n      code: '', // Will be generated by backend\r\n      name: '',\r\n      type: accountType,\r\n      category: 'account',\r\n      parentId,\r\n      description: '',\r\n      active: true\r\n    });\r\n    setIsAddingAccount(true);\r\n  };\r\n\r\n  // Handle edit account\r\n  const handleEditAccount = (account) => {\r\n    setFormData({\r\n      code: account.code,\r\n      name: account.name,\r\n      type: account.type,\r\n      category: account.category,\r\n      parentId: account.parentId,\r\n      description: account.description || '',\r\n      active: account.active !== undefined ? account.active : true\r\n    });\r\n    setEditingAccount(account.id);\r\n  };\r\n\r\n  // Handle save account\r\n  const handleSaveAccount = async () => {\r\n    if (!formData.name) {\r\n      alert('Please fill in the account name');\r\n      return;\r\n    }\r\n\r\n    const success = editingAccount \r\n      ? await updateAccount(editingAccount, formData)\r\n      : await createAccount(formData);\r\n\r\n    if (success) {\r\n      // Reset form\r\n      setFormData({\r\n        code: '',\r\n        name: '',\r\n        type: 'assets',\r\n        category: 'account',\r\n        parentId: null,\r\n        description: '',\r\n        active: true\r\n      });\r\n      setIsAddingAccount(false);\r\n      setEditingAccount(null);\r\n    }\r\n  };\r\n\r\n  // Handle delete account\r\n  const handleDeleteAccount = async (accountId) => {\r\n    const flatAccounts = flattenAccounts(accounts);\r\n    const hasChildren = flatAccounts.some(a => a.parentId === accountId);\r\n    \r\n    if (hasChildren) {\r\n      alert('Cannot delete account with sub-accounts. Please delete sub-accounts first.');\r\n      return;\r\n    }\r\n\r\n    if (window.confirm('Are you sure you want to delete this account?')) {\r\n      await deleteAccount(accountId);\r\n    }\r\n  };\r\n\r\n  // Handle cancel\r\n  const handleCancel = () => {\r\n    setIsAddingAccount(false);\r\n    setEditingAccount(null);\r\n    setFormData({\r\n      code: '',\r\n      name: '',\r\n      type: 'assets',\r\n      category: 'account',\r\n      parentId: null,\r\n      description: '',\r\n      active: true\r\n    });\r\n  };\r\n\r\n  // Render account node\r\n  const renderAccountNode = (account) => {\r\n    const hasChildren = account.children && account.children.length > 0;\r\n    const isExpanded = expandedNodes.has(account.id);\r\n    const typeConfig = accountTypes[account.type];\r\n\r\n    return (\r\n      <div key={account.id} className=\"account-node\">\r\n        <div \r\n          className={`flex items-center py-2 px-4 hover:bg-gray-50 border-l-4 ${\r\n            account.category === 'header' ? 'border-gray-400 bg-gray-100 font-bold' :\r\n            account.category === 'group' ? 'border-gray-300 bg-gray-50 font-semibold' :\r\n            'border-transparent'\r\n          }`}\r\n          style={{ paddingLeft: `${account.level * 20 + 16}px` }}\r\n        >\r\n          {hasChildren && (\r\n            <button\r\n              onClick={() => toggleExpand(account.id)}\r\n              className=\"mr-2 p-1 hover:bg-gray-200 rounded\"\r\n            >\r\n              {isExpanded ? <ChevronDown size={16} /> : <ChevronRight size={16} />}\r\n            </button>\r\n          )}\r\n          \r\n          <div className=\"flex-1 flex items-center space-x-4\">\r\n            <span className=\"font-mono text-sm text-gray-600 min-w-[80px]\">\r\n              {account.code}\r\n            </span>\r\n            \r\n            <span className={`flex-1 ${account.category === 'header' ? 'text-lg' : ''}`}>\r\n              {account.name}\r\n              {!account.active && <span className=\"ml-2 text-red-500 text-xs\">(Inactive)</span>}\r\n            </span>\r\n            \r\n            <span className={`px-2 py-1 rounded-full text-xs font-medium ${typeConfig.color}`}>\r\n              {typeConfig.label}\r\n            </span>\r\n            \r\n            <div className=\"flex space-x-1\">\r\n              <button\r\n                onClick={() => handleEditAccount(account)}\r\n                className=\"p-1 hover:bg-blue-100 rounded text-blue-600\"\r\n                title=\"Edit Account\"\r\n                disabled={loading}\r\n              >\r\n                <Edit size={14} />\r\n              </button>\r\n              <button\r\n                onClick={() => handleDeleteAccount(account.id)}\r\n                className=\"p-1 hover:bg-red-100 rounded text-red-600\"\r\n                title=\"Delete Account\"\r\n                disabled={loading}\r\n              >\r\n                <Trash2 size={14} />\r\n              </button>\r\n              <button\r\n                onClick={() => handleAddAccount(account.id)}\r\n                className=\"p-1 hover:bg-green-100 rounded text-green-600\"\r\n                title=\"Add Sub-Account\"\r\n                disabled={loading}\r\n              >\r\n                <Plus size={14} />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        {account.description && (\r\n          <div className=\"px-4 py-1 text-sm text-gray-500\" style={{ paddingLeft: `${account.level * 20 + 36}px` }}>\r\n            {account.description}\r\n          </div>\r\n        )}\r\n\r\n        {isExpanded && hasChildren && (\r\n          <div>\r\n            {account.children.map(child => renderAccountNode(child))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const flatAccounts = flattenAccounts(accounts);\r\n  const filteredAccounts = getFilteredAccounts();\r\n  const displayAccounts = searchTerm || selectedCategory !== 'all' \r\n    ? filteredAccounts \r\n    : buildHierarchy(flatAccounts);\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto p-6 bg-white\">\r\n      <div className=\"mb-6\">\r\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Chart of Accounts</h1>\r\n        <p className=\"text-gray-600\">Manage your company's account structure and hierarchy</p>\r\n      </div>\r\n\r\n      {/* Error Message */}\r\n      {error && (\r\n        <div className=\"mb-4 p-4 bg-red-50 border border-red-200 rounded-lg\">\r\n          <div className=\"flex\">\r\n            <div className=\"flex-1\">\r\n              <p className=\"text-red-700\">{error}</p>\r\n            </div>\r\n            <button\r\n              onClick={() => setError(null)}\r\n              className=\"text-red-400 hover:text-red-600\"\r\n            >\r\n              <X size={16} />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Controls */}\r\n      <div className=\"mb-6 flex flex-wrap items-center justify-between gap-4\">\r\n        <div className=\"flex items-center space-x-4\">\r\n          <div className=\"relative\">\r\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={20} />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search accounts...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"relative\">\r\n            <Filter className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={20} />\r\n            <select\r\n              value={selectedCategory}\r\n              onChange={(e) => setSelectedCategory(e.target.value)}\r\n              className=\"pl-10 pr-8 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            >\r\n              <option value=\"all\">All Types</option>\r\n              {Object.entries(accountTypes).map(([key, type]) => (\r\n                <option key={key} value={key}>{type.label}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <button\r\n            onClick={fetchAccounts}\r\n            className=\"px-3 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 flex items-center space-x-2\"\r\n            disabled={loading}\r\n          >\r\n            <RefreshCw size={16} className={loading ? 'animate-spin' : ''} />\r\n            <span>Refresh</span>\r\n          </button>\r\n        </div>\r\n\r\n        <button\r\n          onClick={() => handleAddAccount()}\r\n          className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\"\r\n          disabled={loading}\r\n        >\r\n          <Plus size={20} />\r\n          <span>Add Account</span>\r\n        </button>\r\n      </div>\r\n\r\n      {/* Account Form */}\r\n      {(isAddingAccount || editingAccount) && (\r\n        <div className=\"mb-6 p-6 bg-gray-50 rounded-lg border\">\r\n          <h3 className=\"text-lg font-semibold mb-4\">\r\n            {editingAccount ? 'Edit Account' : 'Add New Account'}\r\n          </h3>\r\n          \r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Account Code\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={formData.code}\r\n                onChange={(e) => setFormData({...formData, code: e.target.value})}\r\n                placeholder=\"Auto-generated if empty\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              />\r\n              <p className=\"text-xs text-gray-500 mt-1\">Leave empty for auto-generation</p>\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Account Name *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={formData.name}\r\n                onChange={(e) => setFormData({...formData, name: e.target.value})}\r\n                placeholder=\"Enter account name\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Account Type\r\n              </label>\r\n              <select\r\n                value={formData.type}\r\n                onChange={(e) => setFormData({...formData, type: e.target.value})}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              >\r\n                {Object.entries(accountTypes).map(([key, type]) => (\r\n                  <option key={key} value={key}>{type.label} ({type.codeRange})</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Category\r\n              </label>\r\n              <select\r\n                value={formData.category}\r\n                onChange={(e) => setFormData({...formData, category: e.target.value})}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              >\r\n                <option value=\"header\">Header</option>\r\n                <option value=\"group\">Group</option>\r\n                <option value=\"account\">Account</option>\r\n              </select>\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Parent Account\r\n              </label>\r\n              <select\r\n                value={formData.parentId || ''}\r\n                onChange={(e) => setFormData({...formData, parentId: e.target.value || null})}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              >\r\n                <option value=\"\">None (Top Level)</option>\r\n                {flatAccounts\r\n                  .filter(a => a.id !== editingAccount && a.category !== 'account')\r\n                  .map(account => (\r\n                    <option key={account.id} value={account.id}>\r\n                      {account.code} - {account.name}\r\n                    </option>\r\n                  ))\r\n                }\r\n              </select>\r\n            </div>\r\n            \r\n            <div className=\"flex items-center\">\r\n              <input\r\n                type=\"checkbox\"\r\n                id=\"active\"\r\n                checked={formData.active}\r\n                onChange={(e) => setFormData({...formData, active: e.target.checked})}\r\n                className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\r\n              />\r\n              <label htmlFor=\"active\" className=\"ml-2 block text-sm text-gray-900\">\r\n                Active\r\n              </label>\r\n            </div>\r\n            \r\n            <div className=\"md:col-span-2 lg:col-span-3\">\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Description\r\n              </label>\r\n              <textarea\r\n                value={formData.description}\r\n                onChange={(e) => setFormData({...formData, description: e.target.value})}\r\n                rows={2}\r\n                placeholder=\"Enter account description\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              />\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"mt-4 flex space-x-3\">\r\n            <button\r\n              onClick={handleSaveAccount}\r\n              className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 flex items-center space-x-2\"\r\n              disabled={loading}\r\n            >\r\n              <Save size={16} />\r\n              <span>{loading ? 'Saving...' : 'Save'}</span>\r\n            </button>\r\n            <button\r\n              onClick={handleCancel}\r\n              className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\"\r\n              disabled={loading}\r\n            >\r\n              <X size={16} />\r\n              <span>Cancel</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Accounts Tree */}\r\n      <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n        <div className=\"px-4 py-3 bg-gray-50 border-b border-gray-200\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <h2 className=\"text-lg font-semibold text-gray-900\">Account Structure</h2>\r\n            <span className=\"text-sm text-gray-500\">\r\n              {filteredAccounts.length} accounts\r\n              {loading && <span className=\"ml-2 text-blue-600\">Loading...</span>}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"max-h-[600px] overflow-y-auto\">\r\n          {loading && accounts.length === 0 ? (\r\n            <div className=\"p-8 text-center text-gray-500\">\r\n              <RefreshCw className=\"animate-spin mx-auto mb-2\" size={24} />\r\n              Loading accounts...\r\n            </div>\r\n          ) : displayAccounts.length > 0 ? (\r\n            searchTerm || selectedCategory !== 'all' ? (\r\n              // Flat view for search results\r\n              <div>\r\n                {filteredAccounts.map(account => (\r\n                  <div key={account.id}>\r\n                    {renderAccountNode({...account, children: []})}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              // Hierarchical view\r\n              displayAccounts.map(account => renderAccountNode(account))\r\n            )\r\n          ) : (\r\n            <div className=\"p-8 text-center text-gray-500\">\r\n              No accounts found matching your criteria.\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Account Type Legend */}\r\n      <div className=\"mt-6 p-4 bg-gray-50 rounded-lg\">\r\n        <h3 className=\"text-sm font-semibold text-gray-700 mb-3\">Account Types & Code Ranges</h3>\r\n        <div className=\"flex flex-wrap gap-4\">\r\n          {Object.entries(accountTypes).map(([key, type]) => (\r\n            <div key={key} className=\"flex items-center space-x-2\">\r\n              <span className={`px-2 py-1 rounded-full text-xs font-medium ${type.color}`}>\r\n                {type.label}\r\n              </span>\r\n              <span className=\"text-sm text-gray-600 font-mono\">{type.codeRange}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* API Integration Info */}\r\n      <div className=\"mt-6 p-4 bg-blue-50 rounded-lg\">\r\n        <h3 className=\"text-sm font-semibold text-blue-800 mb-2\">API Integration Status</h3>\r\n        <div className=\"text-xs text-blue-700 space-y-1\">\r\n          <p>• Connected to: {API_BASE_URL}</p>\r\n          <p>• Auto-refresh after CRUD operations</p>\r\n          <p>• Real-time data from Spring Boot backend</p>\r\n          <p>• Hierarchical structure maintained server-side</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartOfAccounts;"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}