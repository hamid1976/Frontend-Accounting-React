{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Logic-Unit\\\\my-account\\\\src\\\\pages\\\\GeneralLedger.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Book } from 'lucide-react';\nimport { useGeneralLedgerData } from '../GeneralLedgerHook/useGeneralLedgerData';\nimport { useJournalEntries } from '../GeneralLedgerHook/useJournalEntries';\nimport { useTrialBalance } from '../GeneralLedgerHook/useTrialBalance';\nimport GLHeader from '../components/GeneralLedger/GLHeader';\nimport GLStats from '../components/GeneralLedger/GLStats';\nimport GLControls from '../components/GeneralLedger/GLControls';\nimport GLJournalEntryForm from '../components/GeneralLedger/GLJournalEntryForm';\nimport GLJournalEntriesTable from '../components/GeneralLedger/GLJournalEntriesTable';\nimport GLIntegrationStatus from '../components/GeneralLedger/GLIntegrationStatus';\nimport JournalEntryDetailModal from '../modals/JournalEntryDetailModal';\nimport TrialBalanceModal from '../modals/TrialBalanceModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GeneralLedger = () => {\n  _s();\n  // State management\n  const [selectedEntry, setSelectedEntry] = useState(null);\n  const [isAddingEntry, setIsAddingEntry] = useState(false);\n  const [showTrialBalance, setShowTrialBalance] = useState(false);\n  const [filters, setFilters] = useState({\n    dateFrom: '',\n    dateTo: '',\n    accountId: '',\n    transactionType: 'all',\n    searchTerm: ''\n  });\n\n  // Custom hooks for data management\n  const {\n    accounts,\n    loading: accountsLoading,\n    error: accountsError,\n    loadChartsOfAccounts\n  } = useGeneralLedgerData();\n  const {\n    journalEntries,\n    filteredEntries,\n    newEntry,\n    setNewEntry,\n    loading: entriesLoading,\n    errors,\n    loadJournalEntriesFromAPI,\n    filterEntries,\n    saveJournalEntry,\n    getAccountName\n  } = useJournalEntries(accounts);\n  const {\n    trialBalance,\n    generateTrialBalance\n  } = useTrialBalance(accounts, journalEntries);\n\n  // Load accounts on mount\n  useEffect(() => {\n    loadChartsOfAccounts();\n  }, [loadChartsOfAccounts]);\n\n  // Load journal entries when accounts are loaded\n  useEffect(() => {\n    if (accounts.length > 0) {\n      loadJournalEntriesFromAPI();\n    }\n  }, [accounts, loadJournalEntriesFromAPI]);\n\n  // Filter entries when filters or journal entries change\n  useEffect(() => {\n    if (journalEntries.length > 0) {\n      filterEntries(filters);\n    }\n  }, [journalEntries, filters, filterEntries]);\n\n  // Event handlers\n  const handleRefresh = () => {\n    loadJournalEntriesFromAPI();\n  };\n  const handleRefreshAccounts = () => {\n    loadChartsOfAccounts();\n  };\n  const handleClearFilters = () => {\n    setFilters({\n      dateFrom: '',\n      dateTo: '',\n      accountId: '',\n      transactionType: 'all',\n      searchTerm: ''\n    });\n  };\n  const handleSaveEntry = () => {\n    const success = saveJournalEntry(newEntry);\n    if (success) {\n      setIsAddingEntry(false);\n    }\n  };\n  const handleGenerateTrialBalance = () => {\n    generateTrialBalance();\n    setShowTrialBalance(true);\n  };\n  const loading = {\n    accounts: accountsLoading,\n    entries: entriesLoading,\n    purchase: false // This can be managed separately if needed\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-7xl mx-auto p-6 bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(GLHeader, {\n      loading: loading,\n      errors: {\n        accounts: accountsError,\n        ...errors\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GLStats, {\n      journalEntries: journalEntries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GLControls, {\n      filters: filters,\n      setFilters: setFilters,\n      accounts: accounts,\n      loading: loading,\n      onRefresh: handleRefresh,\n      onRefreshAccounts: handleRefreshAccounts,\n      onClearFilters: handleClearFilters,\n      onAddEntry: () => setIsAddingEntry(true),\n      onGenerateTrialBalance: handleGenerateTrialBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), isAddingEntry && /*#__PURE__*/_jsxDEV(GLJournalEntryForm, {\n      newEntry: newEntry,\n      setNewEntry: setNewEntry,\n      accounts: accounts,\n      onSave: handleSaveEntry,\n      onCancel: () => setIsAddingEntry(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(GLJournalEntriesTable, {\n      entries: filteredEntries,\n      totalEntries: journalEntries.length,\n      onViewEntry: setSelectedEntry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), selectedEntry && /*#__PURE__*/_jsxDEV(JournalEntryDetailModal, {\n      entry: selectedEntry,\n      onClose: () => setSelectedEntry(null),\n      getAccountName: getAccountName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this), showTrialBalance && /*#__PURE__*/_jsxDEV(TrialBalanceModal, {\n      trialBalance: trialBalance,\n      filters: filters,\n      setFilters: setFilters,\n      onClose: () => setShowTrialBalance(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(GLIntegrationStatus, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(GeneralLedger, \"jo2dKUnuFy1kMw2eye8n39iHOnc=\", false, function () {\n  return [useGeneralLedgerData, useJournalEntries, useTrialBalance];\n});\n_c = GeneralLedger;\nexport default GeneralLedger;\nvar _c;\n$RefreshReg$(_c, \"GeneralLedger\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Book","useGeneralLedgerData","useJournalEntries","useTrialBalance","GLHeader","GLStats","GLControls","GLJournalEntryForm","GLJournalEntriesTable","GLIntegrationStatus","JournalEntryDetailModal","TrialBalanceModal","jsxDEV","_jsxDEV","GeneralLedger","_s","selectedEntry","setSelectedEntry","isAddingEntry","setIsAddingEntry","showTrialBalance","setShowTrialBalance","filters","setFilters","dateFrom","dateTo","accountId","transactionType","searchTerm","accounts","loading","accountsLoading","error","accountsError","loadChartsOfAccounts","journalEntries","filteredEntries","newEntry","setNewEntry","entriesLoading","errors","loadJournalEntriesFromAPI","filterEntries","saveJournalEntry","getAccountName","trialBalance","generateTrialBalance","length","handleRefresh","handleRefreshAccounts","handleClearFilters","handleSaveEntry","success","handleGenerateTrialBalance","entries","purchase","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onRefresh","onRefreshAccounts","onClearFilters","onAddEntry","onGenerateTrialBalance","onSave","onCancel","totalEntries","onViewEntry","entry","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Logic-Unit/my-account/src/pages/GeneralLedger.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Book } from 'lucide-react';\r\nimport { useGeneralLedgerData } from '../GeneralLedgerHook/useGeneralLedgerData';\r\nimport { useJournalEntries } from '../GeneralLedgerHook/useJournalEntries';\r\nimport { useTrialBalance } from '../GeneralLedgerHook/useTrialBalance';\r\nimport GLHeader from '../components/GeneralLedger/GLHeader';\r\nimport GLStats from '../components/GeneralLedger/GLStats';\r\nimport GLControls from '../components/GeneralLedger/GLControls';\r\nimport GLJournalEntryForm from '../components/GeneralLedger/GLJournalEntryForm';\r\nimport GLJournalEntriesTable from '../components/GeneralLedger/GLJournalEntriesTable';\r\nimport GLIntegrationStatus from '../components/GeneralLedger/GLIntegrationStatus';\r\nimport JournalEntryDetailModal from '../modals/JournalEntryDetailModal';\r\nimport TrialBalanceModal from '../modals/TrialBalanceModal';\r\n\r\nconst GeneralLedger = () => {\r\n  // State management\r\n  const [selectedEntry, setSelectedEntry] = useState(null);\r\n  const [isAddingEntry, setIsAddingEntry] = useState(false);\r\n  const [showTrialBalance, setShowTrialBalance] = useState(false);\r\n  const [filters, setFilters] = useState({\r\n    dateFrom: '',\r\n    dateTo: '',\r\n    accountId: '',\r\n    transactionType: 'all',\r\n    searchTerm: ''\r\n  });\r\n\r\n  // Custom hooks for data management\r\n  const {\r\n    accounts,\r\n    loading: accountsLoading,\r\n    error: accountsError,\r\n    loadChartsOfAccounts\r\n  } = useGeneralLedgerData();\r\n\r\n  const {\r\n    journalEntries,\r\n    filteredEntries,\r\n    newEntry,\r\n    setNewEntry,\r\n    loading: entriesLoading,\r\n    errors,\r\n    loadJournalEntriesFromAPI,\r\n    filterEntries,\r\n    saveJournalEntry,\r\n    getAccountName\r\n  } = useJournalEntries(accounts);\r\n\r\n  const {\r\n    trialBalance,\r\n    generateTrialBalance\r\n  } = useTrialBalance(accounts, journalEntries);\r\n\r\n  // Load accounts on mount\r\n  useEffect(() => {\r\n    loadChartsOfAccounts();\r\n  }, [loadChartsOfAccounts]);\r\n\r\n  // Load journal entries when accounts are loaded\r\n  useEffect(() => {\r\n    if (accounts.length > 0) {\r\n      loadJournalEntriesFromAPI();\r\n    }\r\n  }, [accounts, loadJournalEntriesFromAPI]);\r\n\r\n  // Filter entries when filters or journal entries change\r\n  useEffect(() => {\r\n    if (journalEntries.length > 0) {\r\n      filterEntries(filters);\r\n    }\r\n  }, [journalEntries, filters, filterEntries]);\r\n\r\n  // Event handlers\r\n  const handleRefresh = () => {\r\n    loadJournalEntriesFromAPI();\r\n  };\r\n\r\n  const handleRefreshAccounts = () => {\r\n    loadChartsOfAccounts();\r\n  };\r\n\r\n  const handleClearFilters = () => {\r\n    setFilters({\r\n      dateFrom: '',\r\n      dateTo: '',\r\n      accountId: '',\r\n      transactionType: 'all',\r\n      searchTerm: ''\r\n    });\r\n  };\r\n\r\n  const handleSaveEntry = () => {\r\n    const success = saveJournalEntry(newEntry);\r\n    if (success) {\r\n      setIsAddingEntry(false);\r\n    }\r\n  };\r\n\r\n  const handleGenerateTrialBalance = () => {\r\n    generateTrialBalance();\r\n    setShowTrialBalance(true);\r\n  };\r\n\r\n  const loading = {\r\n    accounts: accountsLoading,\r\n    entries: entriesLoading,\r\n    purchase: false // This can be managed separately if needed\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto p-6 bg-white\">\r\n      <GLHeader \r\n        loading={loading}\r\n        errors={{ accounts: accountsError, ...errors }}\r\n      />\r\n\r\n      <GLStats journalEntries={journalEntries} />\r\n\r\n      <GLControls\r\n        filters={filters}\r\n        setFilters={setFilters}\r\n        accounts={accounts}\r\n        loading={loading}\r\n        onRefresh={handleRefresh}\r\n        onRefreshAccounts={handleRefreshAccounts}\r\n        onClearFilters={handleClearFilters}\r\n        onAddEntry={() => setIsAddingEntry(true)}\r\n        onGenerateTrialBalance={handleGenerateTrialBalance}\r\n      />\r\n\r\n      {isAddingEntry && (\r\n        <GLJournalEntryForm\r\n          newEntry={newEntry}\r\n          setNewEntry={setNewEntry}\r\n          accounts={accounts}\r\n          onSave={handleSaveEntry}\r\n          onCancel={() => setIsAddingEntry(false)}\r\n        />\r\n      )}\r\n\r\n      <GLJournalEntriesTable\r\n        entries={filteredEntries}\r\n        totalEntries={journalEntries.length}\r\n        onViewEntry={setSelectedEntry}\r\n      />\r\n\r\n      {selectedEntry && (\r\n        <JournalEntryDetailModal\r\n          entry={selectedEntry}\r\n          onClose={() => setSelectedEntry(null)}\r\n          getAccountName={getAccountName}\r\n        />\r\n      )}\r\n\r\n      {showTrialBalance && (\r\n        <TrialBalanceModal\r\n          trialBalance={trialBalance}\r\n          filters={filters}\r\n          setFilters={setFilters}\r\n          onClose={() => setShowTrialBalance(false)}\r\n        />\r\n      )}\r\n\r\n      <GLIntegrationStatus />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GeneralLedger;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}