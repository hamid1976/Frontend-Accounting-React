{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Logic-Unit\\\\my-account\\\\src\\\\pages\\\\AccountsReceivable.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { \n//   Users, \n//   DollarSign, \n//   CreditCard, \n//   AlertTriangle, \n//   Clock, \n//   Plus, \n//   Search, \n//   Filter, \n//   Eye, \n//   Edit, \n//   Download,\n//   CheckCircle,\n//   XCircle,\n//   Calendar,\n//   FileText,\n//   TrendingUp,\n//   Mail,\n//   Phone\n// } from 'lucide-react';\n// import CreateInvoiceModal from '../components/CreateInvoiceModal';\n// import InvoiceModal from '../components/InvoiceModal';\n\n// const AccountsReceivable = () => {\n//   const [customers, setCustomers] = useState([]);\n//   const [invoices, setInvoices] = useState([]);\n//   const [payments, setPayments] = useState([]);\n//   const [selectedCustomer, setSelectedCustomer] = useState(null);\n//   const [activeTab, setActiveTab] = useState('overview');\n//   const [viewInvoice, setViewInvoice] = useState(null);\n\n//   const [filters, setFilters] = useState({\n//     customerType: 'all',\n//     status: 'all',\n//     dateRange: '30',\n//     searchTerm: ''\n//   });\n//   const handleCreateInvoice = () => {\n//   // Find the customer name for the invoice\n//   const customer = customers.find(c => c.id === newInvoice.customerId);\n//   if (!customer) {\n//     alert('Please select a customer');\n//     return;\n//   }\n//   // Generate a new invoice ID (simple example)\n//   const nextId = `INV-${new Date().getFullYear()}-${String(invoices.length + 1).padStart(3, '0')}`;\n//   const invoiceTotal = calculateInvoiceTotal();\n\n//   const newInvoiceData = {\n//     id: nextId,\n//     customerId: customer.id,\n//     customerName: customer.name,\n//     date: new Date().toISOString().slice(0, 10),\n//     dueDate: newInvoice.dueDate,\n//     amount: invoiceTotal,\n//     paid: 0,\n//     balance: invoiceTotal,\n//     status: 'outstanding',\n//     daysOverdue: 0,\n//     paymentTerms: customer.paymentTerms,\n//     items: newInvoice.items,\n//     notes: newInvoice.notes,\n//     source: 'manual'\n//   };\n\n//   // Append to invoices\n//   setInvoices(prev => [...prev, newInvoiceData]);\n\n//   // Optionally update customer AR data (totalOwed, invoiceCount, etc.)\n//   setCustomers(prev =>\n//     prev.map(c =>\n//       c.id === customer.id\n//         ? {\n//             ...c,\n//             totalOwed: c.totalOwed + invoiceTotal,\n//             invoiceCount: c.invoiceCount + 1\n//           }\n//         : c\n//     )\n//   );\n\n//   // Reset the form\n//   setNewInvoice({\n//     customerId: '',\n//     dueDate: '',\n//     items: [{ description: '', quantity: 1, price: 0, total: 0 }],\n//     notes: ''\n//   });\n\n//   setShowInvoiceForm(false);\n//   alert('Invoice created successfully!');\n// };\n\n//   // const handleCreateInvoice = (invoice) => {\n//   //   setInvoices(prev => [\n//   //     {\n//   //       ...invoice,\n//   //       id: `INV-${new Date().getFullYear()}-${String(prev.length + 1).padStart(3, '0')}`\n//   //     },\n//   //     ...prev\n//   //   ]);\n//   // };\n\n//   const [showInvoiceForm, setShowInvoiceForm] = useState(false);\n//   const [newInvoice, setNewInvoice] = useState({\n//     customerId: '',\n//     dueDate: '',\n//     items: [{ description: '', quantity: 1, price: 0, total: 0 }],\n//     notes: ''\n//   });\n\n//   useEffect(() => {\n//     loadSampleData();\n//   }, []);\n\n//   const loadSampleData = () => {\n//     // Sample Customers with AR data\n//     const sampleCustomers = [\n//       {\n//         id: 'CUST001',\n//         name: 'Al Noor Medical Center',\n//         email: 'finance@alnoor.com',\n//         phone: '+966-11-123-4567',\n//         address: 'King Fahd Road, Riyadh',\n//         customerType: 'corporate',\n//         creditLimit: 50000,\n//         paymentTerms: 30,\n//         totalOwed: 15750.00,\n//         overdueAmount: 5250.00,\n//         lastPayment: '2025-01-10',\n//         creditStatus: 'good',\n//         accountBalance: -15750.00,\n//         invoiceCount: 8,\n//         avgPaymentDays: 25\n//       },\n//       {\n//         id: 'CUST002',\n//         name: 'Dr. Ahmed Clinic',\n//         email: 'dr.ahmed@clinic.com',\n//         phone: '+966-12-987-6543',\n//         address: 'Prince Sultan Street, Jeddah',\n//         customerType: 'small_business',\n//         creditLimit: 20000,\n//         paymentTerms: 15,\n//         totalOwed: 8900.00,\n//         overdueAmount: 2100.00,\n//         lastPayment: '2025-01-12',\n//         creditStatus: 'watch',\n//         accountBalance: -8900.00,\n//         invoiceCount: 5,\n//         avgPaymentDays: 18\n//       },\n//       {\n//         id: 'CUST003',\n//         name: 'Pharmacy Plus Chain',\n//         email: 'accounts@pharmacyplus.sa',\n//         phone: '+966-13-555-0123',\n//         address: 'Al Khobar, Eastern Province',\n//         customerType: 'corporate',\n//         creditLimit: 75000,\n//         paymentTerms: 45,\n//         totalOwed: 32100.00,\n//         overdueAmount: 0,\n//         lastPayment: '2025-01-14',\n//         creditStatus: 'excellent',\n//         accountBalance: -32100.00,\n//         invoiceCount: 12,\n//         avgPaymentDays: 35\n//       },\n//       {\n//         id: 'CUST004',\n//         name: 'Walk-in Customer',\n//         email: 'cash@pos.system',\n//         phone: '+966-50-000-0000',\n//         address: 'Point of Sale',\n//         customerType: 'cash',\n//         creditLimit: 0,\n//         paymentTerms: 0,\n//         totalOwed: 0,\n//         overdueAmount: 0,\n//         lastPayment: '2025-01-15',\n//         creditStatus: 'cash_only',\n//         accountBalance: 0,\n//         invoiceCount: 0,\n//         avgPaymentDays: 0\n//       }\n//     ];\n\n//     // Sample Invoices\n//     const sampleInvoices = [\n//       {\n//         id: 'INV-2025-001',\n//         customerId: 'CUST001',\n//         customerName: 'Al Noor Medical Center',\n//         date: '2025-01-15',\n//         dueDate: '2025-02-14',\n//         amount: 5250.00,\n//         paid: 0,\n//         balance: 5250.00,\n//         status: 'outstanding',\n//         daysOverdue: 0,\n//         paymentTerms: 30,\n//         items: [\n//           { description: 'A2A 25MG TAB', quantity: 100, price: 15.00, total: 1500.00 },\n//           { description: 'AALBUMIN 50ML', quantity: 150, price: 25.00, total: 3750.00 }\n//         ],\n//         notes: 'Monthly medical supplies order',\n//         source: 'manual'\n//       },\n//       {\n//         id: 'INV-2025-002',\n//         customerId: 'CUST002',\n//         customerName: 'Dr. Ahmed Clinic',\n//         date: '2025-01-10',\n//         dueDate: '2025-01-25',\n//         amount: 2100.00,\n//         paid: 0,\n//         balance: 2100.00,\n//         status: 'overdue',\n//         daysOverdue: 5,\n//         paymentTerms: 15,\n//         items: [\n//           { description: 'ABAKTAL INJ', quantity: 50, price: 30.00, total: 1500.00 },\n//           { description: 'AARAM PLUS', quantity: 20, price: 30.00, total: 600.00 }\n//         ],\n//         notes: 'Urgent medical supplies',\n//         source: 'pos'\n//       },\n//       {\n//         id: 'POS-2025-003',\n//         customerId: 'CUST001',\n//         customerName: 'Al Noor Medical Center',\n//         date: '2025-01-12',\n//         dueDate: '2025-02-11',\n//         amount: 1850.00,\n//         paid: 1850.00,\n//         balance: 0,\n//         status: 'paid',\n//         daysOverdue: 0,\n//         paymentTerms: 30,\n//         items: [\n//           { description: 'Medical supplies - POS Sale', quantity: 1, price: 1850.00, total: 1850.00 }\n//         ],\n//         notes: 'Direct POS sale - Credit account',\n//         source: 'pos'\n//       }\n//     ];\n\n//     // Sample Payments\n//     const samplePayments = [\n//       {\n//         id: 'PAY001',\n//         customerId: 'CUST001',\n//         customerName: 'Al Noor Medical Center',\n//         invoiceId: 'POS-2025-003',\n//         date: '2025-01-14',\n//         amount: 1850.00,\n//         method: 'bank_transfer',\n//         reference: 'TXN123456789',\n//         status: 'cleared',\n//         notes: 'Payment for POS sale'\n//       },\n//       {\n//         id: 'PAY002',\n//         customerId: 'CUST003',\n//         customerName: 'Pharmacy Plus Chain',\n//         invoiceId: 'INV-2024-045',\n//         date: '2025-01-12',\n//         amount: 15600.00,\n//         method: 'check',\n//         reference: 'CHK-789123',\n//         status: 'cleared',\n//         notes: 'December invoice payment'\n//       }\n//     ];\n\n//     setCustomers(sampleCustomers);\n//     setInvoices(sampleInvoices);\n//     setPayments(samplePayments);\n//   };\n\n//   const calculateARSummary = () => {\n//     const totalAR = customers.reduce((sum, customer) => sum + customer.totalOwed, 0);\n//     const totalOverdue = customers.reduce((sum, customer) => sum + customer.overdueAmount, 0);\n//     const customersWithBalance = customers.filter(customer => customer.totalOwed > 0).length;\n//     const avgDaysOutstanding = customers.reduce((sum, customer) => sum + customer.avgPaymentDays, 0) / customers.length;\n\n//     return {\n//       totalAR,\n//       totalOverdue,\n//       customersWithBalance,\n//       avgDaysOutstanding: Math.round(avgDaysOutstanding)\n//     };\n//   };\n\n//   const getAgingData = () => {\n//     const aging = {\n//       current: 0,\n//       days30: 0,\n//       days60: 0,\n//       days90: 0,\n//       over90: 0\n//     };\n\n//     invoices.forEach(invoice => {\n//       if (invoice.status === 'paid') return;\n\n//       const daysPastDue = invoice.daysOverdue || 0;\n\n//       if (daysPastDue <= 0) {\n//         aging.current += invoice.balance;\n//       } else if (daysPastDue <= 30) {\n//         aging.days30 += invoice.balance;\n//       } else if (daysPastDue <= 60) {\n//         aging.days60 += invoice.balance;\n//       } else if (daysPastDue <= 90) {\n//         aging.days90 += invoice.balance;\n//       } else {\n//         aging.over90 += invoice.balance;\n//       }\n//     });\n\n//     return aging;\n//   };\n\n//   const getFilteredCustomers = () => {\n//     let filtered = [...customers];\n\n//     if (filters.customerType !== 'all') {\n//       filtered = filtered.filter(customer => customer.customerType === filters.customerType);\n//     }\n\n//     if (filters.status !== 'all') {\n//       filtered = filtered.filter(customer => {\n//         if (filters.status === 'overdue') return customer.overdueAmount > 0;\n//         if (filters.status === 'current') return customer.totalOwed > 0 && customer.overdueAmount === 0;\n//         if (filters.status === 'paid_up') return customer.totalOwed === 0;\n//         return true;\n//       });\n//     }\n\n//     if (filters.searchTerm) {\n//       const term = filters.searchTerm.toLowerCase();\n//       filtered = filtered.filter(customer =>\n//         customer.name.toLowerCase().includes(term) ||\n//         customer.email.toLowerCase().includes(term) ||\n//         customer.id.toLowerCase().includes(term)\n//       );\n//     }\n\n//     return filtered;\n//   };\n\n//   const getCreditStatusColor = (status) => {\n//     switch (status) {\n//       case 'excellent': return 'bg-green-100 text-green-800';\n//       case 'good': return 'bg-blue-100 text-blue-800';\n//       case 'watch': return 'bg-yellow-100 text-yellow-800';\n//       case 'hold': return 'bg-red-100 text-red-800';\n//       case 'cash_only': return 'bg-gray-100 text-gray-800';\n//       default: return 'bg-gray-100 text-gray-800';\n//     }\n//   };\n\n//   const getInvoiceStatusColor = (status) => {\n//     switch (status) {\n//       case 'paid': return 'bg-green-100 text-green-800';\n//       case 'outstanding': return 'bg-blue-100 text-blue-800';\n//       case 'overdue': return 'bg-red-100 text-red-800';\n//       case 'partial': return 'bg-yellow-100 text-yellow-800';\n//       default: return 'bg-gray-100 text-gray-800';\n//     }\n//   };\n\n//   const addInvoiceItem = () => {\n//     setNewInvoice({\n//       ...newInvoice,\n//       items: [...newInvoice.items, { description: '', quantity: 1, price: 0, total: 0 }]\n//     });\n//   };\n\n//   const updateInvoiceItem = (index, field, value) => {\n//     const updatedItems = [...newInvoice.items];\n//     updatedItems[index] = { ...updatedItems[index], [field]: value };\n\n//     if (field === 'quantity' || field === 'price') {\n//       updatedItems[index].total = updatedItems[index].quantity * updatedItems[index].price;\n//     }\n\n//     setNewInvoice({ ...newInvoice, items: updatedItems });\n//   };\n\n//   const calculateInvoiceTotal = () => {\n//     return newInvoice.items.reduce((sum, item) => sum + item.total, 0);\n//   };\n\n//   const summary = calculateARSummary();\n//   const aging = getAgingData();\n//   const filteredCustomers = getFilteredCustomers();\n\n//   return (\n//     <div className=\"max-w-7xl mx-auto p-6 bg-white\">\n//       {/* Header */}\n//       <div className=\"mb-8\">\n//         <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\n//           <CreditCard className=\"mr-3 text-emerald-600\" />\n//           Accounts Receivable\n//         </h1>\n//         <p className=\"text-gray-600\">Manage customer invoicing, payments, and credit limits</p>\n//       </div>\n\n//       {/* Summary Cards */}\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n//         <div className=\"bg-blue-50 p-6 rounded-lg border border-blue-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-blue-600 text-sm font-medium\">Total A/R</p>\n//               <p className=\"text-2xl font-bold text-blue-900\">${summary.totalAR.toFixed(2)}</p>\n//             </div>\n//             <DollarSign className=\"text-blue-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-blue-700 mt-2\">{summary.customersWithBalance} customers with balances</p>\n//         </div>\n\n//         <div className=\"bg-red-50 p-6 rounded-lg border border-red-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-red-600 text-sm font-medium\">Overdue Amount</p>\n//               <p className=\"text-2xl font-bold text-red-900\">${summary.totalOverdue.toFixed(2)}</p>\n//             </div>\n//             <AlertTriangle className=\"text-red-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-red-700 mt-2\">\n//             {((summary.totalOverdue / summary.totalAR) * 100).toFixed(1)}% of total A/R\n//           </p>\n//         </div>\n\n//         <div className=\"bg-green-50 p-6 rounded-lg border border-green-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-green-600 text-sm font-medium\">Avg. Days Outstanding</p>\n//               <p className=\"text-2xl font-bold text-green-900\">{summary.avgDaysOutstanding}</p>\n//             </div>\n//             <Clock className=\"text-green-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-green-700 mt-2\">Collection performance</p>\n//         </div>\n\n//         <div className=\"bg-purple-50 p-6 rounded-lg border border-purple-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-purple-600 text-sm font-medium\">Active Customers</p>\n//               <p className=\"text-2xl font-bold text-purple-900\">{customers.length}</p>\n//             </div>\n//             <Users className=\"text-purple-600\" size={24} />\n//           </div>\n//           <p className=\"text-sm text-purple-700 mt-2\">Total customer accounts</p>\n//         </div>\n//       </div>\n\n//       {/* Tabs */}\n//       <div className=\"mb-6\">\n//         <div className=\"border-b border-gray-200\">\n//           <nav className=\"-mb-px flex space-x-8\">\n//             {[\n//               { id: 'overview', name: 'Customer Overview', icon: Users },\n//               { id: 'invoices', name: 'Invoices', icon: FileText },\n//               { id: 'aging', name: 'Aging Report', icon: Clock },\n//               { id: 'payments', name: 'Payments', icon: CheckCircle }\n//             ].map((tab) => (\n//               <button\n//                 key={tab.id}\n//                 onClick={() => setActiveTab(tab.id)}\n//                 className={`flex items-center py-2 px-1 border-b-2 font-medium text-sm ${\n//                   activeTab === tab.id\n//                     ? 'border-emerald-500 text-emerald-600'\n//                     : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n//                 }`}\n//               >\n//                 <tab.icon className=\"mr-2\" size={16} />\n//                 {tab.name}\n//               </button>\n//             ))}\n//           </nav>\n//         </div>\n//       </div>\n\n//       {/* Tab Content */}\n//       {activeTab === 'overview' && (\n//         <div>\n//           {/* Filters */}\n//           <div className=\"flex flex-wrap items-center gap-4 mb-6\">\n//             <div className=\"relative\">\n//               <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\n//               <input\n//                 type=\"text\"\n//                 placeholder=\"Search customers...\"\n//                 value={filters.searchTerm}\n//                 onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\n//                 className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               />\n//             </div>\n\n//             <select\n//               value={filters.customerType}\n//               onChange={(e) => setFilters({ ...filters, customerType: e.target.value })}\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//             >\n//               <option value=\"all\">All Customer Types</option>\n//               <option value=\"corporate\">Corporate</option>\n//               <option value=\"small_business\">Small Business</option>\n//               <option value=\"individual\">Individual</option>\n//               <option value=\"cash\">Cash Only</option>\n//             </select>\n\n//             <select\n//               value={filters.status}\n//               onChange={(e) => setFilters({ ...filters, status: e.target.value })}\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//             >\n//               <option value=\"all\">All Statuses</option>\n//               <option value=\"current\">Current</option>\n//               <option value=\"overdue\">Overdue</option>\n//               <option value=\"paid_up\">Paid Up</option>\n//             </select>\n\n//             <button\n//               onClick={() => setShowInvoiceForm(true)}\n//               className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\n//             >\n//               <Plus size={16} />\n//               <span>New Invoice</span>\n//             </button>\n//           </div>\n\n//           {/* Customer List */}\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//             <div className=\"overflow-x-auto\">\n//               <table className=\"w-full\">\n//                 <thead className=\"bg-gray-50\">\n//                   <tr>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Customer\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Type\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Credit Limit\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Balance\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Overdue\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Credit Status\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Last Payment\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Actions\n//                     </th>\n//                   </tr>\n//                 </thead>\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\n//                   {filteredCustomers.map((customer) => (\n//                     <tr key={customer.id} className=\"hover:bg-gray-50\">\n//                       <td className=\"px-6 py-4\">\n//                         <div>\n//                           <div className=\"text-sm font-medium text-gray-900\">{customer.name}</div>\n//                           <div className=\"text-sm text-gray-500\">{customer.id}</div>\n//                           <div className=\"text-xs text-gray-400 flex items-center mt-1\">\n//                             <Mail className=\"mr-1\" size={12} />\n//                             {customer.email}\n//                           </div>\n//                         </div>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-gray-100 text-gray-800\">\n//                           {customer.customerType.replace('_', ' ')}\n//                         </span>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         ${customer.creditLimit.toLocaleString()}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <div className=\"text-sm font-medium text-gray-900\">\n//                           ${customer.totalOwed.toFixed(2)}\n//                         </div>\n//                         <div className=\"text-xs text-gray-500\">\n//                           {customer.invoiceCount} invoices\n//                         </div>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         {customer.overdueAmount > 0 ? (\n//                           <span className=\"text-red-600 font-medium\">\n//                             ${customer.overdueAmount.toFixed(2)}\n//                           </span>\n//                         ) : (\n//                           <span className=\"text-green-600\">$0.00</span>\n//                         )}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(customer.creditStatus)}`}>\n//                           {customer.creditStatus.replace('_', ' ')}\n//                         </span>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {customer.lastPayment}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n//                         <button\n//                           onClick={() => setSelectedCustomer(customer)}\n//                           className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\n//                         >\n//                           <Eye size={16} />\n//                         </button>\n//                         <button className=\"text-blue-600 hover:text-blue-900\">\n//                           <Edit size={16} />\n//                         </button>\n//                       </td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {activeTab === 'aging' && (\n//         <div>\n//           <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n//             {/* Aging Summary */}\n//             <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n//               <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Aging Summary</h3>\n//               <div className=\"space-y-4\">\n//                 <div className=\"flex justify-between items-center p-3 bg-green-50 rounded\">\n//                   <span className=\"font-medium text-green-800\">Current (0-30 days)</span>\n//                   <span className=\"font-bold text-green-900\">${aging.current.toFixed(2)}</span>\n//                 </div>\n//                 <div className=\"flex justify-between items-center p-3 bg-yellow-50 rounded\">\n//                   <span className=\"font-medium text-yellow-800\">31-60 days</span>\n//                   <span className=\"font-bold text-yellow-900\">${aging.days30.toFixed(2)}</span>\n//                 </div>\n//                 <div className=\"flex justify-between items-center p-3 bg-orange-50 rounded\">\n//                   <span className=\"font-medium text-orange-800\">61-90 days</span>\n//                   <span className=\"font-bold text-orange-900\">${aging.days60.toFixed(2)}</span>\n//                 </div>\n//                 <div className=\"flex justify-between items-center p-3 bg-red-50 rounded\">\n//                   <span className=\"font-medium text-red-800\">Over 90 days</span>\n//                   <span className=\"font-bold text-red-900\">${aging.over90.toFixed(2)}</span>\n//                 </div>\n//               </div>\n//               <div className=\"mt-4 pt-4 border-t\">\n//                 <div className=\"flex justify-between items-center\">\n//                   <span className=\"text-lg font-semibold text-gray-900\">Total Outstanding</span>\n//                   <span className=\"text-xl font-bold text-gray-900\">\n//                     ${(aging.current + aging.days30 + aging.days60 + aging.days90 + aging.over90).toFixed(2)}\n//                   </span>\n//                 </div>\n//               </div>\n//             </div>\n\n//             {/* Collection Priority */}\n//             <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n//               <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Collection Priority</h3>\n//               <div className=\"space-y-3\">\n//                 {customers\n//                   .filter(customer => customer.overdueAmount > 0)\n//                   .sort((a, b) => b.overdueAmount - a.overdueAmount)\n//                   .slice(0, 5)\n//                   .map((customer, index) => (\n//                     <div key={customer.id} className=\"flex items-center justify-between p-3 bg-red-50 rounded\">\n//                       <div>\n//                         <div className=\"font-medium text-gray-900\">{customer.name}</div>\n//                         <div className=\"text-sm text-gray-500\">\n//                           Last payment: {customer.lastPayment}\n//                         </div>\n//                       </div>\n//                       <div className=\"text-right\">\n//                         <div className=\"font-bold text-red-900\">${customer.overdueAmount.toFixed(2)}</div>\n//                         <div className=\"text-xs text-red-700\">#{index + 1} Priority</div>\n//                       </div>\n//                     </div>\n//                   ))}\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {activeTab === 'invoices' && (\n//         <div>\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <h3 className=\"text-lg font-semibold text-gray-900\">Recent Invoices</h3>\n//             </div>\n//             <div className=\"overflow-x-auto\">\n//               <table className=\"w-full\">\n//                 <thead className=\"bg-gray-50\">\n//                   <tr>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Invoice #\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Customer\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Date\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Due Date\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Amount\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Balance\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Status\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Actions\n//                     </th>\n//                   </tr>\n//                 </thead>\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\n//                   {invoices.map((invoice) => (\n//                     <tr key={invoice.id} className=\"hover:bg-gray-50\">\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <div className=\"text-sm font-medium text-gray-900\">{invoice.id}</div>\n//                         <div className=\"text-xs text-gray-500\">{invoice.source}</div>\n//                       </td>\n//                       <td className=\"px-6 py-4\">\n//                         <div className=\"text-sm font-medium text-gray-900\">{invoice.customerName}</div>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {invoice.date}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {invoice.dueDate}\n//                         {invoice.daysOverdue > 0 && (\n//                           <div className=\"text-xs text-red-600\">\n//                             {invoice.daysOverdue} days overdue\n//                           </div>\n//                         )}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         ${invoice.amount.toFixed(2)}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n//                         {invoice.balance > 0 ? (\n//                           <span className=\"text-red-600\">${invoice.balance.toFixed(2)}</span>\n//                         ) : (\n//                           <span className=\"text-green-600\">$0.00</span>\n//                         )}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${getInvoiceStatusColor(invoice.status)}`}>\n//                           {invoice.status}\n//                         </span>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n//                           <button\n//                               className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\n//                               onClick={() => setViewInvoice(invoice)}\n//                             >\n//                               <Eye size={16} />\n//                             </button>\n//                         <button className=\"text-blue-600 hover:text-blue-900\">\n//                           <Download size={16} />\n//                         </button>\n//                       </td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           </div>\n//           {/* View Invoice Modal */}\n//           <InvoiceModal\n//             invoice={viewInvoice}\n//             onClose={() => setViewInvoice(null)}\n//           />\n//         </div>\n//       )}\n\n//       {/* Create Invoice Modal */}\n//       {showInvoiceForm && (\n//         <CreateInvoiceModal\n//           customers={customers}\n//           onClose={() => setShowInvoiceForm(false)}\n//           onCreate={handleCreateInvoice}\n//         />\n\n//       )}\n\n//       {activeTab === 'payments' && (\n//         <div>\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <h3 className=\"text-lg font-semibold text-gray-900\">Recent Payments</h3>\n//             </div>\n//             <div className=\"overflow-x-auto\">\n//               <table className=\"w-full\">\n//                 <thead className=\"bg-gray-50\">\n//                   <tr>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Payment ID\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Customer\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Invoice\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Date\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Amount\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Method\n//                     </th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                       Status\n//                     </th>\n//                   </tr>\n//                 </thead>\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\n//                   {payments.map((payment) => (\n//                     <tr key={payment.id} className=\"hover:bg-gray-50\">\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n//                         {payment.id}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {payment.customerName}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {payment.invoiceId}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         {payment.date}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                         ${payment.amount.toFixed(2)}\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-blue-100 text-blue-800\">\n//                           {payment.method.replace('_', ' ')}\n//                         </span>\n//                       </td>\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                           payment.status === 'cleared' ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n//                         }`}>\n//                           {payment.status}\n//                         </span>\n//                       </td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Customer Detail Modal */}\n//       {selectedCustomer && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <div className=\"flex items-center justify-between\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\n//                   Customer Details - {selectedCustomer.name}\n//                 </h3>\n//                 <button\n//                   onClick={() => setSelectedCustomer(null)}\n//                   className=\"text-gray-400 hover:text-gray-600\"\n//                 >\n//                   <XCircle size={20} />\n//                 </button>\n//               </div>\n//             </div>\n\n//             <div className=\"px-6 py-4\">\n//               {/* Customer Info Grid */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n//                 <div className=\"space-y-4\">\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer ID</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.id}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Email</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.email}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Phone</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.phone}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Address</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.address}</p>\n//                   </div>\n//                 </div>\n\n//                 <div className=\"space-y-4\">\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer Type</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.customerType.replace('_', ' ')}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Limit</label>\n//                     <p className=\"text-sm text-gray-900\">${selectedCustomer.creditLimit.toLocaleString()}</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Payment Terms</label>\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.paymentTerms} days</p>\n//                   </div>\n//                   <div>\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Status</label>\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(selectedCustomer.creditStatus)}`}>\n//                       {selectedCustomer.creditStatus.replace('_', ' ')}\n//                     </span>\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Financial Summary */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n//                 <div className=\"bg-blue-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-blue-600\">Current Balance</div>\n//                   <div className=\"text-xl font-bold text-blue-900\">\n//                     ${selectedCustomer.totalOwed.toFixed(2)}\n//                   </div>\n//                 </div>\n//                 <div className=\"bg-red-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-red-600\">Overdue Amount</div>\n//                   <div className=\"text-xl font-bold text-red-900\">\n//                     ${selectedCustomer.overdueAmount.toFixed(2)}\n//                   </div>\n//                 </div>\n//                 <div className=\"bg-green-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-green-600\">Credit Available</div>\n//                   <div className=\"text-xl font-bold text-green-900\">\n//                     ${(selectedCustomer.creditLimit - selectedCustomer.totalOwed).toFixed(2)}\n//                   </div>\n//                 </div>\n//                 <div className=\"bg-purple-50 p-4 rounded-lg\">\n//                   <div className=\"text-sm font-medium text-purple-600\">Avg Payment Days</div>\n//                   <div className=\"text-xl font-bold text-purple-900\">\n//                     {selectedCustomer.avgPaymentDays}\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Customer Invoices */}\n//               <div className=\"mb-6\">\n//                 <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Customer Invoices</h4>\n//                 <div className=\"overflow-x-auto\">\n//                   <table className=\"w-full border border-gray-200 rounded\">\n//                     <thead className=\"bg-gray-50\">\n//                       <tr>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Invoice</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Date</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Due Date</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Amount</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Balance</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Status</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody className=\"divide-y divide-gray-200\">\n//                       {invoices\n//                         .filter(inv => inv.customerId === selectedCustomer.id)\n//                         .map((invoice) => (\n//                           <tr key={invoice.id}>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{invoice.id}</td>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{invoice.date}</td>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{invoice.dueDate}</td>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">${invoice.amount.toFixed(2)}</td>\n//                             <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">${invoice.balance.toFixed(2)}</td>\n//                             <td className=\"px-4 py-2\">\n//                               <span className={`px-2 py-1 text-xs font-medium rounded-full ${getInvoiceStatusColor(invoice.status)}`}>\n//                                 {invoice.status}\n//                               </span>\n//                             </td>\n//                           </tr>\n//                         ))}\n//                     </tbody>\n//                   </table>\n//                 </div>\n//               </div>\n\n//               {/* Action Buttons */}\n//               <div className=\"flex space-x-3\">\n//                 <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\n//                   <Plus size={16} />\n//                   <span>New Invoice</span>\n//                 </button>\n//                 <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\n//                   <CheckCircle size={16} />\n//                   <span>Record Payment</span>\n//                 </button>\n//                 <button className=\"px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 flex items-center space-x-2\">\n//                   <Mail size={16} />\n//                   <span>Send Statement</span>\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* New Invoice Form */}\n//       {showInvoiceForm && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <div className=\"flex items-center justify-between\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">Create New Invoice</h3>\n//                 <button\n//                   onClick={() => setShowInvoiceForm(false)}\n//                   className=\"text-gray-400 hover:text-gray-600\"\n//                 >\n//                   <XCircle size={20} />\n//                 </button>\n//               </div>\n//             </div>\n\n//             <div className=\"px-6 py-4\">\n//               {/* Invoice Header */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\n//                 <div>\n//                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">Customer *</label>\n//                   <select\n//                     value={newInvoice.customerId}\n//                     onChange={(e) => setNewInvoice({ ...newInvoice, customerId: e.target.value })}\n//                     className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//                   >\n//                     <option value=\"\">Select Customer</option>\n//                     {customers.filter(c => c.customerType !== 'cash').map(customer => (\n//                       <option key={customer.id} value={customer.id}>\n//                         {customer.name} ({customer.id})\n//                       </option>\n//                     ))}\n//                   </select>\n//                 </div>\n//                 <div>\n//                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">Due Date *</label>\n//                   <input\n//                     type=\"date\"\n//                     value={newInvoice.dueDate}\n//                     onChange={(e) => setNewInvoice({ ...newInvoice, dueDate: e.target.value })}\n//                     className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//                   />\n//                 </div>\n//               </div>\n\n//               {/* Invoice Items */}\n//               <div className=\"mb-6\">\n//                 <label className=\"block text-sm font-medium text-gray-700 mb-2\">Invoice Items</label>\n//                 <div className=\"space-y-3\">\n//                   {newInvoice.items.map((item, index) => (\n//                     <div key={index} className=\"grid grid-cols-12 gap-2 items-center bg-gray-50 p-3 rounded\">\n//                       <div className=\"col-span-5\">\n//                         <input\n//                           type=\"text\"\n//                           value={item.description}\n//                           onChange={(e) => updateInvoiceItem(index, 'description', e.target.value)}\n//                           placeholder=\"Item description\"\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                         />\n//                       </div>\n//                       <div className=\"col-span-2\">\n//                         <input\n//                           type=\"number\"\n//                           value={item.quantity}\n//                           onChange={(e) => updateInvoiceItem(index, 'quantity', parseFloat(e.target.value) || 0)}\n//                           placeholder=\"Qty\"\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                         />\n//                       </div>\n//                       <div className=\"col-span-2\">\n//                         <input\n//                           type=\"number\"\n//                           step=\"0.01\"\n//                           value={item.price}\n//                           onChange={(e) => updateInvoiceItem(index, 'price', parseFloat(e.target.value) || 0)}\n//                           placeholder=\"Price\"\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                         />\n//                       </div>\n//                       <div className=\"col-span-2\">\n//                         <input\n//                           type=\"number\"\n//                           step=\"0.01\"\n//                           value={item.total}\n//                           readOnly\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm bg-gray-100\"\n//                         />\n//                       </div>\n//                       <div className=\"col-span-1\">\n//                         {newInvoice.items.length > 1 && (\n//                           <button\n//                             onClick={() => {\n//                               const updatedItems = newInvoice.items.filter((_, i) => i !== index);\n//                               setNewInvoice({ ...newInvoice, items: updatedItems });\n//                             }}\n//                             className=\"p-1 text-red-600 hover:bg-red-100 rounded\"\n//                           >\n//                             <XCircle size={14} />\n//                           </button>\n//                         )}\n//                       </div>\n//                     </div>\n//                   ))}\n//                 </div>\n\n//                 <div className=\"flex justify-between items-center mt-3\">\n//                   <button\n//                     onClick={addInvoiceItem}\n//                     className=\"px-3 py-1 text-sm bg-emerald-100 text-emerald-700 rounded hover:bg-emerald-200 flex items-center space-x-1\"\n//                   >\n//                     <Plus size={14} />\n//                     <span>Add Item</span>\n//                   </button>\n\n//                   <div className=\"text-lg font-semibold\">\n//                     Total: ${calculateInvoiceTotal().toFixed(2)}\n//                   </div>\n//                 </div>\n//               </div>\n\n//               {/* Notes */}\n//               <div className=\"mb-6\">\n//                 <label className=\"block text-sm font-medium text-gray-700 mb-1\">Notes</label>\n//                 <textarea\n//                   value={newInvoice.notes}\n//                   onChange={(e) => setNewInvoice({ ...newInvoice, notes: e.target.value })}\n//                   rows={3}\n//                   placeholder=\"Additional notes...\"\n//                   className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//                 />\n//               </div>\n\n//               {/* Action Buttons */}\n//               <div className=\"flex space-x-3\">\n//                 <button\n//                   onClick={() => {\n//                     handleCreateInvoice()\n\n//                     // Save invoice logic would go here\n//                     alert('Invoice created successfully!');\n//                   //  setShowInvoiceForm(false);\n//                   }}\n//                   className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\n//                 >\n//                   <CheckCircle size={16} />\n//                   <span>Create Invoice</span>\n//                 </button>\n//                 <button\n//                   onClick={() => setShowInvoiceForm(false)}\n//                   className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\"\n//                 >\n//                   <XCircle size={16} />\n//                   <span>Cancel</span>\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Integration Status */}\n//       <div className=\"mt-8 p-6 bg-green-50 border border-green-200 rounded-lg\">\n//         <div className=\"flex items-center mb-4\">\n//           <CheckCircle className=\"text-green-600 mr-2\" size={20} />\n//           <h3 className=\"font-medium text-green-800\">POS Integration Active</h3>\n//         </div>\n//         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm text-green-700\">\n//           <div>\n//             <strong>Credit Sales:</strong> Automatically create AR entries when customers buy on credit in POS\n//           </div>\n//           <div>\n//             <strong>Customer Limits:</strong> POS checks credit limits before allowing credit sales\n//           </div>\n//           <div>\n//             <strong>Real-time Updates:</strong> Customer balances update instantly with each transaction\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AccountsReceivable;\n\nimport React, { useState, useEffect } from 'react';\nimport { CreditCard } from 'lucide-react';\nimport ARSummaryCards from '../components/ARSummaryCards';\nimport ARTabs from '../components/ARTabs';\nimport CustomerOverview from '../components/CustomerOverview';\nimport InvoicesTab from '../components/InvoicesTab';\nimport AgingReport from '../components/AgingReport';\nimport PaymentsTab from '../components/PaymentsTab';\nimport { useARData } from '../hooks/useARData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccountsReceivable = () => {\n  _s();\n  const {\n    customers,\n    invoices,\n    payments,\n    loading,\n    error,\n    calculateARSummary,\n    getAgingData\n  } = useARData();\n  const [activeTab, setActiveTab] = useState('overview');\n  const [filters, setFilters] = useState({\n    customerType: 'all',\n    status: 'all',\n    dateRange: '30',\n    searchTerm: ''\n  });\n  const summary = calculateARSummary();\n  const aging = getAgingData();\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1242,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1243,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-7xl mx-auto p-6 bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-gray-900 mb-2 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(CreditCard, {\n          className: \"mr-3 text-emerald-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1250,\n          columnNumber: 11\n        }, this), \"Accounts Receivable\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"Manage customer invoicing, payments, and credit limits\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ARSummaryCards, {\n      summary: summary,\n      customers: customers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ARTabs, {\n      activeTab: activeTab,\n      setActiveTab: setActiveTab\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1260,\n      columnNumber: 7\n    }, this), activeTab === 'overview' && /*#__PURE__*/_jsxDEV(CustomerOverview, {\n      customers: customers,\n      invoices: invoices,\n      filters: filters,\n      setFilters: setFilters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1264,\n      columnNumber: 9\n    }, this), activeTab === 'invoices' && /*#__PURE__*/_jsxDEV(InvoicesTab, {\n      invoices: invoices,\n      customers: customers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1273,\n      columnNumber: 9\n    }, this), activeTab === 'aging' && /*#__PURE__*/_jsxDEV(AgingReport, {\n      aging: aging,\n      customers: customers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1277,\n      columnNumber: 9\n    }, this), activeTab === 'payments' && /*#__PURE__*/_jsxDEV(PaymentsTab, {\n      payments: payments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1281,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1246,\n    columnNumber: 5\n  }, this);\n};\n_s(AccountsReceivable, \"zWHS6RL74PQB9GHK3AFNVK38l9s=\", false, function () {\n  return [useARData];\n});\n_c = AccountsReceivable;\nexport default AccountsReceivable;\nvar _c;\n$RefreshReg$(_c, \"AccountsReceivable\");","map":{"version":3,"names":["React","useState","useEffect","CreditCard","ARSummaryCards","ARTabs","CustomerOverview","InvoicesTab","AgingReport","PaymentsTab","useARData","jsxDEV","_jsxDEV","AccountsReceivable","_s","customers","invoices","payments","loading","error","calculateARSummary","getAgingData","activeTab","setActiveTab","filters","setFilters","customerType","status","dateRange","searchTerm","summary","aging","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/Logic-Unit/my-account/src/pages/AccountsReceivable.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { \r\n//   Users, \r\n//   DollarSign, \r\n//   CreditCard, \r\n//   AlertTriangle, \r\n//   Clock, \r\n//   Plus, \r\n//   Search, \r\n//   Filter, \r\n//   Eye, \r\n//   Edit, \r\n//   Download,\r\n//   CheckCircle,\r\n//   XCircle,\r\n//   Calendar,\r\n//   FileText,\r\n//   TrendingUp,\r\n//   Mail,\r\n//   Phone\r\n// } from 'lucide-react';\r\n// import CreateInvoiceModal from '../components/CreateInvoiceModal';\r\n// import InvoiceModal from '../components/InvoiceModal';\r\n\r\n// const AccountsReceivable = () => {\r\n//   const [customers, setCustomers] = useState([]);\r\n//   const [invoices, setInvoices] = useState([]);\r\n//   const [payments, setPayments] = useState([]);\r\n//   const [selectedCustomer, setSelectedCustomer] = useState(null);\r\n//   const [activeTab, setActiveTab] = useState('overview');\r\n//   const [viewInvoice, setViewInvoice] = useState(null);\r\n \r\n//   const [filters, setFilters] = useState({\r\n//     customerType: 'all',\r\n//     status: 'all',\r\n//     dateRange: '30',\r\n//     searchTerm: ''\r\n//   });\r\n//   const handleCreateInvoice = () => {\r\n//   // Find the customer name for the invoice\r\n//   const customer = customers.find(c => c.id === newInvoice.customerId);\r\n//   if (!customer) {\r\n//     alert('Please select a customer');\r\n//     return;\r\n//   }\r\n//   // Generate a new invoice ID (simple example)\r\n//   const nextId = `INV-${new Date().getFullYear()}-${String(invoices.length + 1).padStart(3, '0')}`;\r\n//   const invoiceTotal = calculateInvoiceTotal();\r\n \r\n//   const newInvoiceData = {\r\n//     id: nextId,\r\n//     customerId: customer.id,\r\n//     customerName: customer.name,\r\n//     date: new Date().toISOString().slice(0, 10),\r\n//     dueDate: newInvoice.dueDate,\r\n//     amount: invoiceTotal,\r\n//     paid: 0,\r\n//     balance: invoiceTotal,\r\n//     status: 'outstanding',\r\n//     daysOverdue: 0,\r\n//     paymentTerms: customer.paymentTerms,\r\n//     items: newInvoice.items,\r\n//     notes: newInvoice.notes,\r\n//     source: 'manual'\r\n//   };\r\n \r\n//   // Append to invoices\r\n//   setInvoices(prev => [...prev, newInvoiceData]);\r\n \r\n//   // Optionally update customer AR data (totalOwed, invoiceCount, etc.)\r\n//   setCustomers(prev =>\r\n//     prev.map(c =>\r\n//       c.id === customer.id\r\n//         ? {\r\n//             ...c,\r\n//             totalOwed: c.totalOwed + invoiceTotal,\r\n//             invoiceCount: c.invoiceCount + 1\r\n//           }\r\n//         : c\r\n//     )\r\n//   );\r\n \r\n//   // Reset the form\r\n//   setNewInvoice({\r\n//     customerId: '',\r\n//     dueDate: '',\r\n//     items: [{ description: '', quantity: 1, price: 0, total: 0 }],\r\n//     notes: ''\r\n//   });\r\n \r\n//   setShowInvoiceForm(false);\r\n//   alert('Invoice created successfully!');\r\n// };\r\n \r\n//   // const handleCreateInvoice = (invoice) => {\r\n//   //   setInvoices(prev => [\r\n//   //     {\r\n//   //       ...invoice,\r\n//   //       id: `INV-${new Date().getFullYear()}-${String(prev.length + 1).padStart(3, '0')}`\r\n//   //     },\r\n//   //     ...prev\r\n//   //   ]);\r\n//   // };\r\n \r\n//   const [showInvoiceForm, setShowInvoiceForm] = useState(false);\r\n//   const [newInvoice, setNewInvoice] = useState({\r\n//     customerId: '',\r\n//     dueDate: '',\r\n//     items: [{ description: '', quantity: 1, price: 0, total: 0 }],\r\n//     notes: ''\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     loadSampleData();\r\n//   }, []);\r\n\r\n//   const loadSampleData = () => {\r\n//     // Sample Customers with AR data\r\n//     const sampleCustomers = [\r\n//       {\r\n//         id: 'CUST001',\r\n//         name: 'Al Noor Medical Center',\r\n//         email: 'finance@alnoor.com',\r\n//         phone: '+966-11-123-4567',\r\n//         address: 'King Fahd Road, Riyadh',\r\n//         customerType: 'corporate',\r\n//         creditLimit: 50000,\r\n//         paymentTerms: 30,\r\n//         totalOwed: 15750.00,\r\n//         overdueAmount: 5250.00,\r\n//         lastPayment: '2025-01-10',\r\n//         creditStatus: 'good',\r\n//         accountBalance: -15750.00,\r\n//         invoiceCount: 8,\r\n//         avgPaymentDays: 25\r\n//       },\r\n//       {\r\n//         id: 'CUST002',\r\n//         name: 'Dr. Ahmed Clinic',\r\n//         email: 'dr.ahmed@clinic.com',\r\n//         phone: '+966-12-987-6543',\r\n//         address: 'Prince Sultan Street, Jeddah',\r\n//         customerType: 'small_business',\r\n//         creditLimit: 20000,\r\n//         paymentTerms: 15,\r\n//         totalOwed: 8900.00,\r\n//         overdueAmount: 2100.00,\r\n//         lastPayment: '2025-01-12',\r\n//         creditStatus: 'watch',\r\n//         accountBalance: -8900.00,\r\n//         invoiceCount: 5,\r\n//         avgPaymentDays: 18\r\n//       },\r\n//       {\r\n//         id: 'CUST003',\r\n//         name: 'Pharmacy Plus Chain',\r\n//         email: 'accounts@pharmacyplus.sa',\r\n//         phone: '+966-13-555-0123',\r\n//         address: 'Al Khobar, Eastern Province',\r\n//         customerType: 'corporate',\r\n//         creditLimit: 75000,\r\n//         paymentTerms: 45,\r\n//         totalOwed: 32100.00,\r\n//         overdueAmount: 0,\r\n//         lastPayment: '2025-01-14',\r\n//         creditStatus: 'excellent',\r\n//         accountBalance: -32100.00,\r\n//         invoiceCount: 12,\r\n//         avgPaymentDays: 35\r\n//       },\r\n//       {\r\n//         id: 'CUST004',\r\n//         name: 'Walk-in Customer',\r\n//         email: 'cash@pos.system',\r\n//         phone: '+966-50-000-0000',\r\n//         address: 'Point of Sale',\r\n//         customerType: 'cash',\r\n//         creditLimit: 0,\r\n//         paymentTerms: 0,\r\n//         totalOwed: 0,\r\n//         overdueAmount: 0,\r\n//         lastPayment: '2025-01-15',\r\n//         creditStatus: 'cash_only',\r\n//         accountBalance: 0,\r\n//         invoiceCount: 0,\r\n//         avgPaymentDays: 0\r\n//       }\r\n//     ];\r\n\r\n//     // Sample Invoices\r\n//     const sampleInvoices = [\r\n//       {\r\n//         id: 'INV-2025-001',\r\n//         customerId: 'CUST001',\r\n//         customerName: 'Al Noor Medical Center',\r\n//         date: '2025-01-15',\r\n//         dueDate: '2025-02-14',\r\n//         amount: 5250.00,\r\n//         paid: 0,\r\n//         balance: 5250.00,\r\n//         status: 'outstanding',\r\n//         daysOverdue: 0,\r\n//         paymentTerms: 30,\r\n//         items: [\r\n//           { description: 'A2A 25MG TAB', quantity: 100, price: 15.00, total: 1500.00 },\r\n//           { description: 'AALBUMIN 50ML', quantity: 150, price: 25.00, total: 3750.00 }\r\n//         ],\r\n//         notes: 'Monthly medical supplies order',\r\n//         source: 'manual'\r\n//       },\r\n//       {\r\n//         id: 'INV-2025-002',\r\n//         customerId: 'CUST002',\r\n//         customerName: 'Dr. Ahmed Clinic',\r\n//         date: '2025-01-10',\r\n//         dueDate: '2025-01-25',\r\n//         amount: 2100.00,\r\n//         paid: 0,\r\n//         balance: 2100.00,\r\n//         status: 'overdue',\r\n//         daysOverdue: 5,\r\n//         paymentTerms: 15,\r\n//         items: [\r\n//           { description: 'ABAKTAL INJ', quantity: 50, price: 30.00, total: 1500.00 },\r\n//           { description: 'AARAM PLUS', quantity: 20, price: 30.00, total: 600.00 }\r\n//         ],\r\n//         notes: 'Urgent medical supplies',\r\n//         source: 'pos'\r\n//       },\r\n//       {\r\n//         id: 'POS-2025-003',\r\n//         customerId: 'CUST001',\r\n//         customerName: 'Al Noor Medical Center',\r\n//         date: '2025-01-12',\r\n//         dueDate: '2025-02-11',\r\n//         amount: 1850.00,\r\n//         paid: 1850.00,\r\n//         balance: 0,\r\n//         status: 'paid',\r\n//         daysOverdue: 0,\r\n//         paymentTerms: 30,\r\n//         items: [\r\n//           { description: 'Medical supplies - POS Sale', quantity: 1, price: 1850.00, total: 1850.00 }\r\n//         ],\r\n//         notes: 'Direct POS sale - Credit account',\r\n//         source: 'pos'\r\n//       }\r\n//     ];\r\n\r\n//     // Sample Payments\r\n//     const samplePayments = [\r\n//       {\r\n//         id: 'PAY001',\r\n//         customerId: 'CUST001',\r\n//         customerName: 'Al Noor Medical Center',\r\n//         invoiceId: 'POS-2025-003',\r\n//         date: '2025-01-14',\r\n//         amount: 1850.00,\r\n//         method: 'bank_transfer',\r\n//         reference: 'TXN123456789',\r\n//         status: 'cleared',\r\n//         notes: 'Payment for POS sale'\r\n//       },\r\n//       {\r\n//         id: 'PAY002',\r\n//         customerId: 'CUST003',\r\n//         customerName: 'Pharmacy Plus Chain',\r\n//         invoiceId: 'INV-2024-045',\r\n//         date: '2025-01-12',\r\n//         amount: 15600.00,\r\n//         method: 'check',\r\n//         reference: 'CHK-789123',\r\n//         status: 'cleared',\r\n//         notes: 'December invoice payment'\r\n//       }\r\n//     ];\r\n\r\n//     setCustomers(sampleCustomers);\r\n//     setInvoices(sampleInvoices);\r\n//     setPayments(samplePayments);\r\n//   };\r\n\r\n//   const calculateARSummary = () => {\r\n//     const totalAR = customers.reduce((sum, customer) => sum + customer.totalOwed, 0);\r\n//     const totalOverdue = customers.reduce((sum, customer) => sum + customer.overdueAmount, 0);\r\n//     const customersWithBalance = customers.filter(customer => customer.totalOwed > 0).length;\r\n//     const avgDaysOutstanding = customers.reduce((sum, customer) => sum + customer.avgPaymentDays, 0) / customers.length;\r\n\r\n//     return {\r\n//       totalAR,\r\n//       totalOverdue,\r\n//       customersWithBalance,\r\n//       avgDaysOutstanding: Math.round(avgDaysOutstanding)\r\n//     };\r\n//   };\r\n\r\n//   const getAgingData = () => {\r\n//     const aging = {\r\n//       current: 0,\r\n//       days30: 0,\r\n//       days60: 0,\r\n//       days90: 0,\r\n//       over90: 0\r\n//     };\r\n\r\n//     invoices.forEach(invoice => {\r\n//       if (invoice.status === 'paid') return;\r\n      \r\n//       const daysPastDue = invoice.daysOverdue || 0;\r\n      \r\n//       if (daysPastDue <= 0) {\r\n//         aging.current += invoice.balance;\r\n//       } else if (daysPastDue <= 30) {\r\n//         aging.days30 += invoice.balance;\r\n//       } else if (daysPastDue <= 60) {\r\n//         aging.days60 += invoice.balance;\r\n//       } else if (daysPastDue <= 90) {\r\n//         aging.days90 += invoice.balance;\r\n//       } else {\r\n//         aging.over90 += invoice.balance;\r\n//       }\r\n//     });\r\n\r\n//     return aging;\r\n//   };\r\n\r\n//   const getFilteredCustomers = () => {\r\n//     let filtered = [...customers];\r\n\r\n//     if (filters.customerType !== 'all') {\r\n//       filtered = filtered.filter(customer => customer.customerType === filters.customerType);\r\n//     }\r\n\r\n//     if (filters.status !== 'all') {\r\n//       filtered = filtered.filter(customer => {\r\n//         if (filters.status === 'overdue') return customer.overdueAmount > 0;\r\n//         if (filters.status === 'current') return customer.totalOwed > 0 && customer.overdueAmount === 0;\r\n//         if (filters.status === 'paid_up') return customer.totalOwed === 0;\r\n//         return true;\r\n//       });\r\n//     }\r\n\r\n//     if (filters.searchTerm) {\r\n//       const term = filters.searchTerm.toLowerCase();\r\n//       filtered = filtered.filter(customer =>\r\n//         customer.name.toLowerCase().includes(term) ||\r\n//         customer.email.toLowerCase().includes(term) ||\r\n//         customer.id.toLowerCase().includes(term)\r\n//       );\r\n//     }\r\n\r\n//     return filtered;\r\n//   };\r\n\r\n//   const getCreditStatusColor = (status) => {\r\n//     switch (status) {\r\n//       case 'excellent': return 'bg-green-100 text-green-800';\r\n//       case 'good': return 'bg-blue-100 text-blue-800';\r\n//       case 'watch': return 'bg-yellow-100 text-yellow-800';\r\n//       case 'hold': return 'bg-red-100 text-red-800';\r\n//       case 'cash_only': return 'bg-gray-100 text-gray-800';\r\n//       default: return 'bg-gray-100 text-gray-800';\r\n//     }\r\n//   };\r\n\r\n//   const getInvoiceStatusColor = (status) => {\r\n//     switch (status) {\r\n//       case 'paid': return 'bg-green-100 text-green-800';\r\n//       case 'outstanding': return 'bg-blue-100 text-blue-800';\r\n//       case 'overdue': return 'bg-red-100 text-red-800';\r\n//       case 'partial': return 'bg-yellow-100 text-yellow-800';\r\n//       default: return 'bg-gray-100 text-gray-800';\r\n//     }\r\n//   };\r\n\r\n//   const addInvoiceItem = () => {\r\n//     setNewInvoice({\r\n//       ...newInvoice,\r\n//       items: [...newInvoice.items, { description: '', quantity: 1, price: 0, total: 0 }]\r\n//     });\r\n//   };\r\n\r\n//   const updateInvoiceItem = (index, field, value) => {\r\n//     const updatedItems = [...newInvoice.items];\r\n//     updatedItems[index] = { ...updatedItems[index], [field]: value };\r\n    \r\n//     if (field === 'quantity' || field === 'price') {\r\n//       updatedItems[index].total = updatedItems[index].quantity * updatedItems[index].price;\r\n//     }\r\n    \r\n//     setNewInvoice({ ...newInvoice, items: updatedItems });\r\n//   };\r\n\r\n//   const calculateInvoiceTotal = () => {\r\n//     return newInvoice.items.reduce((sum, item) => sum + item.total, 0);\r\n//   };\r\n\r\n//   const summary = calculateARSummary();\r\n//   const aging = getAgingData();\r\n//   const filteredCustomers = getFilteredCustomers();\r\n\r\n//   return (\r\n//     <div className=\"max-w-7xl mx-auto p-6 bg-white\">\r\n//       {/* Header */}\r\n//       <div className=\"mb-8\">\r\n//         <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\r\n//           <CreditCard className=\"mr-3 text-emerald-600\" />\r\n//           Accounts Receivable\r\n//         </h1>\r\n//         <p className=\"text-gray-600\">Manage customer invoicing, payments, and credit limits</p>\r\n//       </div>\r\n\r\n//       {/* Summary Cards */}\r\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\r\n//         <div className=\"bg-blue-50 p-6 rounded-lg border border-blue-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-blue-600 text-sm font-medium\">Total A/R</p>\r\n//               <p className=\"text-2xl font-bold text-blue-900\">${summary.totalAR.toFixed(2)}</p>\r\n//             </div>\r\n//             <DollarSign className=\"text-blue-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-blue-700 mt-2\">{summary.customersWithBalance} customers with balances</p>\r\n//         </div>\r\n\r\n//         <div className=\"bg-red-50 p-6 rounded-lg border border-red-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-red-600 text-sm font-medium\">Overdue Amount</p>\r\n//               <p className=\"text-2xl font-bold text-red-900\">${summary.totalOverdue.toFixed(2)}</p>\r\n//             </div>\r\n//             <AlertTriangle className=\"text-red-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-red-700 mt-2\">\r\n//             {((summary.totalOverdue / summary.totalAR) * 100).toFixed(1)}% of total A/R\r\n//           </p>\r\n//         </div>\r\n\r\n//         <div className=\"bg-green-50 p-6 rounded-lg border border-green-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-green-600 text-sm font-medium\">Avg. Days Outstanding</p>\r\n//               <p className=\"text-2xl font-bold text-green-900\">{summary.avgDaysOutstanding}</p>\r\n//             </div>\r\n//             <Clock className=\"text-green-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-green-700 mt-2\">Collection performance</p>\r\n//         </div>\r\n\r\n//         <div className=\"bg-purple-50 p-6 rounded-lg border border-purple-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-purple-600 text-sm font-medium\">Active Customers</p>\r\n//               <p className=\"text-2xl font-bold text-purple-900\">{customers.length}</p>\r\n//             </div>\r\n//             <Users className=\"text-purple-600\" size={24} />\r\n//           </div>\r\n//           <p className=\"text-sm text-purple-700 mt-2\">Total customer accounts</p>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Tabs */}\r\n//       <div className=\"mb-6\">\r\n//         <div className=\"border-b border-gray-200\">\r\n//           <nav className=\"-mb-px flex space-x-8\">\r\n//             {[\r\n//               { id: 'overview', name: 'Customer Overview', icon: Users },\r\n//               { id: 'invoices', name: 'Invoices', icon: FileText },\r\n//               { id: 'aging', name: 'Aging Report', icon: Clock },\r\n//               { id: 'payments', name: 'Payments', icon: CheckCircle }\r\n//             ].map((tab) => (\r\n//               <button\r\n//                 key={tab.id}\r\n//                 onClick={() => setActiveTab(tab.id)}\r\n//                 className={`flex items-center py-2 px-1 border-b-2 font-medium text-sm ${\r\n//                   activeTab === tab.id\r\n//                     ? 'border-emerald-500 text-emerald-600'\r\n//                     : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n//                 }`}\r\n//               >\r\n//                 <tab.icon className=\"mr-2\" size={16} />\r\n//                 {tab.name}\r\n//               </button>\r\n//             ))}\r\n//           </nav>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Tab Content */}\r\n//       {activeTab === 'overview' && (\r\n//         <div>\r\n//           {/* Filters */}\r\n//           <div className=\"flex flex-wrap items-center gap-4 mb-6\">\r\n//             <div className=\"relative\">\r\n//               <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n//               <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Search customers...\"\r\n//                 value={filters.searchTerm}\r\n//                 onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\r\n//                 className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               />\r\n//             </div>\r\n\r\n//             <select\r\n//               value={filters.customerType}\r\n//               onChange={(e) => setFilters({ ...filters, customerType: e.target.value })}\r\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//             >\r\n//               <option value=\"all\">All Customer Types</option>\r\n//               <option value=\"corporate\">Corporate</option>\r\n//               <option value=\"small_business\">Small Business</option>\r\n//               <option value=\"individual\">Individual</option>\r\n//               <option value=\"cash\">Cash Only</option>\r\n//             </select>\r\n\r\n//             <select\r\n//               value={filters.status}\r\n//               onChange={(e) => setFilters({ ...filters, status: e.target.value })}\r\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//             >\r\n//               <option value=\"all\">All Statuses</option>\r\n//               <option value=\"current\">Current</option>\r\n//               <option value=\"overdue\">Overdue</option>\r\n//               <option value=\"paid_up\">Paid Up</option>\r\n//             </select>\r\n\r\n//             <button\r\n//               onClick={() => setShowInvoiceForm(true)}\r\n//               className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\r\n//             >\r\n//               <Plus size={16} />\r\n//               <span>New Invoice</span>\r\n//             </button>\r\n//           </div>\r\n\r\n//           {/* Customer List */}\r\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//             <div className=\"overflow-x-auto\">\r\n//               <table className=\"w-full\">\r\n//                 <thead className=\"bg-gray-50\">\r\n//                   <tr>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Customer\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Type\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Credit Limit\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Balance\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Overdue\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Credit Status\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Last Payment\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Actions\r\n//                     </th>\r\n//                   </tr>\r\n//                 </thead>\r\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//                   {filteredCustomers.map((customer) => (\r\n//                     <tr key={customer.id} className=\"hover:bg-gray-50\">\r\n//                       <td className=\"px-6 py-4\">\r\n//                         <div>\r\n//                           <div className=\"text-sm font-medium text-gray-900\">{customer.name}</div>\r\n//                           <div className=\"text-sm text-gray-500\">{customer.id}</div>\r\n//                           <div className=\"text-xs text-gray-400 flex items-center mt-1\">\r\n//                             <Mail className=\"mr-1\" size={12} />\r\n//                             {customer.email}\r\n//                           </div>\r\n//                         </div>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-gray-100 text-gray-800\">\r\n//                           {customer.customerType.replace('_', ' ')}\r\n//                         </span>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         ${customer.creditLimit.toLocaleString()}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <div className=\"text-sm font-medium text-gray-900\">\r\n//                           ${customer.totalOwed.toFixed(2)}\r\n//                         </div>\r\n//                         <div className=\"text-xs text-gray-500\">\r\n//                           {customer.invoiceCount} invoices\r\n//                         </div>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         {customer.overdueAmount > 0 ? (\r\n//                           <span className=\"text-red-600 font-medium\">\r\n//                             ${customer.overdueAmount.toFixed(2)}\r\n//                           </span>\r\n//                         ) : (\r\n//                           <span className=\"text-green-600\">$0.00</span>\r\n//                         )}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(customer.creditStatus)}`}>\r\n//                           {customer.creditStatus.replace('_', ' ')}\r\n//                         </span>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {customer.lastPayment}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n//                         <button\r\n//                           onClick={() => setSelectedCustomer(customer)}\r\n//                           className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\r\n//                         >\r\n//                           <Eye size={16} />\r\n//                         </button>\r\n//                         <button className=\"text-blue-600 hover:text-blue-900\">\r\n//                           <Edit size={16} />\r\n//                         </button>\r\n//                       </td>\r\n//                     </tr>\r\n//                   ))}\r\n//                 </tbody>\r\n//               </table>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {activeTab === 'aging' && (\r\n//         <div>\r\n//           <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n//             {/* Aging Summary */}\r\n//             <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Aging Summary</h3>\r\n//               <div className=\"space-y-4\">\r\n//                 <div className=\"flex justify-between items-center p-3 bg-green-50 rounded\">\r\n//                   <span className=\"font-medium text-green-800\">Current (0-30 days)</span>\r\n//                   <span className=\"font-bold text-green-900\">${aging.current.toFixed(2)}</span>\r\n//                 </div>\r\n//                 <div className=\"flex justify-between items-center p-3 bg-yellow-50 rounded\">\r\n//                   <span className=\"font-medium text-yellow-800\">31-60 days</span>\r\n//                   <span className=\"font-bold text-yellow-900\">${aging.days30.toFixed(2)}</span>\r\n//                 </div>\r\n//                 <div className=\"flex justify-between items-center p-3 bg-orange-50 rounded\">\r\n//                   <span className=\"font-medium text-orange-800\">61-90 days</span>\r\n//                   <span className=\"font-bold text-orange-900\">${aging.days60.toFixed(2)}</span>\r\n//                 </div>\r\n//                 <div className=\"flex justify-between items-center p-3 bg-red-50 rounded\">\r\n//                   <span className=\"font-medium text-red-800\">Over 90 days</span>\r\n//                   <span className=\"font-bold text-red-900\">${aging.over90.toFixed(2)}</span>\r\n//                 </div>\r\n//               </div>\r\n//               <div className=\"mt-4 pt-4 border-t\">\r\n//                 <div className=\"flex justify-between items-center\">\r\n//                   <span className=\"text-lg font-semibold text-gray-900\">Total Outstanding</span>\r\n//                   <span className=\"text-xl font-bold text-gray-900\">\r\n//                     ${(aging.current + aging.days30 + aging.days60 + aging.days90 + aging.over90).toFixed(2)}\r\n//                   </span>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n\r\n//             {/* Collection Priority */}\r\n//             <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Collection Priority</h3>\r\n//               <div className=\"space-y-3\">\r\n//                 {customers\r\n//                   .filter(customer => customer.overdueAmount > 0)\r\n//                   .sort((a, b) => b.overdueAmount - a.overdueAmount)\r\n//                   .slice(0, 5)\r\n//                   .map((customer, index) => (\r\n//                     <div key={customer.id} className=\"flex items-center justify-between p-3 bg-red-50 rounded\">\r\n//                       <div>\r\n//                         <div className=\"font-medium text-gray-900\">{customer.name}</div>\r\n//                         <div className=\"text-sm text-gray-500\">\r\n//                           Last payment: {customer.lastPayment}\r\n//                         </div>\r\n//                       </div>\r\n//                       <div className=\"text-right\">\r\n//                         <div className=\"font-bold text-red-900\">${customer.overdueAmount.toFixed(2)}</div>\r\n//                         <div className=\"text-xs text-red-700\">#{index + 1} Priority</div>\r\n//                       </div>\r\n//                     </div>\r\n//                   ))}\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {activeTab === 'invoices' && (\r\n//         <div>\r\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-900\">Recent Invoices</h3>\r\n//             </div>\r\n//             <div className=\"overflow-x-auto\">\r\n//               <table className=\"w-full\">\r\n//                 <thead className=\"bg-gray-50\">\r\n//                   <tr>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Invoice #\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Customer\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Date\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Due Date\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Amount\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Balance\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Status\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Actions\r\n//                     </th>\r\n//                   </tr>\r\n//                 </thead>\r\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//                   {invoices.map((invoice) => (\r\n//                     <tr key={invoice.id} className=\"hover:bg-gray-50\">\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <div className=\"text-sm font-medium text-gray-900\">{invoice.id}</div>\r\n//                         <div className=\"text-xs text-gray-500\">{invoice.source}</div>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4\">\r\n//                         <div className=\"text-sm font-medium text-gray-900\">{invoice.customerName}</div>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {invoice.date}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {invoice.dueDate}\r\n//                         {invoice.daysOverdue > 0 && (\r\n//                           <div className=\"text-xs text-red-600\">\r\n//                             {invoice.daysOverdue} days overdue\r\n//                           </div>\r\n//                         )}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         ${invoice.amount.toFixed(2)}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n//                         {invoice.balance > 0 ? (\r\n//                           <span className=\"text-red-600\">${invoice.balance.toFixed(2)}</span>\r\n//                         ) : (\r\n//                           <span className=\"text-green-600\">$0.00</span>\r\n//                         )}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${getInvoiceStatusColor(invoice.status)}`}>\r\n//                           {invoice.status}\r\n//                         </span>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n//                           <button\r\n//                               className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\r\n//                               onClick={() => setViewInvoice(invoice)}\r\n//                             >\r\n//                               <Eye size={16} />\r\n//                             </button>\r\n//                         <button className=\"text-blue-600 hover:text-blue-900\">\r\n//                           <Download size={16} />\r\n//                         </button>\r\n//                       </td>\r\n//                     </tr>\r\n//                   ))}\r\n//                 </tbody>\r\n//               </table>\r\n//             </div>\r\n//           </div>\r\n//           {/* View Invoice Modal */}\r\n//           <InvoiceModal\r\n//             invoice={viewInvoice}\r\n//             onClose={() => setViewInvoice(null)}\r\n//           />\r\n//         </div>\r\n//       )}\r\n \r\n//       {/* Create Invoice Modal */}\r\n//       {showInvoiceForm && (\r\n//         <CreateInvoiceModal\r\n//           customers={customers}\r\n//           onClose={() => setShowInvoiceForm(false)}\r\n//           onCreate={handleCreateInvoice}\r\n//         />\r\n        \r\n//       )}\r\n\r\n//       {activeTab === 'payments' && (\r\n//         <div>\r\n//           <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-900\">Recent Payments</h3>\r\n//             </div>\r\n//             <div className=\"overflow-x-auto\">\r\n//               <table className=\"w-full\">\r\n//                 <thead className=\"bg-gray-50\">\r\n//                   <tr>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Payment ID\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Customer\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Invoice\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Date\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Amount\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Method\r\n//                     </th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                       Status\r\n//                     </th>\r\n//                   </tr>\r\n//                 </thead>\r\n//                 <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//                   {payments.map((payment) => (\r\n//                     <tr key={payment.id} className=\"hover:bg-gray-50\">\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n//                         {payment.id}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {payment.customerName}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {payment.invoiceId}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         {payment.date}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                         ${payment.amount.toFixed(2)}\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-blue-100 text-blue-800\">\r\n//                           {payment.method.replace('_', ' ')}\r\n//                         </span>\r\n//                       </td>\r\n//                       <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                         <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                           payment.status === 'cleared' ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n//                         }`}>\r\n//                           {payment.status}\r\n//                         </span>\r\n//                       </td>\r\n//                     </tr>\r\n//                   ))}\r\n//                 </tbody>\r\n//               </table>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Customer Detail Modal */}\r\n//       {selectedCustomer && (\r\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\r\n//                   Customer Details - {selectedCustomer.name}\r\n//                 </h3>\r\n//                 <button\r\n//                   onClick={() => setSelectedCustomer(null)}\r\n//                   className=\"text-gray-400 hover:text-gray-600\"\r\n//                 >\r\n//                   <XCircle size={20} />\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <div className=\"px-6 py-4\">\r\n//               {/* Customer Info Grid */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n//                 <div className=\"space-y-4\">\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer ID</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.id}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Email</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.email}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Phone</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.phone}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Address</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.address}</p>\r\n//                   </div>\r\n//                 </div>\r\n                \r\n//                 <div className=\"space-y-4\">\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Customer Type</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.customerType.replace('_', ' ')}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Limit</label>\r\n//                     <p className=\"text-sm text-gray-900\">${selectedCustomer.creditLimit.toLocaleString()}</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Payment Terms</label>\r\n//                     <p className=\"text-sm text-gray-900\">{selectedCustomer.paymentTerms} days</p>\r\n//                   </div>\r\n//                   <div>\r\n//                     <label className=\"text-sm font-medium text-gray-500\">Credit Status</label>\r\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${getCreditStatusColor(selectedCustomer.creditStatus)}`}>\r\n//                       {selectedCustomer.creditStatus.replace('_', ' ')}\r\n//                     </span>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Financial Summary */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\r\n//                 <div className=\"bg-blue-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-blue-600\">Current Balance</div>\r\n//                   <div className=\"text-xl font-bold text-blue-900\">\r\n//                     ${selectedCustomer.totalOwed.toFixed(2)}\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"bg-red-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-red-600\">Overdue Amount</div>\r\n//                   <div className=\"text-xl font-bold text-red-900\">\r\n//                     ${selectedCustomer.overdueAmount.toFixed(2)}\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"bg-green-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-green-600\">Credit Available</div>\r\n//                   <div className=\"text-xl font-bold text-green-900\">\r\n//                     ${(selectedCustomer.creditLimit - selectedCustomer.totalOwed).toFixed(2)}\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"bg-purple-50 p-4 rounded-lg\">\r\n//                   <div className=\"text-sm font-medium text-purple-600\">Avg Payment Days</div>\r\n//                   <div className=\"text-xl font-bold text-purple-900\">\r\n//                     {selectedCustomer.avgPaymentDays}\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Customer Invoices */}\r\n//               <div className=\"mb-6\">\r\n//                 <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Customer Invoices</h4>\r\n//                 <div className=\"overflow-x-auto\">\r\n//                   <table className=\"w-full border border-gray-200 rounded\">\r\n//                     <thead className=\"bg-gray-50\">\r\n//                       <tr>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Invoice</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Date</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Due Date</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Amount</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Balance</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Status</th>\r\n//                       </tr>\r\n//                     </thead>\r\n//                     <tbody className=\"divide-y divide-gray-200\">\r\n//                       {invoices\r\n//                         .filter(inv => inv.customerId === selectedCustomer.id)\r\n//                         .map((invoice) => (\r\n//                           <tr key={invoice.id}>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{invoice.id}</td>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{invoice.date}</td>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900\">{invoice.dueDate}</td>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">${invoice.amount.toFixed(2)}</td>\r\n//                             <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">${invoice.balance.toFixed(2)}</td>\r\n//                             <td className=\"px-4 py-2\">\r\n//                               <span className={`px-2 py-1 text-xs font-medium rounded-full ${getInvoiceStatusColor(invoice.status)}`}>\r\n//                                 {invoice.status}\r\n//                               </span>\r\n//                             </td>\r\n//                           </tr>\r\n//                         ))}\r\n//                     </tbody>\r\n//                   </table>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Action Buttons */}\r\n//               <div className=\"flex space-x-3\">\r\n//                 <button className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\">\r\n//                   <Plus size={16} />\r\n//                   <span>New Invoice</span>\r\n//                 </button>\r\n//                 <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\r\n//                   <CheckCircle size={16} />\r\n//                   <span>Record Payment</span>\r\n//                 </button>\r\n//                 <button className=\"px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 flex items-center space-x-2\">\r\n//                   <Mail size={16} />\r\n//                   <span>Send Statement</span>\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* New Invoice Form */}\r\n//       {showInvoiceForm && (\r\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">Create New Invoice</h3>\r\n//                 <button\r\n//                   onClick={() => setShowInvoiceForm(false)}\r\n//                   className=\"text-gray-400 hover:text-gray-600\"\r\n//                 >\r\n//                   <XCircle size={20} />\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <div className=\"px-6 py-4\">\r\n//               {/* Invoice Header */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\r\n//                 <div>\r\n//                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">Customer *</label>\r\n//                   <select\r\n//                     value={newInvoice.customerId}\r\n//                     onChange={(e) => setNewInvoice({ ...newInvoice, customerId: e.target.value })}\r\n//                     className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//                   >\r\n//                     <option value=\"\">Select Customer</option>\r\n//                     {customers.filter(c => c.customerType !== 'cash').map(customer => (\r\n//                       <option key={customer.id} value={customer.id}>\r\n//                         {customer.name} ({customer.id})\r\n//                       </option>\r\n//                     ))}\r\n//                   </select>\r\n//                 </div>\r\n//                 <div>\r\n//                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">Due Date *</label>\r\n//                   <input\r\n//                     type=\"date\"\r\n//                     value={newInvoice.dueDate}\r\n//                     onChange={(e) => setNewInvoice({ ...newInvoice, dueDate: e.target.value })}\r\n//                     className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//                   />\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Invoice Items */}\r\n//               <div className=\"mb-6\">\r\n//                 <label className=\"block text-sm font-medium text-gray-700 mb-2\">Invoice Items</label>\r\n//                 <div className=\"space-y-3\">\r\n//                   {newInvoice.items.map((item, index) => (\r\n//                     <div key={index} className=\"grid grid-cols-12 gap-2 items-center bg-gray-50 p-3 rounded\">\r\n//                       <div className=\"col-span-5\">\r\n//                         <input\r\n//                           type=\"text\"\r\n//                           value={item.description}\r\n//                           onChange={(e) => updateInvoiceItem(index, 'description', e.target.value)}\r\n//                           placeholder=\"Item description\"\r\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                         />\r\n//                       </div>\r\n//                       <div className=\"col-span-2\">\r\n//                         <input\r\n//                           type=\"number\"\r\n//                           value={item.quantity}\r\n//                           onChange={(e) => updateInvoiceItem(index, 'quantity', parseFloat(e.target.value) || 0)}\r\n//                           placeholder=\"Qty\"\r\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                         />\r\n//                       </div>\r\n//                       <div className=\"col-span-2\">\r\n//                         <input\r\n//                           type=\"number\"\r\n//                           step=\"0.01\"\r\n//                           value={item.price}\r\n//                           onChange={(e) => updateInvoiceItem(index, 'price', parseFloat(e.target.value) || 0)}\r\n//                           placeholder=\"Price\"\r\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                         />\r\n//                       </div>\r\n//                       <div className=\"col-span-2\">\r\n//                         <input\r\n//                           type=\"number\"\r\n//                           step=\"0.01\"\r\n//                           value={item.total}\r\n//                           readOnly\r\n//                           className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm bg-gray-100\"\r\n//                         />\r\n//                       </div>\r\n//                       <div className=\"col-span-1\">\r\n//                         {newInvoice.items.length > 1 && (\r\n//                           <button\r\n//                             onClick={() => {\r\n//                               const updatedItems = newInvoice.items.filter((_, i) => i !== index);\r\n//                               setNewInvoice({ ...newInvoice, items: updatedItems });\r\n//                             }}\r\n//                             className=\"p-1 text-red-600 hover:bg-red-100 rounded\"\r\n//                           >\r\n//                             <XCircle size={14} />\r\n//                           </button>\r\n//                         )}\r\n//                       </div>\r\n//                     </div>\r\n//                   ))}\r\n//                 </div>\r\n\r\n//                 <div className=\"flex justify-between items-center mt-3\">\r\n//                   <button\r\n//                     onClick={addInvoiceItem}\r\n//                     className=\"px-3 py-1 text-sm bg-emerald-100 text-emerald-700 rounded hover:bg-emerald-200 flex items-center space-x-1\"\r\n//                   >\r\n//                     <Plus size={14} />\r\n//                     <span>Add Item</span>\r\n//                   </button>\r\n\r\n//                   <div className=\"text-lg font-semibold\">\r\n//                     Total: ${calculateInvoiceTotal().toFixed(2)}\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Notes */}\r\n//               <div className=\"mb-6\">\r\n//                 <label className=\"block text-sm font-medium text-gray-700 mb-1\">Notes</label>\r\n//                 <textarea\r\n//                   value={newInvoice.notes}\r\n//                   onChange={(e) => setNewInvoice({ ...newInvoice, notes: e.target.value })}\r\n//                   rows={3}\r\n//                   placeholder=\"Additional notes...\"\r\n//                   className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//                 />\r\n//               </div>\r\n\r\n//               {/* Action Buttons */}\r\n//               <div className=\"flex space-x-3\">\r\n//                 <button\r\n//                   onClick={() => {\r\n//                     handleCreateInvoice()\r\n \r\n//                     // Save invoice logic would go here\r\n//                     alert('Invoice created successfully!');\r\n//                   //  setShowInvoiceForm(false);\r\n//                   }}\r\n//                   className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\r\n//                 >\r\n//                   <CheckCircle size={16} />\r\n//                   <span>Create Invoice</span>\r\n//                 </button>\r\n//                 <button\r\n//                   onClick={() => setShowInvoiceForm(false)}\r\n//                   className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\"\r\n//                 >\r\n//                   <XCircle size={16} />\r\n//                   <span>Cancel</span>\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Integration Status */}\r\n//       <div className=\"mt-8 p-6 bg-green-50 border border-green-200 rounded-lg\">\r\n//         <div className=\"flex items-center mb-4\">\r\n//           <CheckCircle className=\"text-green-600 mr-2\" size={20} />\r\n//           <h3 className=\"font-medium text-green-800\">POS Integration Active</h3>\r\n//         </div>\r\n//         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm text-green-700\">\r\n//           <div>\r\n//             <strong>Credit Sales:</strong> Automatically create AR entries when customers buy on credit in POS\r\n//           </div>\r\n//           <div>\r\n//             <strong>Customer Limits:</strong> POS checks credit limits before allowing credit sales\r\n//           </div>\r\n//           <div>\r\n//             <strong>Real-time Updates:</strong> Customer balances update instantly with each transaction\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AccountsReceivable;\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { CreditCard } from 'lucide-react';\r\nimport ARSummaryCards from '../components/ARSummaryCards';\r\nimport ARTabs from '../components/ARTabs';\r\nimport CustomerOverview from '../components/CustomerOverview';\r\nimport InvoicesTab from '../components/InvoicesTab';\r\nimport AgingReport from '../components/AgingReport';\r\nimport PaymentsTab from '../components/PaymentsTab';\r\nimport { useARData } from '../hooks/useARData';\r\n\r\nconst AccountsReceivable = () => {\r\n  const {\r\n    customers,\r\n    invoices,\r\n    payments,\r\n    loading,\r\n    error,\r\n    calculateARSummary,\r\n    getAgingData\r\n  } = useARData();\r\n\r\n  const [activeTab, setActiveTab] = useState('overview');\r\n  const [filters, setFilters] = useState({\r\n    customerType: 'all',\r\n    status: 'all',\r\n    dateRange: '30',\r\n    searchTerm: ''\r\n  });\r\n\r\n  const summary = calculateARSummary();\r\n  const aging = getAgingData();\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error}</div>;\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto p-6 bg-white\">\r\n      {/* Header */}\r\n      <div className=\"mb-8\">\r\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\r\n          <CreditCard className=\"mr-3 text-emerald-600\" />\r\n          Accounts Receivable\r\n        </h1>\r\n        <p className=\"text-gray-600\">Manage customer invoicing, payments, and credit limits</p>\r\n      </div>\r\n\r\n      {/* Summary Cards */}\r\n      <ARSummaryCards summary={summary} customers={customers} />\r\n\r\n      {/* Tabs */}\r\n      <ARTabs activeTab={activeTab} setActiveTab={setActiveTab} />\r\n\r\n      {/* Tab Content */}\r\n      {activeTab === 'overview' && (\r\n        <CustomerOverview \r\n          customers={customers}\r\n          invoices={invoices}\r\n          filters={filters}\r\n          setFilters={setFilters}\r\n        />\r\n      )}\r\n      \r\n      {activeTab === 'invoices' && (\r\n        <InvoicesTab invoices={invoices} customers={customers} />\r\n      )}\r\n      \r\n      {activeTab === 'aging' && (\r\n        <AgingReport aging={aging} customers={customers} />\r\n      )}\r\n      \r\n      {activeTab === 'payments' && (\r\n        <PaymentsTab payments={payments} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountsReceivable;"],"mappingslD,SAASC,UAAU,QAAQ,cAAc;AACzC,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,SAASC,SAAS,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM;IACJC,SAAS;IACTC,QAAQ;IACRC,QAAQ;IACRC,OAAO;IACPC,KAAK;IACLC,kBAAkB;IAClBC;EACF,CAAC,GAAGX,SAAS,CAAC,CAAC;EAEf,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,UAAU,CAAC;EACtD,MAAM,CAACuB,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC;IACrCyB,YAAY,EAAE,KAAK;IACnBC,MAAM,EAAE,KAAK;IACbC,SAAS,EAAE,IAAI;IACfC,UAAU,EAAE;EACd,CAAC,CAAC;EAEF,MAAMC,OAAO,GAAGV,kBAAkB,CAAC,CAAC;EACpC,MAAMW,KAAK,GAAGV,YAAY,CAAC,CAAC;EAE5B,IAAIH,OAAO,EAAE,oBAAON,OAAA;IAAAoB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACzC,IAAIjB,KAAK,EAAE,oBAAOP,OAAA;IAAAoB,QAAA,GAAK,SAAO,EAACb,KAAK;EAAA;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAE3C,oBACExB,OAAA;IAAKyB,SAAS,EAAC,gCAAgC;IAAAL,QAAA,gBAE7CpB,OAAA;MAAKyB,SAAS,EAAC,MAAM;MAAAL,QAAA,gBACnBpB,OAAA;QAAIyB,SAAS,EAAC,yDAAyD;QAAAL,QAAA,gBACrEpB,OAAA,CAACT,UAAU;UAACkC,SAAS,EAAC;QAAuB;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,uBAElD;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLxB,OAAA;QAAGyB,SAAS,EAAC,eAAe;QAAAL,QAAA,EAAC;MAAsD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpF,CAAC,eAGNxB,OAAA,CAACR,cAAc;MAAC0B,OAAO,EAAEA,OAAQ;MAACf,SAAS,EAAEA;IAAU;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAG1DxB,OAAA,CAACP,MAAM;MAACiB,SAAS,EAAEA,SAAU;MAACC,YAAY,EAAEA;IAAa;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAG3Dd,SAAS,KAAK,UAAU,iBACvBV,OAAA,CAACN,gBAAgB;MACfS,SAAS,EAAEA,SAAU;MACrBC,QAAQ,EAAEA,QAAS;MACnBQ,OAAO,EAAEA,OAAQ;MACjBC,UAAU,EAAEA;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CACF,EAEAd,SAAS,KAAK,UAAU,iBACvBV,OAAA,CAACL,WAAW;MAACS,QAAQ,EAAEA,QAAS;MAACD,SAAS,EAAEA;IAAU;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACzD,EAEAd,SAAS,KAAK,OAAO,iBACpBV,OAAA,CAACJ,WAAW;MAACuB,KAAK,EAAEA,KAAM;MAAChB,SAAS,EAAEA;IAAU;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACnD,EAEAd,SAAS,KAAK,UAAU,iBACvBV,OAAA,CAACH,WAAW;MAACQ,QAAQ,EAAEA;IAAS;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACnC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtB,EAAA,CAjEID,kBAAkB;EAAA,QASlBH,SAAS;AAAA;AAAA4B,EAAA,GATTzB,kBAAkB;AAmExB,eAAeA,kBAAkB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}