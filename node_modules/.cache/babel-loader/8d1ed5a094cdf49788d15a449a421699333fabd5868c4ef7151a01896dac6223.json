{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Logic-Unit\\\\my-account\\\\src\\\\pages\\\\GeneralLedger.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { \n//   Book, \n//   Plus, \n//   Filter, \n//   Search, \n//   Calendar, \n//   FileText, \n//   Edit, \n//   Trash2, \n//   Save, \n//   X, \n//   AlertCircle,\n//   CheckCircle,\n//   DollarSign,\n//   TrendingUp,\n//   Eye,\n//   Download\n// } from 'lucide-react';\n\n// const GeneralLedger = () => {\n//   const [journalEntries, setJournalEntries] = useState([]);\n//   const [accounts, setAccounts] = useState([]);\n//   const [filteredEntries, setFilteredEntries] = useState([]);\n//   const [selectedEntry, setSelectedEntry] = useState(null);\n//   const [isAddingEntry, setIsAddingEntry] = useState(false);\n//   const [filters, setFilters] = useState({\n//     dateFrom: '',\n//     dateTo: '',\n//     accountId: '',\n//     transactionType: 'all',\n//     searchTerm: ''\n//   });\n//   const [trialBalance, setTrialBalance] = useState([]);\n//   const [showTrialBalance, setShowTrialBalance] = useState(false);\n//   const [newEntry, setNewEntry] = useState({\n//     date: new Date().toISOString().split('T')[0],\n//     description: '',\n//     reference: '',\n//     entries: [\n//       { accountId: '', debit: 0, credit: 0, description: '' },\n//       { accountId: '', debit: 0, credit: 0, description: '' }\n//     ]\n//   });\n\n//   // Sample Chart of Accounts\n//   const chartOfAccounts = [\n//     { id: '1111', code: '1111', name: 'Petty Cash', type: 'assets' },\n//     { id: '1112', code: '1112', name: 'Bank - Main Account', type: 'assets' },\n//     { id: '1120', code: '1120', name: 'Accounts Receivable', type: 'assets' },\n//     { id: '1130', code: '1130', name: 'Inventory', type: 'assets' },\n//     { id: '2110', code: '2110', name: 'Accounts Payable', type: 'liabilities' },\n//     { id: '2130', code: '2130', name: 'Sales Tax Payable', type: 'liabilities' },\n//     { id: '4100', code: '4100', name: 'Sales Revenue - Medical', type: 'revenue' },\n//     { id: '5100', code: '5100', name: 'Cost of Goods Sold', type: 'expenses' },\n//     { id: '5200', code: '5200', name: 'Purchase Expenses', type: 'expenses' },\n//     { id: '5210', code: '5210', name: 'Office Supplies', type: 'expenses' }\n//   ];\n\n//   useEffect(() => {\n//     setAccounts(chartOfAccounts);\n//     loadSampleJournalEntries();\n//   }, []);\n\n//   useEffect(() => {\n//     filterEntries();\n//   }, [journalEntries, filters]);\n\n//   const loadSampleJournalEntries = () => {\n//     const sampleEntries = [\n//       {\n//         id: 'JE001',\n//         date: '2025-01-15',\n//         description: 'POS Sale #POS001 - Medical products',\n//         reference: 'POS001',\n//         transactionType: 'automatic',\n//         source: 'POS',\n//         status: 'posted',\n//         entries: [\n//           { accountId: '1111', accountName: 'Petty Cash', debit: 60.50, credit: 0, description: 'Cash received from customer' },\n//           { accountId: '4100', accountName: 'Sales Revenue - Medical', debit: 0, credit: 55.00, description: 'Revenue from medical products' },\n//           { accountId: '2130', accountName: 'Sales Tax Payable', debit: 0, credit: 5.50, description: 'Sales tax collected' },\n//           { accountId: '5100', accountName: 'Cost of Goods Sold', debit: 33.00, credit: 0, description: 'Cost of products sold' },\n//           { accountId: '1130', accountName: 'Inventory', debit: 0, credit: 33.00, description: 'Inventory reduction' }\n//         ],\n//         totalDebit: 93.50,\n//         totalCredit: 93.50,\n//         createdAt: '2025-01-15T10:30:00Z'\n//       },\n//       {\n//         id: 'JE002',\n//         date: '2025-01-14',\n//         description: 'Purchase Order #PO002 - Medical inventory',\n//         reference: 'PO002',\n//         transactionType: 'automatic',\n//         source: 'Purchase',\n//         status: 'posted',\n//         entries: [\n//           { accountId: '1130', accountName: 'Inventory', debit: 350.00, credit: 0, description: 'Medical products purchased' },\n//           { accountId: '2110', accountName: 'Accounts Payable', debit: 0, credit: 350.00, description: 'Amount owed to Medical Supply Co.' }\n//         ],\n//         totalDebit: 350.00,\n//         totalCredit: 350.00,\n//         createdAt: '2025-01-14T14:20:00Z'\n//       },\n//       {\n//         id: 'JE003',\n//         date: '2025-01-13',\n//         description: 'Manual adjustment - Inventory count variance',\n//         reference: 'ADJ001',\n//         transactionType: 'manual',\n//         source: 'Manual',\n//         status: 'posted',\n//         entries: [\n//           { accountId: '1130', accountName: 'Inventory', debit: 25.00, credit: 0, description: 'Inventory adjustment - undercount' },\n//           { accountId: '5200', accountName: 'Purchase Expenses', debit: 0, credit: 25.00, description: 'Adjustment to purchase variance' }\n//         ],\n//         totalDebit: 25.00,\n//         totalCredit: 25.00,\n//         createdAt: '2025-01-13T16:45:00Z'\n//       },\n//       {\n//         id: 'JE004',\n//         date: '2025-01-15',\n//         description: 'POS Sale #POS002 - Medical products',\n//         reference: 'POS002',\n//         transactionType: 'automatic',\n//         source: 'POS',\n//         status: 'posted',\n//         entries: [\n//           { accountId: '1112', accountName: 'Bank - Main Account', debit: 85.00, credit: 0, description: 'Card payment received' },\n//           { accountId: '4100', accountName: 'Sales Revenue - Medical', debit: 0, credit: 77.27, description: 'Revenue from medical products' },\n//           { accountId: '2130', accountName: 'Sales Tax Payable', debit: 0, credit: 7.73, description: 'Sales tax collected' },\n//           { accountId: '5100', accountName: 'Cost of Goods Sold', debit: 46.36, credit: 0, description: 'Cost of products sold' },\n//           { accountId: '1130', accountName: 'Inventory', debit: 0, credit: 46.36, description: 'Inventory reduction' }\n//         ],\n//         totalDebit: 131.36,\n//         totalCredit: 131.36,\n//         createdAt: '2025-01-15T15:20:00Z'\n//       }\n//     ];\n\n//     setJournalEntries(sampleEntries);\n//   };\n\n//   const filterEntries = () => {\n//     let filtered = [...journalEntries];\n\n//     if (filters.dateFrom) {\n//       filtered = filtered.filter(entry => entry.date >= filters.dateFrom);\n//     }\n//     if (filters.dateTo) {\n//       filtered = filtered.filter(entry => entry.date <= filters.dateTo);\n//     }\n//     if (filters.accountId) {\n//       filtered = filtered.filter(entry => \n//         entry.entries.some(e => e.accountId === filters.accountId)\n//       );\n//     }\n//     if (filters.transactionType !== 'all') {\n//       filtered = filtered.filter(entry => entry.transactionType === filters.transactionType);\n//     }\n//     if (filters.searchTerm) {\n//       const term = filters.searchTerm.toLowerCase();\n//       filtered = filtered.filter(entry => \n//         entry.description.toLowerCase().includes(term) ||\n//         entry.reference.toLowerCase().includes(term) ||\n//         entry.entries.some(e => e.description.toLowerCase().includes(term))\n//       );\n//     }\n\n//     setFilteredEntries(filtered);\n//   };\n\n//   const generateTrialBalance = () => {\n//     const balances = {};\n\n//     // Initialize all accounts\n//     chartOfAccounts.forEach(account => {\n//       balances[account.id] = {\n//         accountId: account.id,\n//         accountCode: account.code,\n//         accountName: account.name,\n//         accountType: account.type,\n//         debit: 0,\n//         credit: 0,\n//         balance: 0\n//       };\n//     });\n\n//     // Calculate balances from journal entries\n//     journalEntries.forEach(entry => {\n//       if (entry.status === 'posted') {\n//         entry.entries.forEach(entryLine => {\n//           if (balances[entryLine.accountId]) {\n//             balances[entryLine.accountId].debit += entryLine.debit;\n//             balances[entryLine.accountId].credit += entryLine.credit;\n//           }\n//         });\n//       }\n//     });\n\n//     // Calculate net balances\n//     Object.values(balances).forEach(account => {\n//       if (account.accountType === 'assets' || account.accountType === 'expenses') {\n//         account.balance = account.debit - account.credit;\n//       } else {\n//         account.balance = account.credit - account.debit;\n//       }\n//     });\n\n//     const trialBalanceData = Object.values(balances)\n//       .filter(account => account.debit !== 0 || account.credit !== 0)\n//       .sort((a, b) => a.accountCode.localeCompare(b.accountCode));\n\n//     setTrialBalance(trialBalanceData);\n//     setShowTrialBalance(true);\n//   };\n\n//   const addEntryLine = () => {\n//     setNewEntry({\n//       ...newEntry,\n//       entries: [...newEntry.entries, { accountId: '', debit: 0, credit: 0, description: '' }]\n//     });\n//   };\n\n//   const removeEntryLine = (index) => {\n//     if (newEntry.entries.length > 2) {\n//       const updatedEntries = newEntry.entries.filter((_, i) => i !== index);\n//       setNewEntry({ ...newEntry, entries: updatedEntries });\n//     }\n//   };\n\n//   const updateEntryLine = (index, field, value) => {\n//     const updatedEntries = [...newEntry.entries];\n//     updatedEntries[index] = { ...updatedEntries[index], [field]: value };\n//     setNewEntry({ ...newEntry, entries: updatedEntries });\n//   };\n\n//   const calculateTotals = (entries) => {\n//     const totalDebit = entries.reduce((sum, entry) => sum + (parseFloat(entry.debit) || 0), 0);\n//     const totalCredit = entries.reduce((sum, entry) => sum + (parseFloat(entry.credit) || 0), 0);\n//     return { totalDebit, totalCredit };\n//   };\n\n//   const isBalanced = (entries) => {\n//     const { totalDebit, totalCredit } = calculateTotals(entries);\n//     return Math.abs(totalDebit - totalCredit) < 0.01;\n//   };\n\n//   const saveJournalEntry = () => {\n//     if (!newEntry.description || !newEntry.entries.every(e => e.accountId)) {\n//       alert('Please fill in all required fields');\n//       return;\n//     }\n\n//     if (!isBalanced(newEntry.entries)) {\n//       alert('Journal entry must be balanced - total debits must equal total credits');\n//       return;\n//     }\n\n//     const { totalDebit, totalCredit } = calculateTotals(newEntry.entries);\n\n//     // Add account names to entries\n//     const entriesWithNames = newEntry.entries.map(entry => ({\n//       ...entry,\n//       accountName: accounts.find(acc => acc.id === entry.accountId)?.name || '',\n//       debit: parseFloat(entry.debit) || 0,\n//       credit: parseFloat(entry.credit) || 0\n//     }));\n\n//     const journalEntry = {\n//       id: `JE${String(journalEntries.length + 1).padStart(3, '0')}`,\n//       date: newEntry.date,\n//       description: newEntry.description,\n//       reference: newEntry.reference || `MAN${Date.now()}`,\n//       transactionType: 'manual',\n//       source: 'Manual',\n//       status: 'posted',\n//       entries: entriesWithNames,\n//       totalDebit,\n//       totalCredit,\n//       createdAt: new Date().toISOString()\n//     };\n\n//     setJournalEntries([...journalEntries, journalEntry]);\n\n//     // Reset form\n//     setNewEntry({\n//       date: new Date().toISOString().split('T')[0],\n//       description: '',\n//       reference: '',\n//       entries: [\n//         { accountId: '', debit: 0, credit: 0, description: '' },\n//         { accountId: '', debit: 0, credit: 0, description: '' }\n//       ]\n//     });\n//     setIsAddingEntry(false);\n//   };\n\n//   const getAccountName = (accountId) => {\n//     const account = accounts.find(acc => acc.id === accountId);\n//     return account ? `${account.code} - ${account.name}` : '';\n//   };\n\n//   const { totalDebit, totalCredit } = calculateTotals(newEntry.entries);\n//   const entryIsBalanced = isBalanced(newEntry.entries);\n\n//   return (\n//     <div className=\"max-w-7xl mx-auto p-6 bg-white\">\n//       {/* Header */}\n//       <div className=\"mb-8\">\n//         <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\n//           <Book className=\"mr-3 text-emerald-600\" />\n//           General Ledger\n//         </h1>\n//         <p className=\"text-gray-600\">Real-time transaction recording and journal entry management</p>\n//       </div>\n\n//       {/* Quick Stats */}\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n//         <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-blue-600 text-sm font-medium\">Total Entries</p>\n//               <p className=\"text-2xl font-bold text-blue-900\">{journalEntries.length}</p>\n//             </div>\n//             <FileText className=\"text-blue-600\" size={24} />\n//           </div>\n//         </div>\n\n//         <div className=\"bg-green-50 p-4 rounded-lg border border-green-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-green-600 text-sm font-medium\">Automatic Entries</p>\n//               <p className=\"text-2xl font-bold text-green-900\">\n//                 {journalEntries.filter(e => e.transactionType === 'automatic').length}\n//               </p>\n//             </div>\n//             <TrendingUp className=\"text-green-600\" size={24} />\n//           </div>\n//         </div>\n\n//         <div className=\"bg-orange-50 p-4 rounded-lg border border-orange-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-orange-600 text-sm font-medium\">Manual Entries</p>\n//               <p className=\"text-2xl font-bold text-orange-900\">\n//                 {journalEntries.filter(e => e.transactionType === 'manual').length}\n//               </p>\n//             </div>\n//             <Edit className=\"text-orange-600\" size={24} />\n//           </div>\n//         </div>\n\n//         <div className=\"bg-purple-50 p-4 rounded-lg border border-purple-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-purple-600 text-sm font-medium\">Total Value</p>\n//               <p className=\"text-2xl font-bold text-purple-900\">\n//                 ${journalEntries.reduce((sum, entry) => sum + entry.totalDebit, 0).toFixed(2)}\n//               </p>\n//             </div>\n//             <DollarSign className=\"text-purple-600\" size={24} />\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Controls */}\n//       <div className=\"flex flex-wrap items-center justify-between gap-4 mb-6\">\n//         <div className=\"flex flex-wrap items-center gap-4\">\n//           {/* Date Filters */}\n//           <div className=\"flex items-center space-x-2\">\n//             <Calendar size={16} className=\"text-gray-400\" />\n//             <input\n//               type=\"date\"\n//               value={filters.dateFrom}\n//               onChange={(e) => setFilters({ ...filters, dateFrom: e.target.value })}\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               placeholder=\"From\"\n//             />\n//             <span className=\"text-gray-500\">to</span>\n//             <input\n//               type=\"date\"\n//               value={filters.dateTo}\n//               onChange={(e) => setFilters({ ...filters, dateTo: e.target.value })}\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               placeholder=\"To\"\n//             />\n//           </div>\n\n//           {/* Account Filter */}\n//           <div className=\"relative\">\n//             <Filter className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\n//             <select\n//               value={filters.accountId}\n//               onChange={(e) => setFilters({ ...filters, accountId: e.target.value })}\n//               className=\"pl-10 pr-8 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//             >\n//               <option value=\"\">All Accounts</option>\n//               {accounts.map(account => (\n//                 <option key={account.id} value={account.id}>\n//                   {account.code} - {account.name}\n//                 </option>\n//               ))}\n//             </select>\n//           </div>\n\n//           {/* Transaction Type Filter */}\n//           <select\n//             value={filters.transactionType}\n//             onChange={(e) => setFilters({ ...filters, transactionType: e.target.value })}\n//             className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//           >\n//             <option value=\"all\">All Types</option>\n//             <option value=\"automatic\">Automatic</option>\n//             <option value=\"manual\">Manual</option>\n//           </select>\n\n//           {/* Search */}\n//           <div className=\"relative\">\n//             <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search entries...\"\n//               value={filters.searchTerm}\n//               onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\n//               className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//             />\n//           </div>\n//         </div>\n\n//         <div className=\"flex space-x-3\">\n//           <button\n//             onClick={() => setIsAddingEntry(true)}\n//             className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\n//           >\n//             <Plus size={16} />\n//             <span>Add Entry</span>\n//           </button>\n//           <button\n//             onClick={generateTrialBalance}\n//             className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\"\n//           >\n//             <FileText size={16} />\n//             <span>Trial Balance</span>\n//           </button>\n//         </div>\n//       </div>\n\n//       {/* Journal Entry Form */}\n//       {isAddingEntry && (\n//         <div className=\"mb-8 p-6 bg-gray-50 rounded-lg border\">\n//           <h3 className=\"text-lg font-semibold mb-4\">Add Manual Journal Entry</h3>\n\n//           <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n//             <div>\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Date *</label>\n//               <input\n//                 type=\"date\"\n//                 value={newEntry.date}\n//                 onChange={(e) => setNewEntry({ ...newEntry, date: e.target.value })}\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               />\n//             </div>\n//             <div>\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Description *</label>\n//               <input\n//                 type=\"text\"\n//                 value={newEntry.description}\n//                 onChange={(e) => setNewEntry({ ...newEntry, description: e.target.value })}\n//                 placeholder=\"Enter description\"\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               />\n//             </div>\n//             <div>\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Reference</label>\n//               <input\n//                 type=\"text\"\n//                 value={newEntry.reference}\n//                 onChange={(e) => setNewEntry({ ...newEntry, reference: e.target.value })}\n//                 placeholder=\"Reference number\"\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               />\n//             </div>\n//           </div>\n\n//           {/* Entry Lines */}\n//           <div className=\"mb-4\">\n//             <label className=\"block text-sm font-medium text-gray-700 mb-2\">Journal Entry Lines</label>\n//             <div className=\"space-y-3\">\n//               {newEntry.entries.map((entry, index) => (\n//                 <div key={index} className=\"grid grid-cols-12 gap-2 items-center bg-white p-3 rounded border\">\n//                   <div className=\"col-span-4\">\n//                     <select\n//                       value={entry.accountId}\n//                       onChange={(e) => updateEntryLine(index, 'accountId', e.target.value)}\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                     >\n//                       <option value=\"\">Select Account</option>\n//                       {accounts.map(account => (\n//                         <option key={account.id} value={account.id}>\n//                           {account.code} - {account.name}\n//                         </option>\n//                       ))}\n//                     </select>\n//                   </div>\n//                   <div className=\"col-span-3\">\n//                     <input\n//                       type=\"text\"\n//                       value={entry.description}\n//                       onChange={(e) => updateEntryLine(index, 'description', e.target.value)}\n//                       placeholder=\"Description\"\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                     />\n//                   </div>\n//                   <div className=\"col-span-2\">\n//                     <input\n//                       type=\"number\"\n//                       step=\"0.01\"\n//                       value={entry.debit}\n//                       onChange={(e) => updateEntryLine(index, 'debit', e.target.value)}\n//                       placeholder=\"Debit\"\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                     />\n//                   </div>\n//                   <div className=\"col-span-2\">\n//                     <input\n//                       type=\"number\"\n//                       step=\"0.01\"\n//                       value={entry.credit}\n//                       onChange={(e) => updateEntryLine(index, 'credit', e.target.value)}\n//                       placeholder=\"Credit\"\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                     />\n//                   </div>\n//                   <div className=\"col-span-1\">\n//                     {newEntry.entries.length > 2 && (\n//                       <button\n//                         onClick={() => removeEntryLine(index)}\n//                         className=\"p-1 text-red-600 hover:bg-red-100 rounded\"\n//                       >\n//                         <Trash2 size={14} />\n//                       </button>\n//                     )}\n//                   </div>\n//                 </div>\n//               ))}\n//             </div>\n\n//             <div className=\"flex justify-between items-center mt-3\">\n//               <button\n//                 onClick={addEntryLine}\n//                 className=\"px-3 py-1 text-sm bg-gray-200 text-gray-700 rounded hover:bg-gray-300 flex items-center space-x-1\"\n//               >\n//                 <Plus size={14} />\n//                 <span>Add Line</span>\n//               </button>\n\n//               <div className=\"flex items-center space-x-4\">\n//                 <div className=\"text-sm\">\n//                   <span className=\"font-medium\">Total Debit: ${totalDebit.toFixed(2)}</span>\n//                   <span className=\"mx-2\">|</span>\n//                   <span className=\"font-medium\">Total Credit: ${totalCredit.toFixed(2)}</span>\n//                 </div>\n//                 {entryIsBalanced ? (\n//                   <div className=\"flex items-center text-green-600\">\n//                     <CheckCircle size={16} className=\"mr-1\" />\n//                     <span className=\"text-sm\">Balanced</span>\n//                   </div>\n//                 ) : (\n//                   <div className=\"flex items-center text-red-600\">\n//                     <AlertCircle size={16} className=\"mr-1\" />\n//                     <span className=\"text-sm\">Not Balanced</span>\n//                   </div>\n//                 )}\n//               </div>\n//             </div>\n//           </div>\n\n//           <div className=\"flex space-x-3\">\n//             <button\n//               onClick={saveJournalEntry}\n//               disabled={!entryIsBalanced}\n//               className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 disabled:bg-gray-400 flex items-center space-x-2\"\n//             >\n//               <Save size={16} />\n//               <span>Save Entry</span>\n//             </button>\n//             <button\n//               onClick={() => setIsAddingEntry(false)}\n//               className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\"\n//             >\n//               <X size={16} />\n//               <span>Cancel</span>\n//             </button>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Journal Entries Table */}\n//       <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//         <div className=\"px-6 py-4 border-b border-gray-200\">\n//           <h2 className=\"text-lg font-semibold text-gray-900\">Journal Entries</h2>\n//           <p className=\"text-sm text-gray-600 mt-1\">\n//             Showing {filteredEntries.length} of {journalEntries.length} entries\n//           </p>\n//         </div>\n\n//         <div className=\"overflow-x-auto\">\n//           <table className=\"w-full\">\n//             <thead className=\"bg-gray-50\">\n//               <tr>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Entry ID\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Date\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Description\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Reference\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Source\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Amount\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Status\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Actions\n//                 </th>\n//               </tr>\n//             </thead>\n//             <tbody className=\"bg-white divide-y divide-gray-200\">\n//               {filteredEntries.map((entry) => (\n//                 <tr key={entry.id} className=\"hover:bg-gray-50\">\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n//                     {entry.id}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                     {entry.date}\n//                   </td>\n//                   <td className=\"px-6 py-4 text-sm text-gray-900 max-w-xs truncate\">\n//                     {entry.description}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                     {entry.reference}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                       entry.transactionType === 'automatic' ? 'bg-green-100 text-green-800' : 'bg-orange-100 text-orange-800'\n//                     }`}>\n//                       {entry.source}\n//                     </span>\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                     ${entry.totalDebit.toFixed(2)}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                       entry.status === 'posted' ? 'bg-blue-100 text-blue-800' : 'bg-yellow-100 text-yellow-800'\n//                     }`}>\n//                       {entry.status}\n//                     </span>\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n//                     <button\n//                       onClick={() => setSelectedEntry(entry)}\n//                       className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\n//                     >\n//                       <Eye size={16} />\n//                     </button>\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </div>\n//       </div>\n\n//       {/* Entry Details Modal */}\n//       {selectedEntry && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <div className=\"flex items-center justify-between\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\n//                   Journal Entry Details - {selectedEntry.id}\n//                 </h3>\n//                 <button\n//                   onClick={() => setSelectedEntry(null)}\n//                   className=\"text-gray-400 hover:text-gray-600\"\n//                 >\n//                   <X size={20} />\n//                 </button>\n//               </div>\n//             </div>\n\n//             <div className=\"px-6 py-4\">\n//               {/* Entry Header */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\n//                 <div>\n//                   <label className=\"text-sm font-medium text-gray-500\">Date</label>\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.date}</p>\n//                 </div>\n//                 <div>\n//                   <label className=\"text-sm font-medium text-gray-500\">Reference</label>\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.reference}</p>\n//                 </div>\n//                 <div>\n//                   <label className=\"text-sm font-medium text-gray-500\">Description</label>\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.description}</p>\n//                 </div>\n//                 <div>\n//                   <label className=\"text-sm font-medium text-gray-500\">Source</label>\n//                   <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                     selectedEntry.transactionType === 'automatic' ? 'bg-green-100 text-green-800' : 'bg-orange-100 text-orange-800'\n//                   }`}>\n//                     {selectedEntry.source}\n//                   </span>\n//                 </div>\n//               </div>\n\n//               {/* Entry Lines */}\n//               <div className=\"mb-6\">\n//                 <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Account Entries</h4>\n//                 <div className=\"overflow-x-auto\">\n//                   <table className=\"w-full border border-gray-200 rounded\">\n//                     <thead className=\"bg-gray-50\">\n//                       <tr>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Account</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Description</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Debit</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Credit</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody className=\"divide-y divide-gray-200\">\n//                       {selectedEntry.entries.map((entryLine, index) => (\n//                         <tr key={index}>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900\">\n//                             {getAccountName(entryLine.accountId)}\n//                           </td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-600\">\n//                             {entryLine.description}\n//                           </td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">\n//                             {entryLine.debit > 0 ? `${entryLine.debit.toFixed(2)}` : '-'}\n//                           </td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">\n//                             {entryLine.credit > 0 ? `${entryLine.credit.toFixed(2)}` : '-'}\n//                           </td>\n//                         </tr>\n//                       ))}\n//                     </tbody>\n//                     <tfoot className=\"bg-gray-50\">\n//                       <tr>\n//                         <td colSpan=\"2\" className=\"px-4 py-2 text-sm font-medium text-gray-900\">\n//                           Totals:\n//                         </td>\n//                         <td className=\"px-4 py-2 text-sm font-bold text-gray-900 text-right\">\n//                           ${selectedEntry.totalDebit.toFixed(2)}\n//                         </td>\n//                         <td className=\"px-4 py-2 text-sm font-bold text-gray-900 text-right\">\n//                           ${selectedEntry.totalCredit.toFixed(2)}\n//                         </td>\n//                       </tr>\n//                     </tfoot>\n//                   </table>\n//                 </div>\n//               </div>\n\n//               {/* Entry Metadata */}\n//               <div className=\"text-xs text-gray-500\">\n//                 <p>Created: {new Date(selectedEntry.createdAt).toLocaleString()}</p>\n//                 <p>Status: {selectedEntry.status}</p>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Trial Balance Modal */}\n//       {showTrialBalance && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-lg max-w-5xl w-full max-h-[90vh] overflow-y-auto\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <div className=\"flex items-center justify-between\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\n//                   Trial Balance - As of {new Date().toLocaleDateString()}\n//                 </h3>\n//                 <div className=\"flex items-center space-x-2\">\n//                   <button\n//                     onClick={() => {\n//                       // Export functionality would go here\n//                       alert('Export functionality would be implemented here');\n//                     }}\n//                     className=\"px-3 py-1 bg-emerald-600 text-white rounded text-sm hover:bg-emerald-700 flex items-center space-x-1\"\n//                   >\n//                     <Download size={14} />\n//                     <span>Export</span>\n//                   </button>\n//                   <button\n//                     onClick={() => setShowTrialBalance(false)}\n//                     className=\"text-gray-400 hover:text-gray-600\"\n//                   >\n//                     <X size={20} />\n//                   </button>\n//                 </div>\n//               </div>\n//             </div>\n\n//             <div className=\"px-6 py-4\">\n//               <div className=\"overflow-x-auto\">\n//                 <table className=\"w-full\">\n//                   <thead className=\"bg-gray-50\">\n//                     <tr>\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Account Code\n//                       </th>\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Account Name\n//                       </th>\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Type\n//                       </th>\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Debit Total\n//                       </th>\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Credit Total\n//                       </th>\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Balance\n//                       </th>\n//                     </tr>\n//                   </thead>\n//                   <tbody className=\"bg-white divide-y divide-gray-200\">\n//                     {trialBalance.map((account) => (\n//                       <tr key={account.accountId}>\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n//                           {account.accountCode}\n//                         </td>\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                           {account.accountName}\n//                         </td>\n//                         <td className=\"px-4 py-4 whitespace-nowrap\">\n//                           <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                             account.accountType === 'assets' ? 'bg-green-100 text-green-800' :\n//                             account.accountType === 'liabilities' ? 'bg-red-100 text-red-800' :\n//                             account.accountType === 'equity' ? 'bg-blue-100 text-blue-800' :\n//                             account.accountType === 'revenue' ? 'bg-purple-100 text-purple-800' :\n//                             'bg-orange-100 text-orange-800'\n//                           }`}>\n//                             {account.accountType}\n//                           </span>\n//                         </td>\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n//                           ${account.debit.toFixed(2)}\n//                         </td>\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n//                           ${account.credit.toFixed(2)}\n//                         </td>\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-right\">\n//                           <span className={account.balance >= 0 ? 'text-green-600' : 'text-red-600'}>\n//                             ${Math.abs(account.balance).toFixed(2)}\n//                             {account.balance < 0 && ' (CR)'}\n//                           </span>\n//                         </td>\n//                       </tr>\n//                     ))}\n//                   </tbody>\n//                   <tfoot className=\"bg-gray-50\">\n//                     <tr>\n//                       <td colSpan=\"3\" className=\"px-4 py-3 text-sm font-bold text-gray-900\">\n//                         TOTALS:\n//                       </td>\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\n//                         ${trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toFixed(2)}\n//                       </td>\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\n//                         ${trialBalance.reduce((sum, acc) => sum + acc.credit, 0).toFixed(2)}\n//                       </td>\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\n//                         ${Math.abs(trialBalance.reduce((sum, acc) => sum + acc.balance, 0)).toFixed(2)}\n//                       </td>\n//                     </tr>\n//                   </tfoot>\n//                 </table>\n//               </div>\n\n//               {/* Trial Balance Validation */}\n//               <div className=\"mt-4 p-4 bg-green-50 border border-green-200 rounded-lg\">\n//                 <div className=\"flex items-center\">\n//                   <CheckCircle className=\"text-green-600 mr-2\" size={20} />\n//                   <div>\n//                     <h4 className=\"font-medium text-green-800\">Trial Balance is Balanced</h4>\n//                     <p className=\"text-sm text-green-700\">\n//                       Total Debits = Total Credits = ${trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toFixed(2)}\n//                     </p>\n//                   </div>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Integration Status */}\n//       <div className=\"mt-8 grid grid-cols-1 md:grid-cols-3 gap-4\">\n//         <div className=\"p-4 bg-green-50 border border-green-200 rounded-lg\">\n//           <div className=\"flex items-center mb-2\">\n//             <CheckCircle className=\"text-green-600 mr-2\" size={16} />\n//             <h4 className=\"font-medium text-green-800\">POS Integration</h4>\n//           </div>\n//           <p className=\"text-sm text-green-700\">\n//             All sales transactions automatically create journal entries\n//           </p>\n//         </div>\n\n//         <div className=\"p-4 bg-green-50 border border-green-200 rounded-lg\">\n//           <div className=\"flex items-center mb-2\">\n//             <CheckCircle className=\"text-green-600 mr-2\" size={16} />\n//             <h4 className=\"font-medium text-green-800\">Purchase Integration</h4>\n//           </div>\n//           <p className=\"text-sm text-green-700\">\n//             Purchase orders automatically update accounts payable and inventory\n//           </p>\n//         </div>\n\n//         <div className=\"p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n//           <div className=\"flex items-center mb-2\">\n//             <FileText className=\"text-blue-600 mr-2\" size={16} />\n//             <h4 className=\"font-medium text-blue-800\">Manual Entries</h4>\n//           </div>\n//           <p className=\"text-sm text-blue-700\">\n//             Add adjustments and corrections with full validation\n//           </p>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default GeneralLedger;\n\n// import React, { useState, useEffect } from 'react';\n// import { \n//   Book, \n//   Plus, \n//   Filter, \n//   Search, \n//   Calendar, \n//   FileText, \n//   Edit, \n//   Trash2, \n//   Save, \n//   X, \n//   AlertCircle,\n//   CheckCircle,\n//   DollarSign,\n//   TrendingUp,\n//   Eye,\n//   Download,\n//   RefreshCw\n// } from 'lucide-react';\n\n// const GeneralLedger = () => {\n//   const [journalEntries, setJournalEntries] = useState([]);\n//   const [accounts, setAccounts] = useState([]);\n//   const [filteredEntries, setFilteredEntries] = useState([]);\n//   const [selectedEntry, setSelectedEntry] = useState(null);\n//   const [isAddingEntry, setIsAddingEntry] = useState(false);\n//   const [loading, setLoading] = useState(false);\n//   const [filters, setFilters] = useState({\n//     dateFrom: '',\n//     dateTo: '',\n//     accountId: '',\n//     transactionType: 'all',\n//     searchTerm: ''\n//   });\n//   const [trialBalance, setTrialBalance] = useState([]);\n//   const [showTrialBalance, setShowTrialBalance] = useState(false);\n//   const [newEntry, setNewEntry] = useState({\n//     date: new Date().toISOString().split('T')[0],\n//     description: '',\n//     reference: '',\n//     entries: [\n//       { accountId: '', debit: 0, credit: 0, description: '' },\n//       { accountId: '', debit: 0, credit: 0, description: '' }\n//     ]\n//   });\n\n//   // Chart of Accounts\n//   const chartOfAccounts = [\n//     { id: '1111', code: '1111', name: 'Petty Cash', type: 'assets' },\n//     { id: '1112', code: '1112', name: 'Bank - Main Account', type: 'assets' },\n//     { id: '1120', code: '1120', name: 'Accounts Receivable', type: 'assets' },\n//     { id: '1130', code: '1130', name: 'Inventory', type: 'assets' },\n//     { id: '2110', code: '2110', name: 'Accounts Payable', type: 'liabilities' },\n//     { id: '2130', code: '2130', name: 'Sales Tax Payable', type: 'liabilities' },\n//     { id: '4100', code: '4100', name: 'Sales Revenue', type: 'revenue' },\n//     { id: '4110', code: '4110', name: 'Electronics Sales', type: 'revenue' },\n//     { id: '5100', code: '5100', name: 'Cost of Goods Sold', type: 'expenses' },\n//     { id: '5200', code: '5200', name: 'Purchase Expenses', type: 'expenses' }\n//   ];\n\n//   // API Configuration\n//   const API_BASE_URL = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/orders?start=0&size=200';\n\n//   useEffect(() => {\n//     setAccounts(chartOfAccounts);\n//     loadJournalEntriesFromAPI();\n//   }, []);\n\n//   useEffect(() => {\n//     filterEntries();\n//   }, [journalEntries, filters]);\n\n//   // Fetch Sales Orders from API and convert to Journal Entries\n//   const loadJournalEntriesFromAPI = async () => {\n//     setLoading(true);\n//     try {\n//       const response = await fetch(`${API_BASE_URL}/orders?start=0&size=200`);\n//       const salesOrders = await response.json();\n\n//       // Convert sales orders to journal entries\n//       const journalEntriesFromSales = salesOrders.map(order => convertSalesOrderToJournalEntry(order));\n\n//       // Load any manual journal entries from localStorage\n//       const manualEntries = JSON.parse(localStorage.getItem('manualJournalEntries') || '[]');\n\n//       // Combine both types of entries\n//       const allEntries = [...journalEntriesFromSales, ...manualEntries];\n\n//       setJournalEntries(allEntries);\n//     } catch (error) {\n//       console.error('Error loading sales orders:', error);\n//       // Fallback to sample data if API fails\n//       loadSampleJournalEntries();\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   // Convert Sales Order to Journal Entry\n//   const convertSalesOrderToJournalEntry = (order) => {\n//     const entries = [];\n//     const subTotal = order.subTotal || 0;\n//     const taxAmount = order.taxAmount || 0;\n//     const total = order.total || 0;\n\n//     // Determine payment method - if paid, assume cash/bank\n//     if (order.paid && order.status === 'Closed') {\n//       // Cash/Bank Account (Debit)\n//       entries.push({\n//         accountId: '1111', // Petty Cash (assume cash payment)\n//         accountName: 'Petty Cash',\n//         debit: total,\n//         credit: 0,\n//         description: `Cash received from sale Order #${order.orderId}`\n//       });\n//     } else if (!order.paid) {\n//       // Accounts Receivable (Debit) for unpaid orders\n//       entries.push({\n//         accountId: '1120',\n//         accountName: 'Accounts Receivable',\n//         debit: total,\n//         credit: 0,\n//         description: `Credit sale Order #${order.orderId}`\n//       });\n//     }\n\n//     // Sales Revenue (Credit)\n//     if (subTotal > 0) {\n//       entries.push({\n//         accountId: '4110', // Electronics Sales\n//         accountName: 'Electronics Sales',\n//         debit: 0,\n//         credit: subTotal,\n//         description: `Revenue from Order #${order.orderId}`\n//       });\n//     }\n\n//     // Sales Tax Payable (Credit)\n//     if (taxAmount > 0) {\n//       entries.push({\n//         accountId: '2130',\n//         accountName: 'Sales Tax Payable',\n//         debit: 0,\n//         credit: taxAmount,\n//         description: `Tax collected on Order #${order.orderId}`\n//       });\n//     }\n\n//     // Cost of Goods Sold and Inventory reduction\n//     order.lineItems.forEach(item => {\n//       const costPrice = item.costPrice || 0;\n//       const quantity = item.quantity || 0;\n//       const totalCost = costPrice * quantity;\n\n//       if (totalCost > 0 && order.fulfilled) {\n//         // Cost of Goods Sold (Debit)\n//         entries.push({\n//           accountId: '5100',\n//           accountName: 'Cost of Goods Sold',\n//           debit: totalCost,\n//           credit: 0,\n//           description: `COGS for ${item.productName}`\n//         });\n\n//         // Inventory (Credit)\n//         entries.push({\n//           accountId: '1130',\n//           accountName: 'Inventory',\n//           debit: 0,\n//           credit: totalCost,\n//           description: `Inventory reduction - ${item.productName}`\n//         });\n//       }\n//     });\n\n//     // Calculate totals\n//     const totalDebit = entries.reduce((sum, entry) => sum + entry.debit, 0);\n//     const totalCredit = entries.reduce((sum, entry) => sum + entry.credit, 0);\n\n//     return {\n//       id: `JE-ORDER-${order.orderId}`,\n//       date: formatDateFromCreatedAt(order.createdAt),\n//       description: `Sales Order #${order.orderId} - ${order.lineItems.map(item => item.productName).join(', ')}`,\n//       reference: `ORDER-${order.orderId}`,\n//       transactionType: 'automatic',\n//       source: 'POS Sales',\n//       status: order.fulfilled ? 'posted' : 'pending',\n//       entries: entries,\n//       totalDebit: Math.round(totalDebit * 100) / 100,\n//       totalCredit: Math.round(totalCredit * 100) / 100,\n//       createdAt: order.createdAt,\n//       originalOrder: order // Keep reference to original order\n//     };\n//   };\n\n//   // Format date from API format (2025.08.18.10.08.54.569) to YYYY-MM-DD\n//   const formatDateFromCreatedAt = (createdAt) => {\n//     try {\n//       const parts = createdAt.split('.');\n//       if (parts.length >= 3) {\n//         return `${parts[0]}-${parts[1].padStart(2, '0')}-${parts[2].padStart(2, '0')}`;\n//       }\n//       return new Date().toISOString().split('T')[0];\n//     } catch (error) {\n//       return new Date().toISOString().split('T')[0];\n//     }\n//   };\n\n//   // Fallback sample data\n//   const loadSampleJournalEntries = () => {\n//     const sampleEntries = [\n//       {\n//         id: 'JE001',\n//         date: '2025-08-18',\n//         description: 'Sample POS Sale - Medical products',\n//         reference: 'POS001',\n//         transactionType: 'automatic',\n//         source: 'POS',\n//         status: 'posted',\n//         entries: [\n//           { accountId: '1111', accountName: 'Petty Cash', debit: 60.50, credit: 0, description: 'Cash received from customer' },\n//           { accountId: '4100', accountName: 'Sales Revenue', debit: 0, credit: 55.00, description: 'Revenue from medical products' },\n//           { accountId: '2130', accountName: 'Sales Tax Payable', debit: 0, credit: 5.50, description: 'Sales tax collected' }\n//         ],\n//         totalDebit: 60.50,\n//         totalCredit: 60.50,\n//         createdAt: '2025-08-18T10:30:00Z'\n//       }\n//     ];\n//     setJournalEntries(sampleEntries);\n//   };\n\n//   const filterEntries = () => {\n//     let filtered = [...journalEntries];\n\n//     if (filters.dateFrom) {\n//       filtered = filtered.filter(entry => entry.date >= filters.dateFrom);\n//     }\n//     if (filters.dateTo) {\n//       filtered = filtered.filter(entry => entry.date <= filters.dateTo);\n//     }\n//     if (filters.accountId) {\n//       filtered = filtered.filter(entry => \n//         entry.entries.some(e => e.accountId === filters.accountId)\n//       );\n//     }\n//     if (filters.transactionType !== 'all') {\n//       filtered = filtered.filter(entry => entry.transactionType === filters.transactionType);\n//     }\n//     if (filters.searchTerm) {\n//       const term = filters.searchTerm.toLowerCase();\n//       filtered = filtered.filter(entry => \n//         entry.description.toLowerCase().includes(term) ||\n//         entry.reference.toLowerCase().includes(term) ||\n//         entry.entries.some(e => e.description.toLowerCase().includes(term))\n//       );\n//     }\n\n//     setFilteredEntries(filtered);\n//   };\n\n//   const generateTrialBalance = () => {\n//     const balances = {};\n\n//     // Initialize all accounts\n//     chartOfAccounts.forEach(account => {\n//       balances[account.id] = {\n//         accountId: account.id,\n//         accountCode: account.code,\n//         accountName: account.name,\n//         accountType: account.type,\n//         debit: 0,\n//         credit: 0,\n//         balance: 0\n//       };\n//     });\n\n//     // Calculate balances from journal entries\n//     journalEntries.forEach(entry => {\n//       if (entry.status === 'posted') {\n//         entry.entries.forEach(entryLine => {\n//           if (balances[entryLine.accountId]) {\n//             balances[entryLine.accountId].debit += entryLine.debit;\n//             balances[entryLine.accountId].credit += entryLine.credit;\n//           }\n//         });\n//       }\n//     });\n\n//     // Calculate net balances\n//     Object.values(balances).forEach(account => {\n//       if (account.accountType === 'assets' || account.accountType === 'expenses') {\n//         account.balance = account.debit - account.credit;\n//       } else {\n//         account.balance = account.credit - account.debit;\n//       }\n//     });\n\n//     const trialBalanceData = Object.values(balances)\n//       .filter(account => account.debit !== 0 || account.credit !== 0)\n//       .sort((a, b) => a.accountCode.localeCompare(b.accountCode));\n\n//     setTrialBalance(trialBalanceData);\n//     setShowTrialBalance(true);\n//   };\n\n//   const addEntryLine = () => {\n//     setNewEntry({\n//       ...newEntry,\n//       entries: [...newEntry.entries, { accountId: '', debit: 0, credit: 0, description: '' }]\n//     });\n//   };\n\n//   const removeEntryLine = (index) => {\n//     if (newEntry.entries.length > 2) {\n//       const updatedEntries = newEntry.entries.filter((_, i) => i !== index);\n//       setNewEntry({ ...newEntry, entries: updatedEntries });\n//     }\n//   };\n\n//   const updateEntryLine = (index, field, value) => {\n//     const updatedEntries = [...newEntry.entries];\n//     updatedEntries[index] = { ...updatedEntries[index], [field]: value };\n//     setNewEntry({ ...newEntry, entries: updatedEntries });\n//   };\n\n//   const calculateTotals = (entries) => {\n//     const totalDebit = entries.reduce((sum, entry) => sum + (parseFloat(entry.debit) || 0), 0);\n//     const totalCredit = entries.reduce((sum, entry) => sum + (parseFloat(entry.credit) || 0), 0);\n//     return { totalDebit, totalCredit };\n//   };\n\n//   const isBalanced = (entries) => {\n//     const { totalDebit, totalCredit } = calculateTotals(entries);\n//     return Math.abs(totalDebit - totalCredit) < 0.01;\n//   };\n\n//   const saveJournalEntry = () => {\n//     if (!newEntry.description || !newEntry.entries.every(e => e.accountId)) {\n//       alert('Please fill in all required fields');\n//       return;\n//     }\n\n//     if (!isBalanced(newEntry.entries)) {\n//       alert('Journal entry must be balanced - total debits must equal total credits');\n//       return;\n//     }\n\n//     const { totalDebit, totalCredit } = calculateTotals(newEntry.entries);\n\n//     // Add account names to entries\n//     const entriesWithNames = newEntry.entries.map(entry => ({\n//       ...entry,\n//       accountName: accounts.find(acc => acc.id === entry.accountId)?.name || '',\n//       debit: parseFloat(entry.debit) || 0,\n//       credit: parseFloat(entry.credit) || 0\n//     }));\n\n//     const journalEntry = {\n//       id: `JE-MANUAL-${Date.now()}`,\n//       date: newEntry.date,\n//       description: newEntry.description,\n//       reference: newEntry.reference || `MAN${Date.now()}`,\n//       transactionType: 'manual',\n//       source: 'Manual',\n//       status: 'posted',\n//       entries: entriesWithNames,\n//       totalDebit,\n//       totalCredit,\n//       createdAt: new Date().toISOString()\n//     };\n\n//     // Save manual entries to localStorage\n//     const existingManualEntries = JSON.parse(localStorage.getItem('manualJournalEntries') || '[]');\n//     const updatedManualEntries = [...existingManualEntries, journalEntry];\n//     localStorage.setItem('manualJournalEntries', JSON.stringify(updatedManualEntries));\n\n//     // Update state\n//     setJournalEntries([...journalEntries, journalEntry]);\n\n//     // Reset form\n//     setNewEntry({\n//       date: new Date().toISOString().split('T')[0],\n//       description: '',\n//       reference: '',\n//       entries: [\n//         { accountId: '', debit: 0, credit: 0, description: '' },\n//         { accountId: '', debit: 0, credit: 0, description: '' }\n//       ]\n//     });\n//     setIsAddingEntry(false);\n//   };\n\n//   const getAccountName = (accountId) => {\n//     const account = accounts.find(acc => acc.id === accountId);\n//     return account ? `${account.code} - ${account.name}` : '';\n//   };\n\n//   const { totalDebit, totalCredit } = calculateTotals(newEntry.entries);\n//   const entryIsBalanced = isBalanced(newEntry.entries);\n\n//   return (\n//     <div className=\"max-w-7xl mx-auto p-6 bg-white\">\n//       {/* Header */}\n//       <div className=\"mb-8\">\n//         <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\n//           <Book className=\"mr-3 text-emerald-600\" />\n//           General Ledger\n//         </h1>\n//         <p className=\"text-gray-600\">Real-time transaction recording and journal entry management</p>\n//       </div>\n\n//       {/* Quick Stats */}\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n//         <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-blue-600 text-sm font-medium\">Total Entries</p>\n//               <p className=\"text-2xl font-bold text-blue-900\">{journalEntries.length}</p>\n//             </div>\n//             <FileText className=\"text-blue-600\" size={24} />\n//           </div>\n//         </div>\n\n//         <div className=\"bg-green-50 p-4 rounded-lg border border-green-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-green-600 text-sm font-medium\">POS Entries</p>\n//               <p className=\"text-2xl font-bold text-green-900\">\n//                 {journalEntries.filter(e => e.source === 'POS Sales').length}\n//               </p>\n//             </div>\n//             <TrendingUp className=\"text-green-600\" size={24} />\n//           </div>\n//         </div>\n\n//         <div className=\"bg-orange-50 p-4 rounded-lg border border-orange-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-orange-600 text-sm font-medium\">Manual Entries</p>\n//               <p className=\"text-2xl font-bold text-orange-900\">\n//                 {journalEntries.filter(e => e.transactionType === 'manual').length}\n//               </p>\n//             </div>\n//             <Edit className=\"text-orange-600\" size={24} />\n//           </div>\n//         </div>\n\n//         <div className=\"bg-purple-50 p-4 rounded-lg border border-purple-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-purple-600 text-sm font-medium\">Total Value</p>\n//               <p className=\"text-2xl font-bold text-purple-900\">\n//                 ${journalEntries.reduce((sum, entry) => sum + entry.totalDebit, 0).toFixed(2)}\n//               </p>\n//             </div>\n//             <DollarSign className=\"text-purple-600\" size={24} />\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Controls */}\n//       <div className=\"flex flex-wrap items-center justify-between gap-4 mb-6\">\n//         <div className=\"flex flex-wrap items-center gap-4\">\n//           {/* Date Filters */}\n//           <div className=\"flex items-center space-x-2\">\n//             <Calendar size={16} className=\"text-gray-400\" />\n//             <input\n//               type=\"date\"\n//               value={filters.dateFrom}\n//               onChange={(e) => setFilters({ ...filters, dateFrom: e.target.value })}\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               placeholder=\"From\"\n//             />\n//             <span className=\"text-gray-500\">to</span>\n//             <input\n//               type=\"date\"\n//               value={filters.dateTo}\n//               onChange={(e) => setFilters({ ...filters, dateTo: e.target.value })}\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               placeholder=\"To\"\n//             />\n//           </div>\n\n//           {/* Account Filter */}\n//           <div className=\"relative\">\n//             <Filter className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\n//             <select\n//               value={filters.accountId}\n//               onChange={(e) => setFilters({ ...filters, accountId: e.target.value })}\n//               className=\"pl-10 pr-8 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//             >\n//               <option value=\"\">All Accounts</option>\n//               {accounts.map(account => (\n//                 <option key={account.id} value={account.id}>\n//                   {account.code} - {account.name}\n//                 </option>\n//               ))}\n//             </select>\n//           </div>\n\n//           {/* Transaction Type Filter */}\n//           <select\n//             value={filters.transactionType}\n//             onChange={(e) => setFilters({ ...filters, transactionType: e.target.value })}\n//             className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//           >\n//             <option value=\"all\">All Types</option>\n//             <option value=\"automatic\">POS Sales</option>\n//             <option value=\"manual\">Manual</option>\n//           </select>\n\n//           {/* Search */}\n//           <div className=\"relative\">\n//             <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search entries...\"\n//               value={filters.searchTerm}\n//               onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\n//               className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//             />\n//           </div>\n//         </div>\n\n//         <div className=\"flex space-x-3\">\n//           <button\n//             onClick={loadJournalEntriesFromAPI}\n//             disabled={loading}\n//             className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2 disabled:bg-gray-400\"\n//           >\n//             {loading ? <RefreshCw className=\"animate-spin\" size={16} /> : <RefreshCw size={16} />}\n//             <span>Refresh from API</span>\n//           </button>\n//           <button\n//             onClick={() => setIsAddingEntry(true)}\n//             className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\n//           >\n//             <Plus size={16} />\n//             <span>Add Entry</span>\n//           </button>\n//           <button\n//             onClick={generateTrialBalance}\n//             className=\"px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 flex items-center space-x-2\"\n//           >\n//             <FileText size={16} />\n//             <span>Trial Balance</span>\n//           </button>\n//         </div>\n//       </div>\n\n//       {/* Journal Entry Form */}\n//       {isAddingEntry && (\n//         <div className=\"mb-8 p-6 bg-gray-50 rounded-lg border\">\n//           <h3 className=\"text-lg font-semibold mb-4\">Add Manual Journal Entry</h3>\n\n//           <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n//             <div>\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Date *</label>\n//               <input\n//                 type=\"date\"\n//                 value={newEntry.date}\n//                 onChange={(e) => setNewEntry({ ...newEntry, date: e.target.value })}\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               />\n//             </div>\n//             <div>\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Description *</label>\n//               <input\n//                 type=\"text\"\n//                 value={newEntry.description}\n//                 onChange={(e) => setNewEntry({ ...newEntry, description: e.target.value })}\n//                 placeholder=\"Enter description\"\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               />\n//             </div>\n//             <div>\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Reference</label>\n//               <input\n//                 type=\"text\"\n//                 value={newEntry.reference}\n//                 onChange={(e) => setNewEntry({ ...newEntry, reference: e.target.value })}\n//                 placeholder=\"Reference number\"\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               />\n//             </div>\n//           </div>\n\n//           {/* Entry Lines */}\n//           <div className=\"mb-4\">\n//             <label className=\"block text-sm font-medium text-gray-700 mb-2\">Journal Entry Lines</label>\n//             <div className=\"space-y-3\">\n//               {newEntry.entries.map((entry, index) => (\n//                 <div key={index} className=\"grid grid-cols-12 gap-2 items-center bg-white p-3 rounded border\">\n//                   <div className=\"col-span-4\">\n//                     <select\n//                       value={entry.accountId}\n//                       onChange={(e) => updateEntryLine(index, 'accountId', e.target.value)}\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                     >\n//                       <option value=\"\">Select Account</option>\n//                       {accounts.map(account => (\n//                         <option key={account.id} value={account.id}>\n//                           {account.code} - {account.name}\n//                         </option>\n//                       ))}\n//                     </select>\n//                   </div>\n//                   <div className=\"col-span-3\">\n//                     <input\n//                       type=\"text\"\n//                       value={entry.description}\n//                       onChange={(e) => updateEntryLine(index, 'description', e.target.value)}\n//                       placeholder=\"Description\"\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                     />\n//                   </div>\n//                   <div className=\"col-span-2\">\n//                     <input\n//                       type=\"number\"\n//                       step=\"0.01\"\n//                       value={entry.debit}\n//                       onChange={(e) => updateEntryLine(index, 'debit', e.target.value)}\n//                       placeholder=\"Debit\"\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                     />\n//                   </div>\n//                   <div className=\"col-span-2\">\n//                     <input\n//                       type=\"number\"\n//                       step=\"0.01\"\n//                       value={entry.credit}\n//                       onChange={(e) => updateEntryLine(index, 'credit', e.target.value)}\n//                       placeholder=\"Credit\"\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                     />\n//                   </div>\n//                   <div className=\"col-span-1\">\n//                     {newEntry.entries.length > 2 && (\n//                       <button\n//                         onClick={() => removeEntryLine(index)}\n//                         className=\"p-1 text-red-600 hover:bg-red-100 rounded\"\n//                       >\n//                         <Trash2 size={14} />\n//                       </button>\n//                     )}\n//                   </div>\n//                 </div>\n//               ))}\n//             </div>\n\n//             <div className=\"flex justify-between items-center mt-3\">\n//               <button\n//                 onClick={addEntryLine}\n//                 className=\"px-3 py-1 text-sm bg-gray-200 text-gray-700 rounded hover:bg-gray-300 flex items-center space-x-1\"\n//               >\n//                 <Plus size={14} />\n//                 <span>Add Line</span>\n//               </button>\n\n//               <div className=\"flex items-center space-x-4\">\n//                 <div className=\"text-sm\">\n//                   <span className=\"font-medium\">Total Debit: ${totalDebit.toFixed(2)}</span>\n//                   <span className=\"mx-2\">|</span>\n//                   <span className=\"font-medium\">Total Credit: ${totalCredit.toFixed(2)}</span>\n//                 </div>\n//                 {entryIsBalanced ? (\n//                   <div className=\"flex items-center text-green-600\">\n//                     <CheckCircle size={16} className=\"mr-1\" />\n//                     <span className=\"text-sm\">Balanced</span>\n//                   </div>\n//                 ) : (\n//                   <div className=\"flex items-center text-red-600\">\n//                     <AlertCircle size={16} className=\"mr-1\" />\n//                     <span className=\"text-sm\">Not Balanced</span>\n//                   </div>\n//                 )}\n//               </div>\n//             </div>\n//           </div>\n\n//           <div className=\"flex space-x-3\">\n//             <button\n//               onClick={saveJournalEntry}\n//               disabled={!entryIsBalanced}\n//               className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 disabled:bg-gray-400 flex items-center space-x-2\"\n//             >\n//               <Save size={16} />\n//               <span>Save Entry</span>\n//             </button>\n//             <button\n//               onClick={() => setIsAddingEntry(false)}\n//               className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\"\n//             >\n//               <X size={16} />\n//               <span>Cancel</span>\n//             </button>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Journal Entries Table */}\n//       <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//         <div className=\"px-6 py-4 border-b border-gray-200\">\n//           <h2 className=\"text-lg font-semibold text-gray-900\">Journal Entries</h2>\n//           <p className=\"text-sm text-gray-600 mt-1\">\n//             Showing {filteredEntries.length} of {journalEntries.length} entries\n//           </p>\n//         </div>\n\n//         <div className=\"overflow-x-auto\">\n//           <table className=\"w-full\">\n//             <thead className=\"bg-gray-50\">\n//               <tr>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Entry ID\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Date\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Description\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Reference\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Source\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Amount\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Status\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Actions\n//                 </th>\n//               </tr>\n//             </thead>\n//             <tbody className=\"bg-white divide-y divide-gray-200\">\n//               {filteredEntries.map((entry) => (\n//                 <tr key={entry.id} className=\"hover:bg-gray-50\">\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n//                     {entry.id}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                     {entry.date}\n//                   </td>\n//                   <td className=\"px-6 py-4 text-sm text-gray-900 max-w-xs truncate\">\n//                     {entry.description}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                     {entry.reference}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                       entry.source === 'POS Sales' ? 'bg-green-100 text-green-800' : \n//                       entry.source === 'Manual' ? 'bg-orange-100 text-orange-800' :\n//                       'bg-blue-100 text-blue-800'\n//                     }`}>\n//                       {entry.source}\n//                     </span>\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                     ${entry.totalDebit.toFixed(2)}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                       entry.status === 'posted' ? 'bg-blue-100 text-blue-800' : 'bg-yellow-100 text-yellow-800'\n//                     }`}>\n//                       {entry.status}\n//                     </span>\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n//                     <button\n//                       onClick={() => setSelectedEntry(entry)}\n//                       className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\n//                     >\n//                       <Eye size={16} />\n//                     </button>\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </div>\n//       </div>\n\n//       {/* Entry Details Modal */}\n//       {selectedEntry && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <div className=\"flex items-center justify-between\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\n//                   Journal Entry Details - {selectedEntry.id}\n//                 </h3>\n//                 <button\n//                   onClick={() => setSelectedEntry(null)}\n//                   className=\"text-gray-400 hover:text-gray-600\"\n//                 >\n//                   <X size={20} />\n//                 </button>\n//               </div>\n//             </div>\n\n//             <div className=\"px-6 py-4\">\n//               {/* Entry Header */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\n//                 <div>\n//                   <label className=\"text-sm font-medium text-gray-500\">Date</label>\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.date}</p>\n//                 </div>\n//                 <div>\n//                   <label className=\"text-sm font-medium text-gray-500\">Reference</label>\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.reference}</p>\n//                 </div>\n//                 <div>\n//                   <label className=\"text-sm font-medium text-gray-500\">Description</label>\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.description}</p>\n//                 </div>\n//                 <div>\n//                   <label className=\"text-sm font-medium text-gray-500\">Source</label>\n//                   <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                     selectedEntry.source === 'POS Sales' ? 'bg-green-100 text-green-800' : 'bg-orange-100 text-orange-800'\n//                   }`}>\n//                     {selectedEntry.source}\n//                   </span>\n//                 </div>\n//               </div>\n\n//               {/* Entry Lines */}\n//               <div className=\"mb-6\">\n//                 <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Account Entries</h4>\n//                 <div className=\"overflow-x-auto\">\n//                   <table className=\"w-full border border-gray-200 rounded\">\n//                     <thead className=\"bg-gray-50\">\n//                       <tr>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Account</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Description</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Debit</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Credit</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody className=\"divide-y divide-gray-200\">\n//                       {selectedEntry.entries.map((entryLine, index) => (\n//                         <tr key={index}>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900\">\n//                             {getAccountName(entryLine.accountId)}\n//                           </td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-600\">\n//                             {entryLine.description}\n//                           </td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">\n//                             {entryLine.debit > 0 ? `${entryLine.debit.toFixed(2)}` : '-'}\n//                           </td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">\n//                             {entryLine.credit > 0 ? `${entryLine.credit.toFixed(2)}` : '-'}\n//                           </td>\n//                         </tr>\n//                       ))}\n//                     </tbody>\n//                     <tfoot className=\"bg-gray-50\">\n//                       <tr>\n//                         <td colSpan=\"2\" className=\"px-4 py-2 text-sm font-medium text-gray-900\">\n//                           Totals:\n//                         </td>\n//                         <td className=\"px-4 py-2 text-sm font-bold text-gray-900 text-right\">\n//                           ${selectedEntry.totalDebit.toFixed(2)}\n//                         </td>\n//                         <td className=\"px-4 py-2 text-sm font-bold text-gray-900 text-right\">\n//                           ${selectedEntry.totalCredit.toFixed(2)}\n//                         </td>\n//                       </tr>\n//                     </tfoot>\n//                   </table>\n//                 </div>\n//               </div>\n\n//               {/* Original Order Info (if available) */}\n//               {selectedEntry.originalOrder && (\n//                 <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\n//                   <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Original Sales Order Details</h4>\n//                   <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n//                     <div>\n//                       <span className=\"font-medium text-gray-500\">Order ID:</span>\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.orderId}</p>\n//                     </div>\n//                     <div>\n//                       <span className=\"font-medium text-gray-500\">Status:</span>\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.status}</p>\n//                     </div>\n//                     <div>\n//                       <span className=\"font-medium text-gray-500\">Payment Status:</span>\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.paid ? 'Paid' : 'Unpaid'}</p>\n//                     </div>\n//                     <div>\n//                       <span className=\"font-medium text-gray-500\">Fulfilled:</span>\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.fulfilled ? 'Yes' : 'No'}</p>\n//                     </div>\n//                   </div>\n\n//                   {/* Line Items */}\n//                   <div className=\"mt-4\">\n//                     <span className=\"font-medium text-gray-500\">Line Items:</span>\n//                     <div className=\"mt-2 space-y-2\">\n//                       {selectedEntry.originalOrder.lineItems.map((item, index) => (\n//                         <div key={index} className=\"text-sm bg-white p-2 rounded border\">\n//                           <span className=\"font-medium\">{item.productName}</span> - \n//                           Qty: {item.quantity}, Price: ${item.price}, Total: ${item.total}\n//                           {item.taxAmount > 0 && <span className=\"text-gray-500\"> (Tax: ${item.taxAmount})</span>}\n//                         </div>\n//                       ))}\n//                     </div>\n//                   </div>\n//                 </div>\n//               )}\n\n//               {/* Entry Metadata */}\n//               <div className=\"text-xs text-gray-500\">\n//                 <p>Created: {new Date(selectedEntry.createdAt).toLocaleString()}</p>\n//                 <p>Status: {selectedEntry.status}</p>\n//                 <p>Type: {selectedEntry.transactionType}</p>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Trial Balance Modal */}\n//       {showTrialBalance && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-lg max-w-5xl w-full max-h-[90vh] overflow-y-auto\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <div className=\"flex items-center justify-between\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\n//                   Trial Balance - As of {new Date().toLocaleDateString()}\n//                 </h3>\n//                 <div className=\"flex items-center space-x-2\">\n//                   <button\n//                     onClick={() => {\n//                       // Export functionality would go here\n//                       alert('Export functionality would be implemented here');\n//                     }}\n//                     className=\"px-3 py-1 bg-emerald-600 text-white rounded text-sm hover:bg-emerald-700 flex items-center space-x-1\"\n//                   >\n//                     <Download size={14} />\n//                     <span>Export</span>\n//                   </button>\n//                   <button\n//                     onClick={() => setShowTrialBalance(false)}\n//                     className=\"text-gray-400 hover:text-gray-600\"\n//                   >\n//                     <X size={20} />\n//                   </button>\n//                 </div>\n//               </div>\n//             </div>\n\n//             <div className=\"px-6 py-4\">\n//               <div className=\"overflow-x-auto\">\n//                 <table className=\"w-full\">\n//                   <thead className=\"bg-gray-50\">\n//                     <tr>\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Account Code\n//                       </th>\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Account Name\n//                       </th>\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Type\n//                       </th>\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Debit Total\n//                       </th>\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Credit Total\n//                       </th>\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Balance\n//                       </th>\n//                     </tr>\n//                   </thead>\n//                   <tbody className=\"bg-white divide-y divide-gray-200\">\n//                     {trialBalance.map((account) => (\n//                       <tr key={account.accountId}>\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n//                           {account.accountCode}\n//                         </td>\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                           {account.accountName}\n//                         </td>\n//                         <td className=\"px-4 py-4 whitespace-nowrap\">\n//                           <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                             account.accountType === 'assets' ? 'bg-green-100 text-green-800' :\n//                             account.accountType === 'liabilities' ? 'bg-red-100 text-red-800' :\n//                             account.accountType === 'equity' ? 'bg-blue-100 text-blue-800' :\n//                             account.accountType === 'revenue' ? 'bg-purple-100 text-purple-800' :\n//                             'bg-orange-100 text-orange-800'\n//                           }`}>\n//                             {account.accountType}\n//                           </span>\n//                         </td>\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n//                           ${account.debit.toFixed(2)}\n//                         </td>\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n//                           ${account.credit.toFixed(2)}\n//                         </td>\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-right\">\n//                           <span className={account.balance >= 0 ? 'text-green-600' : 'text-red-600'}>\n//                             ${Math.abs(account.balance).toFixed(2)}\n//                             {account.balance < 0 && ' (CR)'}\n//                           </span>\n//                         </td>\n//                       </tr>\n//                     ))}\n//                   </tbody>\n//                   <tfoot className=\"bg-gray-50\">\n//                     <tr>\n//                       <td colSpan=\"3\" className=\"px-4 py-3 text-sm font-bold text-gray-900\">\n//                         TOTALS:\n//                       </td>\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\n//                         ${trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toFixed(2)}\n//                       </td>\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\n//                         ${trialBalance.reduce((sum, acc) => sum + acc.credit, 0).toFixed(2)}\n//                       </td>\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\n//                         ${Math.abs(trialBalance.reduce((sum, acc) => sum + acc.balance, 0)).toFixed(2)}\n//                       </td>\n//                     </tr>\n//                   </tfoot>\n//                 </table>\n//               </div>\n\n//               {/* Trial Balance Validation */}\n//               <div className=\"mt-4 p-4 bg-green-50 border border-green-200 rounded-lg\">\n//                 <div className=\"flex items-center\">\n//                   <CheckCircle className=\"text-green-600 mr-2\" size={20} />\n//                   <div>\n//                     <h4 className=\"font-medium text-green-800\">Trial Balance is Balanced</h4>\n//                     <p className=\"text-sm text-green-700\">\n//                       Total Debits = Total Credits = ${trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toFixed(2)}\n//                     </p>\n//                   </div>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Integration Status */}\n//       <div className=\"mt-8 grid grid-cols-1 md:grid-cols-3 gap-4\">\n//         <div className=\"p-4 bg-green-50 border border-green-200 rounded-lg\">\n//           <div className=\"flex items-center mb-2\">\n//             <CheckCircle className=\"text-green-600 mr-2\" size={16} />\n//             <h4 className=\"font-medium text-green-800\">POS API Integration</h4>\n//           </div>\n//           <p className=\"text-sm text-green-700\">\n//             Sales orders automatically create journal entries from live API data\n//           </p>\n//         </div>\n\n//         <div className=\"p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n//           <div className=\"flex items-center mb-2\">\n//             <RefreshCw className=\"text-blue-600 mr-2\" size={16} />\n//             <h4 className=\"font-medium text-blue-800\">Real-time Sync</h4>\n//           </div>\n//           <p className=\"text-sm text-blue-700\">\n//             Journal entries updated automatically with each sales transaction\n//           </p>\n//         </div>\n\n//         <div className=\"p-4 bg-orange-50 border border-orange-200 rounded-lg\">\n//           <div className=\"flex items-center mb-2\">\n//             <FileText className=\"text-orange-600 mr-2\" size={16} />\n//             <h4 className=\"font-medium text-orange-800\">Manual Entries</h4>\n//           </div>\n//           <p className=\"text-sm text-orange-700\">\n//             Add adjustments and corrections with full double-entry validation\n//           </p>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default GeneralLedger;\n\n//CORRECT CODE\n// import React, { useState, useEffect } from 'react';\n// import { \n//   Book, \n//   Plus, \n//   Filter, \n//   Search, \n//   Calendar, \n//   FileText, \n//   Edit, \n//   Trash2, \n//   Save, \n//   X, \n//   AlertCircle,\n//   CheckCircle,\n//   DollarSign,\n//   TrendingUp,\n//   Eye,\n//   Download,\n//   RefreshCw\n// } from 'lucide-react';\n\n// const GeneralLedger = () => {\n//   const [journalEntries, setJournalEntries] = useState([]);\n//   const [accounts, setAccounts] = useState([]);\n//   const [filteredEntries, setFilteredEntries] = useState([]);\n//   const [selectedEntry, setSelectedEntry] = useState(null);\n//   const [isAddingEntry, setIsAddingEntry] = useState(false);\n//   const [loading, setLoading] = useState(false);\n//   const [filters, setFilters] = useState({\n//     dateFrom: '',\n//     dateTo: '',\n//     accountId: '',\n//     transactionType: 'all',\n//     searchTerm: ''\n//   });\n//   const [trialBalance, setTrialBalance] = useState([]);\n//   const [showTrialBalance, setShowTrialBalance] = useState(false);\n//   const [newEntry, setNewEntry] = useState({\n//     date: new Date().toISOString().split('T')[0],\n//     description: '',\n//     reference: '',\n//     entries: [\n//       { accountId: '', debit: 0, credit: 0, description: '' },\n//       { accountId: '', debit: 0, credit: 0, description: '' }\n//     ]\n//   });\n\n//   // Chart of Accounts\n//   const chartOfAccounts = [\n//     { id: '1111', code: '1111', name: 'Petty Cash', type: 'assets' },\n//     { id: '1112', code: '1112', name: 'Bank - Main Account', type: 'assets' },\n//     { id: '1120', code: '1120', name: 'Accounts Receivable', type: 'assets' },\n//     { id: '1130', code: '1130', name: 'Inventory', type: 'assets' },\n//     { id: '2110', code: '2110', name: 'Accounts Payable', type: 'liabilities' },\n//     { id: '2130', code: '2130', name: 'Sales Tax Payable', type: 'liabilities' },\n//     { id: '4100', code: '4100', name: 'Sales Revenue', type: 'revenue' },\n//     { id: '4110', code: '4110', name: 'Electronics Sales', type: 'revenue' },\n//     { id: '5100', code: '5100', name: 'Cost of Goods Sold', type: 'expenses' },\n//     { id: '5200', code: '5200', name: 'Purchase Expenses', type: 'expenses' }\n//   ];\n\n//   // API Configuration - This is already correct\n//   const API_BASE_URL = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/orders?start=0&size=200';\n//   const API_BASE_URL_CHARTS_OF_ACCOUNTS = 'http://localhost:8080/api/accounts';\n\n//   useEffect(() => {\n//     setAccounts(chartOfAccounts);\n//     loadJournalEntriesFromAPI();\n//   }, []);\n\n//   useEffect(() => {\n//     filterEntries();\n//   }, [journalEntries, filters]);\n\n//   async function fetchOrderData() {\n//     try {\n//       const response = await fetch(API_BASE_URL, {\n//         method: 'GET',\n//         headers: {\n//           'Authorization': 'Bearer Hamid',\n//           'Content-Type': 'application/json',\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`API request failed with status ${response.status}`);\n//       }\n\n//       const data = await response.json();\n//       return data;\n//     } catch (error) {\n//       console.error('Error fetching order data:', error);\n//       // Implement notification system for integration errors\n//       return null;\n//     }\n//   }\n\n//   // Fetch Sales Orders from API and convert to Journal Entries\n//   const loadJournalEntriesFromAPI = async () => {\n//     setLoading(true);\n//     try {\n//       // FIXED: Using the correct API_BASE_URL directly instead of appending \"/orders?start=0&size=200\"\n//       const salesOrders = await fetchOrderData();\n\n//       if (!salesOrders) {\n//         throw new Error('Failed to fetch sales orders');\n//       }\n\n//       // Filter only PAID and FULFILLED orders\n//       const completedOrders = salesOrders.filter(order => \n//         order.paid === true && order.fulfilled === true && order.status === 'Closed'\n//       );\n\n//       // Convert completed sales orders to journal entries\n//       const journalEntriesFromSales = completedOrders.map(order => convertSalesOrderToJournalEntry(order))\n//         .filter(entry => entry !== null); // Filter out any null entries\n\n//       // Load any manual journal entries from localStorage\n//       const manualEntries = JSON.parse(localStorage.getItem('manualJournalEntries') || '[]');\n\n//       // Combine both types of entries\n//       const allEntries = [...journalEntriesFromSales, ...manualEntries];\n\n//       setJournalEntries(allEntries);\n//       console.log('Loaded completed orders:', completedOrders.length, 'Total journal entries:', allEntries.length);\n//     } catch (error) {\n//       console.error('Error loading sales orders:', error);\n//       // Fallback to sample data if API fails\n//       loadSampleJournalEntries();\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   // Convert Sales Order to Journal Entry\n//   const convertSalesOrderToJournalEntry = (order) => {\n//     const entries = [];\n\n//     // Use actual values from API (amounts are in PKR, not USD)\n//     const subTotal = parseFloat(order.subTotal) || 0;\n//     const taxAmount = parseFloat(order.taxAmount) || 0;\n//     const total = parseFloat(order.total) || 0;\n\n//     // Only process PAID and FULFILLED orders\n//     if (!order.paid || !order.fulfilled || order.status !== 'Closed') {\n//       return null; // Skip incomplete orders\n//     }\n\n//     // Cash/Bank Account (Debit) - Total amount received\n//     entries.push({\n//       accountId: '1111', // Petty Cash (assume cash payment)\n//       accountName: 'Petty Cash',\n//       debit: total,\n//       credit: 0,\n//       description: `Cash received from Order #${order.orderId} - ${order.lineItems.map(item => item.productName).join(', ')}`\n//     });\n\n//     // Sales Revenue (Credit) - Subtotal\n//     if (subTotal > 0) {\n//       entries.push({\n//         accountId: '4110', // Electronics Sales\n//         accountName: 'Electronics Sales',\n//         debit: 0,\n//         credit: subTotal,\n//         description: `Revenue from Order #${order.orderId}`\n//       });\n//     }\n\n//     // Sales Tax Payable (Credit) - Tax amount\n//     if (taxAmount > 0) {\n//       entries.push({\n//         accountId: '2130',\n//         accountName: 'Sales Tax Payable',\n//         debit: 0,\n//         credit: taxAmount,\n//         description: `${order.taxRate}% tax collected on Order #${order.orderId}`\n//       });\n//     }\n\n//     // Cost of Goods Sold and Inventory reduction (only for fulfilled items)\n//     let totalCOGS = 0;\n//     order.lineItems.forEach(item => {\n//       if (item.fulfilled && item.status === 'Fulfilled') {\n//         const costPrice = parseFloat(item.costPrice) || 0;\n//         const quantity = parseFloat(item.quantity) || 0;\n//         const itemCOGS = costPrice * quantity;\n//         totalCOGS += itemCOGS;\n//       }\n//     });\n\n//     if (totalCOGS > 0) {\n//       // Cost of Goods Sold (Debit)\n//       entries.push({\n//         accountId: '5100',\n//         accountName: 'Cost of Goods Sold',\n//         debit: totalCOGS,\n//         credit: 0,\n//         description: `COGS for Order #${order.orderId}`\n//       });\n\n//       // Inventory (Credit)\n//       entries.push({\n//         accountId: '1130',\n//         accountName: 'Inventory',\n//         debit: 0,\n//         credit: totalCOGS,\n//         description: `Inventory reduction - Order #${order.orderId}`\n//       });\n//     }\n\n//     // Calculate totals\n//     const totalDebit = entries.reduce((sum, entry) => sum + entry.debit, 0);\n//     const totalCredit = entries.reduce((sum, entry) => sum + entry.credit, 0);\n\n//     return {\n//       id: `JE-ORDER-${order.orderId}`,\n//       date: formatDateFromCreatedAt(order.createdAt),\n//       description: `Sales Order #${order.orderId} - ${order.lineItems.map(item => `${item.productName} (${item.quantity})`).join(', ')}`,\n//       reference: `ORDER-${order.orderId}`,\n//       transactionType: 'automatic',\n//       source: 'POS Sales',\n//       status: 'posted',\n//       entries: entries,\n//       totalDebit: Math.round(totalDebit * 100) / 100,\n//       totalCredit: Math.round(totalCredit * 100) / 100,\n//       createdAt: order.createdAt,\n//       originalOrder: order // Keep reference to original order\n//     };\n//   };\n\n//   // Format date from API format (2025.08.18.10.08.54.569) to YYYY-MM-DD\n//   const formatDateFromCreatedAt = (createdAt) => {\n//     try {\n//       const parts = createdAt.split('.');\n//       if (parts.length >= 3) {\n//         return `${parts[0]}-${parts[1].padStart(2, '0')}-${parts[2].padStart(2, '0')}`;\n//       }\n//       return new Date().toISOString().split('T')[0];\n//     } catch (error) {\n//       return new Date().toISOString().split('T')[0];\n//     }\n//   };\n\n//   // Fallback sample data\n//   const loadSampleJournalEntries = () => {\n//     const sampleEntries = [\n//       {\n//         id: 'JE001',\n//         date: '2025-08-18',\n//         description: 'Sample POS Sale - Medical products',\n//         reference: 'POS001',\n//         transactionType: 'automatic',\n//         source: 'POS',\n//         status: 'posted',\n//         entries: [\n//           { accountId: '1111', accountName: 'Petty Cash', debit: 60.50, credit: 0, description: 'Cash received from customer' },\n//           { accountId: '4100', accountName: 'Sales Revenue', debit: 0, credit: 55.00, description: 'Revenue from medical products' },\n//           { accountId: '2130', accountName: 'Sales Tax Payable', debit: 0, credit: 5.50, description: 'Sales tax collected' }\n//         ],\n//         totalDebit: 60.50,\n//         totalCredit: 60.50,\n//         createdAt: '2025-08-18T10:30:00Z'\n//       }\n//     ];\n//     setJournalEntries(sampleEntries);\n//   };\n\n//   const filterEntries = () => {\n//     let filtered = [...journalEntries];\n\n//     if (filters.dateFrom) {\n//       filtered = filtered.filter(entry => entry.date >= filters.dateFrom);\n//     }\n//     if (filters.dateTo) {\n//       filtered = filtered.filter(entry => entry.date <= filters.dateTo);\n//     }\n//     if (filters.accountId) {\n//       filtered = filtered.filter(entry => \n//         entry.entries.some(e => e.accountId === filters.accountId)\n//       );\n//     }\n//     if (filters.transactionType !== 'all') {\n//       filtered = filtered.filter(entry => entry.transactionType === filters.transactionType);\n//     }\n//     if (filters.searchTerm) {\n//       const term = filters.searchTerm.toLowerCase();\n//       filtered = filtered.filter(entry => \n//         entry.description.toLowerCase().includes(term) ||\n//         entry.reference.toLowerCase().includes(term) ||\n//         entry.entries.some(e => e.description.toLowerCase().includes(term))\n//       );\n//     }\n\n//     setFilteredEntries(filtered);\n//   };\n\n//   const generateTrialBalance = () => {\n//     const balances = {};\n\n//     // Initialize all accounts\n//     chartOfAccounts.forEach(account => {\n//       balances[account.id] = {\n//         accountId: account.id,\n//         accountCode: account.code,\n//         accountName: account.name,\n//         accountType: account.type,\n//         debit: 0,\n//         credit: 0,\n//         balance: 0\n//       };\n//     });\n\n//     // Calculate balances from journal entries\n//     journalEntries.forEach(entry => {\n//       if (entry.status === 'posted') {\n//         entry.entries.forEach(entryLine => {\n//           if (balances[entryLine.accountId]) {\n//             balances[entryLine.accountId].debit += entryLine.debit;\n//             balances[entryLine.accountId].credit += entryLine.credit;\n//           }\n//         });\n//       }\n//     });\n\n//     // Calculate net balances\n//     Object.values(balances).forEach(account => {\n//       if (account.accountType === 'assets' || account.accountType === 'expenses') {\n//         account.balance = account.debit - account.credit;\n//       } else {\n//         account.balance = account.credit - account.debit;\n//       }\n//     });\n\n//     const trialBalanceData = Object.values(balances)\n//       .filter(account => account.debit !== 0 || account.credit !== 0)\n//       .sort((a, b) => a.accountCode.localeCompare(b.accountCode));\n\n//     setTrialBalance(trialBalanceData);\n//     setShowTrialBalance(true);\n//   };\n\n//   const addEntryLine = () => {\n//     setNewEntry({\n//       ...newEntry,\n//       entries: [...newEntry.entries, { accountId: '', debit: 0, credit: 0, description: '' }]\n//     });\n//   };\n\n//   const removeEntryLine = (index) => {\n//     if (newEntry.entries.length > 2) {\n//       const updatedEntries = newEntry.entries.filter((_, i) => i !== index);\n//       setNewEntry({ ...newEntry, entries: updatedEntries });\n//     }\n//   };\n\n//   const updateEntryLine = (index, field, value) => {\n//     const updatedEntries = [...newEntry.entries];\n//     updatedEntries[index] = { ...updatedEntries[index], [field]: value };\n//     setNewEntry({ ...newEntry, entries: updatedEntries });\n//   };\n\n//   const calculateTotals = (entries) => {\n//     const totalDebit = entries.reduce((sum, entry) => sum + (parseFloat(entry.debit) || 0), 0);\n//     const totalCredit = entries.reduce((sum, entry) => sum + (parseFloat(entry.credit) || 0), 0);\n//     return { totalDebit, totalCredit };\n//   };\n\n//   const isBalanced = (entries) => {\n//     const { totalDebit, totalCredit } = calculateTotals(entries);\n//     return Math.abs(totalDebit - totalCredit) < 0.01;\n//   };\n\n//   const saveJournalEntry = () => {\n//     if (!newEntry.description || !newEntry.entries.every(e => e.accountId)) {\n//       alert('Please fill in all required fields');\n//       return;\n//     }\n\n//     if (!isBalanced(newEntry.entries)) {\n//       alert('Journal entry must be balanced - total debits must equal total credits');\n//       return;\n//     }\n\n//     const { totalDebit, totalCredit } = calculateTotals(newEntry.entries);\n\n//     // Add account names to entries\n//     const entriesWithNames = newEntry.entries.map(entry => ({\n//       ...entry,\n//       accountName: accounts.find(acc => acc.id === entry.accountId)?.name || '',\n//       debit: parseFloat(entry.debit) || 0,\n//       credit: parseFloat(entry.credit) || 0\n//     }));\n\n//     const journalEntry = {\n//       id: `JE-MANUAL-${Date.now()}`,\n//       date: newEntry.date,\n//       description: newEntry.description,\n//       reference: newEntry.reference || `MAN${Date.now()}`,\n//       transactionType: 'manual',\n//       source: 'Manual',\n//       status: 'posted',\n//       entries: entriesWithNames,\n//       totalDebit,\n//       totalCredit,\n//       createdAt: new Date().toISOString()\n//     };\n\n//     // Save manual entries to localStorage\n//     const existingManualEntries = JSON.parse(localStorage.getItem('manualJournalEntries') || '[]');\n//     const updatedManualEntries = [...existingManualEntries, journalEntry];\n//     localStorage.setItem('manualJournalEntries', JSON.stringify(updatedManualEntries));\n\n//     // Update state\n//     setJournalEntries([...journalEntries, journalEntry]);\n\n//     // Reset form\n//     setNewEntry({\n//       date: new Date().toISOString().split('T')[0],\n//       description: '',\n//       reference: '',\n//       entries: [\n//         { accountId: '', debit: 0, credit: 0, description: '' },\n//         { accountId: '', debit: 0, credit: 0, description: '' }\n//       ]\n//     });\n//     setIsAddingEntry(false);\n//   };\n\n//   const getAccountName = (accountId) => {\n//     const account = accounts.find(acc => acc.id === accountId);\n//     return account ? `${account.code} - ${account.name}` : '';\n//   };\n\n//   const { totalDebit, totalCredit } = calculateTotals(newEntry.entries);\n//   const entryIsBalanced = isBalanced(newEntry.entries);\n\n//   return (\n//     <div className=\"max-w-7xl mx-auto p-6 bg-white\">\n//       {/* Header */}\n//       <div className=\"mb-8\">\n//         <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\n//           <Book className=\"mr-3 text-emerald-600\" />\n//           General Ledger\n//         </h1>\n//         <p className=\"text-gray-600\">Real-time transaction recording and journal entry management</p>\n//       </div>\n\n//       {/* Quick Stats */}\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n//         <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-blue-600 text-sm font-medium\">Total Entries</p>\n//               <p className=\"text-2xl font-bold text-blue-900\">{journalEntries.length}</p>\n//             </div>\n//             <FileText className=\"text-blue-600\" size={24} />\n//           </div>\n//         </div>\n\n//         <div className=\"bg-green-50 p-4 rounded-lg border border-green-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-green-600 text-sm font-medium\">POS Entries</p>\n//               <p className=\"text-2xl font-bold text-green-900\">\n//                 {journalEntries.filter(e => e.source === 'POS Sales').length}\n//               </p>\n//             </div>\n//             <TrendingUp className=\"text-green-600\" size={24} />\n//           </div>\n//         </div>\n\n//         <div className=\"bg-orange-50 p-4 rounded-lg border border-orange-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-orange-600 text-sm font-medium\">Manual Entries</p>\n//               <p className=\"text-2xl font-bold text-orange-900\">\n//                 {journalEntries.filter(e => e.transactionType === 'manual').length}\n//               </p>\n//             </div>\n//             <Edit className=\"text-orange-600\" size={24} />\n//           </div>\n//         </div>\n\n//         <div className=\"bg-purple-50 p-4 rounded-lg border border-purple-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-purple-600 text-sm font-medium\">Total Value</p>\n//               <p className=\"text-2xl font-bold text-purple-900\">\n//                 PKR {journalEntries.reduce((sum, entry) => sum + entry.totalDebit, 0).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n//               </p>\n//             </div>\n//             <DollarSign className=\"text-purple-600\" size={24} />\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Controls */}\n//       <div className=\"flex flex-wrap items-center justify-between gap-4 mb-6\">\n//         <div className=\"flex flex-wrap items-center gap-4\">\n//           {/* Date Filters */}\n//           <div className=\"flex items-center space-x-2\">\n//             <Calendar size={16} className=\"text-gray-400\" />\n//             <input\n//               type=\"date\"\n//               value={filters.dateFrom}\n//               onChange={(e) => setFilters({ ...filters, dateFrom: e.target.value })}\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               placeholder=\"From\"\n//             />\n//             <span className=\"text-gray-500\">to</span>\n//             <input\n//               type=\"date\"\n//               value={filters.dateTo}\n//               onChange={(e) => setFilters({ ...filters, dateTo: e.target.value })}\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               placeholder=\"To\"\n//             />\n//           </div>\n\n//           {/* Account Filter */}\n//           <div className=\"relative\">\n//             <Filter className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\n//             <select\n//               value={filters.accountId}\n//               onChange={(e) => setFilters({ ...filters, accountId: e.target.value })}\n//               className=\"pl-10 pr-8 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//             >\n//               <option value=\"\">All Accounts</option>\n//               {accounts.map(account => (\n//                 <option key={account.id} value={account.id}>\n//                   {account.code} - {account.name}\n//                 </option>\n//               ))}\n//             </select>\n//           </div>\n\n//           {/* Transaction Type Filter */}\n//           <select\n//             value={filters.transactionType}\n//             onChange={(e) => setFilters({ ...filters, transactionType: e.target.value })}\n//             className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//           >\n//             <option value=\"all\">All Types</option>\n//             <option value=\"automatic\">POS Sales</option>\n//             <option value=\"manual\">Manual</option>\n//           </select>\n\n//           {/* Search */}\n//           <div className=\"relative\">\n//             <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search entries...\"\n//               value={filters.searchTerm}\n//               onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\n//               className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//             />\n//           </div>\n//         </div>\n\n//         <div className=\"flex space-x-3\">\n//           <button\n//             onClick={loadJournalEntriesFromAPI}\n//             disabled={loading}\n//             className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2 disabled:bg-gray-400\"\n//           >\n//             {loading ? <RefreshCw className=\"animate-spin\" size={16} /> : <RefreshCw size={16} />}\n//             <span>Refresh from API</span>\n//           </button>\n//           <button\n//             onClick={() => setIsAddingEntry(true)}\n//             className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\n//           >\n//             <Plus size={16} />\n//             <span>Add Entry</span>\n//           </button>\n//           <button\n//             onClick={generateTrialBalance}\n//             className=\"px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 flex items-center space-x-2\"\n//           >\n//             <FileText size={16} />\n//             <span>Trial Balance</span>\n//           </button>\n//         </div>\n//       </div>\n\n//       {/* Journal Entry Form */}\n//       {isAddingEntry && (\n//         <div className=\"mb-8 p-6 bg-gray-50 rounded-lg border\">\n//           <h3 className=\"text-lg font-semibold mb-4\">Add Manual Journal Entry</h3>\n\n//           <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n//             <div>\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Date *</label>\n//               <input\n//                 type=\"date\"\n//                 value={newEntry.date}\n//                 onChange={(e) => setNewEntry({ ...newEntry, date: e.target.value })}\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               />\n//             </div>\n//             <div>\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Description *</label>\n//               <input\n//                 type=\"text\"\n//                 value={newEntry.description}\n//                 onChange={(e) => setNewEntry({ ...newEntry, description: e.target.value })}\n//                 placeholder=\"Enter description\"\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               />\n//             </div>\n//             <div>\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Reference</label>\n//               <input\n//                 type=\"text\"\n//                 value={newEntry.reference}\n//                 onChange={(e) => setNewEntry({ ...newEntry, reference: e.target.value })}\n//                 placeholder=\"Reference number\"\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               />\n//             </div>\n//           </div>\n\n//           {/* Entry Lines */}\n//           <div className=\"mb-4\">\n//             <label className=\"block text-sm font-medium text-gray-700 mb-2\">Journal Entry Lines</label>\n//             <div className=\"space-y-3\">\n//               {newEntry.entries.map((entry, index) => (\n//                 <div key={index} className=\"grid grid-cols-12 gap-2 items-center bg-white p-3 rounded border\">\n//                   <div className=\"col-span-4\">\n//                     <select\n//                       value={entry.accountId}\n//                       onChange={(e) => updateEntryLine(index, 'accountId', e.target.value)}\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                     >\n//                       <option value=\"\">Select Account</option>\n//                       {accounts.map(account => (\n//                         <option key={account.id} value={account.id}>\n//                           {account.code} - {account.name}\n//                         </option>\n//                       ))}\n//                     </select>\n//                   </div>\n//                   <div className=\"col-span-3\">\n//                     <input\n//                       type=\"text\"\n//                       value={entry.description}\n//                       onChange={(e) => updateEntryLine(index, 'description', e.target.value)}\n//                       placeholder=\"Description\"\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                     />\n//                   </div>\n//                   <div className=\"col-span-2\">\n//                     <input\n//                       type=\"number\"\n//                       step=\"0.01\"\n//                       value={entry.debit}\n//                       onChange={(e) => updateEntryLine(index, 'debit', e.target.value)}\n//                       placeholder=\"Debit\"\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                     />\n//                   </div>\n//                   <div className=\"col-span-2\">\n//                     <input\n//                       type=\"number\"\n//                       step=\"0.01\"\n//                       value={entry.credit}\n//                       onChange={(e) => updateEntryLine(index, 'credit', e.target.value)}\n//                       placeholder=\"Credit\"\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                     />\n//                   </div>\n//                   <div className=\"col-span-1\">\n//                     {newEntry.entries.length > 2 && (\n//                       <button\n//                         onClick={() => removeEntryLine(index)}\n//                         className=\"p-1 text-red-600 hover:bg-red-100 rounded\"\n//                       >\n//                         <Trash2 size={14} />\n//                       </button>\n//                     )}\n//                   </div>\n//                 </div>\n//               ))}\n//             </div>\n\n//             <div className=\"flex justify-between items-center mt-3\">\n//               <button\n//                 onClick={addEntryLine}\n//                 className=\"px-3 py-1 text-sm bg-gray-200 text-gray-700 rounded hover:bg-gray-300 flex items-center space-x-1\"\n//               >\n//                 <Plus size={14} />\n//                 <span>Add Line</span>\n//               </button>\n\n//               <div className=\"flex items-center space-x-4\">\n//                 <div className=\"text-sm\">\n//                   <span className=\"font-medium\">Total Debit: PKR {totalDebit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}</span>\n//                   <span className=\"mx-2\">|</span>\n//                   <span className=\"font-medium\">Total Credit: PKR {totalCredit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}</span>\n//                 </div>\n//                 {entryIsBalanced ? (\n//                   <div className=\"flex items-center text-green-600\">\n//                     <CheckCircle size={16} className=\"mr-1\" />\n//                     <span className=\"text-sm\">Balanced</span>\n//                   </div>\n//                 ) : (\n//                   <div className=\"flex items-center text-red-600\">\n//                     <AlertCircle size={16} className=\"mr-1\" />\n//                     <span className=\"text-sm\">Not Balanced</span>\n//                   </div>\n//                 )}\n//               </div>\n//             </div>\n//           </div>\n\n//           <div className=\"flex space-x-3\">\n//             <button\n//               onClick={saveJournalEntry}\n//               disabled={!entryIsBalanced}\n//               className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 disabled:bg-gray-400 flex items-center space-x-2\"\n//             >\n//               <Save size={16} />\n//               <span>Save Entry</span>\n//             </button>\n//             <button\n//               onClick={() => setIsAddingEntry(false)}\n//               className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\"\n//             >\n//               <X size={16} />\n//               <span>Cancel</span>\n//             </button>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Journal Entries Table */}\n//       <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//         <div className=\"px-6 py-4 border-b border-gray-200\">\n//           <h2 className=\"text-lg font-semibold text-gray-900\">Journal Entries</h2>\n//           <p className=\"text-sm text-gray-600 mt-1\">\n//             Showing {filteredEntries.length} of {journalEntries.length} entries\n//           </p>\n//         </div>\n\n//         <div className=\"overflow-x-auto\">\n//           <table className=\"w-full\">\n//             <thead className=\"bg-gray-50\">\n//               <tr>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Entry ID\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Date\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Description\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Reference\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Source\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Amount\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Status\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Actions\n//                 </th>\n//               </tr>\n//             </thead>\n//             <tbody className=\"bg-white divide-y divide-gray-200\">\n//               {filteredEntries.map((entry) => (\n//                 <tr key={entry.id} className=\"hover:bg-gray-50\">\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n//                     {entry.id}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                     {entry.date}\n//                   </td>\n//                   <td className=\"px-6 py-4 text-sm text-gray-900 max-w-xs truncate\">\n//                     {entry.description}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                     {entry.reference}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                       entry.source === 'POS Sales' ? 'bg-green-100 text-green-800' : \n//                       entry.source === 'Manual' ? 'bg-orange-100 text-orange-800' :\n//                       'bg-blue-100 text-blue-800'\n//                     }`}>\n//                       {entry.source}\n//                     </span>\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                     PKR {entry.totalDebit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                       entry.status === 'posted' ? 'bg-blue-100 text-blue-800' : 'bg-yellow-100 text-yellow-800'\n//                     }`}>\n//                       {entry.status}\n//                     </span>\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n//                     <button\n//                       onClick={() => setSelectedEntry(entry)}\n//                       className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\n//                     >\n//                       <Eye size={16} />\n//                     </button>\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </div>\n//       </div>\n\n//       {/* Entry Details Modal */}\n//       {selectedEntry && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <div className=\"flex items-center justify-between\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\n//                   Journal Entry Details - {selectedEntry.id}\n//                 </h3>\n//                 <button\n//                   onClick={() => setSelectedEntry(null)}\n//                   className=\"text-gray-400 hover:text-gray-600\"\n//                 >\n//                   <X size={20} />\n//                 </button>\n//               </div>\n//             </div>\n\n//             <div className=\"px-6 py-4\">\n//               {/* Entry Header */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\n//                 <div>\n//                   <label className=\"text-sm font-medium text-gray-500\">Date</label>\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.date}</p>\n//                 </div>\n//                 <div>\n//                   <label className=\"text-sm font-medium text-gray-500\">Reference</label>\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.reference}</p>\n//                 </div>\n//                 <div>\n//                   <label className=\"text-sm font-medium text-gray-500\">Description</label>\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.description}</p>\n//                 </div>\n//                 <div>\n//                   <label className=\"text-sm font-medium text-gray-500\">Source</label>\n//                   <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                     selectedEntry.source === 'POS Sales' ? 'bg-green-100 text-green-800' : 'bg-orange-100 text-orange-800'\n//                   }`}>\n//                     {selectedEntry.source}\n//                   </span>\n//                 </div>\n//               </div>\n\n//               {/* Entry Lines */}\n//               <div className=\"mb-6\">\n//                 <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Account Entries</h4>\n//                 <div className=\"overflow-x-auto\">\n//                   <table className=\"w-full border border-gray-200 rounded\">\n//                     <thead className=\"bg-gray-50\">\n//                       <tr>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Account</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Description</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Debit</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Credit</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody className=\"divide-y divide-gray-200\">\n//                       {selectedEntry.entries.map((entryLine, index) => (\n//                         <tr key={index}>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900\">\n//                             {getAccountName(entryLine.accountId)}\n//                           </td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-600\">\n//                             {entryLine.description}\n//                           </td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">\n//                             {entryLine.debit > 0 ? `${entryLine.debit.toFixed(2)}` : '-'}\n//                           </td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">\n//                             {entryLine.credit > 0 ? `${entryLine.credit.toFixed(2)}` : '-'}\n//                           </td>\n//                         </tr>\n//                       ))}\n//                     </tbody>\n//                     <tfoot className=\"bg-gray-50\">\n//                       <tr>\n//                         <td colSpan=\"2\" className=\"px-4 py-2 text-sm font-medium text-gray-900\">\n//                           Totals:\n//                         </td>\n//                         <td className=\"px-4 py-2 text-sm font-bold text-gray-900 text-right\">\n//                           PKR {selectedEntry.totalDebit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n//                         </td>\n//                         <td className=\"px-4 py-2 text-sm font-bold text-gray-900 text-right\">\n//                           PKR {selectedEntry.totalCredit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n//                         </td>\n//                       </tr>\n//                     </tfoot>\n//                   </table>\n//                 </div>\n//               </div>\n\n//               {/* Original Order Info (if available) */}\n//               {selectedEntry.originalOrder && (\n//                 <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\n//                   <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Original Sales Order Details</h4>\n//                   <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n//                     <div>\n//                       <span className=\"font-medium text-gray-500\">Order ID:</span>\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.orderId}</p>\n//                     </div>\n//                     <div>\n//                       <span className=\"font-medium text-gray-500\">Status:</span>\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.status}</p>\n//                     </div>\n//                     <div>\n//                       <span className=\"font-medium text-gray-500\">Payment Status:</span>\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.paid ? 'Paid' : 'Unpaid'}</p>\n//                     </div>\n//                     <div>\n//                       <span className=\"font-medium text-gray-500\">Fulfilled:</span>\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.fulfilled ? 'Yes' : 'No'}</p>\n//                     </div>\n//                   </div>\n\n//                   {/* Line Items */}\n//                   <div className=\"mt-4\">\n//                     <span className=\"font-medium text-gray-500\">Line Items:</span>\n//                     <div className=\"mt-2 space-y-2\">\n//                       {selectedEntry.originalOrder.lineItems.map((item, index) => (\n//                         <div key={index} className=\"text-sm bg-white p-2 rounded border\">\n//                           <span className=\"font-medium\">{item.productName}</span> - \n//                           Qty: {item.quantity}, Price: PKR {parseFloat(item.price).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}, \n//                           Total: PKR {parseFloat(item.total).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n//                           {item.taxAmount > 0 && <span className=\"text-gray-500\"> (Tax: PKR {parseFloat(item.taxAmount).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})})</span>}\n//                         </div>\n//                       ))}\n//                     </div>\n//                   </div>\n//                 </div>\n//               )}\n\n//               {/* Entry Metadata */}\n//               <div className=\"text-xs text-gray-500\">\n//                 <p>Created: {new Date(selectedEntry.createdAt).toLocaleString()}</p>\n//                 <p>Status: {selectedEntry.status}</p>\n//                 <p>Type: {selectedEntry.transactionType}</p>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Trial Balance Modal */}\n//       {showTrialBalance && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-lg max-w-5xl w-full max-h-[90vh] overflow-y-auto\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <div className=\"flex items-center justify-between\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\n//                   Trial Balance - As of {new Date().toLocaleDateString()}\n//                 </h3>\n//                 <div className=\"flex items-center space-x-2\">\n//                   <button\n//                     onClick={() => {\n//                       // Export functionality would go here\n//                       alert('Export functionality would be implemented here');\n//                     }}\n//                     className=\"px-3 py-1 bg-emerald-600 text-white rounded text-sm hover:bg-emerald-700 flex items-center space-x-1\"\n//                   >\n//                     <Download size={14} />\n//                     <span>Export</span>\n//                   </button>\n//                   <button\n//                     onClick={() => setShowTrialBalance(false)}\n//                     className=\"text-gray-400 hover:text-gray-600\"\n//                   >\n//                     <X size={20} />\n//                   </button>\n//                 </div>\n//               </div>\n//             </div>\n\n//             <div className=\"px-6 py-4\">\n//               <div className=\"overflow-x-auto\">\n//                 <table className=\"w-full\">\n//                   <thead className=\"bg-gray-50\">\n//                     <tr>\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Account Code\n//                       </th>\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Account Name\n//                       </th>\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Type\n//                       </th>\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Debit Total\n//                       </th>\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Credit Total\n//                       </th>\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Balance\n//                       </th>\n//                     </tr>\n//                   </thead>\n//                   <tbody className=\"bg-white divide-y divide-gray-200\">\n//                     {trialBalance.map((account) => (\n//                       <tr key={account.accountId}>\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n//                           {account.accountCode}\n//                         </td>\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                           {account.accountName}\n//                         </td>\n//                         <td className=\"px-4 py-4 whitespace-nowrap\">\n//                           <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                             account.accountType === 'assets' ? 'bg-green-100 text-green-800' :\n//                             account.accountType === 'liabilities' ? 'bg-red-100 text-red-800' :\n//                             account.accountType === 'equity' ? 'bg-blue-100 text-blue-800' :\n//                             account.accountType === 'revenue' ? 'bg-purple-100 text-purple-800' :\n//                             'bg-orange-100 text-orange-800'\n//                           }`}>\n//                             {account.accountType}\n//                           </span>\n//                         </td>\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n//                           PKR {account.debit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n//                         </td>\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n//                           PKR {account.credit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n//                         </td>\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-right\">\n//                           <span className={account.balance >= 0 ? 'text-green-600' : 'text-red-600'}>\n//                             PKR {Math.abs(account.balance).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n//                             {account.balance < 0 && ' (CR)'}\n//                           </span>\n//                         </td>\n//                       </tr>\n//                     ))}\n//                   </tbody>\n//                   <tfoot className=\"bg-gray-50\">\n//                     <tr>\n//                       <td colSpan=\"3\" className=\"px-4 py-3 text-sm font-bold text-gray-900\">\n//                         TOTALS:\n//                       </td>\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\n//                         PKR {trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n//                       </td>\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\n//                         PKR {trialBalance.reduce((sum, acc) => sum + acc.credit, 0).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n//                       </td>\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\n//                         PKR {Math.abs(trialBalance.reduce((sum, acc) => sum + acc.balance, 0)).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n//                       </td>\n//                     </tr>\n//                   </tfoot>\n//                 </table>\n//               </div>\n\n//               {/* Trial Balance Validation */}\n//               <div className=\"mt-4 p-4 bg-green-50 border border-green-200 rounded-lg\">\n//                 <div className=\"flex items-center\">\n//                   <CheckCircle className=\"text-green-600 mr-2\" size={20} />\n//                   <div>\n//                     <h4 className=\"font-medium text-green-800\">Trial Balance is Balanced</h4>\n//                     <p className=\"text-sm text-green-700\">\n//                       Total Debits = Total Credits = PKR {trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n//                     </p>\n//                   </div>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Integration Status */}\n//       <div className=\"mt-8 grid grid-cols-1 md:grid-cols-3 gap-4\">\n//         <div className=\"p-4 bg-green-50 border border-green-200 rounded-lg\">\n//           <div className=\"flex items-center mb-2\">\n//             <CheckCircle className=\"text-green-600 mr-2\" size={16} />\n//             <h4 className=\"font-medium text-green-800\">POS API Integration</h4>\n//           </div>\n//           <p className=\"text-sm text-green-700\">\n//             Sales orders automatically create journal entries from live API data\n//           </p>\n//         </div>\n\n//         <div className=\"p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n//           <div className=\"flex items-center mb-2\">\n//             <RefreshCw className=\"text-blue-600 mr-2\" size={16} />\n//             <h4 className=\"font-medium text-blue-800\">Real-time Sync</h4>\n//           </div>\n//           <p className=\"text-sm text-blue-700\">\n//             Journal entries updated automatically with each sales transaction\n//           </p>\n//         </div>\n\n//         <div className=\"p-4 bg-orange-50 border border-orange-200 rounded-lg\">\n//           <div className=\"flex items-center mb-2\">\n//             <FileText className=\"text-orange-600 mr-2\" size={16} />\n//             <h4 className=\"font-medium text-orange-800\">Manual Entries</h4>\n//           </div>\n//           <p className=\"text-sm text-orange-700\">\n//             Add adjustments and corrections with full double-entry validation\n//           </p>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default GeneralLedger;\n\n// import React, { useState, useEffect } from 'react';\n// import { \n//   Book, \n//   Plus, \n//   Filter, \n//   Search, \n//   Calendar, \n//   FileText, \n//   Edit, \n//   Trash2, \n//   Save, \n//   X, \n//   AlertCircle,\n//   CheckCircle,\n//   DollarSign,\n//   TrendingUp,\n//   Eye,\n//   Download,\n//   RefreshCw\n// } from 'lucide-react';\n\n// const GeneralLedger = () => {\n//   const [journalEntries, setJournalEntries] = useState([]);\n//   const [accounts, setAccounts] = useState([]);\n//   const [filteredEntries, setFilteredEntries] = useState([]);\n//   const [selectedEntry, setSelectedEntry] = useState(null);\n//   const [isAddingEntry, setIsAddingEntry] = useState(false);\n//   const [loading, setLoading] = useState(false);\n//   // Add missing state variables for accounts loading state\n//   const [accountsLoading, setAccountsLoading] = useState(false);\n//   const [accountsError, setAccountsError] = useState(null);\n//   const [filters, setFilters] = useState({\n//     dateFrom: '',\n//     dateTo: '',\n//     accountId: '',\n//     transactionType: 'all',\n//     searchTerm: ''\n//   });\n//   const [trialBalance, setTrialBalance] = useState([]);\n//   const [showTrialBalance, setShowTrialBalance] = useState(false);\n//   const [newEntry, setNewEntry] = useState({\n//     date: new Date().toISOString().split('T')[0],\n//     description: '',\n//     reference: '',\n//     entries: [\n//       { accountId: '', debit: 0, credit: 0, description: '' },\n//       { accountId: '', debit: 0, credit: 0, description: '' }\n//     ]\n//   });\n\n//   // Chart of Accounts - we'll replace this with API data\n//   const chartOfAccounts = [\n//     { id: '1111', code: '1111', name: 'Petty Cash', type: 'assets' },\n//     { id: '1112', code: '1112', name: 'Bank - Main Account', type: 'assets' },\n//     { id: '1120', code: '1120', name: 'Accounts Receivable', type: 'assets' },\n//     { id: '1130', code: '1130', name: 'Inventory', type: 'assets' },\n//     { id: '2110', code: '2110', name: 'Accounts Payable', type: 'liabilities' },\n//     { id: '2130', code: '2130', name: 'Sales Tax Payable', type: 'liabilities' },\n//     { id: '4100', code: '4100', name: 'Sales Revenue', type: 'revenue' },\n//     { id: '4110', code: '4110', name: 'Electronics Sales', type: 'revenue' },\n//     { id: '5100', code: '5100', name: 'Cost of Goods Sold', type: 'expenses' },\n//     { id: '5200', code: '5200', name: 'Purchase Expenses', type: 'expenses' }\n//   ];\n\n//   // API Configuration - This is already correct\n//   const API_BASE_URL = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/orders?start=0&size=200';\n//   const API_BASE_URL_CHARTS_OF_ACCOUNTS = 'http://localhost:8080/api/accounts';\n\n//   useEffect(() => {\n//     loadChartsOfAccounts();\n//     loadJournalEntriesFromAPI();\n//   }, []);\n\n//   useEffect(() => {\n//     filterEntries();\n//   }, [journalEntries, filters]);\n\n//   // Fetch Charts of Accounts from API\n//   const loadChartsOfAccounts = async () => {\n//     setAccountsLoading(true);\n//     setAccountsError(null);\n\n//     try {\n//       const response = await fetch(API_BASE_URL_CHARTS_OF_ACCOUNTS, {\n//         method: 'GET',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`Failed to fetch accounts: ${response.status}`);\n//       }\n\n//       const data = await response.json();\n\n//       // Transform the data to match our accounts structure\n//       // Assuming the API returns records similar to the paste-2.txt format\n//       const formattedAccounts = data.map(account => ({\n//         id: account.id || account.code,\n//         code: account.code,\n//         name: account.name,\n//         type: account.type || 'other',\n//         category: account.category || account.group,\n//         description: account.description || ''\n//       }));\n\n//       setAccounts(formattedAccounts);\n//       console.log('Loaded charts of accounts:', formattedAccounts.length);\n//     } catch (error) {\n//       console.error('Error loading charts of accounts:', error);\n//       setAccountsError(error.message);\n\n//       // Fallback to basic chart of accounts if API fails\n//       const fallbackAccounts = [\n//         { id: '1111', code: '1111', name: 'Petty Cash', type: 'assets' },\n//         { id: '1112', code: '1112', name: 'Bank - Main Account', type: 'assets' },\n//         { id: '1120', code: '1120', name: 'Accounts Receivable', type: 'assets' },\n//         { id: '1130', code: '1130', name: 'Inventory', type: 'assets' },\n//         { id: '2110', code: '2110', name: 'Accounts Payable', type: 'liabilities' },\n//         { id: '2130', code: '2130', name: 'Sales Tax Payable', type: 'liabilities' },\n//         { id: '4100', code: '4100', name: 'Sales Revenue', type: 'revenue' },\n//         { id: '4110', code: '4110', name: 'Electronics Sales', type: 'revenue' },\n//         { id: '5100', code: '5100', name: 'Cost of Goods Sold', type: 'expenses' },\n//         { id: '5200', code: '5200', name: 'Purchase Expenses', type: 'expenses' }\n//       ];\n\n//       setAccounts(fallbackAccounts);\n//       console.log('Using fallback chart of accounts');\n//     } finally {\n//       setAccountsLoading(false);\n//     }\n//   };\n\n//   async function fetchOrderData() {\n//     try {\n//       const response = await fetch(API_BASE_URL, {\n//         method: 'GET',\n//         headers: {\n//           'Authorization': 'Bearer Hamid',\n//           'Content-Type': 'application/json',\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`API request failed with status ${response.status}`);\n//       }\n\n//       const data = await response.json();\n//       return data;\n//     } catch (error) {\n//       console.error('Error fetching order data:', error);\n//       // Implement notification system for integration errors\n//       return null;\n//     }\n//   }\n\n//   // Fetch Sales Orders from API and convert to Journal Entries\n//   const loadJournalEntriesFromAPI = async () => {\n//     setLoading(true);\n//     try {\n//       // FIXED: Using the correct API_BASE_URL directly instead of appending \"/orders?start=0&size=200\"\n//       const salesOrders = await fetchOrderData();\n\n//       if (!salesOrders) {\n//         throw new Error('Failed to fetch sales orders');\n//       }\n\n//       // Filter only PAID and FULFILLED orders\n//       const completedOrders = salesOrders.filter(order => \n//         order.paid === true && order.fulfilled === true && order.status === 'Closed'\n//       );\n\n//       // Convert completed sales orders to journal entries\n//       const journalEntriesFromSales = completedOrders.map(order => convertSalesOrderToJournalEntry(order))\n//         .filter(entry => entry !== null); // Filter out any null entries\n\n//       // Load any manual journal entries from localStorage\n//       const manualEntries = JSON.parse(localStorage.getItem('manualJournalEntries') || '[]');\n\n//       // Combine both types of entries\n//       const allEntries = [...journalEntriesFromSales, ...manualEntries];\n\n//       setJournalEntries(allEntries);\n//       console.log('Loaded completed orders:', completedOrders.length, 'Total journal entries:', allEntries.length);\n//     } catch (error) {\n//       console.error('Error loading sales orders:', error);\n//       // Fallback to sample data if API fails\n//       loadSampleJournalEntries();\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   // Convert Sales Order to Journal Entry\n//   const convertSalesOrderToJournalEntry = (order) => {\n//     const entries = [];\n\n//     // Use actual values from API (amounts are in PKR, not USD)\n//     const subTotal = parseFloat(order.subTotal) || 0;\n//     const taxAmount = parseFloat(order.taxAmount) || 0;\n//     const total = parseFloat(order.total) || 0;\n\n//     // Only process PAID and FULFILLED orders\n//     if (!order.paid || !order.fulfilled || order.status !== 'Closed') {\n//       return null; // Skip incomplete orders\n//     }\n\n//     // Cash/Bank Account (Debit) - Total amount received\n//     entries.push({\n//       accountId: '1111', // Petty Cash (assume cash payment)\n//       accountName: 'Petty Cash',\n//       debit: total,\n//       credit: 0,\n//       description: `Cash received from Order #${order.orderId} - ${order.lineItems.map(item => item.productName).join(', ')}`\n//     });\n\n//     // Sales Revenue (Credit) - Subtotal\n//     if (subTotal > 0) {\n//       entries.push({\n//         accountId: '4110', // Electronics Sales\n//         accountName: 'Electronics Sales',\n//         debit: 0,\n//         credit: subTotal,\n//         description: `Revenue from Order #${order.orderId}`\n//       });\n//     }\n\n//     // Sales Tax Payable (Credit) - Tax amount\n//     if (taxAmount > 0) {\n//       entries.push({\n//         accountId: '2130',\n//         accountName: 'Sales Tax Payable',\n//         debit: 0,\n//         credit: taxAmount,\n//         description: `${order.taxRate}% tax collected on Order #${order.orderId}`\n//       });\n//     }\n\n//     // Cost of Goods Sold and Inventory reduction (only for fulfilled items)\n//     let totalCOGS = 0;\n//     order.lineItems.forEach(item => {\n//       if (item.fulfilled && item.status === 'Fulfilled') {\n//         const costPrice = parseFloat(item.costPrice) || 0;\n//         const quantity = parseFloat(item.quantity) || 0;\n//         const itemCOGS = costPrice * quantity;\n//         totalCOGS += itemCOGS;\n//       }\n//     });\n\n//     if (totalCOGS > 0) {\n//       // Cost of Goods Sold (Debit)\n//       entries.push({\n//         accountId: '5100',\n//         accountName: 'Cost of Goods Sold',\n//         debit: totalCOGS,\n//         credit: 0,\n//         description: `COGS for Order #${order.orderId}`\n//       });\n\n//       // Inventory (Credit)\n//       entries.push({\n//         accountId: '1130',\n//         accountName: 'Inventory',\n//         debit: 0,\n//         credit: totalCOGS,\n//         description: `Inventory reduction - Order #${order.orderId}`\n//       });\n//     }\n\n//     // Calculate totals\n//     const totalDebit = entries.reduce((sum, entry) => sum + entry.debit, 0);\n//     const totalCredit = entries.reduce((sum, entry) => sum + entry.credit, 0);\n\n//     return {\n//       id: `JE-ORDER-${order.orderId}`,\n//       date: formatDateFromCreatedAt(order.createdAt),\n//       description: `Sales Order #${order.orderId} - ${order.lineItems.map(item => `${item.productName} (${item.quantity})`).join(', ')}`,\n//       reference: `ORDER-${order.orderId}`,\n//       transactionType: 'automatic',\n//       source: 'POS Sales',\n//       status: 'posted',\n//       entries: entries,\n//       totalDebit: Math.round(totalDebit * 100) / 100,\n//       totalCredit: Math.round(totalCredit * 100) / 100,\n//       createdAt: order.createdAt,\n//       originalOrder: order // Keep reference to original order\n//     };\n//   };\n\n//   // Format date from API format (2025.08.18.10.08.54.569) to YYYY-MM-DD\n//   const formatDateFromCreatedAt = (createdAt) => {\n//     try {\n//       const parts = createdAt.split('.');\n//       if (parts.length >= 3) {\n//         return `${parts[0]}-${parts[1].padStart(2, '0')}-${parts[2].padStart(2, '0')}`;\n//       }\n//       return new Date().toISOString().split('T')[0];\n//     } catch (error) {\n//       return new Date().toISOString().split('T')[0];\n//     }\n//   };\n\n//   // Fallback sample data\n//   const loadSampleJournalEntries = () => {\n//     const sampleEntries = [\n//       {\n//         id: 'JE001',\n//         date: '2025-08-18',\n//         description: 'Sample POS Sale - Medical products',\n//         reference: 'POS001',\n//         transactionType: 'automatic',\n//         source: 'POS',\n//         status: 'posted',\n//         entries: [\n//           { accountId: '1111', accountName: 'Petty Cash', debit: 60.50, credit: 0, description: 'Cash received from customer' },\n//           { accountId: '4100', accountName: 'Sales Revenue', debit: 0, credit: 55.00, description: 'Revenue from medical products' },\n//           { accountId: '2130', accountName: 'Sales Tax Payable', debit: 0, credit: 5.50, description: 'Sales tax collected' }\n//         ],\n//         totalDebit: 60.50,\n//         totalCredit: 60.50,\n//         createdAt: '2025-08-18T10:30:00Z'\n//       }\n//     ];\n//     setJournalEntries(sampleEntries);\n//   };\n\n//   const filterEntries = () => {\n//     let filtered = [...journalEntries];\n\n//     if (filters.dateFrom) {\n//       filtered = filtered.filter(entry => entry.date >= filters.dateFrom);\n//     }\n//     if (filters.dateTo) {\n//       filtered = filtered.filter(entry => entry.date <= filters.dateTo);\n//     }\n//     if (filters.accountId) {\n//       filtered = filtered.filter(entry => \n//         entry.entries.some(e => e.accountId === filters.accountId)\n//       );\n//     }\n//     if (filters.transactionType !== 'all') {\n//       filtered = filtered.filter(entry => entry.transactionType === filters.transactionType);\n//     }\n//     if (filters.searchTerm) {\n//       const term = filters.searchTerm.toLowerCase();\n//       filtered = filtered.filter(entry => \n//         entry.description.toLowerCase().includes(term) ||\n//         entry.reference.toLowerCase().includes(term) ||\n//         entry.entries.some(e => e.description.toLowerCase().includes(term))\n//       );\n//     }\n\n//     setFilteredEntries(filtered);\n//   };\n\n//   const generateTrialBalance = () => {\n//     const balances = {};\n//       console.log('accounts:',accounts)\n//     // Initialize all accounts\n//     accounts.forEach(account => {\n//       // Only include account types, not headers or groups\n//       if (account.category !== 'header' && account.category !== 'group') {\n//         balances[account.id] = {\n//           accountId: account.id,\n//           accountCode: account.code,\n//           accountName: account.name,\n//           accountType: account.type,\n//           debit: 0,\n//           credit: 0,\n//           balance: 0\n//         };\n//       }\n//     });\n\n//     // Calculate balances from journal entries\n//     journalEntries.forEach(entry => {\n//       if (entry.status === 'posted') {\n//         entry.entries.forEach(entryLine => {\n//           if (balances[entryLine.accountId]) {\n//             balances[entryLine.accountId].debit += entryLine.debit;\n//             balances[entryLine.accountId].credit += entryLine.credit;\n//           }\n//         });\n//       }\n//     });\n\n//     // Calculate net balances\n//     Object.values(balances).forEach(account => {\n//       if (account.accountType === 'assets' || account.accountType === 'expenses') {\n//         account.balance = account.debit - account.credit;\n//       } else {\n//         account.balance = account.credit - account.debit;\n//       }\n//     });\n\n//     const trialBalanceData = Object.values(balances)\n//       .filter(account => account.debit !== 0 || account.credit !== 0)\n//       .sort((a, b) => a.accountCode.localeCompare(b.accountCode));\n\n//     setTrialBalance(trialBalanceData);\n//     setShowTrialBalance(true);\n//   };\n\n//   const addEntryLine = () => {\n//     setNewEntry({\n//       ...newEntry,\n//       entries: [...newEntry.entries, { accountId: '', debit: 0, credit: 0, description: '' }]\n//     });\n//   };\n\n//   const removeEntryLine = (index) => {\n//     if (newEntry.entries.length > 2) {\n//       const updatedEntries = newEntry.entries.filter((_, i) => i !== index);\n//       setNewEntry({ ...newEntry, entries: updatedEntries });\n//     }\n//   };\n\n//   const updateEntryLine = (index, field, value) => {\n//     const updatedEntries = [...newEntry.entries];\n//     updatedEntries[index] = { ...updatedEntries[index], [field]: value };\n//     setNewEntry({ ...newEntry, entries: updatedEntries });\n//   };\n\n//   const calculateTotals = (entries) => {\n//     const totalDebit = entries.reduce((sum, entry) => sum + (parseFloat(entry.debit) || 0), 0);\n//     const totalCredit = entries.reduce((sum, entry) => sum + (parseFloat(entry.credit) || 0), 0);\n//     return { totalDebit, totalCredit };\n//   };\n\n//   const isBalanced = (entries) => {\n//     const { totalDebit, totalCredit } = calculateTotals(entries);\n//     return Math.abs(totalDebit - totalCredit) < 0.01;\n//   };\n\n//   const saveJournalEntry = () => {\n//     if (!newEntry.description || !newEntry.entries.every(e => e.accountId)) {\n//       alert('Please fill in all required fields');\n//       return;\n//     }\n\n//     if (!isBalanced(newEntry.entries)) {\n//       alert('Journal entry must be balanced - total debits must equal total credits');\n//       return;\n//     }\n\n//     const { totalDebit, totalCredit } = calculateTotals(newEntry.entries);\n\n//     // Add account names to entries\n//     const entriesWithNames = newEntry.entries.map(entry => ({\n//       ...entry,\n//       accountName: accounts.find(acc => acc.id === entry.accountId)?.name || '',\n//       debit: parseFloat(entry.debit) || 0,\n//       credit: parseFloat(entry.credit) || 0\n//     }));\n\n//     const journalEntry = {\n//       id: `JE-MANUAL-${Date.now()}`,\n//       date: newEntry.date,\n//       description: newEntry.description,\n//       reference: newEntry.reference || `MAN${Date.now()}`,\n//       transactionType: 'manual',\n//       source: 'Manual',\n//       status: 'posted',\n//       entries: entriesWithNames,\n//       totalDebit,\n//       totalCredit,\n//       createdAt: new Date().toISOString()\n//     };\n\n//     // Save manual entries to localStorage\n//     const existingManualEntries = JSON.parse(localStorage.getItem('manualJournalEntries') || '[]');\n//     const updatedManualEntries = [...existingManualEntries, journalEntry];\n//     localStorage.setItem('manualJournalEntries', JSON.stringify(updatedManualEntries));\n\n//     // Update state\n//     setJournalEntries([...journalEntries, journalEntry]);\n\n//     // Reset form\n//     setNewEntry({\n//       date: new Date().toISOString().split('T')[0],\n//       description: '',\n//       reference: '',\n//       entries: [\n//         { accountId: '', debit: 0, credit: 0, description: '' },\n//         { accountId: '', debit: 0, credit: 0, description: '' }\n//       ]\n//     });\n//     setIsAddingEntry(false);\n//   };\n\n//   const getAccountName = (accountId) => {\n//     const account = accounts.find(acc => acc.id === accountId);\n//     return account ? `${account.code} - ${account.name}` : '';\n//   };\n\n//   const { totalDebit, totalCredit } = calculateTotals(newEntry.entries);\n//   const entryIsBalanced = isBalanced(newEntry.entries);\n\n//   return (\n//     <div className=\"max-w-7xl mx-auto p-6 bg-white\">\n//       {/* Header */}\n//       <div className=\"mb-8\">\n//         <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\n//           <Book className=\"mr-3 text-emerald-600\" />\n//           General Ledger\n//         </h1>\n//         <p className=\"text-gray-600\">Real-time transaction recording and journal entry management</p>\n\n//         {/* Show loading or error messages for accounts */}\n//         {accountsLoading && (\n//           <div className=\"mt-2 p-2 bg-blue-50 text-blue-700 rounded-md text-sm flex items-center\">\n//             <RefreshCw className=\"animate-spin mr-2\" size={16} />\n//             Loading chart of accounts...\n//           </div>\n//         )}\n\n//         {accountsError && (\n//           <div className=\"mt-2 p-2 bg-red-50 text-red-700 rounded-md text-sm flex items-center\">\n//             <AlertCircle className=\"mr-2\" size={16} />\n//             Error loading accounts: {accountsError}\n//           </div>\n//         )}\n//       </div>\n\n//       {/* Quick Stats */}\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n//         <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-blue-600 text-sm font-medium\">Total Entries</p>\n//               <p className=\"text-2xl font-bold text-blue-900\">{journalEntries.length}</p>\n//             </div>\n//             <FileText className=\"text-blue-600\" size={24} />\n//           </div>\n//         </div>\n\n//         <div className=\"bg-green-50 p-4 rounded-lg border border-green-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-green-600 text-sm font-medium\">POS Entries</p>\n//               <p className=\"text-2xl font-bold text-green-900\">\n//                 {journalEntries.filter(e => e.source === 'POS Sales').length}\n//               </p>\n//             </div>\n//             <TrendingUp className=\"text-green-600\" size={24} />\n//           </div>\n//         </div>\n\n//         <div className=\"bg-orange-50 p-4 rounded-lg border border-orange-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-orange-600 text-sm font-medium\">Manual Entries</p>\n//               <p className=\"text-2xl font-bold text-orange-900\">\n//                 {journalEntries.filter(e => e.transactionType === 'manual').length}\n//               </p>\n//             </div>\n//             <Edit className=\"text-orange-600\" size={24} />\n//           </div>\n//         </div>\n\n//         <div className=\"bg-purple-50 p-4 rounded-lg border border-purple-200\">\n//           <div className=\"flex items-center justify-between\">\n//             <div>\n//               <p className=\"text-purple-600 text-sm font-medium\">Total Value</p>\n//               <p className=\"text-2xl font-bold text-purple-900\">\n//                 PKR {journalEntries.reduce((sum, entry) => sum + entry.totalDebit, 0).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n//               </p>\n//             </div>\n//             <DollarSign className=\"text-purple-600\" size={24} />\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Controls */}\n//       <div className=\"flex flex-wrap items-center justify-between gap-4 mb-6\">\n//         <div className=\"flex flex-wrap items-center gap-4\">\n//           {/* Date Filters */}\n//           <div className=\"flex items-center space-x-2\">\n//             <Calendar size={16} className=\"text-gray-400\" />\n//             <input\n//               type=\"date\"\n//               value={filters.dateFrom}\n//               onChange={(e) => setFilters({ ...filters, dateFrom: e.target.value })}\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               placeholder=\"From\"\n//             />\n//             <span className=\"text-gray-500\">to</span>\n//             <input\n//               type=\"date\"\n//               value={filters.dateTo}\n//               onChange={(e) => setFilters({ ...filters, dateTo: e.target.value })}\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               placeholder=\"To\"\n//             />\n//           </div>\n\n//           {/* Account Filter */}\n//           <div className=\"relative\">\n//             <Filter className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\n//             <select\n//               value={filters.accountId}\n//               onChange={(e) => setFilters({ ...filters, accountId: e.target.value })}\n//               className=\"pl-10 pr-8 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//             >\n//               <option value=\"\">All Accounts</option>\n//               {/* Group accounts by type for better organization */}\n//               {['assets', 'liabilities', 'equity', 'revenue', 'expenses'].map(type => {\n//                 const accountsOfType = accounts.filter(acc => \n//                   acc.type === type && acc.category !== 'header' && acc.category !== 'group'\n//                 );\n\n//                 if (accountsOfType.length === 0) return null;\n\n//                 return (\n//                   <optgroup key={type} label={type.charAt(0).toUpperCase() + type.slice(1)}>\n//                     {accountsOfType.map(account => (\n//                       <option key={account.id} value={account.id}>\n//                         {account.code} - {account.name}\n//                       </option>\n//                     ))}\n//                   </optgroup>\n//                 );\n//               })}\n//             </select>\n//           </div>\n\n//           {/* Transaction Type Filter */}\n//           <select\n//             value={filters.transactionType}\n//             onChange={(e) => setFilters({ ...filters, transactionType: e.target.value })}\n//             className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//           >\n//             <option value=\"all\">All Types</option>\n//             <option value=\"automatic\">POS Sales</option>\n//             <option value=\"manual\">Manual</option>\n//           </select>\n\n//           {/* Search */}\n//           <div className=\"relative\">\n//             <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search entries...\"\n//               value={filters.searchTerm}\n//               onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\n//               className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//             />\n//           </div>\n//         </div>\n\n//         <div className=\"flex space-x-3\">\n//           <button\n//             onClick={loadJournalEntriesFromAPI}\n//             disabled={loading}\n//             className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2 disabled:bg-gray-400\"\n//           >\n//             {loading ? <RefreshCw className=\"animate-spin\" size={16} /> : <RefreshCw size={16} />}\n//             <span>Refresh from API</span>\n//           </button>\n//           <button\n//             onClick={loadChartsOfAccounts}\n//             disabled={accountsLoading}\n//             className=\"px-4 py-2 bg-teal-600 text-white rounded-lg hover:bg-teal-700 flex items-center space-x-2 disabled:bg-gray-400\"\n//           >\n//             {accountsLoading ? <RefreshCw className=\"animate-spin\" size={16} /> : <RefreshCw size={16} />}\n//             <span>Refresh Accounts</span>\n//           </button>\n//           <button\n//             onClick={() => setIsAddingEntry(true)}\n//             className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\n//           >\n//             <Plus size={16} />\n//             <span>Add Entry</span>\n//           </button>\n//           <button\n//             onClick={generateTrialBalance}\n//             className=\"px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 flex items-center space-x-2\"\n//           >\n//             <FileText size={16} />\n//             <span>Trial Balance</span>\n//           </button>\n//         </div>\n//       </div>\n\n//       {/* Journal Entry Form */}\n//       {isAddingEntry && (\n//         <div className=\"mb-8 p-6 bg-gray-50 rounded-lg border\">\n//           <h3 className=\"text-lg font-semibold mb-4\">Add Manual Journal Entry</h3>\n\n//           <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n//             <div>\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Date *</label>\n//               <input\n//                 type=\"date\"\n//                 value={newEntry.date}\n//                 onChange={(e) => setNewEntry({ ...newEntry, date: e.target.value })}\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               />\n//             </div>\n//             <div>\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Description *</label>\n//               <input\n//                 type=\"text\"\n//                 value={newEntry.description}\n//                 onChange={(e) => setNewEntry({ ...newEntry, description: e.target.value })}\n//                 placeholder=\"Enter description\"\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               />\n//             </div>\n//             <div>\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Reference</label>\n//               <input\n//                 type=\"text\"\n//                 value={newEntry.reference}\n//                 onChange={(e) => setNewEntry({ ...newEntry, reference: e.target.value })}\n//                 placeholder=\"Reference number\"\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n//               />\n//             </div>\n//           </div>\n\n//           {/* Entry Lines */}\n//           <div className=\"mb-4\">\n//             <label className=\"block text-sm font-medium text-gray-700 mb-2\">Journal Entry Lines</label>\n//             <div className=\"space-y-3\">\n//               {newEntry.entries.map((entry, index) => (\n//                 <div key={index} className=\"grid grid-cols-12 gap-2 items-center bg-white p-3 rounded border\">\n//                   <div className=\"col-span-4\">\n//                     <select\n//                       value={entry.accountId}\n//                       onChange={(e) => updateEntryLine(index, 'accountId', e.target.value)}\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                     >\n//                       <option value=\"\">Select Account</option>\n//                       {/* Group accounts by type for better organization */}\n//                       {['assets', 'liabilities', 'equity', 'revenue', 'expenses'].map(type => {\n//                         const accountsOfType = accounts.filter(acc => \n//                           acc.type === type && acc.category !== 'header' && acc.category !== 'group'\n//                         );\n\n//                         if (accountsOfType.length === 0) return null;\n\n//                         return (\n//                           <optgroup key={type} label={type.charAt(0).toUpperCase() + type.slice(1)}>\n//                             {accountsOfType.map(account => (\n//                               <option key={account.id} value={account.id}>\n//                                 {account.code} - {account.name}\n//                               </option>\n//                             ))}\n//                           </optgroup>\n//                         );\n//                       })}\n//                     </select>\n//                   </div>\n//                   <div className=\"col-span-3\">\n//                     <input\n//                       type=\"text\"\n//                       value={entry.description}\n//                       onChange={(e) => updateEntryLine(index, 'description', e.target.value)}\n//                       placeholder=\"Description\"\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                     />\n//                   </div>\n//                   <div className=\"col-span-2\">\n//                     <input\n//                       type=\"number\"\n//                       step=\"0.01\"\n//                       value={entry.debit}\n//                       onChange={(e) => updateEntryLine(index, 'debit', e.target.value)}\n//                       placeholder=\"Debit\"\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                     />\n//                   </div>\n//                   <div className=\"col-span-2\">\n//                     <input\n//                       type=\"number\"\n//                       step=\"0.01\"\n//                       value={entry.credit}\n//                       onChange={(e) => updateEntryLine(index, 'credit', e.target.value)}\n//                       placeholder=\"Credit\"\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n//                     />\n//                   </div>\n//                   <div className=\"col-span-1\">\n//                     {newEntry.entries.length > 2 && (\n//                       <button\n//                         onClick={() => removeEntryLine(index)}\n//                         className=\"p-1 text-red-600 hover:bg-red-100 rounded\"\n//                       >\n//                         <Trash2 size={14} />\n//                       </button>\n//                     )}\n//                   </div>\n//                 </div>\n//               ))}\n//             </div>\n\n//             <div className=\"flex justify-between items-center mt-3\">\n//               <button\n//                 onClick={addEntryLine}\n//                 className=\"px-3 py-1 text-sm bg-gray-200 text-gray-700 rounded hover:bg-gray-300 flex items-center space-x-1\"\n//               >\n//                 <Plus size={14} />\n//                 <span>Add Line</span>\n//               </button>\n\n//               <div className=\"flex items-center space-x-4\">\n//                 <div className=\"text-sm\">\n//                   <span className=\"font-medium\">Total Debit: PKR {totalDebit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}</span>\n//                   <span className=\"mx-2\">|</span>\n//                   <span className=\"font-medium\">Total Credit: PKR {totalCredit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}</span>\n//                 </div>\n//                 {entryIsBalanced ? (\n//                   <div className=\"flex items-center text-green-600\">\n//                     <CheckCircle size={16} className=\"mr-1\" />\n//                     <span className=\"text-sm\">Balanced</span>\n//                   </div>\n//                 ) : (\n//                   <div className=\"flex items-center text-red-600\">\n//                     <AlertCircle size={16} className=\"mr-1\" />\n//                     <span className=\"text-sm\">Not Balanced</span>\n//                   </div>\n//                 )}\n//               </div>\n//             </div>\n//           </div>\n\n//           <div className=\"flex space-x-3\">\n//             <button\n//               onClick={saveJournalEntry}\n//               disabled={!entryIsBalanced}\n//               className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 disabled:bg-gray-400 flex items-center space-x-2\"\n//             >\n//               <Save size={16} />\n//               <span>Save Entry</span>\n//             </button>\n//             <button\n//               onClick={() => setIsAddingEntry(false)}\n//               className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\"\n//             >\n//               <X size={16} />\n//               <span>Cancel</span>\n//             </button>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Journal Entries Table */}\n//       <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n//         <div className=\"px-6 py-4 border-b border-gray-200\">\n//           <h2 className=\"text-lg font-semibold text-gray-900\">Journal Entries</h2>\n//           <p className=\"text-sm text-gray-600 mt-1\">\n//             Showing {filteredEntries.length} of {journalEntries.length} entries\n//           </p>\n//         </div>\n\n//         <div className=\"overflow-x-auto\">\n//           <table className=\"w-full\">\n//             <thead className=\"bg-gray-50\">\n//               <tr>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Entry ID\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Date\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Description\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Reference\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Source\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Amount\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Status\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                   Actions\n//                 </th>\n//               </tr>\n//             </thead>\n//             <tbody className=\"bg-white divide-y divide-gray-200\">\n//               {filteredEntries.map((entry) => (\n//                 <tr key={entry.id} className=\"hover:bg-gray-50\">\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n//                     {entry.id}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                     {entry.date}\n//                   </td>\n//                   <td className=\"px-6 py-4 text-sm text-gray-900 max-w-xs truncate\">\n//                     {entry.description}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                     {entry.reference}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                       entry.source === 'POS Sales' ? 'bg-green-100 text-green-800' : \n//                       entry.source === 'Manual' ? 'bg-orange-100 text-orange-800' :\n//                       'bg-blue-100 text-blue-800'\n//                     }`}>\n//                       {entry.source}\n//                     </span>\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                     PKR {entry.totalDebit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                       entry.status === 'posted' ? 'bg-blue-100 text-blue-800' : 'bg-yellow-100 text-yellow-800'\n//                     }`}>\n//                       {entry.status}\n//                     </span>\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n//                     <button\n//                       onClick={() => setSelectedEntry(entry)}\n//                       className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\n//                     >\n//                       <Eye size={16} />\n//                     </button>\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </div>\n//       </div>\n\n//       {/* Entry Details Modal */}\n//       {selectedEntry && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <div className=\"flex items-center justify-between\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\n//                   Journal Entry Details - {selectedEntry.id}\n//                 </h3>\n//                 <button\n//                   onClick={() => setSelectedEntry(null)}\n//                   className=\"text-gray-400 hover:text-gray-600\"\n//                 >\n//                   <X size={20} />\n//                 </button>\n//               </div>\n//             </div>\n\n//             <div className=\"px-6 py-4\">\n//               {/* Entry Header */}\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\n//                 <div>\n//                   <label className=\"text-sm font-medium text-gray-500\">Date</label>\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.date}</p>\n//                 </div>\n//                 <div>\n//                   <label className=\"text-sm font-medium text-gray-500\">Reference</label>\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.reference}</p>\n//                 </div>\n//                 <div>\n//                   <label className=\"text-sm font-medium text-gray-500\">Description</label>\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.description}</p>\n//                 </div>\n//                 <div>\n//                   <label className=\"text-sm font-medium text-gray-500\">Source</label>\n//                   <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                     selectedEntry.source === 'POS Sales' ? 'bg-green-100 text-green-800' : 'bg-orange-100 text-orange-800'\n//                   }`}>\n//                     {selectedEntry.source}\n//                   </span>\n//                 </div>\n//               </div>\n\n//               {/* Entry Lines */}\n//               <div className=\"mb-6\">\n//                 <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Account Entries</h4>\n//                 <div className=\"overflow-x-auto\">\n//                   <table className=\"w-full border border-gray-200 rounded\">\n//                     <thead className=\"bg-gray-50\">\n//                       <tr>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Account</th>\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Description</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Debit</th>\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Credit</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody className=\"divide-y divide-gray-200\">\n//                       {selectedEntry.entries.map((entryLine, index) => (\n//                         <tr key={index}>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900\">\n//                             {getAccountName(entryLine.accountId)}\n//                           </td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-600\">\n//                             {entryLine.description}\n//                           </td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">\n//                             {entryLine.debit > 0 ? `${entryLine.debit.toFixed(2)}` : '-'}\n//                           </td>\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">\n//                             {entryLine.credit > 0 ? `${entryLine.credit.toFixed(2)}` : '-'}\n//                           </td>\n//                         </tr>\n//                       ))}\n//                     </tbody>\n//                     <tfoot className=\"bg-gray-50\">\n//                       <tr>\n//                         <td colSpan=\"2\" className=\"px-4 py-2 text-sm font-medium text-gray-900\">\n//                           Totals:\n//                         </td>\n//                         <td className=\"px-4 py-2 text-sm font-bold text-gray-900 text-right\">\n//                           PKR {selectedEntry.totalDebit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n//                         </td>\n//                         <td className=\"px-4 py-2 text-sm font-bold text-gray-900 text-right\">\n//                           PKR {selectedEntry.totalCredit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n//                         </td>\n//                       </tr>\n//                     </tfoot>\n//                   </table>\n//                 </div>\n//               </div>\n\n//               {/* Original Order Info (if available) */}\n//               {selectedEntry.originalOrder && (\n//                 <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\n//                   <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Original Sales Order Details</h4>\n//                   <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n//                     <div>\n//                       <span className=\"font-medium text-gray-500\">Order ID:</span>\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.orderId}</p>\n//                     </div>\n//                     <div>\n//                       <span className=\"font-medium text-gray-500\">Status:</span>\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.status}</p>\n//                     </div>\n//                     <div>\n//                       <span className=\"font-medium text-gray-500\">Payment Status:</span>\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.paid ? 'Paid' : 'Unpaid'}</p>\n//                     </div>\n//                     <div>\n//                       <span className=\"font-medium text-gray-500\">Fulfilled:</span>\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.fulfilled ? 'Yes' : 'No'}</p>\n//                     </div>\n//                   </div>\n\n//                   {/* Line Items */}\n//                   <div className=\"mt-4\">\n//                     <span className=\"font-medium text-gray-500\">Line Items:</span>\n//                     <div className=\"mt-2 space-y-2\">\n//                       {selectedEntry.originalOrder.lineItems.map((item, index) => (\n//                         <div key={index} className=\"text-sm bg-white p-2 rounded border\">\n//                           <span className=\"font-medium\">{item.productName}</span> - \n//                           Qty: {item.quantity}, Price: PKR {parseFloat(item.price).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}, \n//                           Total: PKR {parseFloat(item.total).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n//                           {item.taxAmount > 0 && <span className=\"text-gray-500\"> (Tax: PKR {parseFloat(item.taxAmount).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})})</span>}\n//                         </div>\n//                       ))}\n//                     </div>\n//                   </div>\n//                 </div>\n//               )}\n\n//               {/* Entry Metadata */}\n//               <div className=\"text-xs text-gray-500\">\n//                 <p>Created: {new Date(selectedEntry.createdAt).toLocaleString()}</p>\n//                 <p>Status: {selectedEntry.status}</p>\n//                 <p>Type: {selectedEntry.transactionType}</p>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Trial Balance Modal */}\n//       {showTrialBalance && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-lg max-w-5xl w-full max-h-[90vh] overflow-y-auto\">\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\n//               <div className=\"flex items-center justify-between\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\n//                   Trial Balance - As of {new Date().toLocaleDateString()}\n//                 </h3>\n//                 <div className=\"flex items-center space-x-2\">\n//                   <button\n//                     onClick={() => {\n//                       // Export functionality would go here\n//                       alert('Export functionality would be implemented here');\n//                     }}\n//                     className=\"px-3 py-1 bg-emerald-600 text-white rounded text-sm hover:bg-emerald-700 flex items-center space-x-1\"\n//                   >\n//                     <Download size={14} />\n//                     <span>Export</span>\n//                   </button>\n//                   <button\n//                     onClick={() => setShowTrialBalance(false)}\n//                     className=\"text-gray-400 hover:text-gray-600\"\n//                   >\n//                     <X size={20} />\n//                   </button>\n//                 </div>\n//               </div>\n//             </div>\n\n//             <div className=\"px-6 py-4\">\n//               <div className=\"overflow-x-auto\">\n//                 <table className=\"w-full\">\n//                   <thead className=\"bg-gray-50\">\n//                     <tr>\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Account Code\n//                       </th>\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Account Name\n//                       </th>\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Type\n//                       </th>\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Debit Total\n//                       </th>\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Credit Total\n//                       </th>\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                         Balance\n//                       </th>\n//                     </tr>\n//                   </thead>\n//                   <tbody className=\"bg-white divide-y divide-gray-200\">\n//                     {trialBalance.map((account) => (\n//                       <tr key={account.accountId}>\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n//                           {account.accountCode}\n//                         </td>\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900\">\n//                           {account.accountName}\n//                         </td>\n//                         <td className=\"px-4 py-4 whitespace-nowrap\">\n//                           <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                             account.accountType === 'assets' ? 'bg-green-100 text-green-800' :\n//                             account.accountType === 'liabilities' ? 'bg-red-100 text-red-800' :\n//                             account.accountType === 'equity' ? 'bg-blue-100 text-blue-800' :\n//                             account.accountType === 'revenue' ? 'bg-purple-100 text-purple-800' :\n//                             'bg-orange-100 text-orange-800'\n//                           }`}>\n//                             {account.accountType}\n//                           </span>\n//                         </td>\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n//                           PKR {account.debit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n//                         </td>\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n//                           PKR {account.credit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n//                         </td>\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-right\">\n//                           <span className={account.balance >= 0 ? 'text-green-600' : 'text-red-600'}>\n//                             PKR {Math.abs(account.balance).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n//                             {account.balance < 0 && ' (CR)'}\n//                           </span>\n//                         </td>\n//                       </tr>\n//                     ))}\n//                   </tbody>\n//                   <tfoot className=\"bg-gray-50\">\n//                     <tr>\n//                       <td colSpan=\"3\" className=\"px-4 py-3 text-sm font-bold text-gray-900\">\n//                         TOTALS:\n//                       </td>\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\n//                         PKR {trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n//                       </td>\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\n//                         PKR {trialBalance.reduce((sum, acc) => sum + acc.credit, 0).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n//                       </td>\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\n//                         PKR {Math.abs(trialBalance.reduce((sum, acc) => sum + acc.balance, 0)).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n//                       </td>\n//                     </tr>\n//                   </tfoot>\n//                 </table>\n//               </div>\n\n//               {/* Trial Balance Validation */}\n//               <div className=\"mt-4 p-4 bg-green-50 border border-green-200 rounded-lg\">\n//                 <div className=\"flex items-center\">\n//                   <CheckCircle className=\"text-green-600 mr-2\" size={20} />\n//                   <div>\n//                     <h4 className=\"font-medium text-green-800\">Trial Balance is Balanced</h4>\n//                     <p className=\"text-sm text-green-700\">\n//                       Total Debits = Total Credits = PKR {trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n//                     </p>\n//                   </div>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Integration Status */}\n//       <div className=\"mt-8 grid grid-cols-1 md:grid-cols-3 gap-4\">\n//         <div className=\"p-4 bg-green-50 border border-green-200 rounded-lg\">\n//           <div className=\"flex items-center mb-2\">\n//             <CheckCircle className=\"text-green-600 mr-2\" size={16} />\n//             <h4 className=\"font-medium text-green-800\">POS API Integration</h4>\n//           </div>\n//           <p className=\"text-sm text-green-700\">\n//             Sales orders automatically create journal entries from live API data\n//           </p>\n//         </div>\n\n//         <div className=\"p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n//           <div className=\"flex items-center mb-2\">\n//             <RefreshCw className=\"text-blue-600 mr-2\" size={16} />\n//             <h4 className=\"font-medium text-blue-800\">Real-time Sync</h4>\n//           </div>\n//           <p className=\"text-sm text-blue-700\">\n//             Journal entries updated automatically with each sales transaction\n//           </p>\n//         </div>\n\n//         <div className=\"p-4 bg-orange-50 border border-orange-200 rounded-lg\">\n//           <div className=\"flex items-center mb-2\">\n//             <FileText className=\"text-orange-600 mr-2\" size={16} />\n//             <h4 className=\"font-medium text-orange-800\">Manual Entries</h4>\n//           </div>\n//           <p className=\"text-sm text-orange-700\">\n//             Add adjustments and corrections with full double-entry validation\n//           </p>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default GeneralLedger;\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Book, Plus, Filter, Search, Calendar, FileText, Edit, Trash2, Save, X, AlertCircle, CheckCircle, DollarSign, TrendingUp, Eye, Download, RefreshCw } from 'lucide-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GeneralLedger = () => {\n  _s();\n  const [journalEntries, setJournalEntries] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n  const [filteredEntries, setFilteredEntries] = useState([]);\n  const [selectedEntry, setSelectedEntry] = useState(null);\n  const [isAddingEntry, setIsAddingEntry] = useState(false);\n  const [loading, setLoading] = useState({\n    entries: false,\n    accounts: false\n  });\n  const [errors, setErrors] = useState({\n    entries: null,\n    accounts: null\n  });\n  const [filters, setFilters] = useState({\n    dateFrom: '',\n    dateTo: '',\n    accountId: '',\n    transactionType: 'all',\n    searchTerm: ''\n  });\n  const [trialBalance, setTrialBalance] = useState([]);\n  const [showTrialBalance, setShowTrialBalance] = useState(false);\n  const [newEntry, setNewEntry] = useState({\n    date: new Date().toISOString().split('T')[0],\n    description: '',\n    reference: '',\n    entries: [{\n      accountId: '',\n      debit: 0,\n      credit: 0,\n      description: ''\n    }, {\n      accountId: '',\n      debit: 0,\n      credit: 0,\n      description: ''\n    }]\n  });\n\n  // API Configuration\n  const API_BASE_URL = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/orders?start=0&size=200';\n  const API_BASE_URL_CHARTS_OF_ACCOUNTS = 'http://localhost:8080/api/accounts';\n\n  // Fetch order data from API\n  const fetchOrderData = async () => {\n    try {\n      const response = await fetch(API_BASE_URL, {\n        method: 'GET',\n        headers: {\n          'Authorization': 'Bearer Hamid',\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`API request failed with status ${response.status}`);\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetching order data:', error);\n      return null;\n    }\n  };\n\n  // Format date from API format\n  const formatDateFromCreatedAt = createdAt => {\n    try {\n      const parts = createdAt.split('.');\n      if (parts.length >= 3) {\n        return `${parts[0]}-${parts[1].padStart(2, '0')}-${parts[2].padStart(2, '0')}`;\n      }\n      return new Date().toISOString().split('T')[0];\n    } catch (error) {\n      return new Date().toISOString().split('T')[0];\n    }\n  };\n\n  // Fetch Charts of Accounts from API\n  const loadChartsOfAccounts = useCallback(async () => {\n    setLoading(prev => ({\n      ...prev,\n      accounts: true\n    }));\n    setErrors(prev => ({\n      ...prev,\n      accounts: null\n    }));\n    try {\n      const response = await fetch(API_BASE_URL_CHARTS_OF_ACCOUNTS, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to fetch accounts: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Raw accounts data from API:', data);\n      const formattedAccounts = data.filter(account => account[4] === 'account').map(account => ({\n        id: account[0],\n        code: account[1],\n        name: account[2],\n        type: account[3],\n        category: account[4],\n        parentId: account[5],\n        level: account[6],\n        description: account[7] || ''\n      })).sort((a, b) => a.code.localeCompare(b.code));\n      console.log('Formatted accounts:', formattedAccounts);\n      setAccounts(formattedAccounts);\n      setLoading(prev => ({\n        ...prev,\n        accounts: false\n      }));\n      return formattedAccounts;\n    } catch (error) {\n      console.error('Error loading charts of accounts:', error);\n      setErrors(prev => ({\n        ...prev,\n        accounts: error.message\n      }));\n      setLoading(prev => ({\n        ...prev,\n        accounts: false\n      }));\n      const fallbackAccounts = [{\n        id: '1111',\n        code: '1111',\n        name: 'Petty Cash',\n        type: 'assets',\n        category: 'account'\n      }, {\n        id: '1112',\n        code: '1112',\n        name: 'Bank - Main Account',\n        type: 'assets',\n        category: 'account'\n      }, {\n        id: '1120',\n        code: '1120',\n        name: 'Accounts Receivable',\n        type: 'assets',\n        category: 'account'\n      }, {\n        id: '1130',\n        code: '1130',\n        name: 'Inventory',\n        type: 'assets',\n        category: 'account'\n      }, {\n        id: '2110',\n        code: '2110',\n        name: 'Accounts Payable',\n        type: 'liabilities',\n        category: 'account'\n      }, {\n        id: '2130',\n        code: '2130',\n        name: 'Sales Tax Payable',\n        type: 'liabilities',\n        category: 'account'\n      }, {\n        id: '4100',\n        code: '4100',\n        name: 'Sales Revenue',\n        type: 'revenue',\n        category: 'account'\n      }, {\n        id: '4110',\n        code: '4110',\n        name: 'Electronics Sales',\n        type: 'revenue',\n        category: 'account'\n      }, {\n        id: '5100',\n        code: '5100',\n        name: 'Cost of Goods Sold',\n        type: 'expenses',\n        category: 'account'\n      }, {\n        id: '5200',\n        code: '5200',\n        name: 'Purchase Expenses',\n        type: 'expenses',\n        category: 'account'\n      }];\n      setAccounts(fallbackAccounts);\n      return fallbackAccounts;\n    }\n  }, []);\n\n  // Convert Sales Order to Journal Entry\n  const convertSalesOrderToJournalEntry = useCallback((order, accountsList) => {\n    const entries = [];\n    const subTotal = parseFloat(order.subTotal) || 0;\n    const taxAmount = parseFloat(order.taxAmount) || 0;\n    const total = parseFloat(order.total) || 0;\n    if (!order.paid || !order.fulfilled || order.status !== 'Closed') {\n      return null;\n    }\n    const findAccountByType = type => {\n      const matchingAccount = accountsList.find(acc => acc.type.toLowerCase() === type.toLowerCase());\n      return matchingAccount || {\n        id: 'UNKNOWN',\n        name: `Unknown ${type} Account`,\n        code: 'N/A'\n      };\n    };\n    const cashAccount = findAccountByType('assets');\n    entries.push({\n      accountId: cashAccount.id,\n      accountName: cashAccount.name,\n      accountCode: cashAccount.code,\n      debit: total,\n      credit: 0,\n      description: `Cash received from Order #${order.orderId} - ${order.lineItems.map(item => item.productName).join(', ')}`\n    });\n    if (subTotal > 0) {\n      const revenueAccount = findAccountByType('revenue');\n      entries.push({\n        accountId: revenueAccount.id,\n        accountName: revenueAccount.name,\n        accountCode: revenueAccount.code,\n        debit: 0,\n        credit: subTotal,\n        description: `Revenue from Order #${order.orderId}`\n      });\n    }\n    if (taxAmount > 0) {\n      const taxAccount = findAccountByType('liabilities');\n      entries.push({\n        accountId: taxAccount.id,\n        accountName: taxAccount.name,\n        accountCode: taxAccount.code,\n        debit: 0,\n        credit: taxAmount,\n        description: `${order.taxRate}% tax collected on Order #${order.orderId}`\n      });\n    }\n    let totalCOGS = 0;\n    order.lineItems.forEach(item => {\n      if (item.fulfilled && item.status === 'Fulfilled') {\n        const costPrice = parseFloat(item.costPrice) || 0;\n        const quantity = parseFloat(item.quantity) || 0;\n        const itemCOGS = costPrice * quantity;\n        totalCOGS += itemCOGS;\n      }\n    });\n    if (totalCOGS > 0) {\n      const cogsAccount = findAccountByType('expenses');\n      entries.push({\n        accountId: cogsAccount.id,\n        accountName: cogsAccount.name,\n        accountCode: cogsAccount.code,\n        debit: totalCOGS,\n        credit: 0,\n        description: `COGS for Order #${order.orderId}`\n      });\n      const inventoryAccount = findAccountByType('assets');\n      entries.push({\n        accountId: inventoryAccount.id,\n        accountName: inventoryAccount.name,\n        accountCode: inventoryAccount.code,\n        debit: 0,\n        credit: totalCOGS,\n        description: `Inventory reduction - Order #${order.orderId}`\n      });\n    }\n    const totalDebit = entries.reduce((sum, entry) => sum + parseFloat(entry.debit || 0), 0);\n    const totalCredit = entries.reduce((sum, entry) => sum + parseFloat(entry.credit || 0), 0);\n    return {\n      id: `JE-ORDER-${order.orderId}`,\n      date: formatDateFromCreatedAt(order.createdAt),\n      description: `Sales Order #${order.orderId} - ${order.lineItems.map(item => `${item.productName} (${item.quantity})`).join(', ')}`,\n      reference: `ORDER-${order.orderId}`,\n      transactionType: 'automatic',\n      source: 'POS Sales',\n      status: 'posted',\n      entries: entries,\n      totalDebit: Math.round(totalDebit * 100) / 100,\n      totalCredit: Math.round(totalCredit * 100) / 100,\n      createdAt: order.createdAt,\n      originalOrder: order\n    };\n  }, []);\n\n  // Load Journal Entries from API and Local Storage\n  const loadJournalEntriesFromAPI = useCallback(async () => {\n    setLoading(prev => ({\n      ...prev,\n      entries: true\n    }));\n    setErrors(prev => ({\n      ...prev,\n      entries: null\n    }));\n    try {\n      const salesOrders = await fetchOrderData();\n      if (!salesOrders) {\n        throw new Error('Failed to fetch sales orders');\n      }\n      const journalEntriesFromSales = salesOrders.filter(order => order.paid && order.fulfilled && order.status === 'Closed').map(order => convertSalesOrderToJournalEntry(order, accounts)).filter(entry => entry !== null);\n      let manualEntries = [];\n      try {\n        const storedEntries = localStorage.getItem('manualJournalEntries');\n        manualEntries = storedEntries ? JSON.parse(storedEntries) : [];\n      } catch (error) {\n        console.warn('Error loading manual entries from localStorage:', error);\n        manualEntries = [];\n      }\n      const allEntries = [...journalEntriesFromSales, ...manualEntries];\n      setJournalEntries(allEntries);\n      setFilteredEntries(allEntries);\n      setLoading(prev => ({\n        ...prev,\n        entries: false\n      }));\n    } catch (error) {\n      console.error('Error loading journal entries:', error);\n      setErrors(prev => ({\n        ...prev,\n        entries: error.message\n      }));\n      setLoading(prev => ({\n        ...prev,\n        entries: false\n      }));\n    }\n  }, [accounts, convertSalesOrderToJournalEntry]);\n\n  // Filter entries\n  const filterEntries = useCallback(() => {\n    let filtered = [...journalEntries];\n    if (filters.dateFrom) {\n      filtered = filtered.filter(entry => entry.date >= filters.dateFrom);\n    }\n    if (filters.dateTo) {\n      filtered = filtered.filter(entry => entry.date <= filters.dateTo);\n    }\n    if (filters.accountId) {\n      filtered = filtered.filter(entry => {\n        return entry.entries.some(e => e.accountId === filters.accountId);\n      });\n    }\n    if (filters.transactionType !== 'all') {\n      filtered = filtered.filter(entry => entry.transactionType === filters.transactionType);\n    }\n    if (filters.searchTerm) {\n      const term = filters.searchTerm.toLowerCase();\n      filtered = filtered.filter(entry => entry.description.toLowerCase().includes(term) || entry.reference.toLowerCase().includes(term) || entry.entries.some(e => e.description.toLowerCase().includes(term)));\n    }\n    setFilteredEntries(filtered);\n  }, [journalEntries, filters]);\n\n  // Generate trial balance\n  const generateTrialBalance = useCallback(() => {\n    const balances = {};\n    const requiredAccountIds = new Set();\n    journalEntries.forEach(entry => {\n      if (entry.status === 'posted') {\n        entry.entries.forEach(entryLine => {\n          if (entryLine.accountId) {\n            requiredAccountIds.add(entryLine.accountId);\n          }\n        });\n      }\n    });\n    const accountTypesMap = {};\n    accounts.forEach(account => {\n      accountTypesMap[account.id] = account.type;\n      accountTypesMap[account.code] = account.type;\n    });\n    accounts.forEach(account => {\n      if (account.category !== 'header') {\n        balances[account.id] = {\n          accountId: account.id,\n          accountCode: account.code,\n          accountName: account.name,\n          accountType: account.type || 'unknown',\n          debit: 0,\n          credit: 0,\n          balance: 0\n        };\n      }\n    });\n    requiredAccountIds.forEach(accountId => {\n      if (!balances[accountId]) {\n        let accountName = '';\n        let accountType = '';\n        journalEntries.forEach(entry => {\n          entry.entries.forEach(entryLine => {\n            if (entryLine.accountId === accountId) {\n              if (entryLine.accountName) accountName = entryLine.accountName;\n            }\n          });\n        });\n        const prefix = accountId.toString().substring(0, 1);\n        if (prefix === '1') accountType = 'assets';else if (prefix === '2') accountType = 'liabilities';else if (prefix === '3') accountType = 'equity';else if (prefix === '4') accountType = 'revenue';else if (prefix === '5') accountType = 'expenses';else accountType = accountTypesMap[accountId] || 'unknown';\n        balances[accountId] = {\n          accountId: accountId,\n          accountCode: accountId,\n          accountName: accountName || `Account ${accountId}`,\n          accountType: accountType,\n          debit: 0,\n          credit: 0,\n          balance: 0\n        };\n      }\n    });\n    journalEntries.forEach(entry => {\n      if (entry.status === 'posted') {\n        entry.entries.forEach(entryLine => {\n          const accountId = entryLine.accountId;\n          if (balances[accountId]) {\n            balances[accountId].debit += parseFloat(entryLine.debit || 0);\n            balances[accountId].credit += parseFloat(entryLine.credit || 0);\n            if (entryLine.accountName && !balances[accountId].accountName) {\n              balances[accountId].accountName = entryLine.accountName;\n            }\n          }\n        });\n      }\n    });\n    Object.values(balances).forEach(account => {\n      if (account.accountType === 'assets' || account.accountType === 'expenses') {\n        account.balance = account.debit - account.credit;\n      } else {\n        account.balance = account.credit - account.debit;\n      }\n    });\n    const trialBalanceData = Object.values(balances).filter(account => account.debit > 0 || account.credit > 0).sort((a, b) => a.accountCode.localeCompare(b.accountCode));\n    setTrialBalance(trialBalanceData);\n    setShowTrialBalance(true);\n  }, [accounts, journalEntries]);\n\n  // Helper functions for entry management\n  const addEntryLine = () => {\n    setNewEntry({\n      ...newEntry,\n      entries: [...newEntry.entries, {\n        accountId: '',\n        debit: 0,\n        credit: 0,\n        description: ''\n      }]\n    });\n  };\n  const removeEntryLine = index => {\n    if (newEntry.entries.length > 2) {\n      const updatedEntries = newEntry.entries.filter((_, i) => i !== index);\n      setNewEntry({\n        ...newEntry,\n        entries: updatedEntries\n      });\n    }\n  };\n  const updateEntryLine = (index, field, value) => {\n    const updatedEntries = [...newEntry.entries];\n    updatedEntries[index] = {\n      ...updatedEntries[index],\n      [field]: value\n    };\n    setNewEntry({\n      ...newEntry,\n      entries: updatedEntries\n    });\n  };\n  const calculateTotals = entries => {\n    const totalDebit = entries.reduce((sum, entry) => sum + (parseFloat(entry.debit) || 0), 0);\n    const totalCredit = entries.reduce((sum, entry) => sum + (parseFloat(entry.credit) || 0), 0);\n    return {\n      totalDebit,\n      totalCredit\n    };\n  };\n  const isBalanced = entries => {\n    const {\n      totalDebit,\n      totalCredit\n    } = calculateTotals(entries);\n    return Math.abs(totalDebit - totalCredit) < 0.01;\n  };\n  const saveJournalEntry = () => {\n    if (!newEntry.description || !newEntry.entries.every(e => e.accountId)) {\n      alert('Please fill in all required fields');\n      return;\n    }\n    if (!isBalanced(newEntry.entries)) {\n      alert('Journal entry must be balanced - total debits must equal total credits');\n      return;\n    }\n    const {\n      totalDebit,\n      totalCredit\n    } = calculateTotals(newEntry.entries);\n    const entriesWithNames = newEntry.entries.map(entry => {\n      var _accounts$find;\n      return {\n        ...entry,\n        accountName: ((_accounts$find = accounts.find(acc => acc.id === entry.accountId)) === null || _accounts$find === void 0 ? void 0 : _accounts$find.name) || '',\n        debit: parseFloat(entry.debit) || 0,\n        credit: parseFloat(entry.credit) || 0\n      };\n    });\n    const journalEntry = {\n      id: `JE-MANUAL-${Date.now()}`,\n      date: newEntry.date,\n      description: newEntry.description,\n      reference: newEntry.reference || `MAN${Date.now()}`,\n      transactionType: 'manual',\n      source: 'Manual',\n      status: 'posted',\n      entries: entriesWithNames,\n      totalDebit,\n      totalCredit,\n      createdAt: new Date().toISOString()\n    };\n    try {\n      const existingManualEntries = JSON.parse(localStorage.getItem('manualJournalEntries') || '[]');\n      const updatedManualEntries = [...existingManualEntries, journalEntry];\n      localStorage.setItem('manualJournalEntries', JSON.stringify(updatedManualEntries));\n    } catch (error) {\n      console.warn('Could not save to localStorage:', error);\n    }\n    setJournalEntries([...journalEntries, journalEntry]);\n    setNewEntry({\n      date: new Date().toISOString().split('T')[0],\n      description: '',\n      reference: '',\n      entries: [{\n        accountId: '',\n        debit: 0,\n        credit: 0,\n        description: ''\n      }, {\n        accountId: '',\n        debit: 0,\n        credit: 0,\n        description: ''\n      }]\n    });\n    setIsAddingEntry(false);\n  };\n  const getAccountName = useCallback(accountId => {\n    const account = accounts.find(acc => acc.id === accountId || acc.code === accountId);\n    if (account) {\n      return `${account.code} - ${account.name}`;\n    }\n    let accountName = '';\n    journalEntries.forEach(entry => {\n      entry.entries.forEach(entryLine => {\n        if (entryLine.accountId === accountId && entryLine.accountName) {\n          accountName = entryLine.accountName;\n        }\n      });\n    });\n    if (accountName) {\n      return `${accountId} - ${accountName}`;\n    }\n    const prefix = accountId.toString().substring(0, 1);\n    let accountType = '';\n    if (prefix === '1') accountType = 'Assets';else if (prefix === '2') accountType = 'Liabilities';else if (prefix === '3') accountType = 'Equity';else if (prefix === '4') accountType = 'Revenue';else if (prefix === '5') accountType = 'Expenses';\n    return accountType ? `${accountId} - ${accountType} Account` : `${accountId} - Unknown Account`;\n  }, [accounts, journalEntries]);\n\n  // useEffect hooks\n  useEffect(() => {\n    loadChartsOfAccounts();\n  }, [loadChartsOfAccounts]);\n  useEffect(() => {\n    if (accounts.length > 0) {\n      loadJournalEntriesFromAPI();\n    }\n  }, [accounts, loadJournalEntriesFromAPI]);\n  useEffect(() => {\n    if (journalEntries.length > 0) {\n      filterEntries();\n    }\n  }, [journalEntries, filters, filterEntries]);\n  const {\n    totalDebit,\n    totalCredit\n  } = calculateTotals(newEntry.entries);\n  const entryIsBalanced = isBalanced(newEntry.entries);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-7xl mx-auto p-6 bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-gray-900 mb-2 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Book, {\n          className: \"mr-3 text-emerald-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 5017,\n          columnNumber: 11\n        }, this), \"General Ledger\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 5016,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"Real-time transaction recording and journal entry management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 5020,\n        columnNumber: 9\n      }, this), accountsLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 p-2 bg-blue-50 text-blue-700 rounded-md text-sm flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n          className: \"animate-spin mr-2\",\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 5025,\n          columnNumber: 13\n        }, this), \"Loading chart of accounts...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 5024,\n        columnNumber: 11\n      }, this), accountsError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 p-2 bg-red-50 text-red-700 rounded-md text-sm flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n          className: \"mr-2\",\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 5032,\n          columnNumber: 13\n        }, this), \"Error loading accounts: \", accountsError]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 5031,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 5015,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-blue-50 p-4 rounded-lg border border-blue-200\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-blue-600 text-sm font-medium\",\n              children: \"Total Entries\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 5043,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-2xl font-bold text-blue-900\",\n              children: journalEntries.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 5044,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 5042,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FileText, {\n            className: \"text-blue-600\",\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5046,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 5041,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 5040,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-green-50 p-4 rounded-lg border border-green-200\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-green-600 text-sm font-medium\",\n              children: \"POS Entries\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 5053,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-2xl font-bold text-green-900\",\n              children: journalEntries.filter(e => e.source === 'POS Sales').length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 5054,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 5052,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TrendingUp, {\n            className: \"text-green-600\",\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5058,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 5051,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 5050,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-orange-50 p-4 rounded-lg border border-orange-200\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-orange-600 text-sm font-medium\",\n              children: \"Manual Entries\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 5065,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-2xl font-bold text-orange-900\",\n              children: journalEntries.filter(e => e.transactionType === 'manual').length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 5066,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 5064,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Edit, {\n            className: \"text-orange-600\",\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5070,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 5063,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 5062,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-purple-50 p-4 rounded-lg border border-purple-200\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-purple-600 text-sm font-medium\",\n              children: \"Total Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 5077,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-2xl font-bold text-purple-900\",\n              children: [\"PKR \", journalEntries.reduce((sum, entry) => sum + entry.totalDebit, 0).toLocaleString('en-PK', {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 5078,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 5076,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DollarSign, {\n            className: \"text-purple-600\",\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5082,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 5075,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 5074,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 5039,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap items-center justify-between gap-4 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap items-center gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(Calendar, {\n            size: 16,\n            className: \"text-gray-400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5092,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: filters.dateFrom,\n            onChange: e => setFilters({\n              ...filters,\n              dateFrom: e.target.value\n            }),\n            className: \"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\",\n            placeholder: \"From\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5093,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-500\",\n            children: \"to\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: filters.dateTo,\n            onChange: e => setFilters({\n              ...filters,\n              dateTo: e.target.value\n            }),\n            className: \"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\",\n            placeholder: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 5091,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(Filter, {\n            className: \"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\",\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: filters.accountId,\n            onChange: e => setFilters({\n              ...filters,\n              accountId: e.target.value\n            }),\n            className: \"pl-10 pr-8 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"All Accounts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 5118,\n              columnNumber: 15\n            }, this), accounts.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"optgroup\", {\n                label: \"Assets\",\n                children: accounts.filter(acc => acc.type === 'assets' || acc.type.toLowerCase() === 'assets').map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: account.id,\n                  children: [account.code, \" - \", account.name]\n                }, account.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 5128,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5124,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                label: \"Liabilities\",\n                children: accounts.filter(acc => acc.type === 'liabilities' || acc.type.toLowerCase() === 'liabilities').map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: account.id,\n                  children: [account.code, \" - \", account.name]\n                }, account.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 5139,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5135,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                label: \"Equity\",\n                children: accounts.filter(acc => acc.type === 'equity' || acc.type.toLowerCase() === 'equity').map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: account.id,\n                  children: [account.code, \" - \", account.name]\n                }, account.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 5150,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5146,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                label: \"Revenue\",\n                children: accounts.filter(acc => acc.type === 'revenue' || acc.type.toLowerCase() === 'revenue').map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: account.id,\n                  children: [account.code, \" - \", account.name]\n                }, account.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 5161,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5157,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                label: \"Expenses\",\n                children: accounts.filter(acc => acc.type === 'expenses' || acc.type.toLowerCase() === 'expenses').map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: account.id,\n                  children: [account.code, \" - \", account.name]\n                }, account.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 5172,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5168,\n                columnNumber: 19\n              }, this), accounts.filter(acc => !['assets', 'liabilities', 'equity', 'revenue', 'expenses'].includes(acc.type.toLowerCase())).length > 0 && /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                label: \"Other\",\n                children: accounts.filter(acc => !['assets', 'liabilities', 'equity', 'revenue', 'expenses'].includes(acc.type.toLowerCase())).map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: account.id,\n                  children: [account.code, \" - \", account.name]\n                }, account.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 5188,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5182,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true), accounts.length === 0 && /*#__PURE__*/_jsxDEV(\"option\", {\n              disabled: true,\n              children: \"No accounts available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 5198,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 5113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 5111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filters.transactionType,\n          onChange: e => setFilters({\n            ...filters,\n            transactionType: e.target.value\n          }),\n          className: \"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"All Types\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"automatic\",\n            children: \"POS Sales\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"manual\",\n            children: \"Manual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5211,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 5204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(Search, {\n            className: \"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\",\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search entries...\",\n            value: filters.searchTerm,\n            onChange: e => setFilters({\n              ...filters,\n              searchTerm: e.target.value\n            }),\n            className: \"pl-10 pr-4 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5217,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 5215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 5089,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: loadJournalEntriesFromAPI,\n          disabled: loading,\n          className: \"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2 disabled:bg-gray-400\",\n          children: [loading ? /*#__PURE__*/_jsxDEV(RefreshCw, {\n            className: \"animate-spin\",\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5233,\n            columnNumber: 24\n          }, this) : /*#__PURE__*/_jsxDEV(RefreshCw, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5233,\n            columnNumber: 75\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Refresh from API\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 5228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: loadChartsOfAccounts,\n          disabled: accountsLoading,\n          className: \"px-4 py-2 bg-teal-600 text-white rounded-lg hover:bg-teal-700 flex items-center space-x-2 disabled:bg-gray-400\",\n          children: [accountsLoading ? /*#__PURE__*/_jsxDEV(RefreshCw, {\n            className: \"animate-spin\",\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5241,\n            columnNumber: 32\n          }, this) : /*#__PURE__*/_jsxDEV(RefreshCw, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5241,\n            columnNumber: 83\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Refresh Accounts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5242,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 5236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            // Reset all filters\n            setFilters({\n              dateFrom: '',\n              dateTo: '',\n              accountId: '',\n              transactionType: 'all',\n              searchTerm: ''\n            });\n            // Re-apply filtering to show all entries\n            setFilteredEntries([...journalEntries]);\n          },\n          className: \"px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(X, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Clear Filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5260,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 5244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsAddingEntry(true),\n          className: \"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(Plus, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Add Entry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5267,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 5262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: generateTrialBalance,\n          className: \"px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(FileText, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Trial Balance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5274,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 5269,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 5227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 5088,\n      columnNumber: 7\n    }, this), isAddingEntry && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8 p-6 bg-gray-50 rounded-lg border\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold mb-4\",\n        children: \"Add Manual Journal Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 5282,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Date *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5286,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: newEntry.date,\n            onChange: e => setNewEntry({\n              ...newEntry,\n              date: e.target.value\n            }),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5287,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 5285,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Description *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5295,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newEntry.description,\n            onChange: e => setNewEntry({\n              ...newEntry,\n              description: e.target.value\n            }),\n            placeholder: \"Enter description\",\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5296,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 5294,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Reference\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5305,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newEntry.reference,\n            onChange: e => setNewEntry({\n              ...newEntry,\n              reference: e.target.value\n            }),\n            placeholder: \"Reference number\",\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5306,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 5304,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 5284,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700 mb-2\",\n          children: \"Journal Entry Lines\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 5318,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-3\",\n          children: newEntry.entries.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-12 gap-2 items-center bg-white p-3 rounded border\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-span-4\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: entry.accountId,\n                onChange: e => updateEntryLine(index, 'accountId', e.target.value),\n                className: \"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Account\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 5328,\n                  columnNumber: 23\n                }, this), accounts.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"optgroup\", {\n                    label: \"Assets\",\n                    children: accounts.filter(acc => acc.type === 'assets' || acc.type.toLowerCase() === 'assets').map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: account.id,\n                      children: [account.code, \" - \", account.name]\n                    }, account.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 5337,\n                      columnNumber: 33\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 5333,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                    label: \"Liabilities\",\n                    children: accounts.filter(acc => acc.type === 'liabilities' || acc.type.toLowerCase() === 'liabilities').map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: account.id,\n                      children: [account.code, \" - \", account.name]\n                    }, account.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 5348,\n                      columnNumber: 33\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 5344,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                    label: \"Equity\",\n                    children: accounts.filter(acc => acc.type === 'equity' || acc.type.toLowerCase() === 'equity').map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: account.id,\n                      children: [account.code, \" - \", account.name]\n                    }, account.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 5359,\n                      columnNumber: 33\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 5355,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                    label: \"Revenue\",\n                    children: accounts.filter(acc => acc.type === 'revenue' || acc.type.toLowerCase() === 'revenue').map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: account.id,\n                      children: [account.code, \" - \", account.name]\n                    }, account.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 5370,\n                      columnNumber: 33\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 5366,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                    label: \"Expenses\",\n                    children: accounts.filter(acc => acc.type === 'expenses' || acc.type.toLowerCase() === 'expenses').map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: account.id,\n                      children: [account.code, \" - \", account.name]\n                    }, account.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 5381,\n                      columnNumber: 33\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 5377,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true), accounts.length === 0 && /*#__PURE__*/_jsxDEV(\"option\", {\n                  disabled: true,\n                  children: \"No accounts available\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 5390,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 5323,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 5322,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-span-3\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: entry.description,\n                onChange: e => updateEntryLine(index, 'description', e.target.value),\n                placeholder: \"Description\",\n                className: \"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5395,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 5394,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-span-2\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                step: \"0.01\",\n                value: entry.debit,\n                onChange: e => updateEntryLine(index, 'debit', e.target.value),\n                placeholder: \"Debit\",\n                className: \"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5404,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 5403,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-span-2\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                step: \"0.01\",\n                value: entry.credit,\n                onChange: e => updateEntryLine(index, 'credit', e.target.value),\n                placeholder: \"Credit\",\n                className: \"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5414,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 5413,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-span-1\",\n              children: newEntry.entries.length > 2 && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => removeEntryLine(index),\n                className: \"p-1 text-red-600 hover:bg-red-100 rounded\",\n                children: /*#__PURE__*/_jsxDEV(Trash2, {\n                  size: 14\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 5429,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5425,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 5423,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 5321,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 5319,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addEntryLine,\n            className: \"px-3 py-1 text-sm bg-gray-200 text-gray-700 rounded hover:bg-gray-300 flex items-center space-x-1\",\n            children: [/*#__PURE__*/_jsxDEV(Plus, {\n              size: 14\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 5442,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Add Line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 5443,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 5438,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: [\"Total Debit: PKR \", totalDebit.toLocaleString('en-PK', {\n                  minimumFractionDigits: 2,\n                  maximumFractionDigits: 2\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 5448,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mx-2\",\n                children: \"|\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5449,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: [\"Total Credit: PKR \", totalCredit.toLocaleString('en-PK', {\n                  minimumFractionDigits: 2,\n                  maximumFractionDigits: 2\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 5450,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 5447,\n              columnNumber: 17\n            }, this), entryIsBalanced ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center text-green-600\",\n              children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n                size: 16,\n                className: \"mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5454,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm\",\n                children: \"Balanced\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5455,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 5453,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center text-red-600\",\n              children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n                size: 16,\n                className: \"mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5459,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm\",\n                children: \"Not Balanced\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5460,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 5458,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 5446,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 5437,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 5317,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveJournalEntry,\n          disabled: !entryIsBalanced,\n          className: \"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 disabled:bg-gray-400 flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(Save, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5473,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Save Entry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5474,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 5468,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsAddingEntry(false),\n          className: \"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(X, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5480,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5481,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 5476,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 5467,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 5281,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white border border-gray-200 rounded-lg overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-6 py-4 border-b border-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold text-gray-900\",\n          children: \"Journal Entries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 5490,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-600 mt-1\",\n          children: [\"Showing \", filteredEntries.length, \" of \", journalEntries.length, \" entries\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 5491,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 5489,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"bg-gray-50\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Entry ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5500,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5503,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5506,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Reference\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5509,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Source\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5512,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5515,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5518,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5521,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 5499,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5498,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            className: \"bg-white divide-y divide-gray-200\",\n            children: filteredEntries.map(entry => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"hover:bg-gray-50\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\",\n                children: entry.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5529,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900\",\n                children: entry.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5532,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 text-sm text-gray-900 max-w-xs truncate\",\n                children: entry.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5535,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900\",\n                children: entry.reference\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5538,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `px-2 py-1 text-xs font-medium rounded-full ${entry.source === 'POS Sales' ? 'bg-green-100 text-green-800' : entry.source === 'Manual' ? 'bg-orange-100 text-orange-800' : 'bg-blue-100 text-blue-800'}`,\n                  children: entry.source\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 5542,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5541,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900\",\n                children: [\"PKR \", entry.totalDebit.toLocaleString('en-PK', {\n                  minimumFractionDigits: 2,\n                  maximumFractionDigits: 2\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 5550,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `px-2 py-1 text-xs font-medium rounded-full ${entry.status === 'posted' ? 'bg-blue-100 text-blue-800' : 'bg-yellow-100 text-yellow-800'}`,\n                  children: entry.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 5554,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5553,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm font-medium\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setSelectedEntry(entry),\n                  className: \"text-emerald-600 hover:text-emerald-900 mr-3\",\n                  children: /*#__PURE__*/_jsxDEV(Eye, {\n                    size: 16\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 5565,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 5561,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5560,\n                columnNumber: 19\n              }, this)]\n            }, entry.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 5528,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5526,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 5497,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 5496,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 5488,\n      columnNumber: 7\n    }, this), selectedEntry && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-6 py-4 border-b border-gray-200\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold text-gray-900\",\n              children: [\"Journal Entry Details - \", selectedEntry.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 5581,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setSelectedEntry(null),\n              className: \"text-gray-400 hover:text-gray-600\",\n              children: /*#__PURE__*/_jsxDEV(X, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5588,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 5584,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 5580,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 5579,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-6 py-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"text-sm font-medium text-gray-500\",\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5597,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-900\",\n                children: selectedEntry.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5598,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 5596,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"text-sm font-medium text-gray-500\",\n                children: \"Reference\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5601,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-900\",\n                children: selectedEntry.reference\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5602,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 5600,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"text-sm font-medium text-gray-500\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5605,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-900\",\n                children: selectedEntry.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5606,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 5604,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"text-sm font-medium text-gray-500\",\n                children: \"Source\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5609,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `px-2 py-1 text-xs font-medium rounded-full ${selectedEntry.source === 'POS Sales' ? 'bg-green-100 text-green-800' : 'bg-orange-100 text-orange-800'}`,\n                children: selectedEntry.source\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5610,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 5608,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 5595,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-sm font-medium text-gray-700 mb-3\",\n              children: \"Account Entries\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 5620,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"overflow-x-auto\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"w-full border border-gray-200 rounded\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  className: \"bg-gray-50\",\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-4 py-2 text-left text-xs font-medium text-gray-500\",\n                      children: \"Account\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 5625,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-4 py-2 text-left text-xs font-medium text-gray-500\",\n                      children: \"Description\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 5626,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-4 py-2 text-right text-xs font-medium text-gray-500\",\n                      children: \"Debit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 5627,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-4 py-2 text-right text-xs font-medium text-gray-500\",\n                      children: \"Credit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 5628,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 5624,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 5623,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  className: \"divide-y divide-gray-200\",\n                  children: selectedEntry.entries.map((entryLine, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 text-sm text-gray-900\",\n                      children: getAccountName(entryLine.accountId)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 5634,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 text-sm text-gray-600\",\n                      children: entryLine.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 5638,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 text-sm text-gray-900 text-right\",\n                      children: entryLine.debit > 0 ? `${entryLine.debit.toFixed(2)}` : '-'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 5641,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 text-sm text-gray-900 text-right\",\n                      children: entryLine.credit > 0 ? `${entryLine.credit.toFixed(2)}` : '-'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 5644,\n                      columnNumber: 27\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 5633,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 5631,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n                  className: \"bg-gray-50\",\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      colSpan: \"2\",\n                      className: \"px-4 py-2 text-sm font-medium text-gray-900\",\n                      children: \"Totals:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 5652,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 text-sm font-bold text-gray-900 text-right\",\n                      children: [\"PKR \", selectedEntry.totalDebit.toLocaleString('en-PK', {\n                        minimumFractionDigits: 2,\n                        maximumFractionDigits: 2\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 5655,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 text-sm font-bold text-gray-900 text-right\",\n                      children: [\"PKR \", selectedEntry.totalCredit.toLocaleString('en-PK', {\n                        minimumFractionDigits: 2,\n                        maximumFractionDigits: 2\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 5658,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 5651,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 5650,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 5622,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 5621,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 5619,\n            columnNumber: 15\n          }, this), selectedEntry.originalOrder && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6 p-4 bg-gray-50 rounded-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-sm font-medium text-gray-700 mb-3\",\n              children: \"Original Sales Order Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 5670,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium text-gray-500\",\n                  children: \"Order ID:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 5673,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-900\",\n                  children: selectedEntry.originalOrder.orderId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 5674,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 5672,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium text-gray-500\",\n                  children: \"Status:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 5677,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-900\",\n                  children: selectedEntry.originalOrder.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 5678,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 5676,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium text-gray-500\",\n                  children: \"Payment Status:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 5681,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-900\",\n                  children: selectedEntry.originalOrder.paid ? 'Paid' : 'Unpaid'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 5682,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 5680,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium text-gray-500\",\n                  children: \"Fulfilled:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 5685,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-900\",\n                  children: selectedEntry.originalOrder.fulfilled ? 'Yes' : 'No'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 5686,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 5684,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 5671,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium text-gray-500\",\n                children: \"Line Items:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5692,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2 space-y-2\",\n                children: selectedEntry.originalOrder.lineItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm bg-white p-2 rounded border\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-medium\",\n                    children: item.productName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 5696,\n                    columnNumber: 27\n                  }, this), \" - Qty: \", item.quantity, \", Price: PKR \", parseFloat(item.price).toLocaleString('en-PK', {\n                    minimumFractionDigits: 2,\n                    maximumFractionDigits: 2\n                  }), \", Total: PKR \", parseFloat(item.total).toLocaleString('en-PK', {\n                    minimumFractionDigits: 2,\n                    maximumFractionDigits: 2\n                  }), item.taxAmount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-gray-500\",\n                    children: [\" (Tax: PKR \", parseFloat(item.taxAmount).toLocaleString('en-PK', {\n                      minimumFractionDigits: 2,\n                      maximumFractionDigits: 2\n                    }), \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 5699,\n                    columnNumber: 50\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 5695,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5693,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 5691,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 5669,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-gray-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Created: \", new Date(selectedEntry.createdAt).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 5709,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Status: \", selectedEntry.status]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 5710,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Type: \", selectedEntry.transactionType]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 5711,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 5708,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 5593,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 5578,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5577,\n      columnNumber: 9\n    }, this), showTrialBalance && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg max-w-5xl w-full max-h-[90vh] overflow-y-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-6 py-4 border-b border-gray-200\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold text-gray-900\",\n              children: [\"Trial Balance - As of \", new Date().toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 5724,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  // Export functionality would go here\n                  alert('Export functionality would be implemented here');\n                },\n                className: \"px-3 py-1 bg-emerald-600 text-white rounded text-sm hover:bg-emerald-700 flex items-center space-x-1\",\n                children: [/*#__PURE__*/_jsxDEV(Download, {\n                  size: 14\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 5735,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Export\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 5736,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 5728,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setShowTrialBalance(false),\n                className: \"text-gray-400 hover:text-gray-600\",\n                children: /*#__PURE__*/_jsxDEV(X, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 5742,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5738,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 5727,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 5723,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 5722,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-6 py-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overflow-x-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"w-full\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                className: \"bg-gray-50\",\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                    children: \"Account Code\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 5753,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                    children: \"Account Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 5756,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                    children: \"Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 5759,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                    children: \"Debit Total\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 5762,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                    children: \"Credit Total\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 5765,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                    children: \"Balance\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 5768,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 5752,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5751,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                className: \"bg-white divide-y divide-gray-200\",\n                children: trialBalance.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-4 py-4 whitespace-nowrap text-sm font-medium text-gray-900\",\n                    children: item.accountCode\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 5776,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-4 py-4 whitespace-nowrap text-sm text-gray-900\",\n                    children: item.accountName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 5779,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-4 py-4 whitespace-nowrap\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `px-2 py-1 text-xs font-medium rounded-full ${item.accountType === 'assets' ? 'bg-green-100 text-green-800' : item.accountType === 'liabilities' ? 'bg-red-100 text-red-800' : item.accountType === 'equity' ? 'bg-blue-100 text-blue-800' : item.accountType === 'revenue' ? 'bg-purple-100 text-purple-800' : item.accountType === 'expenses' ? 'bg-orange-100 text-orange-800' : 'bg-gray-100 text-gray-800'}`,\n                      children: typeof item.accountType === 'string' && item.accountType.length > 0 ? item.accountType.charAt(0).toUpperCase() + item.accountType.slice(1) : 'Unknown'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 5783,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 5782,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\",\n                    children: [\"PKR \", item.debit.toLocaleString('en-PK', {\n                      minimumFractionDigits: 2,\n                      maximumFractionDigits: 2\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 5796,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\",\n                    children: [\"PKR \", item.credit.toLocaleString('en-PK', {\n                      minimumFractionDigits: 2,\n                      maximumFractionDigits: 2\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 5799,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-4 py-4 whitespace-nowrap text-sm font-medium text-right\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: item.balance >= 0 ? 'text-green-600' : 'text-red-600',\n                      children: [\"PKR \", Math.abs(item.balance).toLocaleString('en-PK', {\n                        minimumFractionDigits: 2,\n                        maximumFractionDigits: 2\n                      }), item.balance < 0 && ' (CR)']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 5803,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 5802,\n                    columnNumber: 19\n                  }, this)]\n                }, item.accountId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 5775,\n                  columnNumber: 17\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5773,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n                className: \"bg-gray-50\",\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"3\",\n                    className: \"px-4 py-3 text-sm font-bold text-gray-900\",\n                    children: \"TOTALS:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 5813,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-4 py-3 text-sm font-bold text-gray-900 text-right\",\n                    children: [\"PKR \", trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toLocaleString('en-PK', {\n                      minimumFractionDigits: 2,\n                      maximumFractionDigits: 2\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 5816,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-4 py-3 text-sm font-bold text-gray-900 text-right\",\n                    children: [\"PKR \", trialBalance.reduce((sum, acc) => sum + acc.credit, 0).toLocaleString('en-PK', {\n                      minimumFractionDigits: 2,\n                      maximumFractionDigits: 2\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 5819,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-4 py-3 text-sm font-bold text-gray-900 text-right\",\n                    children: [\"PKR \", Math.abs(trialBalance.reduce((sum, acc) => sum + acc.balance, 0)).toLocaleString('en-PK', {\n                      minimumFractionDigits: 2,\n                      maximumFractionDigits: 2\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 5822,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 5812,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5811,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 5750,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5749,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 p-4 bg-green-50 border border-green-200 rounded-lg\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n                className: \"text-green-600 mr-2\",\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 5833,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"font-medium text-green-800\",\n                  children: \"Trial Balance is Balanced\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 5835,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-green-700\",\n                  children: [\"Total Debits = Total Credits = PKR \", trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toLocaleString('en-PK', {\n                    minimumFractionDigits: 2,\n                    maximumFractionDigits: 2\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 5836,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 5834,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 5832,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5831,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 5748,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 5721,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5720,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8 grid grid-cols-1 md:grid-cols-3 gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-green-50 border border-green-200 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n            className: \"text-green-600 mr-2\",\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5851,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-medium text-green-800\",\n            children: \"POS API Integration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5852,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 5850,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-green-700\",\n          children: \"Sales orders automatically create journal entries from live API data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 5854,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 5849,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-blue-50 border border-blue-200 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n            className: \"text-blue-600 mr-2\",\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5861,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-medium text-blue-800\",\n            children: \"Real-time Sync\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5862,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 5860,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-blue-700\",\n          children: \"Journal entries updated automatically with each sales transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 5864,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 5859,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-orange-50 border border-orange-200 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(FileText, {\n            className: \"text-orange-600 mr-2\",\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5871,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-medium text-orange-800\",\n            children: \"Manual Entries\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 5872,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 5870,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-orange-700\",\n          children: \"Add adjustments and corrections with full double-entry validation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 5874,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 5869,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 5848,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5013,\n    columnNumber: 5\n  }, this);\n};\n_s(GeneralLedger, \"bsUizNyYK6ZFgGi9HuGRHD73Gq8=\");\n_c = GeneralLedger;\nexport default GeneralLedger;\nvar _c;\n$RefreshReg$(_c, \"GeneralLedger\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Book","Plus","Filter","Search","Calendar","FileText","Edit","Trash2","Save","X","AlertCircle","CheckCircle","DollarSign","TrendingUp","Eye","Download","RefreshCw","jsxDEV","_jsxDEV","Fragment","_Fragment","GeneralLedger","_s","journalEntries","setJournalEntries","accounts","setAccounts","filteredEntries","setFilteredEntries","selectedEntry","setSelectedEntry","isAddingEntry","setIsAddingEntry","loading","setLoading","entries","errors","setErrors","filters","setFilters","dateFrom","dateTo","accountId","transactionType","searchTerm","trialBalance","setTrialBalance","showTrialBalance","setShowTrialBalance","newEntry","setNewEntry","date","Date","toISOString","split","description","reference","debit","credit","API_BASE_URL","API_BASE_URL_CHARTS_OF_ACCOUNTS","fetchOrderData","response","fetch","method","headers","ok","Error","status","data","json","error","console","formatDateFromCreatedAt","createdAt","parts","length","padStart","loadChartsOfAccounts","prev","log","formattedAccounts","filter","account","map","id","code","name","type","category","parentId","level","sort","a","b","localeCompare","message","fallbackAccounts","convertSalesOrderToJournalEntry","order","accountsList","subTotal","parseFloat","taxAmount","total","paid","fulfilled","findAccountByType","matchingAccount","find","acc","toLowerCase","cashAccount","push","accountName","accountCode","orderId","lineItems","item","productName","join","revenueAccount","taxAccount","taxRate","totalCOGS","forEach","costPrice","quantity","itemCOGS","cogsAccount","inventoryAccount","totalDebit","reduce","sum","entry","totalCredit","source","Math","round","originalOrder","loadJournalEntriesFromAPI","salesOrders","journalEntriesFromSales","manualEntries","storedEntries","localStorage","getItem","JSON","parse","warn","allEntries","filterEntries","filtered","some","e","term","includes","generateTrialBalance","balances","requiredAccountIds","Set","entryLine","add","accountTypesMap","accountType","balance","prefix","toString","substring","Object","values","trialBalanceData","addEntryLine","removeEntryLine","index","updatedEntries","_","i","updateEntryLine","field","value","calculateTotals","isBalanced","abs","saveJournalEntry","every","alert","entriesWithNames","_accounts$find","journalEntry","now","existingManualEntries","updatedManualEntries","setItem","stringify","getAccountName","entryIsBalanced","className","children","fileName","_jsxFileName","lineNumber","columnNumber","accountsLoading","size","accountsError","toLocaleString","minimumFractionDigits","maximumFractionDigits","onChange","target","placeholder","label","disabled","onClick","step","toFixed","colSpan","price","toLocaleDateString","charAt","toUpperCase","slice","_c","$RefreshReg$"],"sources":["C:/Users/Logic-Unit/my-account/src/pages/GeneralLedger.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { \r\n//   Book, \r\n//   Plus, \r\n//   Filter, \r\n//   Search, \r\n//   Calendar, \r\n//   FileText, \r\n//   Edit, \r\n//   Trash2, \r\n//   Save, \r\n//   X, \r\n//   AlertCircle,\r\n//   CheckCircle,\r\n//   DollarSign,\r\n//   TrendingUp,\r\n//   Eye,\r\n//   Download\r\n// } from 'lucide-react';\r\n\r\n// const GeneralLedger = () => {\r\n//   const [journalEntries, setJournalEntries] = useState([]);\r\n//   const [accounts, setAccounts] = useState([]);\r\n//   const [filteredEntries, setFilteredEntries] = useState([]);\r\n//   const [selectedEntry, setSelectedEntry] = useState(null);\r\n//   const [isAddingEntry, setIsAddingEntry] = useState(false);\r\n//   const [filters, setFilters] = useState({\r\n//     dateFrom: '',\r\n//     dateTo: '',\r\n//     accountId: '',\r\n//     transactionType: 'all',\r\n//     searchTerm: ''\r\n//   });\r\n//   const [trialBalance, setTrialBalance] = useState([]);\r\n//   const [showTrialBalance, setShowTrialBalance] = useState(false);\r\n//   const [newEntry, setNewEntry] = useState({\r\n//     date: new Date().toISOString().split('T')[0],\r\n//     description: '',\r\n//     reference: '',\r\n//     entries: [\r\n//       { accountId: '', debit: 0, credit: 0, description: '' },\r\n//       { accountId: '', debit: 0, credit: 0, description: '' }\r\n//     ]\r\n//   });\r\n\r\n//   // Sample Chart of Accounts\r\n//   const chartOfAccounts = [\r\n//     { id: '1111', code: '1111', name: 'Petty Cash', type: 'assets' },\r\n//     { id: '1112', code: '1112', name: 'Bank - Main Account', type: 'assets' },\r\n//     { id: '1120', code: '1120', name: 'Accounts Receivable', type: 'assets' },\r\n//     { id: '1130', code: '1130', name: 'Inventory', type: 'assets' },\r\n//     { id: '2110', code: '2110', name: 'Accounts Payable', type: 'liabilities' },\r\n//     { id: '2130', code: '2130', name: 'Sales Tax Payable', type: 'liabilities' },\r\n//     { id: '4100', code: '4100', name: 'Sales Revenue - Medical', type: 'revenue' },\r\n//     { id: '5100', code: '5100', name: 'Cost of Goods Sold', type: 'expenses' },\r\n//     { id: '5200', code: '5200', name: 'Purchase Expenses', type: 'expenses' },\r\n//     { id: '5210', code: '5210', name: 'Office Supplies', type: 'expenses' }\r\n//   ];\r\n\r\n//   useEffect(() => {\r\n//     setAccounts(chartOfAccounts);\r\n//     loadSampleJournalEntries();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     filterEntries();\r\n//   }, [journalEntries, filters]);\r\n\r\n//   const loadSampleJournalEntries = () => {\r\n//     const sampleEntries = [\r\n//       {\r\n//         id: 'JE001',\r\n//         date: '2025-01-15',\r\n//         description: 'POS Sale #POS001 - Medical products',\r\n//         reference: 'POS001',\r\n//         transactionType: 'automatic',\r\n//         source: 'POS',\r\n//         status: 'posted',\r\n//         entries: [\r\n//           { accountId: '1111', accountName: 'Petty Cash', debit: 60.50, credit: 0, description: 'Cash received from customer' },\r\n//           { accountId: '4100', accountName: 'Sales Revenue - Medical', debit: 0, credit: 55.00, description: 'Revenue from medical products' },\r\n//           { accountId: '2130', accountName: 'Sales Tax Payable', debit: 0, credit: 5.50, description: 'Sales tax collected' },\r\n//           { accountId: '5100', accountName: 'Cost of Goods Sold', debit: 33.00, credit: 0, description: 'Cost of products sold' },\r\n//           { accountId: '1130', accountName: 'Inventory', debit: 0, credit: 33.00, description: 'Inventory reduction' }\r\n//         ],\r\n//         totalDebit: 93.50,\r\n//         totalCredit: 93.50,\r\n//         createdAt: '2025-01-15T10:30:00Z'\r\n//       },\r\n//       {\r\n//         id: 'JE002',\r\n//         date: '2025-01-14',\r\n//         description: 'Purchase Order #PO002 - Medical inventory',\r\n//         reference: 'PO002',\r\n//         transactionType: 'automatic',\r\n//         source: 'Purchase',\r\n//         status: 'posted',\r\n//         entries: [\r\n//           { accountId: '1130', accountName: 'Inventory', debit: 350.00, credit: 0, description: 'Medical products purchased' },\r\n//           { accountId: '2110', accountName: 'Accounts Payable', debit: 0, credit: 350.00, description: 'Amount owed to Medical Supply Co.' }\r\n//         ],\r\n//         totalDebit: 350.00,\r\n//         totalCredit: 350.00,\r\n//         createdAt: '2025-01-14T14:20:00Z'\r\n//       },\r\n//       {\r\n//         id: 'JE003',\r\n//         date: '2025-01-13',\r\n//         description: 'Manual adjustment - Inventory count variance',\r\n//         reference: 'ADJ001',\r\n//         transactionType: 'manual',\r\n//         source: 'Manual',\r\n//         status: 'posted',\r\n//         entries: [\r\n//           { accountId: '1130', accountName: 'Inventory', debit: 25.00, credit: 0, description: 'Inventory adjustment - undercount' },\r\n//           { accountId: '5200', accountName: 'Purchase Expenses', debit: 0, credit: 25.00, description: 'Adjustment to purchase variance' }\r\n//         ],\r\n//         totalDebit: 25.00,\r\n//         totalCredit: 25.00,\r\n//         createdAt: '2025-01-13T16:45:00Z'\r\n//       },\r\n//       {\r\n//         id: 'JE004',\r\n//         date: '2025-01-15',\r\n//         description: 'POS Sale #POS002 - Medical products',\r\n//         reference: 'POS002',\r\n//         transactionType: 'automatic',\r\n//         source: 'POS',\r\n//         status: 'posted',\r\n//         entries: [\r\n//           { accountId: '1112', accountName: 'Bank - Main Account', debit: 85.00, credit: 0, description: 'Card payment received' },\r\n//           { accountId: '4100', accountName: 'Sales Revenue - Medical', debit: 0, credit: 77.27, description: 'Revenue from medical products' },\r\n//           { accountId: '2130', accountName: 'Sales Tax Payable', debit: 0, credit: 7.73, description: 'Sales tax collected' },\r\n//           { accountId: '5100', accountName: 'Cost of Goods Sold', debit: 46.36, credit: 0, description: 'Cost of products sold' },\r\n//           { accountId: '1130', accountName: 'Inventory', debit: 0, credit: 46.36, description: 'Inventory reduction' }\r\n//         ],\r\n//         totalDebit: 131.36,\r\n//         totalCredit: 131.36,\r\n//         createdAt: '2025-01-15T15:20:00Z'\r\n//       }\r\n//     ];\r\n\r\n//     setJournalEntries(sampleEntries);\r\n//   };\r\n\r\n//   const filterEntries = () => {\r\n//     let filtered = [...journalEntries];\r\n\r\n//     if (filters.dateFrom) {\r\n//       filtered = filtered.filter(entry => entry.date >= filters.dateFrom);\r\n//     }\r\n//     if (filters.dateTo) {\r\n//       filtered = filtered.filter(entry => entry.date <= filters.dateTo);\r\n//     }\r\n//     if (filters.accountId) {\r\n//       filtered = filtered.filter(entry => \r\n//         entry.entries.some(e => e.accountId === filters.accountId)\r\n//       );\r\n//     }\r\n//     if (filters.transactionType !== 'all') {\r\n//       filtered = filtered.filter(entry => entry.transactionType === filters.transactionType);\r\n//     }\r\n//     if (filters.searchTerm) {\r\n//       const term = filters.searchTerm.toLowerCase();\r\n//       filtered = filtered.filter(entry => \r\n//         entry.description.toLowerCase().includes(term) ||\r\n//         entry.reference.toLowerCase().includes(term) ||\r\n//         entry.entries.some(e => e.description.toLowerCase().includes(term))\r\n//       );\r\n//     }\r\n\r\n//     setFilteredEntries(filtered);\r\n//   };\r\n\r\n//   const generateTrialBalance = () => {\r\n//     const balances = {};\r\n    \r\n//     // Initialize all accounts\r\n//     chartOfAccounts.forEach(account => {\r\n//       balances[account.id] = {\r\n//         accountId: account.id,\r\n//         accountCode: account.code,\r\n//         accountName: account.name,\r\n//         accountType: account.type,\r\n//         debit: 0,\r\n//         credit: 0,\r\n//         balance: 0\r\n//       };\r\n//     });\r\n\r\n//     // Calculate balances from journal entries\r\n//     journalEntries.forEach(entry => {\r\n//       if (entry.status === 'posted') {\r\n//         entry.entries.forEach(entryLine => {\r\n//           if (balances[entryLine.accountId]) {\r\n//             balances[entryLine.accountId].debit += entryLine.debit;\r\n//             balances[entryLine.accountId].credit += entryLine.credit;\r\n//           }\r\n//         });\r\n//       }\r\n//     });\r\n\r\n//     // Calculate net balances\r\n//     Object.values(balances).forEach(account => {\r\n//       if (account.accountType === 'assets' || account.accountType === 'expenses') {\r\n//         account.balance = account.debit - account.credit;\r\n//       } else {\r\n//         account.balance = account.credit - account.debit;\r\n//       }\r\n//     });\r\n\r\n//     const trialBalanceData = Object.values(balances)\r\n//       .filter(account => account.debit !== 0 || account.credit !== 0)\r\n//       .sort((a, b) => a.accountCode.localeCompare(b.accountCode));\r\n\r\n//     setTrialBalance(trialBalanceData);\r\n//     setShowTrialBalance(true);\r\n//   };\r\n\r\n//   const addEntryLine = () => {\r\n//     setNewEntry({\r\n//       ...newEntry,\r\n//       entries: [...newEntry.entries, { accountId: '', debit: 0, credit: 0, description: '' }]\r\n//     });\r\n//   };\r\n\r\n//   const removeEntryLine = (index) => {\r\n//     if (newEntry.entries.length > 2) {\r\n//       const updatedEntries = newEntry.entries.filter((_, i) => i !== index);\r\n//       setNewEntry({ ...newEntry, entries: updatedEntries });\r\n//     }\r\n//   };\r\n\r\n//   const updateEntryLine = (index, field, value) => {\r\n//     const updatedEntries = [...newEntry.entries];\r\n//     updatedEntries[index] = { ...updatedEntries[index], [field]: value };\r\n//     setNewEntry({ ...newEntry, entries: updatedEntries });\r\n//   };\r\n\r\n//   const calculateTotals = (entries) => {\r\n//     const totalDebit = entries.reduce((sum, entry) => sum + (parseFloat(entry.debit) || 0), 0);\r\n//     const totalCredit = entries.reduce((sum, entry) => sum + (parseFloat(entry.credit) || 0), 0);\r\n//     return { totalDebit, totalCredit };\r\n//   };\r\n\r\n//   const isBalanced = (entries) => {\r\n//     const { totalDebit, totalCredit } = calculateTotals(entries);\r\n//     return Math.abs(totalDebit - totalCredit) < 0.01;\r\n//   };\r\n\r\n//   const saveJournalEntry = () => {\r\n//     if (!newEntry.description || !newEntry.entries.every(e => e.accountId)) {\r\n//       alert('Please fill in all required fields');\r\n//       return;\r\n//     }\r\n\r\n//     if (!isBalanced(newEntry.entries)) {\r\n//       alert('Journal entry must be balanced - total debits must equal total credits');\r\n//       return;\r\n//     }\r\n\r\n//     const { totalDebit, totalCredit } = calculateTotals(newEntry.entries);\r\n    \r\n//     // Add account names to entries\r\n//     const entriesWithNames = newEntry.entries.map(entry => ({\r\n//       ...entry,\r\n//       accountName: accounts.find(acc => acc.id === entry.accountId)?.name || '',\r\n//       debit: parseFloat(entry.debit) || 0,\r\n//       credit: parseFloat(entry.credit) || 0\r\n//     }));\r\n\r\n//     const journalEntry = {\r\n//       id: `JE${String(journalEntries.length + 1).padStart(3, '0')}`,\r\n//       date: newEntry.date,\r\n//       description: newEntry.description,\r\n//       reference: newEntry.reference || `MAN${Date.now()}`,\r\n//       transactionType: 'manual',\r\n//       source: 'Manual',\r\n//       status: 'posted',\r\n//       entries: entriesWithNames,\r\n//       totalDebit,\r\n//       totalCredit,\r\n//       createdAt: new Date().toISOString()\r\n//     };\r\n\r\n//     setJournalEntries([...journalEntries, journalEntry]);\r\n    \r\n//     // Reset form\r\n//     setNewEntry({\r\n//       date: new Date().toISOString().split('T')[0],\r\n//       description: '',\r\n//       reference: '',\r\n//       entries: [\r\n//         { accountId: '', debit: 0, credit: 0, description: '' },\r\n//         { accountId: '', debit: 0, credit: 0, description: '' }\r\n//       ]\r\n//     });\r\n//     setIsAddingEntry(false);\r\n//   };\r\n\r\n//   const getAccountName = (accountId) => {\r\n//     const account = accounts.find(acc => acc.id === accountId);\r\n//     return account ? `${account.code} - ${account.name}` : '';\r\n//   };\r\n\r\n//   const { totalDebit, totalCredit } = calculateTotals(newEntry.entries);\r\n//   const entryIsBalanced = isBalanced(newEntry.entries);\r\n\r\n//   return (\r\n//     <div className=\"max-w-7xl mx-auto p-6 bg-white\">\r\n//       {/* Header */}\r\n//       <div className=\"mb-8\">\r\n//         <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\r\n//           <Book className=\"mr-3 text-emerald-600\" />\r\n//           General Ledger\r\n//         </h1>\r\n//         <p className=\"text-gray-600\">Real-time transaction recording and journal entry management</p>\r\n//       </div>\r\n\r\n//       {/* Quick Stats */}\r\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\r\n//         <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-blue-600 text-sm font-medium\">Total Entries</p>\r\n//               <p className=\"text-2xl font-bold text-blue-900\">{journalEntries.length}</p>\r\n//             </div>\r\n//             <FileText className=\"text-blue-600\" size={24} />\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"bg-green-50 p-4 rounded-lg border border-green-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-green-600 text-sm font-medium\">Automatic Entries</p>\r\n//               <p className=\"text-2xl font-bold text-green-900\">\r\n//                 {journalEntries.filter(e => e.transactionType === 'automatic').length}\r\n//               </p>\r\n//             </div>\r\n//             <TrendingUp className=\"text-green-600\" size={24} />\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"bg-orange-50 p-4 rounded-lg border border-orange-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-orange-600 text-sm font-medium\">Manual Entries</p>\r\n//               <p className=\"text-2xl font-bold text-orange-900\">\r\n//                 {journalEntries.filter(e => e.transactionType === 'manual').length}\r\n//               </p>\r\n//             </div>\r\n//             <Edit className=\"text-orange-600\" size={24} />\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"bg-purple-50 p-4 rounded-lg border border-purple-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-purple-600 text-sm font-medium\">Total Value</p>\r\n//               <p className=\"text-2xl font-bold text-purple-900\">\r\n//                 ${journalEntries.reduce((sum, entry) => sum + entry.totalDebit, 0).toFixed(2)}\r\n//               </p>\r\n//             </div>\r\n//             <DollarSign className=\"text-purple-600\" size={24} />\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Controls */}\r\n//       <div className=\"flex flex-wrap items-center justify-between gap-4 mb-6\">\r\n//         <div className=\"flex flex-wrap items-center gap-4\">\r\n//           {/* Date Filters */}\r\n//           <div className=\"flex items-center space-x-2\">\r\n//             <Calendar size={16} className=\"text-gray-400\" />\r\n//             <input\r\n//               type=\"date\"\r\n//               value={filters.dateFrom}\r\n//               onChange={(e) => setFilters({ ...filters, dateFrom: e.target.value })}\r\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               placeholder=\"From\"\r\n//             />\r\n//             <span className=\"text-gray-500\">to</span>\r\n//             <input\r\n//               type=\"date\"\r\n//               value={filters.dateTo}\r\n//               onChange={(e) => setFilters({ ...filters, dateTo: e.target.value })}\r\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               placeholder=\"To\"\r\n//             />\r\n//           </div>\r\n\r\n//           {/* Account Filter */}\r\n//           <div className=\"relative\">\r\n//             <Filter className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n//             <select\r\n//               value={filters.accountId}\r\n//               onChange={(e) => setFilters({ ...filters, accountId: e.target.value })}\r\n//               className=\"pl-10 pr-8 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//             >\r\n//               <option value=\"\">All Accounts</option>\r\n//               {accounts.map(account => (\r\n//                 <option key={account.id} value={account.id}>\r\n//                   {account.code} - {account.name}\r\n//                 </option>\r\n//               ))}\r\n//             </select>\r\n//           </div>\r\n\r\n//           {/* Transaction Type Filter */}\r\n//           <select\r\n//             value={filters.transactionType}\r\n//             onChange={(e) => setFilters({ ...filters, transactionType: e.target.value })}\r\n//             className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//           >\r\n//             <option value=\"all\">All Types</option>\r\n//             <option value=\"automatic\">Automatic</option>\r\n//             <option value=\"manual\">Manual</option>\r\n//           </select>\r\n\r\n//           {/* Search */}\r\n//           <div className=\"relative\">\r\n//             <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Search entries...\"\r\n//               value={filters.searchTerm}\r\n//               onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\r\n//               className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//             />\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"flex space-x-3\">\r\n//           <button\r\n//             onClick={() => setIsAddingEntry(true)}\r\n//             className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\r\n//           >\r\n//             <Plus size={16} />\r\n//             <span>Add Entry</span>\r\n//           </button>\r\n//           <button\r\n//             onClick={generateTrialBalance}\r\n//             className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\"\r\n//           >\r\n//             <FileText size={16} />\r\n//             <span>Trial Balance</span>\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Journal Entry Form */}\r\n//       {isAddingEntry && (\r\n//         <div className=\"mb-8 p-6 bg-gray-50 rounded-lg border\">\r\n//           <h3 className=\"text-lg font-semibold mb-4\">Add Manual Journal Entry</h3>\r\n          \r\n//           <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\r\n//             <div>\r\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Date *</label>\r\n//               <input\r\n//                 type=\"date\"\r\n//                 value={newEntry.date}\r\n//                 onChange={(e) => setNewEntry({ ...newEntry, date: e.target.value })}\r\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               />\r\n//             </div>\r\n//             <div>\r\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Description *</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 value={newEntry.description}\r\n//                 onChange={(e) => setNewEntry({ ...newEntry, description: e.target.value })}\r\n//                 placeholder=\"Enter description\"\r\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               />\r\n//             </div>\r\n//             <div>\r\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Reference</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 value={newEntry.reference}\r\n//                 onChange={(e) => setNewEntry({ ...newEntry, reference: e.target.value })}\r\n//                 placeholder=\"Reference number\"\r\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               />\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* Entry Lines */}\r\n//           <div className=\"mb-4\">\r\n//             <label className=\"block text-sm font-medium text-gray-700 mb-2\">Journal Entry Lines</label>\r\n//             <div className=\"space-y-3\">\r\n//               {newEntry.entries.map((entry, index) => (\r\n//                 <div key={index} className=\"grid grid-cols-12 gap-2 items-center bg-white p-3 rounded border\">\r\n//                   <div className=\"col-span-4\">\r\n//                     <select\r\n//                       value={entry.accountId}\r\n//                       onChange={(e) => updateEntryLine(index, 'accountId', e.target.value)}\r\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                     >\r\n//                       <option value=\"\">Select Account</option>\r\n//                       {accounts.map(account => (\r\n//                         <option key={account.id} value={account.id}>\r\n//                           {account.code} - {account.name}\r\n//                         </option>\r\n//                       ))}\r\n//                     </select>\r\n//                   </div>\r\n//                   <div className=\"col-span-3\">\r\n//                     <input\r\n//                       type=\"text\"\r\n//                       value={entry.description}\r\n//                       onChange={(e) => updateEntryLine(index, 'description', e.target.value)}\r\n//                       placeholder=\"Description\"\r\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                     />\r\n//                   </div>\r\n//                   <div className=\"col-span-2\">\r\n//                     <input\r\n//                       type=\"number\"\r\n//                       step=\"0.01\"\r\n//                       value={entry.debit}\r\n//                       onChange={(e) => updateEntryLine(index, 'debit', e.target.value)}\r\n//                       placeholder=\"Debit\"\r\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                     />\r\n//                   </div>\r\n//                   <div className=\"col-span-2\">\r\n//                     <input\r\n//                       type=\"number\"\r\n//                       step=\"0.01\"\r\n//                       value={entry.credit}\r\n//                       onChange={(e) => updateEntryLine(index, 'credit', e.target.value)}\r\n//                       placeholder=\"Credit\"\r\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                     />\r\n//                   </div>\r\n//                   <div className=\"col-span-1\">\r\n//                     {newEntry.entries.length > 2 && (\r\n//                       <button\r\n//                         onClick={() => removeEntryLine(index)}\r\n//                         className=\"p-1 text-red-600 hover:bg-red-100 rounded\"\r\n//                       >\r\n//                         <Trash2 size={14} />\r\n//                       </button>\r\n//                     )}\r\n//                   </div>\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n\r\n//             <div className=\"flex justify-between items-center mt-3\">\r\n//               <button\r\n//                 onClick={addEntryLine}\r\n//                 className=\"px-3 py-1 text-sm bg-gray-200 text-gray-700 rounded hover:bg-gray-300 flex items-center space-x-1\"\r\n//               >\r\n//                 <Plus size={14} />\r\n//                 <span>Add Line</span>\r\n//               </button>\r\n\r\n//               <div className=\"flex items-center space-x-4\">\r\n//                 <div className=\"text-sm\">\r\n//                   <span className=\"font-medium\">Total Debit: ${totalDebit.toFixed(2)}</span>\r\n//                   <span className=\"mx-2\">|</span>\r\n//                   <span className=\"font-medium\">Total Credit: ${totalCredit.toFixed(2)}</span>\r\n//                 </div>\r\n//                 {entryIsBalanced ? (\r\n//                   <div className=\"flex items-center text-green-600\">\r\n//                     <CheckCircle size={16} className=\"mr-1\" />\r\n//                     <span className=\"text-sm\">Balanced</span>\r\n//                   </div>\r\n//                 ) : (\r\n//                   <div className=\"flex items-center text-red-600\">\r\n//                     <AlertCircle size={16} className=\"mr-1\" />\r\n//                     <span className=\"text-sm\">Not Balanced</span>\r\n//                   </div>\r\n//                 )}\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n\r\n//           <div className=\"flex space-x-3\">\r\n//             <button\r\n//               onClick={saveJournalEntry}\r\n//               disabled={!entryIsBalanced}\r\n//               className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 disabled:bg-gray-400 flex items-center space-x-2\"\r\n//             >\r\n//               <Save size={16} />\r\n//               <span>Save Entry</span>\r\n//             </button>\r\n//             <button\r\n//               onClick={() => setIsAddingEntry(false)}\r\n//               className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\"\r\n//             >\r\n//               <X size={16} />\r\n//               <span>Cancel</span>\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Journal Entries Table */}\r\n//       <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//         <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//           <h2 className=\"text-lg font-semibold text-gray-900\">Journal Entries</h2>\r\n//           <p className=\"text-sm text-gray-600 mt-1\">\r\n//             Showing {filteredEntries.length} of {journalEntries.length} entries\r\n//           </p>\r\n//         </div>\r\n\r\n//         <div className=\"overflow-x-auto\">\r\n//           <table className=\"w-full\">\r\n//             <thead className=\"bg-gray-50\">\r\n//               <tr>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Entry ID\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Date\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Description\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Reference\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Source\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Amount\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Status\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Actions\r\n//                 </th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//               {filteredEntries.map((entry) => (\r\n//                 <tr key={entry.id} className=\"hover:bg-gray-50\">\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n//                     {entry.id}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                     {entry.date}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 text-sm text-gray-900 max-w-xs truncate\">\r\n//                     {entry.description}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                     {entry.reference}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                       entry.transactionType === 'automatic' ? 'bg-green-100 text-green-800' : 'bg-orange-100 text-orange-800'\r\n//                     }`}>\r\n//                       {entry.source}\r\n//                     </span>\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                     ${entry.totalDebit.toFixed(2)}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                       entry.status === 'posted' ? 'bg-blue-100 text-blue-800' : 'bg-yellow-100 text-yellow-800'\r\n//                     }`}>\r\n//                       {entry.status}\r\n//                     </span>\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n//                     <button\r\n//                       onClick={() => setSelectedEntry(entry)}\r\n//                       className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\r\n//                     >\r\n//                       <Eye size={16} />\r\n//                     </button>\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Entry Details Modal */}\r\n//       {selectedEntry && (\r\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\r\n//                   Journal Entry Details - {selectedEntry.id}\r\n//                 </h3>\r\n//                 <button\r\n//                   onClick={() => setSelectedEntry(null)}\r\n//                   className=\"text-gray-400 hover:text-gray-600\"\r\n//                 >\r\n//                   <X size={20} />\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <div className=\"px-6 py-4\">\r\n//               {/* Entry Header */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\r\n//                 <div>\r\n//                   <label className=\"text-sm font-medium text-gray-500\">Date</label>\r\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.date}</p>\r\n//                 </div>\r\n//                 <div>\r\n//                   <label className=\"text-sm font-medium text-gray-500\">Reference</label>\r\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.reference}</p>\r\n//                 </div>\r\n//                 <div>\r\n//                   <label className=\"text-sm font-medium text-gray-500\">Description</label>\r\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.description}</p>\r\n//                 </div>\r\n//                 <div>\r\n//                   <label className=\"text-sm font-medium text-gray-500\">Source</label>\r\n//                   <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                     selectedEntry.transactionType === 'automatic' ? 'bg-green-100 text-green-800' : 'bg-orange-100 text-orange-800'\r\n//                   }`}>\r\n//                     {selectedEntry.source}\r\n//                   </span>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Entry Lines */}\r\n//               <div className=\"mb-6\">\r\n//                 <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Account Entries</h4>\r\n//                 <div className=\"overflow-x-auto\">\r\n//                   <table className=\"w-full border border-gray-200 rounded\">\r\n//                     <thead className=\"bg-gray-50\">\r\n//                       <tr>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Account</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Description</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Debit</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Credit</th>\r\n//                       </tr>\r\n//                     </thead>\r\n//                     <tbody className=\"divide-y divide-gray-200\">\r\n//                       {selectedEntry.entries.map((entryLine, index) => (\r\n//                         <tr key={index}>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900\">\r\n//                             {getAccountName(entryLine.accountId)}\r\n//                           </td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-600\">\r\n//                             {entryLine.description}\r\n//                           </td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">\r\n//                             {entryLine.debit > 0 ? `${entryLine.debit.toFixed(2)}` : '-'}\r\n//                           </td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">\r\n//                             {entryLine.credit > 0 ? `${entryLine.credit.toFixed(2)}` : '-'}\r\n//                           </td>\r\n//                         </tr>\r\n//                       ))}\r\n//                     </tbody>\r\n//                     <tfoot className=\"bg-gray-50\">\r\n//                       <tr>\r\n//                         <td colSpan=\"2\" className=\"px-4 py-2 text-sm font-medium text-gray-900\">\r\n//                           Totals:\r\n//                         </td>\r\n//                         <td className=\"px-4 py-2 text-sm font-bold text-gray-900 text-right\">\r\n//                           ${selectedEntry.totalDebit.toFixed(2)}\r\n//                         </td>\r\n//                         <td className=\"px-4 py-2 text-sm font-bold text-gray-900 text-right\">\r\n//                           ${selectedEntry.totalCredit.toFixed(2)}\r\n//                         </td>\r\n//                       </tr>\r\n//                     </tfoot>\r\n//                   </table>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Entry Metadata */}\r\n//               <div className=\"text-xs text-gray-500\">\r\n//                 <p>Created: {new Date(selectedEntry.createdAt).toLocaleString()}</p>\r\n//                 <p>Status: {selectedEntry.status}</p>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Trial Balance Modal */}\r\n//       {showTrialBalance && (\r\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-lg max-w-5xl w-full max-h-[90vh] overflow-y-auto\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\r\n//                   Trial Balance - As of {new Date().toLocaleDateString()}\r\n//                 </h3>\r\n//                 <div className=\"flex items-center space-x-2\">\r\n//                   <button\r\n//                     onClick={() => {\r\n//                       // Export functionality would go here\r\n//                       alert('Export functionality would be implemented here');\r\n//                     }}\r\n//                     className=\"px-3 py-1 bg-emerald-600 text-white rounded text-sm hover:bg-emerald-700 flex items-center space-x-1\"\r\n//                   >\r\n//                     <Download size={14} />\r\n//                     <span>Export</span>\r\n//                   </button>\r\n//                   <button\r\n//                     onClick={() => setShowTrialBalance(false)}\r\n//                     className=\"text-gray-400 hover:text-gray-600\"\r\n//                   >\r\n//                     <X size={20} />\r\n//                   </button>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <div className=\"px-6 py-4\">\r\n//               <div className=\"overflow-x-auto\">\r\n//                 <table className=\"w-full\">\r\n//                   <thead className=\"bg-gray-50\">\r\n//                     <tr>\r\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Account Code\r\n//                       </th>\r\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Account Name\r\n//                       </th>\r\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Type\r\n//                       </th>\r\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Debit Total\r\n//                       </th>\r\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Credit Total\r\n//                       </th>\r\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Balance\r\n//                       </th>\r\n//                     </tr>\r\n//                   </thead>\r\n//                   <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//                     {trialBalance.map((account) => (\r\n//                       <tr key={account.accountId}>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n//                           {account.accountCode}\r\n//                         </td>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                           {account.accountName}\r\n//                         </td>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap\">\r\n//                           <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                             account.accountType === 'assets' ? 'bg-green-100 text-green-800' :\r\n//                             account.accountType === 'liabilities' ? 'bg-red-100 text-red-800' :\r\n//                             account.accountType === 'equity' ? 'bg-blue-100 text-blue-800' :\r\n//                             account.accountType === 'revenue' ? 'bg-purple-100 text-purple-800' :\r\n//                             'bg-orange-100 text-orange-800'\r\n//                           }`}>\r\n//                             {account.accountType}\r\n//                           </span>\r\n//                         </td>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\r\n//                           ${account.debit.toFixed(2)}\r\n//                         </td>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\r\n//                           ${account.credit.toFixed(2)}\r\n//                         </td>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-right\">\r\n//                           <span className={account.balance >= 0 ? 'text-green-600' : 'text-red-600'}>\r\n//                             ${Math.abs(account.balance).toFixed(2)}\r\n//                             {account.balance < 0 && ' (CR)'}\r\n//                           </span>\r\n//                         </td>\r\n//                       </tr>\r\n//                     ))}\r\n//                   </tbody>\r\n//                   <tfoot className=\"bg-gray-50\">\r\n//                     <tr>\r\n//                       <td colSpan=\"3\" className=\"px-4 py-3 text-sm font-bold text-gray-900\">\r\n//                         TOTALS:\r\n//                       </td>\r\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\r\n//                         ${trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toFixed(2)}\r\n//                       </td>\r\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\r\n//                         ${trialBalance.reduce((sum, acc) => sum + acc.credit, 0).toFixed(2)}\r\n//                       </td>\r\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\r\n//                         ${Math.abs(trialBalance.reduce((sum, acc) => sum + acc.balance, 0)).toFixed(2)}\r\n//                       </td>\r\n//                     </tr>\r\n//                   </tfoot>\r\n//                 </table>\r\n//               </div>\r\n              \r\n//               {/* Trial Balance Validation */}\r\n//               <div className=\"mt-4 p-4 bg-green-50 border border-green-200 rounded-lg\">\r\n//                 <div className=\"flex items-center\">\r\n//                   <CheckCircle className=\"text-green-600 mr-2\" size={20} />\r\n//                   <div>\r\n//                     <h4 className=\"font-medium text-green-800\">Trial Balance is Balanced</h4>\r\n//                     <p className=\"text-sm text-green-700\">\r\n//                       Total Debits = Total Credits = ${trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toFixed(2)}\r\n//                     </p>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Integration Status */}\r\n//       <div className=\"mt-8 grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n//         <div className=\"p-4 bg-green-50 border border-green-200 rounded-lg\">\r\n//           <div className=\"flex items-center mb-2\">\r\n//             <CheckCircle className=\"text-green-600 mr-2\" size={16} />\r\n//             <h4 className=\"font-medium text-green-800\">POS Integration</h4>\r\n//           </div>\r\n//           <p className=\"text-sm text-green-700\">\r\n//             All sales transactions automatically create journal entries\r\n//           </p>\r\n//         </div>\r\n\r\n//         <div className=\"p-4 bg-green-50 border border-green-200 rounded-lg\">\r\n//           <div className=\"flex items-center mb-2\">\r\n//             <CheckCircle className=\"text-green-600 mr-2\" size={16} />\r\n//             <h4 className=\"font-medium text-green-800\">Purchase Integration</h4>\r\n//           </div>\r\n//           <p className=\"text-sm text-green-700\">\r\n//             Purchase orders automatically update accounts payable and inventory\r\n//           </p>\r\n//         </div>\r\n\r\n//         <div className=\"p-4 bg-blue-50 border border-blue-200 rounded-lg\">\r\n//           <div className=\"flex items-center mb-2\">\r\n//             <FileText className=\"text-blue-600 mr-2\" size={16} />\r\n//             <h4 className=\"font-medium text-blue-800\">Manual Entries</h4>\r\n//           </div>\r\n//           <p className=\"text-sm text-blue-700\">\r\n//             Add adjustments and corrections with full validation\r\n//           </p>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default GeneralLedger;\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { \r\n//   Book, \r\n//   Plus, \r\n//   Filter, \r\n//   Search, \r\n//   Calendar, \r\n//   FileText, \r\n//   Edit, \r\n//   Trash2, \r\n//   Save, \r\n//   X, \r\n//   AlertCircle,\r\n//   CheckCircle,\r\n//   DollarSign,\r\n//   TrendingUp,\r\n//   Eye,\r\n//   Download,\r\n//   RefreshCw\r\n// } from 'lucide-react';\r\n\r\n// const GeneralLedger = () => {\r\n//   const [journalEntries, setJournalEntries] = useState([]);\r\n//   const [accounts, setAccounts] = useState([]);\r\n//   const [filteredEntries, setFilteredEntries] = useState([]);\r\n//   const [selectedEntry, setSelectedEntry] = useState(null);\r\n//   const [isAddingEntry, setIsAddingEntry] = useState(false);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [filters, setFilters] = useState({\r\n//     dateFrom: '',\r\n//     dateTo: '',\r\n//     accountId: '',\r\n//     transactionType: 'all',\r\n//     searchTerm: ''\r\n//   });\r\n//   const [trialBalance, setTrialBalance] = useState([]);\r\n//   const [showTrialBalance, setShowTrialBalance] = useState(false);\r\n//   const [newEntry, setNewEntry] = useState({\r\n//     date: new Date().toISOString().split('T')[0],\r\n//     description: '',\r\n//     reference: '',\r\n//     entries: [\r\n//       { accountId: '', debit: 0, credit: 0, description: '' },\r\n//       { accountId: '', debit: 0, credit: 0, description: '' }\r\n//     ]\r\n//   });\r\n\r\n//   // Chart of Accounts\r\n//   const chartOfAccounts = [\r\n//     { id: '1111', code: '1111', name: 'Petty Cash', type: 'assets' },\r\n//     { id: '1112', code: '1112', name: 'Bank - Main Account', type: 'assets' },\r\n//     { id: '1120', code: '1120', name: 'Accounts Receivable', type: 'assets' },\r\n//     { id: '1130', code: '1130', name: 'Inventory', type: 'assets' },\r\n//     { id: '2110', code: '2110', name: 'Accounts Payable', type: 'liabilities' },\r\n//     { id: '2130', code: '2130', name: 'Sales Tax Payable', type: 'liabilities' },\r\n//     { id: '4100', code: '4100', name: 'Sales Revenue', type: 'revenue' },\r\n//     { id: '4110', code: '4110', name: 'Electronics Sales', type: 'revenue' },\r\n//     { id: '5100', code: '5100', name: 'Cost of Goods Sold', type: 'expenses' },\r\n//     { id: '5200', code: '5200', name: 'Purchase Expenses', type: 'expenses' }\r\n//   ];\r\n\r\n//   // API Configuration\r\n//   const API_BASE_URL = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/orders?start=0&size=200';\r\n\r\n//   useEffect(() => {\r\n//     setAccounts(chartOfAccounts);\r\n//     loadJournalEntriesFromAPI();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     filterEntries();\r\n//   }, [journalEntries, filters]);\r\n\r\n//   // Fetch Sales Orders from API and convert to Journal Entries\r\n//   const loadJournalEntriesFromAPI = async () => {\r\n//     setLoading(true);\r\n//     try {\r\n//       const response = await fetch(`${API_BASE_URL}/orders?start=0&size=200`);\r\n//       const salesOrders = await response.json();\r\n      \r\n//       // Convert sales orders to journal entries\r\n//       const journalEntriesFromSales = salesOrders.map(order => convertSalesOrderToJournalEntry(order));\r\n      \r\n//       // Load any manual journal entries from localStorage\r\n//       const manualEntries = JSON.parse(localStorage.getItem('manualJournalEntries') || '[]');\r\n      \r\n//       // Combine both types of entries\r\n//       const allEntries = [...journalEntriesFromSales, ...manualEntries];\r\n      \r\n//       setJournalEntries(allEntries);\r\n//     } catch (error) {\r\n//       console.error('Error loading sales orders:', error);\r\n//       // Fallback to sample data if API fails\r\n//       loadSampleJournalEntries();\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   // Convert Sales Order to Journal Entry\r\n//   const convertSalesOrderToJournalEntry = (order) => {\r\n//     const entries = [];\r\n//     const subTotal = order.subTotal || 0;\r\n//     const taxAmount = order.taxAmount || 0;\r\n//     const total = order.total || 0;\r\n    \r\n//     // Determine payment method - if paid, assume cash/bank\r\n//     if (order.paid && order.status === 'Closed') {\r\n//       // Cash/Bank Account (Debit)\r\n//       entries.push({\r\n//         accountId: '1111', // Petty Cash (assume cash payment)\r\n//         accountName: 'Petty Cash',\r\n//         debit: total,\r\n//         credit: 0,\r\n//         description: `Cash received from sale Order #${order.orderId}`\r\n//       });\r\n//     } else if (!order.paid) {\r\n//       // Accounts Receivable (Debit) for unpaid orders\r\n//       entries.push({\r\n//         accountId: '1120',\r\n//         accountName: 'Accounts Receivable',\r\n//         debit: total,\r\n//         credit: 0,\r\n//         description: `Credit sale Order #${order.orderId}`\r\n//       });\r\n//     }\r\n\r\n//     // Sales Revenue (Credit)\r\n//     if (subTotal > 0) {\r\n//       entries.push({\r\n//         accountId: '4110', // Electronics Sales\r\n//         accountName: 'Electronics Sales',\r\n//         debit: 0,\r\n//         credit: subTotal,\r\n//         description: `Revenue from Order #${order.orderId}`\r\n//       });\r\n//     }\r\n\r\n//     // Sales Tax Payable (Credit)\r\n//     if (taxAmount > 0) {\r\n//       entries.push({\r\n//         accountId: '2130',\r\n//         accountName: 'Sales Tax Payable',\r\n//         debit: 0,\r\n//         credit: taxAmount,\r\n//         description: `Tax collected on Order #${order.orderId}`\r\n//       });\r\n//     }\r\n\r\n//     // Cost of Goods Sold and Inventory reduction\r\n//     order.lineItems.forEach(item => {\r\n//       const costPrice = item.costPrice || 0;\r\n//       const quantity = item.quantity || 0;\r\n//       const totalCost = costPrice * quantity;\r\n\r\n//       if (totalCost > 0 && order.fulfilled) {\r\n//         // Cost of Goods Sold (Debit)\r\n//         entries.push({\r\n//           accountId: '5100',\r\n//           accountName: 'Cost of Goods Sold',\r\n//           debit: totalCost,\r\n//           credit: 0,\r\n//           description: `COGS for ${item.productName}`\r\n//         });\r\n\r\n//         // Inventory (Credit)\r\n//         entries.push({\r\n//           accountId: '1130',\r\n//           accountName: 'Inventory',\r\n//           debit: 0,\r\n//           credit: totalCost,\r\n//           description: `Inventory reduction - ${item.productName}`\r\n//         });\r\n//       }\r\n//     });\r\n\r\n//     // Calculate totals\r\n//     const totalDebit = entries.reduce((sum, entry) => sum + entry.debit, 0);\r\n//     const totalCredit = entries.reduce((sum, entry) => sum + entry.credit, 0);\r\n\r\n//     return {\r\n//       id: `JE-ORDER-${order.orderId}`,\r\n//       date: formatDateFromCreatedAt(order.createdAt),\r\n//       description: `Sales Order #${order.orderId} - ${order.lineItems.map(item => item.productName).join(', ')}`,\r\n//       reference: `ORDER-${order.orderId}`,\r\n//       transactionType: 'automatic',\r\n//       source: 'POS Sales',\r\n//       status: order.fulfilled ? 'posted' : 'pending',\r\n//       entries: entries,\r\n//       totalDebit: Math.round(totalDebit * 100) / 100,\r\n//       totalCredit: Math.round(totalCredit * 100) / 100,\r\n//       createdAt: order.createdAt,\r\n//       originalOrder: order // Keep reference to original order\r\n//     };\r\n//   };\r\n\r\n//   // Format date from API format (2025.08.18.10.08.54.569) to YYYY-MM-DD\r\n//   const formatDateFromCreatedAt = (createdAt) => {\r\n//     try {\r\n//       const parts = createdAt.split('.');\r\n//       if (parts.length >= 3) {\r\n//         return `${parts[0]}-${parts[1].padStart(2, '0')}-${parts[2].padStart(2, '0')}`;\r\n//       }\r\n//       return new Date().toISOString().split('T')[0];\r\n//     } catch (error) {\r\n//       return new Date().toISOString().split('T')[0];\r\n//     }\r\n//   };\r\n\r\n//   // Fallback sample data\r\n//   const loadSampleJournalEntries = () => {\r\n//     const sampleEntries = [\r\n//       {\r\n//         id: 'JE001',\r\n//         date: '2025-08-18',\r\n//         description: 'Sample POS Sale - Medical products',\r\n//         reference: 'POS001',\r\n//         transactionType: 'automatic',\r\n//         source: 'POS',\r\n//         status: 'posted',\r\n//         entries: [\r\n//           { accountId: '1111', accountName: 'Petty Cash', debit: 60.50, credit: 0, description: 'Cash received from customer' },\r\n//           { accountId: '4100', accountName: 'Sales Revenue', debit: 0, credit: 55.00, description: 'Revenue from medical products' },\r\n//           { accountId: '2130', accountName: 'Sales Tax Payable', debit: 0, credit: 5.50, description: 'Sales tax collected' }\r\n//         ],\r\n//         totalDebit: 60.50,\r\n//         totalCredit: 60.50,\r\n//         createdAt: '2025-08-18T10:30:00Z'\r\n//       }\r\n//     ];\r\n//     setJournalEntries(sampleEntries);\r\n//   };\r\n\r\n//   const filterEntries = () => {\r\n//     let filtered = [...journalEntries];\r\n\r\n//     if (filters.dateFrom) {\r\n//       filtered = filtered.filter(entry => entry.date >= filters.dateFrom);\r\n//     }\r\n//     if (filters.dateTo) {\r\n//       filtered = filtered.filter(entry => entry.date <= filters.dateTo);\r\n//     }\r\n//     if (filters.accountId) {\r\n//       filtered = filtered.filter(entry => \r\n//         entry.entries.some(e => e.accountId === filters.accountId)\r\n//       );\r\n//     }\r\n//     if (filters.transactionType !== 'all') {\r\n//       filtered = filtered.filter(entry => entry.transactionType === filters.transactionType);\r\n//     }\r\n//     if (filters.searchTerm) {\r\n//       const term = filters.searchTerm.toLowerCase();\r\n//       filtered = filtered.filter(entry => \r\n//         entry.description.toLowerCase().includes(term) ||\r\n//         entry.reference.toLowerCase().includes(term) ||\r\n//         entry.entries.some(e => e.description.toLowerCase().includes(term))\r\n//       );\r\n//     }\r\n\r\n//     setFilteredEntries(filtered);\r\n//   };\r\n\r\n//   const generateTrialBalance = () => {\r\n//     const balances = {};\r\n    \r\n//     // Initialize all accounts\r\n//     chartOfAccounts.forEach(account => {\r\n//       balances[account.id] = {\r\n//         accountId: account.id,\r\n//         accountCode: account.code,\r\n//         accountName: account.name,\r\n//         accountType: account.type,\r\n//         debit: 0,\r\n//         credit: 0,\r\n//         balance: 0\r\n//       };\r\n//     });\r\n\r\n//     // Calculate balances from journal entries\r\n//     journalEntries.forEach(entry => {\r\n//       if (entry.status === 'posted') {\r\n//         entry.entries.forEach(entryLine => {\r\n//           if (balances[entryLine.accountId]) {\r\n//             balances[entryLine.accountId].debit += entryLine.debit;\r\n//             balances[entryLine.accountId].credit += entryLine.credit;\r\n//           }\r\n//         });\r\n//       }\r\n//     });\r\n\r\n//     // Calculate net balances\r\n//     Object.values(balances).forEach(account => {\r\n//       if (account.accountType === 'assets' || account.accountType === 'expenses') {\r\n//         account.balance = account.debit - account.credit;\r\n//       } else {\r\n//         account.balance = account.credit - account.debit;\r\n//       }\r\n//     });\r\n\r\n//     const trialBalanceData = Object.values(balances)\r\n//       .filter(account => account.debit !== 0 || account.credit !== 0)\r\n//       .sort((a, b) => a.accountCode.localeCompare(b.accountCode));\r\n\r\n//     setTrialBalance(trialBalanceData);\r\n//     setShowTrialBalance(true);\r\n//   };\r\n\r\n//   const addEntryLine = () => {\r\n//     setNewEntry({\r\n//       ...newEntry,\r\n//       entries: [...newEntry.entries, { accountId: '', debit: 0, credit: 0, description: '' }]\r\n//     });\r\n//   };\r\n\r\n//   const removeEntryLine = (index) => {\r\n//     if (newEntry.entries.length > 2) {\r\n//       const updatedEntries = newEntry.entries.filter((_, i) => i !== index);\r\n//       setNewEntry({ ...newEntry, entries: updatedEntries });\r\n//     }\r\n//   };\r\n\r\n//   const updateEntryLine = (index, field, value) => {\r\n//     const updatedEntries = [...newEntry.entries];\r\n//     updatedEntries[index] = { ...updatedEntries[index], [field]: value };\r\n//     setNewEntry({ ...newEntry, entries: updatedEntries });\r\n//   };\r\n\r\n//   const calculateTotals = (entries) => {\r\n//     const totalDebit = entries.reduce((sum, entry) => sum + (parseFloat(entry.debit) || 0), 0);\r\n//     const totalCredit = entries.reduce((sum, entry) => sum + (parseFloat(entry.credit) || 0), 0);\r\n//     return { totalDebit, totalCredit };\r\n//   };\r\n\r\n//   const isBalanced = (entries) => {\r\n//     const { totalDebit, totalCredit } = calculateTotals(entries);\r\n//     return Math.abs(totalDebit - totalCredit) < 0.01;\r\n//   };\r\n\r\n//   const saveJournalEntry = () => {\r\n//     if (!newEntry.description || !newEntry.entries.every(e => e.accountId)) {\r\n//       alert('Please fill in all required fields');\r\n//       return;\r\n//     }\r\n\r\n//     if (!isBalanced(newEntry.entries)) {\r\n//       alert('Journal entry must be balanced - total debits must equal total credits');\r\n//       return;\r\n//     }\r\n\r\n//     const { totalDebit, totalCredit } = calculateTotals(newEntry.entries);\r\n    \r\n//     // Add account names to entries\r\n//     const entriesWithNames = newEntry.entries.map(entry => ({\r\n//       ...entry,\r\n//       accountName: accounts.find(acc => acc.id === entry.accountId)?.name || '',\r\n//       debit: parseFloat(entry.debit) || 0,\r\n//       credit: parseFloat(entry.credit) || 0\r\n//     }));\r\n\r\n//     const journalEntry = {\r\n//       id: `JE-MANUAL-${Date.now()}`,\r\n//       date: newEntry.date,\r\n//       description: newEntry.description,\r\n//       reference: newEntry.reference || `MAN${Date.now()}`,\r\n//       transactionType: 'manual',\r\n//       source: 'Manual',\r\n//       status: 'posted',\r\n//       entries: entriesWithNames,\r\n//       totalDebit,\r\n//       totalCredit,\r\n//       createdAt: new Date().toISOString()\r\n//     };\r\n\r\n//     // Save manual entries to localStorage\r\n//     const existingManualEntries = JSON.parse(localStorage.getItem('manualJournalEntries') || '[]');\r\n//     const updatedManualEntries = [...existingManualEntries, journalEntry];\r\n//     localStorage.setItem('manualJournalEntries', JSON.stringify(updatedManualEntries));\r\n\r\n//     // Update state\r\n//     setJournalEntries([...journalEntries, journalEntry]);\r\n    \r\n//     // Reset form\r\n//     setNewEntry({\r\n//       date: new Date().toISOString().split('T')[0],\r\n//       description: '',\r\n//       reference: '',\r\n//       entries: [\r\n//         { accountId: '', debit: 0, credit: 0, description: '' },\r\n//         { accountId: '', debit: 0, credit: 0, description: '' }\r\n//       ]\r\n//     });\r\n//     setIsAddingEntry(false);\r\n//   };\r\n\r\n//   const getAccountName = (accountId) => {\r\n//     const account = accounts.find(acc => acc.id === accountId);\r\n//     return account ? `${account.code} - ${account.name}` : '';\r\n//   };\r\n\r\n//   const { totalDebit, totalCredit } = calculateTotals(newEntry.entries);\r\n//   const entryIsBalanced = isBalanced(newEntry.entries);\r\n\r\n//   return (\r\n//     <div className=\"max-w-7xl mx-auto p-6 bg-white\">\r\n//       {/* Header */}\r\n//       <div className=\"mb-8\">\r\n//         <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\r\n//           <Book className=\"mr-3 text-emerald-600\" />\r\n//           General Ledger\r\n//         </h1>\r\n//         <p className=\"text-gray-600\">Real-time transaction recording and journal entry management</p>\r\n//       </div>\r\n\r\n//       {/* Quick Stats */}\r\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\r\n//         <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-blue-600 text-sm font-medium\">Total Entries</p>\r\n//               <p className=\"text-2xl font-bold text-blue-900\">{journalEntries.length}</p>\r\n//             </div>\r\n//             <FileText className=\"text-blue-600\" size={24} />\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"bg-green-50 p-4 rounded-lg border border-green-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-green-600 text-sm font-medium\">POS Entries</p>\r\n//               <p className=\"text-2xl font-bold text-green-900\">\r\n//                 {journalEntries.filter(e => e.source === 'POS Sales').length}\r\n//               </p>\r\n//             </div>\r\n//             <TrendingUp className=\"text-green-600\" size={24} />\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"bg-orange-50 p-4 rounded-lg border border-orange-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-orange-600 text-sm font-medium\">Manual Entries</p>\r\n//               <p className=\"text-2xl font-bold text-orange-900\">\r\n//                 {journalEntries.filter(e => e.transactionType === 'manual').length}\r\n//               </p>\r\n//             </div>\r\n//             <Edit className=\"text-orange-600\" size={24} />\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"bg-purple-50 p-4 rounded-lg border border-purple-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-purple-600 text-sm font-medium\">Total Value</p>\r\n//               <p className=\"text-2xl font-bold text-purple-900\">\r\n//                 ${journalEntries.reduce((sum, entry) => sum + entry.totalDebit, 0).toFixed(2)}\r\n//               </p>\r\n//             </div>\r\n//             <DollarSign className=\"text-purple-600\" size={24} />\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Controls */}\r\n//       <div className=\"flex flex-wrap items-center justify-between gap-4 mb-6\">\r\n//         <div className=\"flex flex-wrap items-center gap-4\">\r\n//           {/* Date Filters */}\r\n//           <div className=\"flex items-center space-x-2\">\r\n//             <Calendar size={16} className=\"text-gray-400\" />\r\n//             <input\r\n//               type=\"date\"\r\n//               value={filters.dateFrom}\r\n//               onChange={(e) => setFilters({ ...filters, dateFrom: e.target.value })}\r\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               placeholder=\"From\"\r\n//             />\r\n//             <span className=\"text-gray-500\">to</span>\r\n//             <input\r\n//               type=\"date\"\r\n//               value={filters.dateTo}\r\n//               onChange={(e) => setFilters({ ...filters, dateTo: e.target.value })}\r\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               placeholder=\"To\"\r\n//             />\r\n//           </div>\r\n\r\n//           {/* Account Filter */}\r\n//           <div className=\"relative\">\r\n//             <Filter className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n//             <select\r\n//               value={filters.accountId}\r\n//               onChange={(e) => setFilters({ ...filters, accountId: e.target.value })}\r\n//               className=\"pl-10 pr-8 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//             >\r\n//               <option value=\"\">All Accounts</option>\r\n//               {accounts.map(account => (\r\n//                 <option key={account.id} value={account.id}>\r\n//                   {account.code} - {account.name}\r\n//                 </option>\r\n//               ))}\r\n//             </select>\r\n//           </div>\r\n\r\n//           {/* Transaction Type Filter */}\r\n//           <select\r\n//             value={filters.transactionType}\r\n//             onChange={(e) => setFilters({ ...filters, transactionType: e.target.value })}\r\n//             className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//           >\r\n//             <option value=\"all\">All Types</option>\r\n//             <option value=\"automatic\">POS Sales</option>\r\n//             <option value=\"manual\">Manual</option>\r\n//           </select>\r\n\r\n//           {/* Search */}\r\n//           <div className=\"relative\">\r\n//             <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Search entries...\"\r\n//               value={filters.searchTerm}\r\n//               onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\r\n//               className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//             />\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"flex space-x-3\">\r\n//           <button\r\n//             onClick={loadJournalEntriesFromAPI}\r\n//             disabled={loading}\r\n//             className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2 disabled:bg-gray-400\"\r\n//           >\r\n//             {loading ? <RefreshCw className=\"animate-spin\" size={16} /> : <RefreshCw size={16} />}\r\n//             <span>Refresh from API</span>\r\n//           </button>\r\n//           <button\r\n//             onClick={() => setIsAddingEntry(true)}\r\n//             className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\r\n//           >\r\n//             <Plus size={16} />\r\n//             <span>Add Entry</span>\r\n//           </button>\r\n//           <button\r\n//             onClick={generateTrialBalance}\r\n//             className=\"px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 flex items-center space-x-2\"\r\n//           >\r\n//             <FileText size={16} />\r\n//             <span>Trial Balance</span>\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Journal Entry Form */}\r\n//       {isAddingEntry && (\r\n//         <div className=\"mb-8 p-6 bg-gray-50 rounded-lg border\">\r\n//           <h3 className=\"text-lg font-semibold mb-4\">Add Manual Journal Entry</h3>\r\n          \r\n//           <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\r\n//             <div>\r\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Date *</label>\r\n//               <input\r\n//                 type=\"date\"\r\n//                 value={newEntry.date}\r\n//                 onChange={(e) => setNewEntry({ ...newEntry, date: e.target.value })}\r\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               />\r\n//             </div>\r\n//             <div>\r\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Description *</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 value={newEntry.description}\r\n//                 onChange={(e) => setNewEntry({ ...newEntry, description: e.target.value })}\r\n//                 placeholder=\"Enter description\"\r\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               />\r\n//             </div>\r\n//             <div>\r\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Reference</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 value={newEntry.reference}\r\n//                 onChange={(e) => setNewEntry({ ...newEntry, reference: e.target.value })}\r\n//                 placeholder=\"Reference number\"\r\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               />\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* Entry Lines */}\r\n//           <div className=\"mb-4\">\r\n//             <label className=\"block text-sm font-medium text-gray-700 mb-2\">Journal Entry Lines</label>\r\n//             <div className=\"space-y-3\">\r\n//               {newEntry.entries.map((entry, index) => (\r\n//                 <div key={index} className=\"grid grid-cols-12 gap-2 items-center bg-white p-3 rounded border\">\r\n//                   <div className=\"col-span-4\">\r\n//                     <select\r\n//                       value={entry.accountId}\r\n//                       onChange={(e) => updateEntryLine(index, 'accountId', e.target.value)}\r\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                     >\r\n//                       <option value=\"\">Select Account</option>\r\n//                       {accounts.map(account => (\r\n//                         <option key={account.id} value={account.id}>\r\n//                           {account.code} - {account.name}\r\n//                         </option>\r\n//                       ))}\r\n//                     </select>\r\n//                   </div>\r\n//                   <div className=\"col-span-3\">\r\n//                     <input\r\n//                       type=\"text\"\r\n//                       value={entry.description}\r\n//                       onChange={(e) => updateEntryLine(index, 'description', e.target.value)}\r\n//                       placeholder=\"Description\"\r\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                     />\r\n//                   </div>\r\n//                   <div className=\"col-span-2\">\r\n//                     <input\r\n//                       type=\"number\"\r\n//                       step=\"0.01\"\r\n//                       value={entry.debit}\r\n//                       onChange={(e) => updateEntryLine(index, 'debit', e.target.value)}\r\n//                       placeholder=\"Debit\"\r\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                     />\r\n//                   </div>\r\n//                   <div className=\"col-span-2\">\r\n//                     <input\r\n//                       type=\"number\"\r\n//                       step=\"0.01\"\r\n//                       value={entry.credit}\r\n//                       onChange={(e) => updateEntryLine(index, 'credit', e.target.value)}\r\n//                       placeholder=\"Credit\"\r\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                     />\r\n//                   </div>\r\n//                   <div className=\"col-span-1\">\r\n//                     {newEntry.entries.length > 2 && (\r\n//                       <button\r\n//                         onClick={() => removeEntryLine(index)}\r\n//                         className=\"p-1 text-red-600 hover:bg-red-100 rounded\"\r\n//                       >\r\n//                         <Trash2 size={14} />\r\n//                       </button>\r\n//                     )}\r\n//                   </div>\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n\r\n//             <div className=\"flex justify-between items-center mt-3\">\r\n//               <button\r\n//                 onClick={addEntryLine}\r\n//                 className=\"px-3 py-1 text-sm bg-gray-200 text-gray-700 rounded hover:bg-gray-300 flex items-center space-x-1\"\r\n//               >\r\n//                 <Plus size={14} />\r\n//                 <span>Add Line</span>\r\n//               </button>\r\n\r\n//               <div className=\"flex items-center space-x-4\">\r\n//                 <div className=\"text-sm\">\r\n//                   <span className=\"font-medium\">Total Debit: ${totalDebit.toFixed(2)}</span>\r\n//                   <span className=\"mx-2\">|</span>\r\n//                   <span className=\"font-medium\">Total Credit: ${totalCredit.toFixed(2)}</span>\r\n//                 </div>\r\n//                 {entryIsBalanced ? (\r\n//                   <div className=\"flex items-center text-green-600\">\r\n//                     <CheckCircle size={16} className=\"mr-1\" />\r\n//                     <span className=\"text-sm\">Balanced</span>\r\n//                   </div>\r\n//                 ) : (\r\n//                   <div className=\"flex items-center text-red-600\">\r\n//                     <AlertCircle size={16} className=\"mr-1\" />\r\n//                     <span className=\"text-sm\">Not Balanced</span>\r\n//                   </div>\r\n//                 )}\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n\r\n//           <div className=\"flex space-x-3\">\r\n//             <button\r\n//               onClick={saveJournalEntry}\r\n//               disabled={!entryIsBalanced}\r\n//               className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 disabled:bg-gray-400 flex items-center space-x-2\"\r\n//             >\r\n//               <Save size={16} />\r\n//               <span>Save Entry</span>\r\n//             </button>\r\n//             <button\r\n//               onClick={() => setIsAddingEntry(false)}\r\n//               className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\"\r\n//             >\r\n//               <X size={16} />\r\n//               <span>Cancel</span>\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Journal Entries Table */}\r\n//       <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//         <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//           <h2 className=\"text-lg font-semibold text-gray-900\">Journal Entries</h2>\r\n//           <p className=\"text-sm text-gray-600 mt-1\">\r\n//             Showing {filteredEntries.length} of {journalEntries.length} entries\r\n//           </p>\r\n//         </div>\r\n\r\n//         <div className=\"overflow-x-auto\">\r\n//           <table className=\"w-full\">\r\n//             <thead className=\"bg-gray-50\">\r\n//               <tr>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Entry ID\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Date\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Description\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Reference\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Source\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Amount\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Status\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Actions\r\n//                 </th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//               {filteredEntries.map((entry) => (\r\n//                 <tr key={entry.id} className=\"hover:bg-gray-50\">\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n//                     {entry.id}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                     {entry.date}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 text-sm text-gray-900 max-w-xs truncate\">\r\n//                     {entry.description}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                     {entry.reference}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                       entry.source === 'POS Sales' ? 'bg-green-100 text-green-800' : \r\n//                       entry.source === 'Manual' ? 'bg-orange-100 text-orange-800' :\r\n//                       'bg-blue-100 text-blue-800'\r\n//                     }`}>\r\n//                       {entry.source}\r\n//                     </span>\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                     ${entry.totalDebit.toFixed(2)}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                       entry.status === 'posted' ? 'bg-blue-100 text-blue-800' : 'bg-yellow-100 text-yellow-800'\r\n//                     }`}>\r\n//                       {entry.status}\r\n//                     </span>\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n//                     <button\r\n//                       onClick={() => setSelectedEntry(entry)}\r\n//                       className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\r\n//                     >\r\n//                       <Eye size={16} />\r\n//                     </button>\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Entry Details Modal */}\r\n//       {selectedEntry && (\r\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\r\n//                   Journal Entry Details - {selectedEntry.id}\r\n//                 </h3>\r\n//                 <button\r\n//                   onClick={() => setSelectedEntry(null)}\r\n//                   className=\"text-gray-400 hover:text-gray-600\"\r\n//                 >\r\n//                   <X size={20} />\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <div className=\"px-6 py-4\">\r\n//               {/* Entry Header */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\r\n//                 <div>\r\n//                   <label className=\"text-sm font-medium text-gray-500\">Date</label>\r\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.date}</p>\r\n//                 </div>\r\n//                 <div>\r\n//                   <label className=\"text-sm font-medium text-gray-500\">Reference</label>\r\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.reference}</p>\r\n//                 </div>\r\n//                 <div>\r\n//                   <label className=\"text-sm font-medium text-gray-500\">Description</label>\r\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.description}</p>\r\n//                 </div>\r\n//                 <div>\r\n//                   <label className=\"text-sm font-medium text-gray-500\">Source</label>\r\n//                   <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                     selectedEntry.source === 'POS Sales' ? 'bg-green-100 text-green-800' : 'bg-orange-100 text-orange-800'\r\n//                   }`}>\r\n//                     {selectedEntry.source}\r\n//                   </span>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Entry Lines */}\r\n//               <div className=\"mb-6\">\r\n//                 <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Account Entries</h4>\r\n//                 <div className=\"overflow-x-auto\">\r\n//                   <table className=\"w-full border border-gray-200 rounded\">\r\n//                     <thead className=\"bg-gray-50\">\r\n//                       <tr>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Account</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Description</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Debit</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Credit</th>\r\n//                       </tr>\r\n//                     </thead>\r\n//                     <tbody className=\"divide-y divide-gray-200\">\r\n//                       {selectedEntry.entries.map((entryLine, index) => (\r\n//                         <tr key={index}>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900\">\r\n//                             {getAccountName(entryLine.accountId)}\r\n//                           </td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-600\">\r\n//                             {entryLine.description}\r\n//                           </td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">\r\n//                             {entryLine.debit > 0 ? `${entryLine.debit.toFixed(2)}` : '-'}\r\n//                           </td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">\r\n//                             {entryLine.credit > 0 ? `${entryLine.credit.toFixed(2)}` : '-'}\r\n//                           </td>\r\n//                         </tr>\r\n//                       ))}\r\n//                     </tbody>\r\n//                     <tfoot className=\"bg-gray-50\">\r\n//                       <tr>\r\n//                         <td colSpan=\"2\" className=\"px-4 py-2 text-sm font-medium text-gray-900\">\r\n//                           Totals:\r\n//                         </td>\r\n//                         <td className=\"px-4 py-2 text-sm font-bold text-gray-900 text-right\">\r\n//                           ${selectedEntry.totalDebit.toFixed(2)}\r\n//                         </td>\r\n//                         <td className=\"px-4 py-2 text-sm font-bold text-gray-900 text-right\">\r\n//                           ${selectedEntry.totalCredit.toFixed(2)}\r\n//                         </td>\r\n//                       </tr>\r\n//                     </tfoot>\r\n//                   </table>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Original Order Info (if available) */}\r\n//               {selectedEntry.originalOrder && (\r\n//                 <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\r\n//                   <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Original Sales Order Details</h4>\r\n//                   <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\r\n//                     <div>\r\n//                       <span className=\"font-medium text-gray-500\">Order ID:</span>\r\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.orderId}</p>\r\n//                     </div>\r\n//                     <div>\r\n//                       <span className=\"font-medium text-gray-500\">Status:</span>\r\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.status}</p>\r\n//                     </div>\r\n//                     <div>\r\n//                       <span className=\"font-medium text-gray-500\">Payment Status:</span>\r\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.paid ? 'Paid' : 'Unpaid'}</p>\r\n//                     </div>\r\n//                     <div>\r\n//                       <span className=\"font-medium text-gray-500\">Fulfilled:</span>\r\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.fulfilled ? 'Yes' : 'No'}</p>\r\n//                     </div>\r\n//                   </div>\r\n                  \r\n//                   {/* Line Items */}\r\n//                   <div className=\"mt-4\">\r\n//                     <span className=\"font-medium text-gray-500\">Line Items:</span>\r\n//                     <div className=\"mt-2 space-y-2\">\r\n//                       {selectedEntry.originalOrder.lineItems.map((item, index) => (\r\n//                         <div key={index} className=\"text-sm bg-white p-2 rounded border\">\r\n//                           <span className=\"font-medium\">{item.productName}</span> - \r\n//                           Qty: {item.quantity}, Price: ${item.price}, Total: ${item.total}\r\n//                           {item.taxAmount > 0 && <span className=\"text-gray-500\"> (Tax: ${item.taxAmount})</span>}\r\n//                         </div>\r\n//                       ))}\r\n//                     </div>\r\n//                   </div>\r\n//                 </div>\r\n//               )}\r\n\r\n//               {/* Entry Metadata */}\r\n//               <div className=\"text-xs text-gray-500\">\r\n//                 <p>Created: {new Date(selectedEntry.createdAt).toLocaleString()}</p>\r\n//                 <p>Status: {selectedEntry.status}</p>\r\n//                 <p>Type: {selectedEntry.transactionType}</p>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Trial Balance Modal */}\r\n//       {showTrialBalance && (\r\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-lg max-w-5xl w-full max-h-[90vh] overflow-y-auto\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\r\n//                   Trial Balance - As of {new Date().toLocaleDateString()}\r\n//                 </h3>\r\n//                 <div className=\"flex items-center space-x-2\">\r\n//                   <button\r\n//                     onClick={() => {\r\n//                       // Export functionality would go here\r\n//                       alert('Export functionality would be implemented here');\r\n//                     }}\r\n//                     className=\"px-3 py-1 bg-emerald-600 text-white rounded text-sm hover:bg-emerald-700 flex items-center space-x-1\"\r\n//                   >\r\n//                     <Download size={14} />\r\n//                     <span>Export</span>\r\n//                   </button>\r\n//                   <button\r\n//                     onClick={() => setShowTrialBalance(false)}\r\n//                     className=\"text-gray-400 hover:text-gray-600\"\r\n//                   >\r\n//                     <X size={20} />\r\n//                   </button>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <div className=\"px-6 py-4\">\r\n//               <div className=\"overflow-x-auto\">\r\n//                 <table className=\"w-full\">\r\n//                   <thead className=\"bg-gray-50\">\r\n//                     <tr>\r\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Account Code\r\n//                       </th>\r\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Account Name\r\n//                       </th>\r\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Type\r\n//                       </th>\r\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Debit Total\r\n//                       </th>\r\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Credit Total\r\n//                       </th>\r\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Balance\r\n//                       </th>\r\n//                     </tr>\r\n//                   </thead>\r\n//                   <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//                     {trialBalance.map((account) => (\r\n//                       <tr key={account.accountId}>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n//                           {account.accountCode}\r\n//                         </td>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                           {account.accountName}\r\n//                         </td>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap\">\r\n//                           <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                             account.accountType === 'assets' ? 'bg-green-100 text-green-800' :\r\n//                             account.accountType === 'liabilities' ? 'bg-red-100 text-red-800' :\r\n//                             account.accountType === 'equity' ? 'bg-blue-100 text-blue-800' :\r\n//                             account.accountType === 'revenue' ? 'bg-purple-100 text-purple-800' :\r\n//                             'bg-orange-100 text-orange-800'\r\n//                           }`}>\r\n//                             {account.accountType}\r\n//                           </span>\r\n//                         </td>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\r\n//                           ${account.debit.toFixed(2)}\r\n//                         </td>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\r\n//                           ${account.credit.toFixed(2)}\r\n//                         </td>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-right\">\r\n//                           <span className={account.balance >= 0 ? 'text-green-600' : 'text-red-600'}>\r\n//                             ${Math.abs(account.balance).toFixed(2)}\r\n//                             {account.balance < 0 && ' (CR)'}\r\n//                           </span>\r\n//                         </td>\r\n//                       </tr>\r\n//                     ))}\r\n//                   </tbody>\r\n//                   <tfoot className=\"bg-gray-50\">\r\n//                     <tr>\r\n//                       <td colSpan=\"3\" className=\"px-4 py-3 text-sm font-bold text-gray-900\">\r\n//                         TOTALS:\r\n//                       </td>\r\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\r\n//                         ${trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toFixed(2)}\r\n//                       </td>\r\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\r\n//                         ${trialBalance.reduce((sum, acc) => sum + acc.credit, 0).toFixed(2)}\r\n//                       </td>\r\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\r\n//                         ${Math.abs(trialBalance.reduce((sum, acc) => sum + acc.balance, 0)).toFixed(2)}\r\n//                       </td>\r\n//                     </tr>\r\n//                   </tfoot>\r\n//                 </table>\r\n//               </div>\r\n              \r\n//               {/* Trial Balance Validation */}\r\n//               <div className=\"mt-4 p-4 bg-green-50 border border-green-200 rounded-lg\">\r\n//                 <div className=\"flex items-center\">\r\n//                   <CheckCircle className=\"text-green-600 mr-2\" size={20} />\r\n//                   <div>\r\n//                     <h4 className=\"font-medium text-green-800\">Trial Balance is Balanced</h4>\r\n//                     <p className=\"text-sm text-green-700\">\r\n//                       Total Debits = Total Credits = ${trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toFixed(2)}\r\n//                     </p>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Integration Status */}\r\n//       <div className=\"mt-8 grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n//         <div className=\"p-4 bg-green-50 border border-green-200 rounded-lg\">\r\n//           <div className=\"flex items-center mb-2\">\r\n//             <CheckCircle className=\"text-green-600 mr-2\" size={16} />\r\n//             <h4 className=\"font-medium text-green-800\">POS API Integration</h4>\r\n//           </div>\r\n//           <p className=\"text-sm text-green-700\">\r\n//             Sales orders automatically create journal entries from live API data\r\n//           </p>\r\n//         </div>\r\n\r\n//         <div className=\"p-4 bg-blue-50 border border-blue-200 rounded-lg\">\r\n//           <div className=\"flex items-center mb-2\">\r\n//             <RefreshCw className=\"text-blue-600 mr-2\" size={16} />\r\n//             <h4 className=\"font-medium text-blue-800\">Real-time Sync</h4>\r\n//           </div>\r\n//           <p className=\"text-sm text-blue-700\">\r\n//             Journal entries updated automatically with each sales transaction\r\n//           </p>\r\n//         </div>\r\n\r\n//         <div className=\"p-4 bg-orange-50 border border-orange-200 rounded-lg\">\r\n//           <div className=\"flex items-center mb-2\">\r\n//             <FileText className=\"text-orange-600 mr-2\" size={16} />\r\n//             <h4 className=\"font-medium text-orange-800\">Manual Entries</h4>\r\n//           </div>\r\n//           <p className=\"text-sm text-orange-700\">\r\n//             Add adjustments and corrections with full double-entry validation\r\n//           </p>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default GeneralLedger;\r\n\r\n//CORRECT CODE\r\n// import React, { useState, useEffect } from 'react';\r\n// import { \r\n//   Book, \r\n//   Plus, \r\n//   Filter, \r\n//   Search, \r\n//   Calendar, \r\n//   FileText, \r\n//   Edit, \r\n//   Trash2, \r\n//   Save, \r\n//   X, \r\n//   AlertCircle,\r\n//   CheckCircle,\r\n//   DollarSign,\r\n//   TrendingUp,\r\n//   Eye,\r\n//   Download,\r\n//   RefreshCw\r\n// } from 'lucide-react';\r\n\r\n// const GeneralLedger = () => {\r\n//   const [journalEntries, setJournalEntries] = useState([]);\r\n//   const [accounts, setAccounts] = useState([]);\r\n//   const [filteredEntries, setFilteredEntries] = useState([]);\r\n//   const [selectedEntry, setSelectedEntry] = useState(null);\r\n//   const [isAddingEntry, setIsAddingEntry] = useState(false);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [filters, setFilters] = useState({\r\n//     dateFrom: '',\r\n//     dateTo: '',\r\n//     accountId: '',\r\n//     transactionType: 'all',\r\n//     searchTerm: ''\r\n//   });\r\n//   const [trialBalance, setTrialBalance] = useState([]);\r\n//   const [showTrialBalance, setShowTrialBalance] = useState(false);\r\n//   const [newEntry, setNewEntry] = useState({\r\n//     date: new Date().toISOString().split('T')[0],\r\n//     description: '',\r\n//     reference: '',\r\n//     entries: [\r\n//       { accountId: '', debit: 0, credit: 0, description: '' },\r\n//       { accountId: '', debit: 0, credit: 0, description: '' }\r\n//     ]\r\n//   });\r\n\r\n//   // Chart of Accounts\r\n//   const chartOfAccounts = [\r\n//     { id: '1111', code: '1111', name: 'Petty Cash', type: 'assets' },\r\n//     { id: '1112', code: '1112', name: 'Bank - Main Account', type: 'assets' },\r\n//     { id: '1120', code: '1120', name: 'Accounts Receivable', type: 'assets' },\r\n//     { id: '1130', code: '1130', name: 'Inventory', type: 'assets' },\r\n//     { id: '2110', code: '2110', name: 'Accounts Payable', type: 'liabilities' },\r\n//     { id: '2130', code: '2130', name: 'Sales Tax Payable', type: 'liabilities' },\r\n//     { id: '4100', code: '4100', name: 'Sales Revenue', type: 'revenue' },\r\n//     { id: '4110', code: '4110', name: 'Electronics Sales', type: 'revenue' },\r\n//     { id: '5100', code: '5100', name: 'Cost of Goods Sold', type: 'expenses' },\r\n//     { id: '5200', code: '5200', name: 'Purchase Expenses', type: 'expenses' }\r\n//   ];\r\n\r\n//   // API Configuration - This is already correct\r\n//   const API_BASE_URL = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/orders?start=0&size=200';\r\n//   const API_BASE_URL_CHARTS_OF_ACCOUNTS = 'http://localhost:8080/api/accounts';\r\n\r\n//   useEffect(() => {\r\n//     setAccounts(chartOfAccounts);\r\n//     loadJournalEntriesFromAPI();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     filterEntries();\r\n//   }, [journalEntries, filters]);\r\n\r\n//   async function fetchOrderData() {\r\n//     try {\r\n//       const response = await fetch(API_BASE_URL, {\r\n//         method: 'GET',\r\n//         headers: {\r\n//           'Authorization': 'Bearer Hamid',\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//       });\r\n      \r\n//       if (!response.ok) {\r\n//         throw new Error(`API request failed with status ${response.status}`);\r\n//       }\r\n      \r\n//       const data = await response.json();\r\n//       return data;\r\n//     } catch (error) {\r\n//       console.error('Error fetching order data:', error);\r\n//       // Implement notification system for integration errors\r\n//       return null;\r\n//     }\r\n//   }\r\n\r\n//   // Fetch Sales Orders from API and convert to Journal Entries\r\n//   const loadJournalEntriesFromAPI = async () => {\r\n//     setLoading(true);\r\n//     try {\r\n//       // FIXED: Using the correct API_BASE_URL directly instead of appending \"/orders?start=0&size=200\"\r\n//       const salesOrders = await fetchOrderData();\r\n      \r\n//       if (!salesOrders) {\r\n//         throw new Error('Failed to fetch sales orders');\r\n//       }\r\n      \r\n//       // Filter only PAID and FULFILLED orders\r\n//       const completedOrders = salesOrders.filter(order => \r\n//         order.paid === true && order.fulfilled === true && order.status === 'Closed'\r\n//       );\r\n      \r\n//       // Convert completed sales orders to journal entries\r\n//       const journalEntriesFromSales = completedOrders.map(order => convertSalesOrderToJournalEntry(order))\r\n//         .filter(entry => entry !== null); // Filter out any null entries\r\n      \r\n//       // Load any manual journal entries from localStorage\r\n//       const manualEntries = JSON.parse(localStorage.getItem('manualJournalEntries') || '[]');\r\n      \r\n//       // Combine both types of entries\r\n//       const allEntries = [...journalEntriesFromSales, ...manualEntries];\r\n      \r\n//       setJournalEntries(allEntries);\r\n//       console.log('Loaded completed orders:', completedOrders.length, 'Total journal entries:', allEntries.length);\r\n//     } catch (error) {\r\n//       console.error('Error loading sales orders:', error);\r\n//       // Fallback to sample data if API fails\r\n//       loadSampleJournalEntries();\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   // Convert Sales Order to Journal Entry\r\n//   const convertSalesOrderToJournalEntry = (order) => {\r\n//     const entries = [];\r\n    \r\n//     // Use actual values from API (amounts are in PKR, not USD)\r\n//     const subTotal = parseFloat(order.subTotal) || 0;\r\n//     const taxAmount = parseFloat(order.taxAmount) || 0;\r\n//     const total = parseFloat(order.total) || 0;\r\n    \r\n//     // Only process PAID and FULFILLED orders\r\n//     if (!order.paid || !order.fulfilled || order.status !== 'Closed') {\r\n//       return null; // Skip incomplete orders\r\n//     }\r\n    \r\n//     // Cash/Bank Account (Debit) - Total amount received\r\n//     entries.push({\r\n//       accountId: '1111', // Petty Cash (assume cash payment)\r\n//       accountName: 'Petty Cash',\r\n//       debit: total,\r\n//       credit: 0,\r\n//       description: `Cash received from Order #${order.orderId} - ${order.lineItems.map(item => item.productName).join(', ')}`\r\n//     });\r\n\r\n//     // Sales Revenue (Credit) - Subtotal\r\n//     if (subTotal > 0) {\r\n//       entries.push({\r\n//         accountId: '4110', // Electronics Sales\r\n//         accountName: 'Electronics Sales',\r\n//         debit: 0,\r\n//         credit: subTotal,\r\n//         description: `Revenue from Order #${order.orderId}`\r\n//       });\r\n//     }\r\n\r\n//     // Sales Tax Payable (Credit) - Tax amount\r\n//     if (taxAmount > 0) {\r\n//       entries.push({\r\n//         accountId: '2130',\r\n//         accountName: 'Sales Tax Payable',\r\n//         debit: 0,\r\n//         credit: taxAmount,\r\n//         description: `${order.taxRate}% tax collected on Order #${order.orderId}`\r\n//       });\r\n//     }\r\n\r\n//     // Cost of Goods Sold and Inventory reduction (only for fulfilled items)\r\n//     let totalCOGS = 0;\r\n//     order.lineItems.forEach(item => {\r\n//       if (item.fulfilled && item.status === 'Fulfilled') {\r\n//         const costPrice = parseFloat(item.costPrice) || 0;\r\n//         const quantity = parseFloat(item.quantity) || 0;\r\n//         const itemCOGS = costPrice * quantity;\r\n//         totalCOGS += itemCOGS;\r\n//       }\r\n//     });\r\n\r\n//     if (totalCOGS > 0) {\r\n//       // Cost of Goods Sold (Debit)\r\n//       entries.push({\r\n//         accountId: '5100',\r\n//         accountName: 'Cost of Goods Sold',\r\n//         debit: totalCOGS,\r\n//         credit: 0,\r\n//         description: `COGS for Order #${order.orderId}`\r\n//       });\r\n\r\n//       // Inventory (Credit)\r\n//       entries.push({\r\n//         accountId: '1130',\r\n//         accountName: 'Inventory',\r\n//         debit: 0,\r\n//         credit: totalCOGS,\r\n//         description: `Inventory reduction - Order #${order.orderId}`\r\n//       });\r\n//     }\r\n\r\n//     // Calculate totals\r\n//     const totalDebit = entries.reduce((sum, entry) => sum + entry.debit, 0);\r\n//     const totalCredit = entries.reduce((sum, entry) => sum + entry.credit, 0);\r\n\r\n//     return {\r\n//       id: `JE-ORDER-${order.orderId}`,\r\n//       date: formatDateFromCreatedAt(order.createdAt),\r\n//       description: `Sales Order #${order.orderId} - ${order.lineItems.map(item => `${item.productName} (${item.quantity})`).join(', ')}`,\r\n//       reference: `ORDER-${order.orderId}`,\r\n//       transactionType: 'automatic',\r\n//       source: 'POS Sales',\r\n//       status: 'posted',\r\n//       entries: entries,\r\n//       totalDebit: Math.round(totalDebit * 100) / 100,\r\n//       totalCredit: Math.round(totalCredit * 100) / 100,\r\n//       createdAt: order.createdAt,\r\n//       originalOrder: order // Keep reference to original order\r\n//     };\r\n//   };\r\n\r\n//   // Format date from API format (2025.08.18.10.08.54.569) to YYYY-MM-DD\r\n//   const formatDateFromCreatedAt = (createdAt) => {\r\n//     try {\r\n//       const parts = createdAt.split('.');\r\n//       if (parts.length >= 3) {\r\n//         return `${parts[0]}-${parts[1].padStart(2, '0')}-${parts[2].padStart(2, '0')}`;\r\n//       }\r\n//       return new Date().toISOString().split('T')[0];\r\n//     } catch (error) {\r\n//       return new Date().toISOString().split('T')[0];\r\n//     }\r\n//   };\r\n\r\n//   // Fallback sample data\r\n//   const loadSampleJournalEntries = () => {\r\n//     const sampleEntries = [\r\n//       {\r\n//         id: 'JE001',\r\n//         date: '2025-08-18',\r\n//         description: 'Sample POS Sale - Medical products',\r\n//         reference: 'POS001',\r\n//         transactionType: 'automatic',\r\n//         source: 'POS',\r\n//         status: 'posted',\r\n//         entries: [\r\n//           { accountId: '1111', accountName: 'Petty Cash', debit: 60.50, credit: 0, description: 'Cash received from customer' },\r\n//           { accountId: '4100', accountName: 'Sales Revenue', debit: 0, credit: 55.00, description: 'Revenue from medical products' },\r\n//           { accountId: '2130', accountName: 'Sales Tax Payable', debit: 0, credit: 5.50, description: 'Sales tax collected' }\r\n//         ],\r\n//         totalDebit: 60.50,\r\n//         totalCredit: 60.50,\r\n//         createdAt: '2025-08-18T10:30:00Z'\r\n//       }\r\n//     ];\r\n//     setJournalEntries(sampleEntries);\r\n//   };\r\n\r\n//   const filterEntries = () => {\r\n//     let filtered = [...journalEntries];\r\n\r\n//     if (filters.dateFrom) {\r\n//       filtered = filtered.filter(entry => entry.date >= filters.dateFrom);\r\n//     }\r\n//     if (filters.dateTo) {\r\n//       filtered = filtered.filter(entry => entry.date <= filters.dateTo);\r\n//     }\r\n//     if (filters.accountId) {\r\n//       filtered = filtered.filter(entry => \r\n//         entry.entries.some(e => e.accountId === filters.accountId)\r\n//       );\r\n//     }\r\n//     if (filters.transactionType !== 'all') {\r\n//       filtered = filtered.filter(entry => entry.transactionType === filters.transactionType);\r\n//     }\r\n//     if (filters.searchTerm) {\r\n//       const term = filters.searchTerm.toLowerCase();\r\n//       filtered = filtered.filter(entry => \r\n//         entry.description.toLowerCase().includes(term) ||\r\n//         entry.reference.toLowerCase().includes(term) ||\r\n//         entry.entries.some(e => e.description.toLowerCase().includes(term))\r\n//       );\r\n//     }\r\n\r\n//     setFilteredEntries(filtered);\r\n//   };\r\n\r\n//   const generateTrialBalance = () => {\r\n//     const balances = {};\r\n    \r\n//     // Initialize all accounts\r\n//     chartOfAccounts.forEach(account => {\r\n//       balances[account.id] = {\r\n//         accountId: account.id,\r\n//         accountCode: account.code,\r\n//         accountName: account.name,\r\n//         accountType: account.type,\r\n//         debit: 0,\r\n//         credit: 0,\r\n//         balance: 0\r\n//       };\r\n//     });\r\n\r\n//     // Calculate balances from journal entries\r\n//     journalEntries.forEach(entry => {\r\n//       if (entry.status === 'posted') {\r\n//         entry.entries.forEach(entryLine => {\r\n//           if (balances[entryLine.accountId]) {\r\n//             balances[entryLine.accountId].debit += entryLine.debit;\r\n//             balances[entryLine.accountId].credit += entryLine.credit;\r\n//           }\r\n//         });\r\n//       }\r\n//     });\r\n\r\n//     // Calculate net balances\r\n//     Object.values(balances).forEach(account => {\r\n//       if (account.accountType === 'assets' || account.accountType === 'expenses') {\r\n//         account.balance = account.debit - account.credit;\r\n//       } else {\r\n//         account.balance = account.credit - account.debit;\r\n//       }\r\n//     });\r\n\r\n//     const trialBalanceData = Object.values(balances)\r\n//       .filter(account => account.debit !== 0 || account.credit !== 0)\r\n//       .sort((a, b) => a.accountCode.localeCompare(b.accountCode));\r\n\r\n//     setTrialBalance(trialBalanceData);\r\n//     setShowTrialBalance(true);\r\n//   };\r\n\r\n//   const addEntryLine = () => {\r\n//     setNewEntry({\r\n//       ...newEntry,\r\n//       entries: [...newEntry.entries, { accountId: '', debit: 0, credit: 0, description: '' }]\r\n//     });\r\n//   };\r\n\r\n//   const removeEntryLine = (index) => {\r\n//     if (newEntry.entries.length > 2) {\r\n//       const updatedEntries = newEntry.entries.filter((_, i) => i !== index);\r\n//       setNewEntry({ ...newEntry, entries: updatedEntries });\r\n//     }\r\n//   };\r\n\r\n//   const updateEntryLine = (index, field, value) => {\r\n//     const updatedEntries = [...newEntry.entries];\r\n//     updatedEntries[index] = { ...updatedEntries[index], [field]: value };\r\n//     setNewEntry({ ...newEntry, entries: updatedEntries });\r\n//   };\r\n\r\n//   const calculateTotals = (entries) => {\r\n//     const totalDebit = entries.reduce((sum, entry) => sum + (parseFloat(entry.debit) || 0), 0);\r\n//     const totalCredit = entries.reduce((sum, entry) => sum + (parseFloat(entry.credit) || 0), 0);\r\n//     return { totalDebit, totalCredit };\r\n//   };\r\n\r\n//   const isBalanced = (entries) => {\r\n//     const { totalDebit, totalCredit } = calculateTotals(entries);\r\n//     return Math.abs(totalDebit - totalCredit) < 0.01;\r\n//   };\r\n\r\n//   const saveJournalEntry = () => {\r\n//     if (!newEntry.description || !newEntry.entries.every(e => e.accountId)) {\r\n//       alert('Please fill in all required fields');\r\n//       return;\r\n//     }\r\n\r\n//     if (!isBalanced(newEntry.entries)) {\r\n//       alert('Journal entry must be balanced - total debits must equal total credits');\r\n//       return;\r\n//     }\r\n\r\n//     const { totalDebit, totalCredit } = calculateTotals(newEntry.entries);\r\n    \r\n//     // Add account names to entries\r\n//     const entriesWithNames = newEntry.entries.map(entry => ({\r\n//       ...entry,\r\n//       accountName: accounts.find(acc => acc.id === entry.accountId)?.name || '',\r\n//       debit: parseFloat(entry.debit) || 0,\r\n//       credit: parseFloat(entry.credit) || 0\r\n//     }));\r\n\r\n//     const journalEntry = {\r\n//       id: `JE-MANUAL-${Date.now()}`,\r\n//       date: newEntry.date,\r\n//       description: newEntry.description,\r\n//       reference: newEntry.reference || `MAN${Date.now()}`,\r\n//       transactionType: 'manual',\r\n//       source: 'Manual',\r\n//       status: 'posted',\r\n//       entries: entriesWithNames,\r\n//       totalDebit,\r\n//       totalCredit,\r\n//       createdAt: new Date().toISOString()\r\n//     };\r\n\r\n//     // Save manual entries to localStorage\r\n//     const existingManualEntries = JSON.parse(localStorage.getItem('manualJournalEntries') || '[]');\r\n//     const updatedManualEntries = [...existingManualEntries, journalEntry];\r\n//     localStorage.setItem('manualJournalEntries', JSON.stringify(updatedManualEntries));\r\n\r\n//     // Update state\r\n//     setJournalEntries([...journalEntries, journalEntry]);\r\n    \r\n//     // Reset form\r\n//     setNewEntry({\r\n//       date: new Date().toISOString().split('T')[0],\r\n//       description: '',\r\n//       reference: '',\r\n//       entries: [\r\n//         { accountId: '', debit: 0, credit: 0, description: '' },\r\n//         { accountId: '', debit: 0, credit: 0, description: '' }\r\n//       ]\r\n//     });\r\n//     setIsAddingEntry(false);\r\n//   };\r\n\r\n//   const getAccountName = (accountId) => {\r\n//     const account = accounts.find(acc => acc.id === accountId);\r\n//     return account ? `${account.code} - ${account.name}` : '';\r\n//   };\r\n\r\n//   const { totalDebit, totalCredit } = calculateTotals(newEntry.entries);\r\n//   const entryIsBalanced = isBalanced(newEntry.entries);\r\n\r\n//   return (\r\n//     <div className=\"max-w-7xl mx-auto p-6 bg-white\">\r\n//       {/* Header */}\r\n//       <div className=\"mb-8\">\r\n//         <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\r\n//           <Book className=\"mr-3 text-emerald-600\" />\r\n//           General Ledger\r\n//         </h1>\r\n//         <p className=\"text-gray-600\">Real-time transaction recording and journal entry management</p>\r\n//       </div>\r\n\r\n//       {/* Quick Stats */}\r\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\r\n//         <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-blue-600 text-sm font-medium\">Total Entries</p>\r\n//               <p className=\"text-2xl font-bold text-blue-900\">{journalEntries.length}</p>\r\n//             </div>\r\n//             <FileText className=\"text-blue-600\" size={24} />\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"bg-green-50 p-4 rounded-lg border border-green-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-green-600 text-sm font-medium\">POS Entries</p>\r\n//               <p className=\"text-2xl font-bold text-green-900\">\r\n//                 {journalEntries.filter(e => e.source === 'POS Sales').length}\r\n//               </p>\r\n//             </div>\r\n//             <TrendingUp className=\"text-green-600\" size={24} />\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"bg-orange-50 p-4 rounded-lg border border-orange-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-orange-600 text-sm font-medium\">Manual Entries</p>\r\n//               <p className=\"text-2xl font-bold text-orange-900\">\r\n//                 {journalEntries.filter(e => e.transactionType === 'manual').length}\r\n//               </p>\r\n//             </div>\r\n//             <Edit className=\"text-orange-600\" size={24} />\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"bg-purple-50 p-4 rounded-lg border border-purple-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-purple-600 text-sm font-medium\">Total Value</p>\r\n//               <p className=\"text-2xl font-bold text-purple-900\">\r\n//                 PKR {journalEntries.reduce((sum, entry) => sum + entry.totalDebit, 0).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n//               </p>\r\n//             </div>\r\n//             <DollarSign className=\"text-purple-600\" size={24} />\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Controls */}\r\n//       <div className=\"flex flex-wrap items-center justify-between gap-4 mb-6\">\r\n//         <div className=\"flex flex-wrap items-center gap-4\">\r\n//           {/* Date Filters */}\r\n//           <div className=\"flex items-center space-x-2\">\r\n//             <Calendar size={16} className=\"text-gray-400\" />\r\n//             <input\r\n//               type=\"date\"\r\n//               value={filters.dateFrom}\r\n//               onChange={(e) => setFilters({ ...filters, dateFrom: e.target.value })}\r\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               placeholder=\"From\"\r\n//             />\r\n//             <span className=\"text-gray-500\">to</span>\r\n//             <input\r\n//               type=\"date\"\r\n//               value={filters.dateTo}\r\n//               onChange={(e) => setFilters({ ...filters, dateTo: e.target.value })}\r\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               placeholder=\"To\"\r\n//             />\r\n//           </div>\r\n\r\n//           {/* Account Filter */}\r\n//           <div className=\"relative\">\r\n//             <Filter className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n//             <select\r\n//               value={filters.accountId}\r\n//               onChange={(e) => setFilters({ ...filters, accountId: e.target.value })}\r\n//               className=\"pl-10 pr-8 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//             >\r\n//               <option value=\"\">All Accounts</option>\r\n//               {accounts.map(account => (\r\n//                 <option key={account.id} value={account.id}>\r\n//                   {account.code} - {account.name}\r\n//                 </option>\r\n//               ))}\r\n//             </select>\r\n//           </div>\r\n\r\n//           {/* Transaction Type Filter */}\r\n//           <select\r\n//             value={filters.transactionType}\r\n//             onChange={(e) => setFilters({ ...filters, transactionType: e.target.value })}\r\n//             className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//           >\r\n//             <option value=\"all\">All Types</option>\r\n//             <option value=\"automatic\">POS Sales</option>\r\n//             <option value=\"manual\">Manual</option>\r\n//           </select>\r\n\r\n//           {/* Search */}\r\n//           <div className=\"relative\">\r\n//             <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Search entries...\"\r\n//               value={filters.searchTerm}\r\n//               onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\r\n//               className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//             />\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"flex space-x-3\">\r\n//           <button\r\n//             onClick={loadJournalEntriesFromAPI}\r\n//             disabled={loading}\r\n//             className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2 disabled:bg-gray-400\"\r\n//           >\r\n//             {loading ? <RefreshCw className=\"animate-spin\" size={16} /> : <RefreshCw size={16} />}\r\n//             <span>Refresh from API</span>\r\n//           </button>\r\n//           <button\r\n//             onClick={() => setIsAddingEntry(true)}\r\n//             className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\r\n//           >\r\n//             <Plus size={16} />\r\n//             <span>Add Entry</span>\r\n//           </button>\r\n//           <button\r\n//             onClick={generateTrialBalance}\r\n//             className=\"px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 flex items-center space-x-2\"\r\n//           >\r\n//             <FileText size={16} />\r\n//             <span>Trial Balance</span>\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Journal Entry Form */}\r\n//       {isAddingEntry && (\r\n//         <div className=\"mb-8 p-6 bg-gray-50 rounded-lg border\">\r\n//           <h3 className=\"text-lg font-semibold mb-4\">Add Manual Journal Entry</h3>\r\n          \r\n//           <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\r\n//             <div>\r\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Date *</label>\r\n//               <input\r\n//                 type=\"date\"\r\n//                 value={newEntry.date}\r\n//                 onChange={(e) => setNewEntry({ ...newEntry, date: e.target.value })}\r\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               />\r\n//             </div>\r\n//             <div>\r\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Description *</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 value={newEntry.description}\r\n//                 onChange={(e) => setNewEntry({ ...newEntry, description: e.target.value })}\r\n//                 placeholder=\"Enter description\"\r\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               />\r\n//             </div>\r\n//             <div>\r\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Reference</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 value={newEntry.reference}\r\n//                 onChange={(e) => setNewEntry({ ...newEntry, reference: e.target.value })}\r\n//                 placeholder=\"Reference number\"\r\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               />\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* Entry Lines */}\r\n//           <div className=\"mb-4\">\r\n//             <label className=\"block text-sm font-medium text-gray-700 mb-2\">Journal Entry Lines</label>\r\n//             <div className=\"space-y-3\">\r\n//               {newEntry.entries.map((entry, index) => (\r\n//                 <div key={index} className=\"grid grid-cols-12 gap-2 items-center bg-white p-3 rounded border\">\r\n//                   <div className=\"col-span-4\">\r\n//                     <select\r\n//                       value={entry.accountId}\r\n//                       onChange={(e) => updateEntryLine(index, 'accountId', e.target.value)}\r\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                     >\r\n//                       <option value=\"\">Select Account</option>\r\n//                       {accounts.map(account => (\r\n//                         <option key={account.id} value={account.id}>\r\n//                           {account.code} - {account.name}\r\n//                         </option>\r\n//                       ))}\r\n//                     </select>\r\n//                   </div>\r\n//                   <div className=\"col-span-3\">\r\n//                     <input\r\n//                       type=\"text\"\r\n//                       value={entry.description}\r\n//                       onChange={(e) => updateEntryLine(index, 'description', e.target.value)}\r\n//                       placeholder=\"Description\"\r\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                     />\r\n//                   </div>\r\n//                   <div className=\"col-span-2\">\r\n//                     <input\r\n//                       type=\"number\"\r\n//                       step=\"0.01\"\r\n//                       value={entry.debit}\r\n//                       onChange={(e) => updateEntryLine(index, 'debit', e.target.value)}\r\n//                       placeholder=\"Debit\"\r\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                     />\r\n//                   </div>\r\n//                   <div className=\"col-span-2\">\r\n//                     <input\r\n//                       type=\"number\"\r\n//                       step=\"0.01\"\r\n//                       value={entry.credit}\r\n//                       onChange={(e) => updateEntryLine(index, 'credit', e.target.value)}\r\n//                       placeholder=\"Credit\"\r\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                     />\r\n//                   </div>\r\n//                   <div className=\"col-span-1\">\r\n//                     {newEntry.entries.length > 2 && (\r\n//                       <button\r\n//                         onClick={() => removeEntryLine(index)}\r\n//                         className=\"p-1 text-red-600 hover:bg-red-100 rounded\"\r\n//                       >\r\n//                         <Trash2 size={14} />\r\n//                       </button>\r\n//                     )}\r\n//                   </div>\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n\r\n//             <div className=\"flex justify-between items-center mt-3\">\r\n//               <button\r\n//                 onClick={addEntryLine}\r\n//                 className=\"px-3 py-1 text-sm bg-gray-200 text-gray-700 rounded hover:bg-gray-300 flex items-center space-x-1\"\r\n//               >\r\n//                 <Plus size={14} />\r\n//                 <span>Add Line</span>\r\n//               </button>\r\n\r\n//               <div className=\"flex items-center space-x-4\">\r\n//                 <div className=\"text-sm\">\r\n//                   <span className=\"font-medium\">Total Debit: PKR {totalDebit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}</span>\r\n//                   <span className=\"mx-2\">|</span>\r\n//                   <span className=\"font-medium\">Total Credit: PKR {totalCredit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}</span>\r\n//                 </div>\r\n//                 {entryIsBalanced ? (\r\n//                   <div className=\"flex items-center text-green-600\">\r\n//                     <CheckCircle size={16} className=\"mr-1\" />\r\n//                     <span className=\"text-sm\">Balanced</span>\r\n//                   </div>\r\n//                 ) : (\r\n//                   <div className=\"flex items-center text-red-600\">\r\n//                     <AlertCircle size={16} className=\"mr-1\" />\r\n//                     <span className=\"text-sm\">Not Balanced</span>\r\n//                   </div>\r\n//                 )}\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n\r\n//           <div className=\"flex space-x-3\">\r\n//             <button\r\n//               onClick={saveJournalEntry}\r\n//               disabled={!entryIsBalanced}\r\n//               className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 disabled:bg-gray-400 flex items-center space-x-2\"\r\n//             >\r\n//               <Save size={16} />\r\n//               <span>Save Entry</span>\r\n//             </button>\r\n//             <button\r\n//               onClick={() => setIsAddingEntry(false)}\r\n//               className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\"\r\n//             >\r\n//               <X size={16} />\r\n//               <span>Cancel</span>\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Journal Entries Table */}\r\n//       <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//         <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//           <h2 className=\"text-lg font-semibold text-gray-900\">Journal Entries</h2>\r\n//           <p className=\"text-sm text-gray-600 mt-1\">\r\n//             Showing {filteredEntries.length} of {journalEntries.length} entries\r\n//           </p>\r\n//         </div>\r\n\r\n//         <div className=\"overflow-x-auto\">\r\n//           <table className=\"w-full\">\r\n//             <thead className=\"bg-gray-50\">\r\n//               <tr>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Entry ID\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Date\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Description\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Reference\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Source\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Amount\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Status\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Actions\r\n//                 </th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//               {filteredEntries.map((entry) => (\r\n//                 <tr key={entry.id} className=\"hover:bg-gray-50\">\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n//                     {entry.id}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                     {entry.date}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 text-sm text-gray-900 max-w-xs truncate\">\r\n//                     {entry.description}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                     {entry.reference}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                       entry.source === 'POS Sales' ? 'bg-green-100 text-green-800' : \r\n//                       entry.source === 'Manual' ? 'bg-orange-100 text-orange-800' :\r\n//                       'bg-blue-100 text-blue-800'\r\n//                     }`}>\r\n//                       {entry.source}\r\n//                     </span>\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                     PKR {entry.totalDebit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                       entry.status === 'posted' ? 'bg-blue-100 text-blue-800' : 'bg-yellow-100 text-yellow-800'\r\n//                     }`}>\r\n//                       {entry.status}\r\n//                     </span>\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n//                     <button\r\n//                       onClick={() => setSelectedEntry(entry)}\r\n//                       className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\r\n//                     >\r\n//                       <Eye size={16} />\r\n//                     </button>\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Entry Details Modal */}\r\n//       {selectedEntry && (\r\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\r\n//                   Journal Entry Details - {selectedEntry.id}\r\n//                 </h3>\r\n//                 <button\r\n//                   onClick={() => setSelectedEntry(null)}\r\n//                   className=\"text-gray-400 hover:text-gray-600\"\r\n//                 >\r\n//                   <X size={20} />\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <div className=\"px-6 py-4\">\r\n//               {/* Entry Header */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\r\n//                 <div>\r\n//                   <label className=\"text-sm font-medium text-gray-500\">Date</label>\r\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.date}</p>\r\n//                 </div>\r\n//                 <div>\r\n//                   <label className=\"text-sm font-medium text-gray-500\">Reference</label>\r\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.reference}</p>\r\n//                 </div>\r\n//                 <div>\r\n//                   <label className=\"text-sm font-medium text-gray-500\">Description</label>\r\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.description}</p>\r\n//                 </div>\r\n//                 <div>\r\n//                   <label className=\"text-sm font-medium text-gray-500\">Source</label>\r\n//                   <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                     selectedEntry.source === 'POS Sales' ? 'bg-green-100 text-green-800' : 'bg-orange-100 text-orange-800'\r\n//                   }`}>\r\n//                     {selectedEntry.source}\r\n//                   </span>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Entry Lines */}\r\n//               <div className=\"mb-6\">\r\n//                 <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Account Entries</h4>\r\n//                 <div className=\"overflow-x-auto\">\r\n//                   <table className=\"w-full border border-gray-200 rounded\">\r\n//                     <thead className=\"bg-gray-50\">\r\n//                       <tr>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Account</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Description</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Debit</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Credit</th>\r\n//                       </tr>\r\n//                     </thead>\r\n//                     <tbody className=\"divide-y divide-gray-200\">\r\n//                       {selectedEntry.entries.map((entryLine, index) => (\r\n//                         <tr key={index}>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900\">\r\n//                             {getAccountName(entryLine.accountId)}\r\n//                           </td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-600\">\r\n//                             {entryLine.description}\r\n//                           </td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">\r\n//                             {entryLine.debit > 0 ? `${entryLine.debit.toFixed(2)}` : '-'}\r\n//                           </td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">\r\n//                             {entryLine.credit > 0 ? `${entryLine.credit.toFixed(2)}` : '-'}\r\n//                           </td>\r\n//                         </tr>\r\n//                       ))}\r\n//                     </tbody>\r\n//                     <tfoot className=\"bg-gray-50\">\r\n//                       <tr>\r\n//                         <td colSpan=\"2\" className=\"px-4 py-2 text-sm font-medium text-gray-900\">\r\n//                           Totals:\r\n//                         </td>\r\n//                         <td className=\"px-4 py-2 text-sm font-bold text-gray-900 text-right\">\r\n//                           PKR {selectedEntry.totalDebit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n//                         </td>\r\n//                         <td className=\"px-4 py-2 text-sm font-bold text-gray-900 text-right\">\r\n//                           PKR {selectedEntry.totalCredit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n//                         </td>\r\n//                       </tr>\r\n//                     </tfoot>\r\n//                   </table>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Original Order Info (if available) */}\r\n//               {selectedEntry.originalOrder && (\r\n//                 <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\r\n//                   <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Original Sales Order Details</h4>\r\n//                   <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\r\n//                     <div>\r\n//                       <span className=\"font-medium text-gray-500\">Order ID:</span>\r\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.orderId}</p>\r\n//                     </div>\r\n//                     <div>\r\n//                       <span className=\"font-medium text-gray-500\">Status:</span>\r\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.status}</p>\r\n//                     </div>\r\n//                     <div>\r\n//                       <span className=\"font-medium text-gray-500\">Payment Status:</span>\r\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.paid ? 'Paid' : 'Unpaid'}</p>\r\n//                     </div>\r\n//                     <div>\r\n//                       <span className=\"font-medium text-gray-500\">Fulfilled:</span>\r\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.fulfilled ? 'Yes' : 'No'}</p>\r\n//                     </div>\r\n//                   </div>\r\n                  \r\n//                   {/* Line Items */}\r\n//                   <div className=\"mt-4\">\r\n//                     <span className=\"font-medium text-gray-500\">Line Items:</span>\r\n//                     <div className=\"mt-2 space-y-2\">\r\n//                       {selectedEntry.originalOrder.lineItems.map((item, index) => (\r\n//                         <div key={index} className=\"text-sm bg-white p-2 rounded border\">\r\n//                           <span className=\"font-medium\">{item.productName}</span> - \r\n//                           Qty: {item.quantity}, Price: PKR {parseFloat(item.price).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}, \r\n//                           Total: PKR {parseFloat(item.total).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n//                           {item.taxAmount > 0 && <span className=\"text-gray-500\"> (Tax: PKR {parseFloat(item.taxAmount).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})})</span>}\r\n//                         </div>\r\n//                       ))}\r\n//                     </div>\r\n//                   </div>\r\n//                 </div>\r\n//               )}\r\n\r\n//               {/* Entry Metadata */}\r\n//               <div className=\"text-xs text-gray-500\">\r\n//                 <p>Created: {new Date(selectedEntry.createdAt).toLocaleString()}</p>\r\n//                 <p>Status: {selectedEntry.status}</p>\r\n//                 <p>Type: {selectedEntry.transactionType}</p>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Trial Balance Modal */}\r\n//       {showTrialBalance && (\r\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-lg max-w-5xl w-full max-h-[90vh] overflow-y-auto\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\r\n//                   Trial Balance - As of {new Date().toLocaleDateString()}\r\n//                 </h3>\r\n//                 <div className=\"flex items-center space-x-2\">\r\n//                   <button\r\n//                     onClick={() => {\r\n//                       // Export functionality would go here\r\n//                       alert('Export functionality would be implemented here');\r\n//                     }}\r\n//                     className=\"px-3 py-1 bg-emerald-600 text-white rounded text-sm hover:bg-emerald-700 flex items-center space-x-1\"\r\n//                   >\r\n//                     <Download size={14} />\r\n//                     <span>Export</span>\r\n//                   </button>\r\n//                   <button\r\n//                     onClick={() => setShowTrialBalance(false)}\r\n//                     className=\"text-gray-400 hover:text-gray-600\"\r\n//                   >\r\n//                     <X size={20} />\r\n//                   </button>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <div className=\"px-6 py-4\">\r\n//               <div className=\"overflow-x-auto\">\r\n//                 <table className=\"w-full\">\r\n//                   <thead className=\"bg-gray-50\">\r\n//                     <tr>\r\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Account Code\r\n//                       </th>\r\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Account Name\r\n//                       </th>\r\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Type\r\n//                       </th>\r\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Debit Total\r\n//                       </th>\r\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Credit Total\r\n//                       </th>\r\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Balance\r\n//                       </th>\r\n//                     </tr>\r\n//                   </thead>\r\n//                   <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//                     {trialBalance.map((account) => (\r\n//                       <tr key={account.accountId}>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n//                           {account.accountCode}\r\n//                         </td>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                           {account.accountName}\r\n//                         </td>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap\">\r\n//                           <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                             account.accountType === 'assets' ? 'bg-green-100 text-green-800' :\r\n//                             account.accountType === 'liabilities' ? 'bg-red-100 text-red-800' :\r\n//                             account.accountType === 'equity' ? 'bg-blue-100 text-blue-800' :\r\n//                             account.accountType === 'revenue' ? 'bg-purple-100 text-purple-800' :\r\n//                             'bg-orange-100 text-orange-800'\r\n//                           }`}>\r\n//                             {account.accountType}\r\n//                           </span>\r\n//                         </td>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\r\n//                           PKR {account.debit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n//                         </td>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\r\n//                           PKR {account.credit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n//                         </td>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-right\">\r\n//                           <span className={account.balance >= 0 ? 'text-green-600' : 'text-red-600'}>\r\n//                             PKR {Math.abs(account.balance).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n//                             {account.balance < 0 && ' (CR)'}\r\n//                           </span>\r\n//                         </td>\r\n//                       </tr>\r\n//                     ))}\r\n//                   </tbody>\r\n//                   <tfoot className=\"bg-gray-50\">\r\n//                     <tr>\r\n//                       <td colSpan=\"3\" className=\"px-4 py-3 text-sm font-bold text-gray-900\">\r\n//                         TOTALS:\r\n//                       </td>\r\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\r\n//                         PKR {trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n//                       </td>\r\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\r\n//                         PKR {trialBalance.reduce((sum, acc) => sum + acc.credit, 0).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n//                       </td>\r\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\r\n//                         PKR {Math.abs(trialBalance.reduce((sum, acc) => sum + acc.balance, 0)).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n//                       </td>\r\n//                     </tr>\r\n//                   </tfoot>\r\n//                 </table>\r\n//               </div>\r\n              \r\n//               {/* Trial Balance Validation */}\r\n//               <div className=\"mt-4 p-4 bg-green-50 border border-green-200 rounded-lg\">\r\n//                 <div className=\"flex items-center\">\r\n//                   <CheckCircle className=\"text-green-600 mr-2\" size={20} />\r\n//                   <div>\r\n//                     <h4 className=\"font-medium text-green-800\">Trial Balance is Balanced</h4>\r\n//                     <p className=\"text-sm text-green-700\">\r\n//                       Total Debits = Total Credits = PKR {trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n//                     </p>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Integration Status */}\r\n//       <div className=\"mt-8 grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n//         <div className=\"p-4 bg-green-50 border border-green-200 rounded-lg\">\r\n//           <div className=\"flex items-center mb-2\">\r\n//             <CheckCircle className=\"text-green-600 mr-2\" size={16} />\r\n//             <h4 className=\"font-medium text-green-800\">POS API Integration</h4>\r\n//           </div>\r\n//           <p className=\"text-sm text-green-700\">\r\n//             Sales orders automatically create journal entries from live API data\r\n//           </p>\r\n//         </div>\r\n\r\n//         <div className=\"p-4 bg-blue-50 border border-blue-200 rounded-lg\">\r\n//           <div className=\"flex items-center mb-2\">\r\n//             <RefreshCw className=\"text-blue-600 mr-2\" size={16} />\r\n//             <h4 className=\"font-medium text-blue-800\">Real-time Sync</h4>\r\n//           </div>\r\n//           <p className=\"text-sm text-blue-700\">\r\n//             Journal entries updated automatically with each sales transaction\r\n//           </p>\r\n//         </div>\r\n\r\n//         <div className=\"p-4 bg-orange-50 border border-orange-200 rounded-lg\">\r\n//           <div className=\"flex items-center mb-2\">\r\n//             <FileText className=\"text-orange-600 mr-2\" size={16} />\r\n//             <h4 className=\"font-medium text-orange-800\">Manual Entries</h4>\r\n//           </div>\r\n//           <p className=\"text-sm text-orange-700\">\r\n//             Add adjustments and corrections with full double-entry validation\r\n//           </p>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default GeneralLedger;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { \r\n//   Book, \r\n//   Plus, \r\n//   Filter, \r\n//   Search, \r\n//   Calendar, \r\n//   FileText, \r\n//   Edit, \r\n//   Trash2, \r\n//   Save, \r\n//   X, \r\n//   AlertCircle,\r\n//   CheckCircle,\r\n//   DollarSign,\r\n//   TrendingUp,\r\n//   Eye,\r\n//   Download,\r\n//   RefreshCw\r\n// } from 'lucide-react';\r\n\r\n// const GeneralLedger = () => {\r\n//   const [journalEntries, setJournalEntries] = useState([]);\r\n//   const [accounts, setAccounts] = useState([]);\r\n//   const [filteredEntries, setFilteredEntries] = useState([]);\r\n//   const [selectedEntry, setSelectedEntry] = useState(null);\r\n//   const [isAddingEntry, setIsAddingEntry] = useState(false);\r\n//   const [loading, setLoading] = useState(false);\r\n//   // Add missing state variables for accounts loading state\r\n//   const [accountsLoading, setAccountsLoading] = useState(false);\r\n//   const [accountsError, setAccountsError] = useState(null);\r\n//   const [filters, setFilters] = useState({\r\n//     dateFrom: '',\r\n//     dateTo: '',\r\n//     accountId: '',\r\n//     transactionType: 'all',\r\n//     searchTerm: ''\r\n//   });\r\n//   const [trialBalance, setTrialBalance] = useState([]);\r\n//   const [showTrialBalance, setShowTrialBalance] = useState(false);\r\n//   const [newEntry, setNewEntry] = useState({\r\n//     date: new Date().toISOString().split('T')[0],\r\n//     description: '',\r\n//     reference: '',\r\n//     entries: [\r\n//       { accountId: '', debit: 0, credit: 0, description: '' },\r\n//       { accountId: '', debit: 0, credit: 0, description: '' }\r\n//     ]\r\n//   });\r\n\r\n//   // Chart of Accounts - we'll replace this with API data\r\n//   const chartOfAccounts = [\r\n//     { id: '1111', code: '1111', name: 'Petty Cash', type: 'assets' },\r\n//     { id: '1112', code: '1112', name: 'Bank - Main Account', type: 'assets' },\r\n//     { id: '1120', code: '1120', name: 'Accounts Receivable', type: 'assets' },\r\n//     { id: '1130', code: '1130', name: 'Inventory', type: 'assets' },\r\n//     { id: '2110', code: '2110', name: 'Accounts Payable', type: 'liabilities' },\r\n//     { id: '2130', code: '2130', name: 'Sales Tax Payable', type: 'liabilities' },\r\n//     { id: '4100', code: '4100', name: 'Sales Revenue', type: 'revenue' },\r\n//     { id: '4110', code: '4110', name: 'Electronics Sales', type: 'revenue' },\r\n//     { id: '5100', code: '5100', name: 'Cost of Goods Sold', type: 'expenses' },\r\n//     { id: '5200', code: '5200', name: 'Purchase Expenses', type: 'expenses' }\r\n//   ];\r\n\r\n//   // API Configuration - This is already correct\r\n//   const API_BASE_URL = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/orders?start=0&size=200';\r\n//   const API_BASE_URL_CHARTS_OF_ACCOUNTS = 'http://localhost:8080/api/accounts';\r\n\r\n//   useEffect(() => {\r\n//     loadChartsOfAccounts();\r\n//     loadJournalEntriesFromAPI();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     filterEntries();\r\n//   }, [journalEntries, filters]);\r\n\r\n//   // Fetch Charts of Accounts from API\r\n//   const loadChartsOfAccounts = async () => {\r\n//     setAccountsLoading(true);\r\n//     setAccountsError(null);\r\n    \r\n//     try {\r\n//       const response = await fetch(API_BASE_URL_CHARTS_OF_ACCOUNTS, {\r\n//         method: 'GET',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//       });\r\n      \r\n//       if (!response.ok) {\r\n//         throw new Error(`Failed to fetch accounts: ${response.status}`);\r\n//       }\r\n      \r\n//       const data = await response.json();\r\n      \r\n//       // Transform the data to match our accounts structure\r\n//       // Assuming the API returns records similar to the paste-2.txt format\r\n//       const formattedAccounts = data.map(account => ({\r\n//         id: account.id || account.code,\r\n//         code: account.code,\r\n//         name: account.name,\r\n//         type: account.type || 'other',\r\n//         category: account.category || account.group,\r\n//         description: account.description || ''\r\n//       }));\r\n      \r\n//       setAccounts(formattedAccounts);\r\n//       console.log('Loaded charts of accounts:', formattedAccounts.length);\r\n//     } catch (error) {\r\n//       console.error('Error loading charts of accounts:', error);\r\n//       setAccountsError(error.message);\r\n      \r\n//       // Fallback to basic chart of accounts if API fails\r\n//       const fallbackAccounts = [\r\n//         { id: '1111', code: '1111', name: 'Petty Cash', type: 'assets' },\r\n//         { id: '1112', code: '1112', name: 'Bank - Main Account', type: 'assets' },\r\n//         { id: '1120', code: '1120', name: 'Accounts Receivable', type: 'assets' },\r\n//         { id: '1130', code: '1130', name: 'Inventory', type: 'assets' },\r\n//         { id: '2110', code: '2110', name: 'Accounts Payable', type: 'liabilities' },\r\n//         { id: '2130', code: '2130', name: 'Sales Tax Payable', type: 'liabilities' },\r\n//         { id: '4100', code: '4100', name: 'Sales Revenue', type: 'revenue' },\r\n//         { id: '4110', code: '4110', name: 'Electronics Sales', type: 'revenue' },\r\n//         { id: '5100', code: '5100', name: 'Cost of Goods Sold', type: 'expenses' },\r\n//         { id: '5200', code: '5200', name: 'Purchase Expenses', type: 'expenses' }\r\n//       ];\r\n      \r\n//       setAccounts(fallbackAccounts);\r\n//       console.log('Using fallback chart of accounts');\r\n//     } finally {\r\n//       setAccountsLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   async function fetchOrderData() {\r\n//     try {\r\n//       const response = await fetch(API_BASE_URL, {\r\n//         method: 'GET',\r\n//         headers: {\r\n//           'Authorization': 'Bearer Hamid',\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//       });\r\n      \r\n//       if (!response.ok) {\r\n//         throw new Error(`API request failed with status ${response.status}`);\r\n//       }\r\n      \r\n//       const data = await response.json();\r\n//       return data;\r\n//     } catch (error) {\r\n//       console.error('Error fetching order data:', error);\r\n//       // Implement notification system for integration errors\r\n//       return null;\r\n//     }\r\n//   }\r\n\r\n//   // Fetch Sales Orders from API and convert to Journal Entries\r\n//   const loadJournalEntriesFromAPI = async () => {\r\n//     setLoading(true);\r\n//     try {\r\n//       // FIXED: Using the correct API_BASE_URL directly instead of appending \"/orders?start=0&size=200\"\r\n//       const salesOrders = await fetchOrderData();\r\n      \r\n//       if (!salesOrders) {\r\n//         throw new Error('Failed to fetch sales orders');\r\n//       }\r\n      \r\n//       // Filter only PAID and FULFILLED orders\r\n//       const completedOrders = salesOrders.filter(order => \r\n//         order.paid === true && order.fulfilled === true && order.status === 'Closed'\r\n//       );\r\n      \r\n//       // Convert completed sales orders to journal entries\r\n//       const journalEntriesFromSales = completedOrders.map(order => convertSalesOrderToJournalEntry(order))\r\n//         .filter(entry => entry !== null); // Filter out any null entries\r\n      \r\n//       // Load any manual journal entries from localStorage\r\n//       const manualEntries = JSON.parse(localStorage.getItem('manualJournalEntries') || '[]');\r\n      \r\n//       // Combine both types of entries\r\n//       const allEntries = [...journalEntriesFromSales, ...manualEntries];\r\n      \r\n//       setJournalEntries(allEntries);\r\n//       console.log('Loaded completed orders:', completedOrders.length, 'Total journal entries:', allEntries.length);\r\n//     } catch (error) {\r\n//       console.error('Error loading sales orders:', error);\r\n//       // Fallback to sample data if API fails\r\n//       loadSampleJournalEntries();\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   // Convert Sales Order to Journal Entry\r\n//   const convertSalesOrderToJournalEntry = (order) => {\r\n//     const entries = [];\r\n    \r\n//     // Use actual values from API (amounts are in PKR, not USD)\r\n//     const subTotal = parseFloat(order.subTotal) || 0;\r\n//     const taxAmount = parseFloat(order.taxAmount) || 0;\r\n//     const total = parseFloat(order.total) || 0;\r\n    \r\n//     // Only process PAID and FULFILLED orders\r\n//     if (!order.paid || !order.fulfilled || order.status !== 'Closed') {\r\n//       return null; // Skip incomplete orders\r\n//     }\r\n    \r\n//     // Cash/Bank Account (Debit) - Total amount received\r\n//     entries.push({\r\n//       accountId: '1111', // Petty Cash (assume cash payment)\r\n//       accountName: 'Petty Cash',\r\n//       debit: total,\r\n//       credit: 0,\r\n//       description: `Cash received from Order #${order.orderId} - ${order.lineItems.map(item => item.productName).join(', ')}`\r\n//     });\r\n\r\n//     // Sales Revenue (Credit) - Subtotal\r\n//     if (subTotal > 0) {\r\n//       entries.push({\r\n//         accountId: '4110', // Electronics Sales\r\n//         accountName: 'Electronics Sales',\r\n//         debit: 0,\r\n//         credit: subTotal,\r\n//         description: `Revenue from Order #${order.orderId}`\r\n//       });\r\n//     }\r\n\r\n//     // Sales Tax Payable (Credit) - Tax amount\r\n//     if (taxAmount > 0) {\r\n//       entries.push({\r\n//         accountId: '2130',\r\n//         accountName: 'Sales Tax Payable',\r\n//         debit: 0,\r\n//         credit: taxAmount,\r\n//         description: `${order.taxRate}% tax collected on Order #${order.orderId}`\r\n//       });\r\n//     }\r\n\r\n//     // Cost of Goods Sold and Inventory reduction (only for fulfilled items)\r\n//     let totalCOGS = 0;\r\n//     order.lineItems.forEach(item => {\r\n//       if (item.fulfilled && item.status === 'Fulfilled') {\r\n//         const costPrice = parseFloat(item.costPrice) || 0;\r\n//         const quantity = parseFloat(item.quantity) || 0;\r\n//         const itemCOGS = costPrice * quantity;\r\n//         totalCOGS += itemCOGS;\r\n//       }\r\n//     });\r\n\r\n//     if (totalCOGS > 0) {\r\n//       // Cost of Goods Sold (Debit)\r\n//       entries.push({\r\n//         accountId: '5100',\r\n//         accountName: 'Cost of Goods Sold',\r\n//         debit: totalCOGS,\r\n//         credit: 0,\r\n//         description: `COGS for Order #${order.orderId}`\r\n//       });\r\n\r\n//       // Inventory (Credit)\r\n//       entries.push({\r\n//         accountId: '1130',\r\n//         accountName: 'Inventory',\r\n//         debit: 0,\r\n//         credit: totalCOGS,\r\n//         description: `Inventory reduction - Order #${order.orderId}`\r\n//       });\r\n//     }\r\n\r\n//     // Calculate totals\r\n//     const totalDebit = entries.reduce((sum, entry) => sum + entry.debit, 0);\r\n//     const totalCredit = entries.reduce((sum, entry) => sum + entry.credit, 0);\r\n\r\n//     return {\r\n//       id: `JE-ORDER-${order.orderId}`,\r\n//       date: formatDateFromCreatedAt(order.createdAt),\r\n//       description: `Sales Order #${order.orderId} - ${order.lineItems.map(item => `${item.productName} (${item.quantity})`).join(', ')}`,\r\n//       reference: `ORDER-${order.orderId}`,\r\n//       transactionType: 'automatic',\r\n//       source: 'POS Sales',\r\n//       status: 'posted',\r\n//       entries: entries,\r\n//       totalDebit: Math.round(totalDebit * 100) / 100,\r\n//       totalCredit: Math.round(totalCredit * 100) / 100,\r\n//       createdAt: order.createdAt,\r\n//       originalOrder: order // Keep reference to original order\r\n//     };\r\n//   };\r\n\r\n//   // Format date from API format (2025.08.18.10.08.54.569) to YYYY-MM-DD\r\n//   const formatDateFromCreatedAt = (createdAt) => {\r\n//     try {\r\n//       const parts = createdAt.split('.');\r\n//       if (parts.length >= 3) {\r\n//         return `${parts[0]}-${parts[1].padStart(2, '0')}-${parts[2].padStart(2, '0')}`;\r\n//       }\r\n//       return new Date().toISOString().split('T')[0];\r\n//     } catch (error) {\r\n//       return new Date().toISOString().split('T')[0];\r\n//     }\r\n//   };\r\n\r\n//   // Fallback sample data\r\n//   const loadSampleJournalEntries = () => {\r\n//     const sampleEntries = [\r\n//       {\r\n//         id: 'JE001',\r\n//         date: '2025-08-18',\r\n//         description: 'Sample POS Sale - Medical products',\r\n//         reference: 'POS001',\r\n//         transactionType: 'automatic',\r\n//         source: 'POS',\r\n//         status: 'posted',\r\n//         entries: [\r\n//           { accountId: '1111', accountName: 'Petty Cash', debit: 60.50, credit: 0, description: 'Cash received from customer' },\r\n//           { accountId: '4100', accountName: 'Sales Revenue', debit: 0, credit: 55.00, description: 'Revenue from medical products' },\r\n//           { accountId: '2130', accountName: 'Sales Tax Payable', debit: 0, credit: 5.50, description: 'Sales tax collected' }\r\n//         ],\r\n//         totalDebit: 60.50,\r\n//         totalCredit: 60.50,\r\n//         createdAt: '2025-08-18T10:30:00Z'\r\n//       }\r\n//     ];\r\n//     setJournalEntries(sampleEntries);\r\n//   };\r\n\r\n//   const filterEntries = () => {\r\n//     let filtered = [...journalEntries];\r\n\r\n//     if (filters.dateFrom) {\r\n//       filtered = filtered.filter(entry => entry.date >= filters.dateFrom);\r\n//     }\r\n//     if (filters.dateTo) {\r\n//       filtered = filtered.filter(entry => entry.date <= filters.dateTo);\r\n//     }\r\n//     if (filters.accountId) {\r\n//       filtered = filtered.filter(entry => \r\n//         entry.entries.some(e => e.accountId === filters.accountId)\r\n//       );\r\n//     }\r\n//     if (filters.transactionType !== 'all') {\r\n//       filtered = filtered.filter(entry => entry.transactionType === filters.transactionType);\r\n//     }\r\n//     if (filters.searchTerm) {\r\n//       const term = filters.searchTerm.toLowerCase();\r\n//       filtered = filtered.filter(entry => \r\n//         entry.description.toLowerCase().includes(term) ||\r\n//         entry.reference.toLowerCase().includes(term) ||\r\n//         entry.entries.some(e => e.description.toLowerCase().includes(term))\r\n//       );\r\n//     }\r\n\r\n//     setFilteredEntries(filtered);\r\n//   };\r\n\r\n//   const generateTrialBalance = () => {\r\n//     const balances = {};\r\n//       console.log('accounts:',accounts)\r\n//     // Initialize all accounts\r\n//     accounts.forEach(account => {\r\n//       // Only include account types, not headers or groups\r\n//       if (account.category !== 'header' && account.category !== 'group') {\r\n//         balances[account.id] = {\r\n//           accountId: account.id,\r\n//           accountCode: account.code,\r\n//           accountName: account.name,\r\n//           accountType: account.type,\r\n//           debit: 0,\r\n//           credit: 0,\r\n//           balance: 0\r\n//         };\r\n//       }\r\n//     });\r\n\r\n//     // Calculate balances from journal entries\r\n//     journalEntries.forEach(entry => {\r\n//       if (entry.status === 'posted') {\r\n//         entry.entries.forEach(entryLine => {\r\n//           if (balances[entryLine.accountId]) {\r\n//             balances[entryLine.accountId].debit += entryLine.debit;\r\n//             balances[entryLine.accountId].credit += entryLine.credit;\r\n//           }\r\n//         });\r\n//       }\r\n//     });\r\n\r\n//     // Calculate net balances\r\n//     Object.values(balances).forEach(account => {\r\n//       if (account.accountType === 'assets' || account.accountType === 'expenses') {\r\n//         account.balance = account.debit - account.credit;\r\n//       } else {\r\n//         account.balance = account.credit - account.debit;\r\n//       }\r\n//     });\r\n\r\n//     const trialBalanceData = Object.values(balances)\r\n//       .filter(account => account.debit !== 0 || account.credit !== 0)\r\n//       .sort((a, b) => a.accountCode.localeCompare(b.accountCode));\r\n\r\n//     setTrialBalance(trialBalanceData);\r\n//     setShowTrialBalance(true);\r\n//   };\r\n\r\n//   const addEntryLine = () => {\r\n//     setNewEntry({\r\n//       ...newEntry,\r\n//       entries: [...newEntry.entries, { accountId: '', debit: 0, credit: 0, description: '' }]\r\n//     });\r\n//   };\r\n\r\n//   const removeEntryLine = (index) => {\r\n//     if (newEntry.entries.length > 2) {\r\n//       const updatedEntries = newEntry.entries.filter((_, i) => i !== index);\r\n//       setNewEntry({ ...newEntry, entries: updatedEntries });\r\n//     }\r\n//   };\r\n\r\n//   const updateEntryLine = (index, field, value) => {\r\n//     const updatedEntries = [...newEntry.entries];\r\n//     updatedEntries[index] = { ...updatedEntries[index], [field]: value };\r\n//     setNewEntry({ ...newEntry, entries: updatedEntries });\r\n//   };\r\n\r\n//   const calculateTotals = (entries) => {\r\n//     const totalDebit = entries.reduce((sum, entry) => sum + (parseFloat(entry.debit) || 0), 0);\r\n//     const totalCredit = entries.reduce((sum, entry) => sum + (parseFloat(entry.credit) || 0), 0);\r\n//     return { totalDebit, totalCredit };\r\n//   };\r\n\r\n//   const isBalanced = (entries) => {\r\n//     const { totalDebit, totalCredit } = calculateTotals(entries);\r\n//     return Math.abs(totalDebit - totalCredit) < 0.01;\r\n//   };\r\n\r\n//   const saveJournalEntry = () => {\r\n//     if (!newEntry.description || !newEntry.entries.every(e => e.accountId)) {\r\n//       alert('Please fill in all required fields');\r\n//       return;\r\n//     }\r\n\r\n//     if (!isBalanced(newEntry.entries)) {\r\n//       alert('Journal entry must be balanced - total debits must equal total credits');\r\n//       return;\r\n//     }\r\n\r\n//     const { totalDebit, totalCredit } = calculateTotals(newEntry.entries);\r\n    \r\n//     // Add account names to entries\r\n//     const entriesWithNames = newEntry.entries.map(entry => ({\r\n//       ...entry,\r\n//       accountName: accounts.find(acc => acc.id === entry.accountId)?.name || '',\r\n//       debit: parseFloat(entry.debit) || 0,\r\n//       credit: parseFloat(entry.credit) || 0\r\n//     }));\r\n\r\n//     const journalEntry = {\r\n//       id: `JE-MANUAL-${Date.now()}`,\r\n//       date: newEntry.date,\r\n//       description: newEntry.description,\r\n//       reference: newEntry.reference || `MAN${Date.now()}`,\r\n//       transactionType: 'manual',\r\n//       source: 'Manual',\r\n//       status: 'posted',\r\n//       entries: entriesWithNames,\r\n//       totalDebit,\r\n//       totalCredit,\r\n//       createdAt: new Date().toISOString()\r\n//     };\r\n\r\n//     // Save manual entries to localStorage\r\n//     const existingManualEntries = JSON.parse(localStorage.getItem('manualJournalEntries') || '[]');\r\n//     const updatedManualEntries = [...existingManualEntries, journalEntry];\r\n//     localStorage.setItem('manualJournalEntries', JSON.stringify(updatedManualEntries));\r\n\r\n//     // Update state\r\n//     setJournalEntries([...journalEntries, journalEntry]);\r\n    \r\n//     // Reset form\r\n//     setNewEntry({\r\n//       date: new Date().toISOString().split('T')[0],\r\n//       description: '',\r\n//       reference: '',\r\n//       entries: [\r\n//         { accountId: '', debit: 0, credit: 0, description: '' },\r\n//         { accountId: '', debit: 0, credit: 0, description: '' }\r\n//       ]\r\n//     });\r\n//     setIsAddingEntry(false);\r\n//   };\r\n\r\n//   const getAccountName = (accountId) => {\r\n//     const account = accounts.find(acc => acc.id === accountId);\r\n//     return account ? `${account.code} - ${account.name}` : '';\r\n//   };\r\n\r\n//   const { totalDebit, totalCredit } = calculateTotals(newEntry.entries);\r\n//   const entryIsBalanced = isBalanced(newEntry.entries);\r\n\r\n//   return (\r\n//     <div className=\"max-w-7xl mx-auto p-6 bg-white\">\r\n//       {/* Header */}\r\n//       <div className=\"mb-8\">\r\n//         <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\r\n//           <Book className=\"mr-3 text-emerald-600\" />\r\n//           General Ledger\r\n//         </h1>\r\n//         <p className=\"text-gray-600\">Real-time transaction recording and journal entry management</p>\r\n        \r\n//         {/* Show loading or error messages for accounts */}\r\n//         {accountsLoading && (\r\n//           <div className=\"mt-2 p-2 bg-blue-50 text-blue-700 rounded-md text-sm flex items-center\">\r\n//             <RefreshCw className=\"animate-spin mr-2\" size={16} />\r\n//             Loading chart of accounts...\r\n//           </div>\r\n//         )}\r\n        \r\n//         {accountsError && (\r\n//           <div className=\"mt-2 p-2 bg-red-50 text-red-700 rounded-md text-sm flex items-center\">\r\n//             <AlertCircle className=\"mr-2\" size={16} />\r\n//             Error loading accounts: {accountsError}\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n\r\n//       {/* Quick Stats */}\r\n//       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\r\n//         <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-blue-600 text-sm font-medium\">Total Entries</p>\r\n//               <p className=\"text-2xl font-bold text-blue-900\">{journalEntries.length}</p>\r\n//             </div>\r\n//             <FileText className=\"text-blue-600\" size={24} />\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"bg-green-50 p-4 rounded-lg border border-green-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-green-600 text-sm font-medium\">POS Entries</p>\r\n//               <p className=\"text-2xl font-bold text-green-900\">\r\n//                 {journalEntries.filter(e => e.source === 'POS Sales').length}\r\n//               </p>\r\n//             </div>\r\n//             <TrendingUp className=\"text-green-600\" size={24} />\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"bg-orange-50 p-4 rounded-lg border border-orange-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-orange-600 text-sm font-medium\">Manual Entries</p>\r\n//               <p className=\"text-2xl font-bold text-orange-900\">\r\n//                 {journalEntries.filter(e => e.transactionType === 'manual').length}\r\n//               </p>\r\n//             </div>\r\n//             <Edit className=\"text-orange-600\" size={24} />\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"bg-purple-50 p-4 rounded-lg border border-purple-200\">\r\n//           <div className=\"flex items-center justify-between\">\r\n//             <div>\r\n//               <p className=\"text-purple-600 text-sm font-medium\">Total Value</p>\r\n//               <p className=\"text-2xl font-bold text-purple-900\">\r\n//                 PKR {journalEntries.reduce((sum, entry) => sum + entry.totalDebit, 0).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n//               </p>\r\n//             </div>\r\n//             <DollarSign className=\"text-purple-600\" size={24} />\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Controls */}\r\n//       <div className=\"flex flex-wrap items-center justify-between gap-4 mb-6\">\r\n//         <div className=\"flex flex-wrap items-center gap-4\">\r\n//           {/* Date Filters */}\r\n//           <div className=\"flex items-center space-x-2\">\r\n//             <Calendar size={16} className=\"text-gray-400\" />\r\n//             <input\r\n//               type=\"date\"\r\n//               value={filters.dateFrom}\r\n//               onChange={(e) => setFilters({ ...filters, dateFrom: e.target.value })}\r\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               placeholder=\"From\"\r\n//             />\r\n//             <span className=\"text-gray-500\">to</span>\r\n//             <input\r\n//               type=\"date\"\r\n//               value={filters.dateTo}\r\n//               onChange={(e) => setFilters({ ...filters, dateTo: e.target.value })}\r\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               placeholder=\"To\"\r\n//             />\r\n//           </div>\r\n\r\n//           {/* Account Filter */}\r\n//           <div className=\"relative\">\r\n//             <Filter className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n//             <select\r\n//               value={filters.accountId}\r\n//               onChange={(e) => setFilters({ ...filters, accountId: e.target.value })}\r\n//               className=\"pl-10 pr-8 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//             >\r\n//               <option value=\"\">All Accounts</option>\r\n//               {/* Group accounts by type for better organization */}\r\n//               {['assets', 'liabilities', 'equity', 'revenue', 'expenses'].map(type => {\r\n//                 const accountsOfType = accounts.filter(acc => \r\n//                   acc.type === type && acc.category !== 'header' && acc.category !== 'group'\r\n//                 );\r\n                \r\n//                 if (accountsOfType.length === 0) return null;\r\n                \r\n//                 return (\r\n//                   <optgroup key={type} label={type.charAt(0).toUpperCase() + type.slice(1)}>\r\n//                     {accountsOfType.map(account => (\r\n//                       <option key={account.id} value={account.id}>\r\n//                         {account.code} - {account.name}\r\n//                       </option>\r\n//                     ))}\r\n//                   </optgroup>\r\n//                 );\r\n//               })}\r\n//             </select>\r\n//           </div>\r\n\r\n//           {/* Transaction Type Filter */}\r\n//           <select\r\n//             value={filters.transactionType}\r\n//             onChange={(e) => setFilters({ ...filters, transactionType: e.target.value })}\r\n//             className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//           >\r\n//             <option value=\"all\">All Types</option>\r\n//             <option value=\"automatic\">POS Sales</option>\r\n//             <option value=\"manual\">Manual</option>\r\n//           </select>\r\n\r\n//           {/* Search */}\r\n//           <div className=\"relative\">\r\n//             <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Search entries...\"\r\n//               value={filters.searchTerm}\r\n//               onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\r\n//               className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//             />\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"flex space-x-3\">\r\n//           <button\r\n//             onClick={loadJournalEntriesFromAPI}\r\n//             disabled={loading}\r\n//             className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2 disabled:bg-gray-400\"\r\n//           >\r\n//             {loading ? <RefreshCw className=\"animate-spin\" size={16} /> : <RefreshCw size={16} />}\r\n//             <span>Refresh from API</span>\r\n//           </button>\r\n//           <button\r\n//             onClick={loadChartsOfAccounts}\r\n//             disabled={accountsLoading}\r\n//             className=\"px-4 py-2 bg-teal-600 text-white rounded-lg hover:bg-teal-700 flex items-center space-x-2 disabled:bg-gray-400\"\r\n//           >\r\n//             {accountsLoading ? <RefreshCw className=\"animate-spin\" size={16} /> : <RefreshCw size={16} />}\r\n//             <span>Refresh Accounts</span>\r\n//           </button>\r\n//           <button\r\n//             onClick={() => setIsAddingEntry(true)}\r\n//             className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\r\n//           >\r\n//             <Plus size={16} />\r\n//             <span>Add Entry</span>\r\n//           </button>\r\n//           <button\r\n//             onClick={generateTrialBalance}\r\n//             className=\"px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 flex items-center space-x-2\"\r\n//           >\r\n//             <FileText size={16} />\r\n//             <span>Trial Balance</span>\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Journal Entry Form */}\r\n//       {isAddingEntry && (\r\n//         <div className=\"mb-8 p-6 bg-gray-50 rounded-lg border\">\r\n//           <h3 className=\"text-lg font-semibold mb-4\">Add Manual Journal Entry</h3>\r\n          \r\n//           <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\r\n//             <div>\r\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Date *</label>\r\n//               <input\r\n//                 type=\"date\"\r\n//                 value={newEntry.date}\r\n//                 onChange={(e) => setNewEntry({ ...newEntry, date: e.target.value })}\r\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               />\r\n//             </div>\r\n//             <div>\r\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Description *</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 value={newEntry.description}\r\n//                 onChange={(e) => setNewEntry({ ...newEntry, description: e.target.value })}\r\n//                 placeholder=\"Enter description\"\r\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               />\r\n//             </div>\r\n//             <div>\r\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">Reference</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 value={newEntry.reference}\r\n//                 onChange={(e) => setNewEntry({ ...newEntry, reference: e.target.value })}\r\n//                 placeholder=\"Reference number\"\r\n//                 className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n//               />\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* Entry Lines */}\r\n//           <div className=\"mb-4\">\r\n//             <label className=\"block text-sm font-medium text-gray-700 mb-2\">Journal Entry Lines</label>\r\n//             <div className=\"space-y-3\">\r\n//               {newEntry.entries.map((entry, index) => (\r\n//                 <div key={index} className=\"grid grid-cols-12 gap-2 items-center bg-white p-3 rounded border\">\r\n//                   <div className=\"col-span-4\">\r\n//                     <select\r\n//                       value={entry.accountId}\r\n//                       onChange={(e) => updateEntryLine(index, 'accountId', e.target.value)}\r\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                     >\r\n//                       <option value=\"\">Select Account</option>\r\n//                       {/* Group accounts by type for better organization */}\r\n//                       {['assets', 'liabilities', 'equity', 'revenue', 'expenses'].map(type => {\r\n//                         const accountsOfType = accounts.filter(acc => \r\n//                           acc.type === type && acc.category !== 'header' && acc.category !== 'group'\r\n//                         );\r\n                        \r\n//                         if (accountsOfType.length === 0) return null;\r\n                        \r\n//                         return (\r\n//                           <optgroup key={type} label={type.charAt(0).toUpperCase() + type.slice(1)}>\r\n//                             {accountsOfType.map(account => (\r\n//                               <option key={account.id} value={account.id}>\r\n//                                 {account.code} - {account.name}\r\n//                               </option>\r\n//                             ))}\r\n//                           </optgroup>\r\n//                         );\r\n//                       })}\r\n//                     </select>\r\n//                   </div>\r\n//                   <div className=\"col-span-3\">\r\n//                     <input\r\n//                       type=\"text\"\r\n//                       value={entry.description}\r\n//                       onChange={(e) => updateEntryLine(index, 'description', e.target.value)}\r\n//                       placeholder=\"Description\"\r\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                     />\r\n//                   </div>\r\n//                   <div className=\"col-span-2\">\r\n//                     <input\r\n//                       type=\"number\"\r\n//                       step=\"0.01\"\r\n//                       value={entry.debit}\r\n//                       onChange={(e) => updateEntryLine(index, 'debit', e.target.value)}\r\n//                       placeholder=\"Debit\"\r\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                     />\r\n//                   </div>\r\n//                   <div className=\"col-span-2\">\r\n//                     <input\r\n//                       type=\"number\"\r\n//                       step=\"0.01\"\r\n//                       value={entry.credit}\r\n//                       onChange={(e) => updateEntryLine(index, 'credit', e.target.value)}\r\n//                       placeholder=\"Credit\"\r\n//                       className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n//                     />\r\n//                   </div>\r\n//                   <div className=\"col-span-1\">\r\n//                     {newEntry.entries.length > 2 && (\r\n//                       <button\r\n//                         onClick={() => removeEntryLine(index)}\r\n//                         className=\"p-1 text-red-600 hover:bg-red-100 rounded\"\r\n//                       >\r\n//                         <Trash2 size={14} />\r\n//                       </button>\r\n//                     )}\r\n//                   </div>\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n\r\n//             <div className=\"flex justify-between items-center mt-3\">\r\n//               <button\r\n//                 onClick={addEntryLine}\r\n//                 className=\"px-3 py-1 text-sm bg-gray-200 text-gray-700 rounded hover:bg-gray-300 flex items-center space-x-1\"\r\n//               >\r\n//                 <Plus size={14} />\r\n//                 <span>Add Line</span>\r\n//               </button>\r\n\r\n//               <div className=\"flex items-center space-x-4\">\r\n//                 <div className=\"text-sm\">\r\n//                   <span className=\"font-medium\">Total Debit: PKR {totalDebit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}</span>\r\n//                   <span className=\"mx-2\">|</span>\r\n//                   <span className=\"font-medium\">Total Credit: PKR {totalCredit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}</span>\r\n//                 </div>\r\n//                 {entryIsBalanced ? (\r\n//                   <div className=\"flex items-center text-green-600\">\r\n//                     <CheckCircle size={16} className=\"mr-1\" />\r\n//                     <span className=\"text-sm\">Balanced</span>\r\n//                   </div>\r\n//                 ) : (\r\n//                   <div className=\"flex items-center text-red-600\">\r\n//                     <AlertCircle size={16} className=\"mr-1\" />\r\n//                     <span className=\"text-sm\">Not Balanced</span>\r\n//                   </div>\r\n//                 )}\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n\r\n//           <div className=\"flex space-x-3\">\r\n//             <button\r\n//               onClick={saveJournalEntry}\r\n//               disabled={!entryIsBalanced}\r\n//               className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 disabled:bg-gray-400 flex items-center space-x-2\"\r\n//             >\r\n//               <Save size={16} />\r\n//               <span>Save Entry</span>\r\n//             </button>\r\n//             <button\r\n//               onClick={() => setIsAddingEntry(false)}\r\n//               className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\"\r\n//             >\r\n//               <X size={16} />\r\n//               <span>Cancel</span>\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Journal Entries Table */}\r\n//       <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n//         <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//           <h2 className=\"text-lg font-semibold text-gray-900\">Journal Entries</h2>\r\n//           <p className=\"text-sm text-gray-600 mt-1\">\r\n//             Showing {filteredEntries.length} of {journalEntries.length} entries\r\n//           </p>\r\n//         </div>\r\n\r\n//         <div className=\"overflow-x-auto\">\r\n//           <table className=\"w-full\">\r\n//             <thead className=\"bg-gray-50\">\r\n//               <tr>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Entry ID\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Date\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Description\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Reference\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Source\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Amount\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Status\r\n//                 </th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                   Actions\r\n//                 </th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//               {filteredEntries.map((entry) => (\r\n//                 <tr key={entry.id} className=\"hover:bg-gray-50\">\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n//                     {entry.id}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                     {entry.date}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 text-sm text-gray-900 max-w-xs truncate\">\r\n//                     {entry.description}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                     {entry.reference}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                       entry.source === 'POS Sales' ? 'bg-green-100 text-green-800' : \r\n//                       entry.source === 'Manual' ? 'bg-orange-100 text-orange-800' :\r\n//                       'bg-blue-100 text-blue-800'\r\n//                     }`}>\r\n//                       {entry.source}\r\n//                     </span>\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                     PKR {entry.totalDebit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                     <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                       entry.status === 'posted' ? 'bg-blue-100 text-blue-800' : 'bg-yellow-100 text-yellow-800'\r\n//                     }`}>\r\n//                       {entry.status}\r\n//                     </span>\r\n//                   </td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n//                     <button\r\n//                       onClick={() => setSelectedEntry(entry)}\r\n//                       className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\r\n//                     >\r\n//                       <Eye size={16} />\r\n//                     </button>\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Entry Details Modal */}\r\n//       {selectedEntry && (\r\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\r\n//                   Journal Entry Details - {selectedEntry.id}\r\n//                 </h3>\r\n//                 <button\r\n//                   onClick={() => setSelectedEntry(null)}\r\n//                   className=\"text-gray-400 hover:text-gray-600\"\r\n//                 >\r\n//                   <X size={20} />\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <div className=\"px-6 py-4\">\r\n//               {/* Entry Header */}\r\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\r\n//                 <div>\r\n//                   <label className=\"text-sm font-medium text-gray-500\">Date</label>\r\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.date}</p>\r\n//                 </div>\r\n//                 <div>\r\n//                   <label className=\"text-sm font-medium text-gray-500\">Reference</label>\r\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.reference}</p>\r\n//                 </div>\r\n//                 <div>\r\n//                   <label className=\"text-sm font-medium text-gray-500\">Description</label>\r\n//                   <p className=\"text-sm text-gray-900\">{selectedEntry.description}</p>\r\n//                 </div>\r\n//                 <div>\r\n//                   <label className=\"text-sm font-medium text-gray-500\">Source</label>\r\n//                   <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                     selectedEntry.source === 'POS Sales' ? 'bg-green-100 text-green-800' : 'bg-orange-100 text-orange-800'\r\n//                   }`}>\r\n//                     {selectedEntry.source}\r\n//                   </span>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Entry Lines */}\r\n//               <div className=\"mb-6\">\r\n//                 <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Account Entries</h4>\r\n//                 <div className=\"overflow-x-auto\">\r\n//                   <table className=\"w-full border border-gray-200 rounded\">\r\n//                     <thead className=\"bg-gray-50\">\r\n//                       <tr>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Account</th>\r\n//                         <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Description</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Debit</th>\r\n//                         <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Credit</th>\r\n//                       </tr>\r\n//                     </thead>\r\n//                     <tbody className=\"divide-y divide-gray-200\">\r\n//                       {selectedEntry.entries.map((entryLine, index) => (\r\n//                         <tr key={index}>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900\">\r\n//                             {getAccountName(entryLine.accountId)}\r\n//                           </td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-600\">\r\n//                             {entryLine.description}\r\n//                           </td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">\r\n//                             {entryLine.debit > 0 ? `${entryLine.debit.toFixed(2)}` : '-'}\r\n//                           </td>\r\n//                           <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">\r\n//                             {entryLine.credit > 0 ? `${entryLine.credit.toFixed(2)}` : '-'}\r\n//                           </td>\r\n//                         </tr>\r\n//                       ))}\r\n//                     </tbody>\r\n//                     <tfoot className=\"bg-gray-50\">\r\n//                       <tr>\r\n//                         <td colSpan=\"2\" className=\"px-4 py-2 text-sm font-medium text-gray-900\">\r\n//                           Totals:\r\n//                         </td>\r\n//                         <td className=\"px-4 py-2 text-sm font-bold text-gray-900 text-right\">\r\n//                           PKR {selectedEntry.totalDebit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n//                         </td>\r\n//                         <td className=\"px-4 py-2 text-sm font-bold text-gray-900 text-right\">\r\n//                           PKR {selectedEntry.totalCredit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n//                         </td>\r\n//                       </tr>\r\n//                     </tfoot>\r\n//                   </table>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Original Order Info (if available) */}\r\n//               {selectedEntry.originalOrder && (\r\n//                 <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\r\n//                   <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Original Sales Order Details</h4>\r\n//                   <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\r\n//                     <div>\r\n//                       <span className=\"font-medium text-gray-500\">Order ID:</span>\r\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.orderId}</p>\r\n//                     </div>\r\n//                     <div>\r\n//                       <span className=\"font-medium text-gray-500\">Status:</span>\r\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.status}</p>\r\n//                     </div>\r\n//                     <div>\r\n//                       <span className=\"font-medium text-gray-500\">Payment Status:</span>\r\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.paid ? 'Paid' : 'Unpaid'}</p>\r\n//                     </div>\r\n//                     <div>\r\n//                       <span className=\"font-medium text-gray-500\">Fulfilled:</span>\r\n//                       <p className=\"text-gray-900\">{selectedEntry.originalOrder.fulfilled ? 'Yes' : 'No'}</p>\r\n//                     </div>\r\n//                   </div>\r\n                  \r\n//                   {/* Line Items */}\r\n//                   <div className=\"mt-4\">\r\n//                     <span className=\"font-medium text-gray-500\">Line Items:</span>\r\n//                     <div className=\"mt-2 space-y-2\">\r\n//                       {selectedEntry.originalOrder.lineItems.map((item, index) => (\r\n//                         <div key={index} className=\"text-sm bg-white p-2 rounded border\">\r\n//                           <span className=\"font-medium\">{item.productName}</span> - \r\n//                           Qty: {item.quantity}, Price: PKR {parseFloat(item.price).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}, \r\n//                           Total: PKR {parseFloat(item.total).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n//                           {item.taxAmount > 0 && <span className=\"text-gray-500\"> (Tax: PKR {parseFloat(item.taxAmount).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})})</span>}\r\n//                         </div>\r\n//                       ))}\r\n//                     </div>\r\n//                   </div>\r\n//                 </div>\r\n//               )}\r\n\r\n//               {/* Entry Metadata */}\r\n//               <div className=\"text-xs text-gray-500\">\r\n//                 <p>Created: {new Date(selectedEntry.createdAt).toLocaleString()}</p>\r\n//                 <p>Status: {selectedEntry.status}</p>\r\n//                 <p>Type: {selectedEntry.transactionType}</p>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Trial Balance Modal */}\r\n//       {showTrialBalance && (\r\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-lg max-w-5xl w-full max-h-[90vh] overflow-y-auto\">\r\n//             <div className=\"px-6 py-4 border-b border-gray-200\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\r\n//                   Trial Balance - As of {new Date().toLocaleDateString()}\r\n//                 </h3>\r\n//                 <div className=\"flex items-center space-x-2\">\r\n//                   <button\r\n//                     onClick={() => {\r\n//                       // Export functionality would go here\r\n//                       alert('Export functionality would be implemented here');\r\n//                     }}\r\n//                     className=\"px-3 py-1 bg-emerald-600 text-white rounded text-sm hover:bg-emerald-700 flex items-center space-x-1\"\r\n//                   >\r\n//                     <Download size={14} />\r\n//                     <span>Export</span>\r\n//                   </button>\r\n//                   <button\r\n//                     onClick={() => setShowTrialBalance(false)}\r\n//                     className=\"text-gray-400 hover:text-gray-600\"\r\n//                   >\r\n//                     <X size={20} />\r\n//                   </button>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <div className=\"px-6 py-4\">\r\n//               <div className=\"overflow-x-auto\">\r\n//                 <table className=\"w-full\">\r\n//                   <thead className=\"bg-gray-50\">\r\n//                     <tr>\r\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Account Code\r\n//                       </th>\r\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Account Name\r\n//                       </th>\r\n//                       <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Type\r\n//                       </th>\r\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Debit Total\r\n//                       </th>\r\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Credit Total\r\n//                       </th>\r\n//                       <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n//                         Balance\r\n//                       </th>\r\n//                     </tr>\r\n//                   </thead>\r\n//                   <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//                     {trialBalance.map((account) => (\r\n//                       <tr key={account.accountId}>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n//                           {account.accountCode}\r\n//                         </td>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n//                           {account.accountName}\r\n//                         </td>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap\">\r\n//                           <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n//                             account.accountType === 'assets' ? 'bg-green-100 text-green-800' :\r\n//                             account.accountType === 'liabilities' ? 'bg-red-100 text-red-800' :\r\n//                             account.accountType === 'equity' ? 'bg-blue-100 text-blue-800' :\r\n//                             account.accountType === 'revenue' ? 'bg-purple-100 text-purple-800' :\r\n//                             'bg-orange-100 text-orange-800'\r\n//                           }`}>\r\n//                             {account.accountType}\r\n//                           </span>\r\n//                         </td>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\r\n//                           PKR {account.debit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n//                         </td>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\r\n//                           PKR {account.credit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n//                         </td>\r\n//                         <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-right\">\r\n//                           <span className={account.balance >= 0 ? 'text-green-600' : 'text-red-600'}>\r\n//                             PKR {Math.abs(account.balance).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n//                             {account.balance < 0 && ' (CR)'}\r\n//                           </span>\r\n//                         </td>\r\n//                       </tr>\r\n//                     ))}\r\n//                   </tbody>\r\n//                   <tfoot className=\"bg-gray-50\">\r\n//                     <tr>\r\n//                       <td colSpan=\"3\" className=\"px-4 py-3 text-sm font-bold text-gray-900\">\r\n//                         TOTALS:\r\n//                       </td>\r\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\r\n//                         PKR {trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n//                       </td>\r\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\r\n//                         PKR {trialBalance.reduce((sum, acc) => sum + acc.credit, 0).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n//                       </td>\r\n//                       <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\r\n//                         PKR {Math.abs(trialBalance.reduce((sum, acc) => sum + acc.balance, 0)).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n//                       </td>\r\n//                     </tr>\r\n//                   </tfoot>\r\n//                 </table>\r\n//               </div>\r\n              \r\n//               {/* Trial Balance Validation */}\r\n//               <div className=\"mt-4 p-4 bg-green-50 border border-green-200 rounded-lg\">\r\n//                 <div className=\"flex items-center\">\r\n//                   <CheckCircle className=\"text-green-600 mr-2\" size={20} />\r\n//                   <div>\r\n//                     <h4 className=\"font-medium text-green-800\">Trial Balance is Balanced</h4>\r\n//                     <p className=\"text-sm text-green-700\">\r\n//                       Total Debits = Total Credits = PKR {trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n//                     </p>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Integration Status */}\r\n//       <div className=\"mt-8 grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n//         <div className=\"p-4 bg-green-50 border border-green-200 rounded-lg\">\r\n//           <div className=\"flex items-center mb-2\">\r\n//             <CheckCircle className=\"text-green-600 mr-2\" size={16} />\r\n//             <h4 className=\"font-medium text-green-800\">POS API Integration</h4>\r\n//           </div>\r\n//           <p className=\"text-sm text-green-700\">\r\n//             Sales orders automatically create journal entries from live API data\r\n//           </p>\r\n//         </div>\r\n\r\n//         <div className=\"p-4 bg-blue-50 border border-blue-200 rounded-lg\">\r\n//           <div className=\"flex items-center mb-2\">\r\n//             <RefreshCw className=\"text-blue-600 mr-2\" size={16} />\r\n//             <h4 className=\"font-medium text-blue-800\">Real-time Sync</h4>\r\n//           </div>\r\n//           <p className=\"text-sm text-blue-700\">\r\n//             Journal entries updated automatically with each sales transaction\r\n//           </p>\r\n//         </div>\r\n\r\n//         <div className=\"p-4 bg-orange-50 border border-orange-200 rounded-lg\">\r\n//           <div className=\"flex items-center mb-2\">\r\n//             <FileText className=\"text-orange-600 mr-2\" size={16} />\r\n//             <h4 className=\"font-medium text-orange-800\">Manual Entries</h4>\r\n//           </div>\r\n//           <p className=\"text-sm text-orange-700\">\r\n//             Add adjustments and corrections with full double-entry validation\r\n//           </p>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default GeneralLedger;\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { \r\n  Book, \r\n  Plus, \r\n  Filter, \r\n  Search, \r\n  Calendar, \r\n  FileText, \r\n  Edit, \r\n  Trash2, \r\n  Save, \r\n  X, \r\n  AlertCircle,\r\n  CheckCircle,\r\n  DollarSign,\r\n  TrendingUp,\r\n  Eye,\r\n  Download,\r\n  RefreshCw\r\n} from 'lucide-react';\r\n\r\nconst GeneralLedger = () => {\r\n  const [journalEntries, setJournalEntries] = useState([]);\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [filteredEntries, setFilteredEntries] = useState([]);\r\n  const [selectedEntry, setSelectedEntry] = useState(null);\r\n  const [isAddingEntry, setIsAddingEntry] = useState(false);\r\n  const [loading, setLoading] = useState({\r\n    entries: false,\r\n    accounts: false\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    entries: null,\r\n    accounts: null\r\n  });\r\n  const [filters, setFilters] = useState({\r\n    dateFrom: '',\r\n    dateTo: '',\r\n    accountId: '',\r\n    transactionType: 'all',\r\n    searchTerm: ''\r\n  });\r\n  const [trialBalance, setTrialBalance] = useState([]);\r\n  const [showTrialBalance, setShowTrialBalance] = useState(false);\r\n  const [newEntry, setNewEntry] = useState({\r\n    date: new Date().toISOString().split('T')[0],\r\n    description: '',\r\n    reference: '',\r\n    entries: [\r\n      { accountId: '', debit: 0, credit: 0, description: '' },\r\n      { accountId: '', debit: 0, credit: 0, description: '' }\r\n    ]\r\n  });\r\n\r\n  // API Configuration\r\n  const API_BASE_URL = 'https://api-pos.hulmsolutions.com/POS/accounting2/31fc8df0-61db-41e5-bb67-070fde367ea1/orders?start=0&size=200';\r\n  const API_BASE_URL_CHARTS_OF_ACCOUNTS = 'http://localhost:8080/api/accounts';\r\n\r\n  // Fetch order data from API\r\n  const fetchOrderData = async () => {\r\n    try {\r\n      const response = await fetch(API_BASE_URL, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': 'Bearer Hamid',\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`API request failed with status ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error fetching order data:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Format date from API format\r\n  const formatDateFromCreatedAt = (createdAt) => {\r\n    try {\r\n      const parts = createdAt.split('.');\r\n      if (parts.length >= 3) {\r\n        return `${parts[0]}-${parts[1].padStart(2, '0')}-${parts[2].padStart(2, '0')}`;\r\n      }\r\n      return new Date().toISOString().split('T')[0];\r\n    } catch (error) {\r\n      return new Date().toISOString().split('T')[0];\r\n    }\r\n  };\r\n\r\n  // Fetch Charts of Accounts from API\r\n  const loadChartsOfAccounts = useCallback(async () => {\r\n    setLoading(prev => ({ ...prev, accounts: true }));\r\n    setErrors(prev => ({ ...prev, accounts: null }));\r\n    \r\n    try {\r\n      const response = await fetch(API_BASE_URL_CHARTS_OF_ACCOUNTS, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to fetch accounts: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log('Raw accounts data from API:', data);\r\n      \r\n      const formattedAccounts = data\r\n        .filter(account => account[4] === 'account')\r\n        .map(account => ({\r\n          id: account[0],\r\n          code: account[1],\r\n          name: account[2],\r\n          type: account[3],\r\n          category: account[4],\r\n          parentId: account[5],\r\n          level: account[6],\r\n          description: account[7] || ''\r\n        }))\r\n        .sort((a, b) => a.code.localeCompare(b.code));\r\n      \r\n      console.log('Formatted accounts:', formattedAccounts);\r\n      setAccounts(formattedAccounts);\r\n      setLoading(prev => ({ ...prev, accounts: false }));\r\n      \r\n      return formattedAccounts;\r\n    } catch (error) {\r\n      console.error('Error loading charts of accounts:', error);\r\n      setErrors(prev => ({ ...prev, accounts: error.message }));\r\n      setLoading(prev => ({ ...prev, accounts: false }));\r\n      \r\n      const fallbackAccounts = [\r\n        { id: '1111', code: '1111', name: 'Petty Cash', type: 'assets', category: 'account' },\r\n        { id: '1112', code: '1112', name: 'Bank - Main Account', type: 'assets', category: 'account' },\r\n        { id: '1120', code: '1120', name: 'Accounts Receivable', type: 'assets', category: 'account' },\r\n        { id: '1130', code: '1130', name: 'Inventory', type: 'assets', category: 'account' },\r\n        { id: '2110', code: '2110', name: 'Accounts Payable', type: 'liabilities', category: 'account' },\r\n        { id: '2130', code: '2130', name: 'Sales Tax Payable', type: 'liabilities', category: 'account' },\r\n        { id: '4100', code: '4100', name: 'Sales Revenue', type: 'revenue', category: 'account' },\r\n        { id: '4110', code: '4110', name: 'Electronics Sales', type: 'revenue', category: 'account' },\r\n        { id: '5100', code: '5100', name: 'Cost of Goods Sold', type: 'expenses', category: 'account' },\r\n        { id: '5200', code: '5200', name: 'Purchase Expenses', type: 'expenses', category: 'account' }\r\n      ];\r\n      \r\n      setAccounts(fallbackAccounts);\r\n      return fallbackAccounts;\r\n    }\r\n  }, []);\r\n\r\n  // Convert Sales Order to Journal Entry\r\n  const convertSalesOrderToJournalEntry = useCallback((order, accountsList) => {\r\n    const entries = [];\r\n    \r\n    const subTotal = parseFloat(order.subTotal) || 0;\r\n    const taxAmount = parseFloat(order.taxAmount) || 0;\r\n    const total = parseFloat(order.total) || 0;\r\n    \r\n    if (!order.paid || !order.fulfilled || order.status !== 'Closed') {\r\n      return null;\r\n    }\r\n    \r\n    const findAccountByType = (type) => {\r\n      const matchingAccount = accountsList.find(acc => \r\n        acc.type.toLowerCase() === type.toLowerCase()\r\n      );\r\n      return matchingAccount || { \r\n        id: 'UNKNOWN', \r\n        name: `Unknown ${type} Account`, \r\n        code: 'N/A' \r\n      };\r\n    };\r\n    \r\n    const cashAccount = findAccountByType('assets');\r\n    entries.push({\r\n      accountId: cashAccount.id,\r\n      accountName: cashAccount.name,\r\n      accountCode: cashAccount.code,\r\n      debit: total,\r\n      credit: 0,\r\n      description: `Cash received from Order #${order.orderId} - ${order.lineItems.map(item => item.productName).join(', ')}`\r\n    });\r\n\r\n    if (subTotal > 0) {\r\n      const revenueAccount = findAccountByType('revenue');\r\n      entries.push({\r\n        accountId: revenueAccount.id,\r\n        accountName: revenueAccount.name,\r\n        accountCode: revenueAccount.code,\r\n        debit: 0,\r\n        credit: subTotal,\r\n        description: `Revenue from Order #${order.orderId}`\r\n      });\r\n    }\r\n\r\n    if (taxAmount > 0) {\r\n      const taxAccount = findAccountByType('liabilities');\r\n      entries.push({\r\n        accountId: taxAccount.id,\r\n        accountName: taxAccount.name,\r\n        accountCode: taxAccount.code,\r\n        debit: 0,\r\n        credit: taxAmount,\r\n        description: `${order.taxRate}% tax collected on Order #${order.orderId}`\r\n      });\r\n    }\r\n\r\n    let totalCOGS = 0;\r\n    order.lineItems.forEach(item => {\r\n      if (item.fulfilled && item.status === 'Fulfilled') {\r\n        const costPrice = parseFloat(item.costPrice) || 0;\r\n        const quantity = parseFloat(item.quantity) || 0;\r\n        const itemCOGS = costPrice * quantity;\r\n        totalCOGS += itemCOGS;\r\n      }\r\n    });\r\n\r\n    if (totalCOGS > 0) {\r\n      const cogsAccount = findAccountByType('expenses');\r\n      entries.push({\r\n        accountId: cogsAccount.id,\r\n        accountName: cogsAccount.name,\r\n        accountCode: cogsAccount.code,\r\n        debit: totalCOGS,\r\n        credit: 0,\r\n        description: `COGS for Order #${order.orderId}`\r\n      });\r\n\r\n      const inventoryAccount = findAccountByType('assets');\r\n      entries.push({\r\n        accountId: inventoryAccount.id,\r\n        accountName: inventoryAccount.name,\r\n        accountCode: inventoryAccount.code,\r\n        debit: 0,\r\n        credit: totalCOGS,\r\n        description: `Inventory reduction - Order #${order.orderId}`\r\n      });\r\n    }\r\n\r\n    const totalDebit = entries.reduce((sum, entry) => sum + parseFloat(entry.debit || 0), 0);\r\n    const totalCredit = entries.reduce((sum, entry) => sum + parseFloat(entry.credit || 0), 0);\r\n\r\n    return {\r\n      id: `JE-ORDER-${order.orderId}`,\r\n      date: formatDateFromCreatedAt(order.createdAt),\r\n      description: `Sales Order #${order.orderId} - ${order.lineItems.map(item => `${item.productName} (${item.quantity})`).join(', ')}`,\r\n      reference: `ORDER-${order.orderId}`,\r\n      transactionType: 'automatic',\r\n      source: 'POS Sales',\r\n      status: 'posted',\r\n      entries: entries,\r\n      totalDebit: Math.round(totalDebit * 100) / 100,\r\n      totalCredit: Math.round(totalCredit * 100) / 100,\r\n      createdAt: order.createdAt,\r\n      originalOrder: order\r\n    };\r\n  }, []);\r\n\r\n  // Load Journal Entries from API and Local Storage\r\n  const loadJournalEntriesFromAPI = useCallback(async () => {\r\n    setLoading(prev => ({ ...prev, entries: true }));\r\n    setErrors(prev => ({ ...prev, entries: null }));\r\n    \r\n    try {\r\n      const salesOrders = await fetchOrderData();\r\n      \r\n      if (!salesOrders) {\r\n        throw new Error('Failed to fetch sales orders');\r\n      }\r\n      \r\n      const journalEntriesFromSales = salesOrders\r\n        .filter(order => order.paid && order.fulfilled && order.status === 'Closed')\r\n        .map(order => convertSalesOrderToJournalEntry(order, accounts))\r\n        .filter(entry => entry !== null);\r\n      \r\n      let manualEntries = [];\r\n      try {\r\n        const storedEntries = localStorage.getItem('manualJournalEntries');\r\n        manualEntries = storedEntries ? JSON.parse(storedEntries) : [];\r\n      } catch (error) {\r\n        console.warn('Error loading manual entries from localStorage:', error);\r\n        manualEntries = [];\r\n      }\r\n      \r\n      const allEntries = [...journalEntriesFromSales, ...manualEntries];\r\n      \r\n      setJournalEntries(allEntries);\r\n      setFilteredEntries(allEntries);\r\n      setLoading(prev => ({ ...prev, entries: false }));\r\n    } catch (error) {\r\n      console.error('Error loading journal entries:', error);\r\n      setErrors(prev => ({ ...prev, entries: error.message }));\r\n      setLoading(prev => ({ ...prev, entries: false }));\r\n    }\r\n  }, [accounts, convertSalesOrderToJournalEntry]);\r\n\r\n  // Filter entries\r\n  const filterEntries = useCallback(() => {\r\n    let filtered = [...journalEntries];\r\n\r\n    if (filters.dateFrom) {\r\n      filtered = filtered.filter(entry => entry.date >= filters.dateFrom);\r\n    }\r\n    \r\n    if (filters.dateTo) {\r\n      filtered = filtered.filter(entry => entry.date <= filters.dateTo);\r\n    }\r\n    \r\n    if (filters.accountId) {\r\n      filtered = filtered.filter(entry => {\r\n        return entry.entries.some(e => e.accountId === filters.accountId);\r\n      });\r\n    }\r\n    \r\n    if (filters.transactionType !== 'all') {\r\n      filtered = filtered.filter(entry => entry.transactionType === filters.transactionType);\r\n    }\r\n    \r\n    if (filters.searchTerm) {\r\n      const term = filters.searchTerm.toLowerCase();\r\n      filtered = filtered.filter(entry => \r\n        entry.description.toLowerCase().includes(term) ||\r\n        entry.reference.toLowerCase().includes(term) ||\r\n        entry.entries.some(e => e.description.toLowerCase().includes(term))\r\n      );\r\n    }\r\n\r\n    setFilteredEntries(filtered);\r\n  }, [journalEntries, filters]);\r\n\r\n  // Generate trial balance\r\n  const generateTrialBalance = useCallback(() => {\r\n    const balances = {};\r\n    \r\n    const requiredAccountIds = new Set();\r\n    \r\n    journalEntries.forEach(entry => {\r\n      if (entry.status === 'posted') {\r\n        entry.entries.forEach(entryLine => {\r\n          if (entryLine.accountId) {\r\n            requiredAccountIds.add(entryLine.accountId);\r\n          }\r\n        });\r\n      }\r\n    });\r\n    \r\n    const accountTypesMap = {};\r\n    accounts.forEach(account => {\r\n      accountTypesMap[account.id] = account.type;\r\n      accountTypesMap[account.code] = account.type;\r\n    });\r\n    \r\n    accounts.forEach(account => {\r\n      if (account.category !== 'header') {\r\n        balances[account.id] = {\r\n          accountId: account.id,\r\n          accountCode: account.code,\r\n          accountName: account.name,\r\n          accountType: account.type || 'unknown',\r\n          debit: 0,\r\n          credit: 0,\r\n          balance: 0\r\n        };\r\n      }\r\n    });\r\n    \r\n    requiredAccountIds.forEach(accountId => {\r\n      if (!balances[accountId]) {\r\n        let accountName = '';\r\n        let accountType = '';\r\n        \r\n        journalEntries.forEach(entry => {\r\n          entry.entries.forEach(entryLine => {\r\n            if (entryLine.accountId === accountId) {\r\n              if (entryLine.accountName) accountName = entryLine.accountName;\r\n            }\r\n          });\r\n        });\r\n        \r\n        const prefix = accountId.toString().substring(0, 1);\r\n        if (prefix === '1') accountType = 'assets';\r\n        else if (prefix === '2') accountType = 'liabilities';\r\n        else if (prefix === '3') accountType = 'equity';\r\n        else if (prefix === '4') accountType = 'revenue';\r\n        else if (prefix === '5') accountType = 'expenses';\r\n        else accountType = accountTypesMap[accountId] || 'unknown';\r\n        \r\n        balances[accountId] = {\r\n          accountId: accountId,\r\n          accountCode: accountId,\r\n          accountName: accountName || `Account ${accountId}`,\r\n          accountType: accountType,\r\n          debit: 0,\r\n          credit: 0,\r\n          balance: 0\r\n        };\r\n      }\r\n    });\r\n    \r\n    journalEntries.forEach(entry => {\r\n      if (entry.status === 'posted') {\r\n        entry.entries.forEach(entryLine => {\r\n          const accountId = entryLine.accountId;\r\n          if (balances[accountId]) {\r\n            balances[accountId].debit += parseFloat(entryLine.debit || 0);\r\n            balances[accountId].credit += parseFloat(entryLine.credit || 0);\r\n            \r\n            if (entryLine.accountName && !balances[accountId].accountName) {\r\n              balances[accountId].accountName = entryLine.accountName;\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    Object.values(balances).forEach(account => {\r\n      if (account.accountType === 'assets' || account.accountType === 'expenses') {\r\n        account.balance = account.debit - account.credit;\r\n      } else {\r\n        account.balance = account.credit - account.debit;\r\n      }\r\n    });\r\n\r\n    const trialBalanceData = Object.values(balances)\r\n      .filter(account => account.debit > 0 || account.credit > 0)\r\n      .sort((a, b) => a.accountCode.localeCompare(b.accountCode));\r\n    \r\n    setTrialBalance(trialBalanceData);\r\n    setShowTrialBalance(true);\r\n  }, [accounts, journalEntries]);\r\n\r\n  // Helper functions for entry management\r\n  const addEntryLine = () => {\r\n    setNewEntry({\r\n      ...newEntry,\r\n      entries: [...newEntry.entries, { accountId: '', debit: 0, credit: 0, description: '' }]\r\n    });\r\n  };\r\n\r\n  const removeEntryLine = (index) => {\r\n    if (newEntry.entries.length > 2) {\r\n      const updatedEntries = newEntry.entries.filter((_, i) => i !== index);\r\n      setNewEntry({ ...newEntry, entries: updatedEntries });\r\n    }\r\n  };\r\n\r\n  const updateEntryLine = (index, field, value) => {\r\n    const updatedEntries = [...newEntry.entries];\r\n    updatedEntries[index] = { ...updatedEntries[index], [field]: value };\r\n    setNewEntry({ ...newEntry, entries: updatedEntries });\r\n  };\r\n\r\n  const calculateTotals = (entries) => {\r\n    const totalDebit = entries.reduce((sum, entry) => sum + (parseFloat(entry.debit) || 0), 0);\r\n    const totalCredit = entries.reduce((sum, entry) => sum + (parseFloat(entry.credit) || 0), 0);\r\n    return { totalDebit, totalCredit };\r\n  };\r\n\r\n  const isBalanced = (entries) => {\r\n    const { totalDebit, totalCredit } = calculateTotals(entries);\r\n    return Math.abs(totalDebit - totalCredit) < 0.01;\r\n  };\r\n\r\n  const saveJournalEntry = () => {\r\n    if (!newEntry.description || !newEntry.entries.every(e => e.accountId)) {\r\n      alert('Please fill in all required fields');\r\n      return;\r\n    }\r\n\r\n    if (!isBalanced(newEntry.entries)) {\r\n      alert('Journal entry must be balanced - total debits must equal total credits');\r\n      return;\r\n    }\r\n\r\n    const { totalDebit, totalCredit } = calculateTotals(newEntry.entries);\r\n    \r\n    const entriesWithNames = newEntry.entries.map(entry => ({\r\n      ...entry,\r\n      accountName: accounts.find(acc => acc.id === entry.accountId)?.name || '',\r\n      debit: parseFloat(entry.debit) || 0,\r\n      credit: parseFloat(entry.credit) || 0\r\n    }));\r\n\r\n    const journalEntry = {\r\n      id: `JE-MANUAL-${Date.now()}`,\r\n      date: newEntry.date,\r\n      description: newEntry.description,\r\n      reference: newEntry.reference || `MAN${Date.now()}`,\r\n      transactionType: 'manual',\r\n      source: 'Manual',\r\n      status: 'posted',\r\n      entries: entriesWithNames,\r\n      totalDebit,\r\n      totalCredit,\r\n      createdAt: new Date().toISOString()\r\n    };\r\n\r\n    try {\r\n      const existingManualEntries = JSON.parse(localStorage.getItem('manualJournalEntries') || '[]');\r\n      const updatedManualEntries = [...existingManualEntries, journalEntry];\r\n      localStorage.setItem('manualJournalEntries', JSON.stringify(updatedManualEntries));\r\n    } catch (error) {\r\n      console.warn('Could not save to localStorage:', error);\r\n    }\r\n\r\n    setJournalEntries([...journalEntries, journalEntry]);\r\n    \r\n    setNewEntry({\r\n      date: new Date().toISOString().split('T')[0],\r\n      description: '',\r\n      reference: '',\r\n      entries: [\r\n        { accountId: '', debit: 0, credit: 0, description: '' },\r\n        { accountId: '', debit: 0, credit: 0, description: '' }\r\n      ]\r\n    });\r\n    setIsAddingEntry(false);\r\n  };\r\n\r\n  const getAccountName = useCallback((accountId) => {\r\n    const account = accounts.find(acc => acc.id === accountId || acc.code === accountId);\r\n    \r\n    if (account) {\r\n      return `${account.code} - ${account.name}`;\r\n    }\r\n    \r\n    let accountName = '';\r\n    \r\n    journalEntries.forEach(entry => {\r\n      entry.entries.forEach(entryLine => {\r\n        if (entryLine.accountId === accountId && entryLine.accountName) {\r\n          accountName = entryLine.accountName;\r\n        }\r\n      });\r\n    });\r\n    \r\n    if (accountName) {\r\n      return `${accountId} - ${accountName}`;\r\n    }\r\n    \r\n    const prefix = accountId.toString().substring(0, 1);\r\n    let accountType = '';\r\n    \r\n    if (prefix === '1') accountType = 'Assets';\r\n    else if (prefix === '2') accountType = 'Liabilities';\r\n    else if (prefix === '3') accountType = 'Equity';\r\n    else if (prefix === '4') accountType = 'Revenue';\r\n    else if (prefix === '5') accountType = 'Expenses';\r\n    \r\n    return accountType ? `${accountId} - ${accountType} Account` : `${accountId} - Unknown Account`;\r\n  }, [accounts, journalEntries]);\r\n\r\n  // useEffect hooks\r\n  useEffect(() => {\r\n    loadChartsOfAccounts();\r\n  }, [loadChartsOfAccounts]);\r\n\r\n  useEffect(() => {\r\n    if (accounts.length > 0) {\r\n      loadJournalEntriesFromAPI();\r\n    }\r\n  }, [accounts, loadJournalEntriesFromAPI]);\r\n\r\n  useEffect(() => {\r\n    if (journalEntries.length > 0) {\r\n      filterEntries();\r\n    }\r\n  }, [journalEntries, filters, filterEntries]);\r\n\r\n  const { totalDebit, totalCredit } = calculateTotals(newEntry.entries);\r\n  const entryIsBalanced = isBalanced(newEntry.entries);\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto p-6 bg-white\">\r\n      {/* Header */}\r\n      <div className=\"mb-8\">\r\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-2 flex items-center\">\r\n          <Book className=\"mr-3 text-emerald-600\" />\r\n          General Ledger\r\n        </h1>\r\n        <p className=\"text-gray-600\">Real-time transaction recording and journal entry management</p>\r\n        \r\n        {/* Show loading or error messages for accounts */}\r\n        {accountsLoading && (\r\n          <div className=\"mt-2 p-2 bg-blue-50 text-blue-700 rounded-md text-sm flex items-center\">\r\n            <RefreshCw className=\"animate-spin mr-2\" size={16} />\r\n            Loading chart of accounts...\r\n          </div>\r\n        )}\r\n        \r\n        {accountsError && (\r\n          <div className=\"mt-2 p-2 bg-red-50 text-red-700 rounded-md text-sm flex items-center\">\r\n            <AlertCircle className=\"mr-2\" size={16} />\r\n            Error loading accounts: {accountsError}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Quick Stats */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\r\n        <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-blue-600 text-sm font-medium\">Total Entries</p>\r\n              <p className=\"text-2xl font-bold text-blue-900\">{journalEntries.length}</p>\r\n            </div>\r\n            <FileText className=\"text-blue-600\" size={24} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-green-50 p-4 rounded-lg border border-green-200\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-green-600 text-sm font-medium\">POS Entries</p>\r\n              <p className=\"text-2xl font-bold text-green-900\">\r\n                {journalEntries.filter(e => e.source === 'POS Sales').length}\r\n              </p>\r\n            </div>\r\n            <TrendingUp className=\"text-green-600\" size={24} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-orange-50 p-4 rounded-lg border border-orange-200\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-orange-600 text-sm font-medium\">Manual Entries</p>\r\n              <p className=\"text-2xl font-bold text-orange-900\">\r\n                {journalEntries.filter(e => e.transactionType === 'manual').length}\r\n              </p>\r\n            </div>\r\n            <Edit className=\"text-orange-600\" size={24} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-purple-50 p-4 rounded-lg border border-purple-200\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-purple-600 text-sm font-medium\">Total Value</p>\r\n              <p className=\"text-2xl font-bold text-purple-900\">\r\n                PKR {journalEntries.reduce((sum, entry) => sum + entry.totalDebit, 0).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n              </p>\r\n            </div>\r\n            <DollarSign className=\"text-purple-600\" size={24} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Controls */}\r\n      <div className=\"flex flex-wrap items-center justify-between gap-4 mb-6\">\r\n        <div className=\"flex flex-wrap items-center gap-4\">\r\n          {/* Date Filters */}\r\n          <div className=\"flex items-center space-x-2\">\r\n            <Calendar size={16} className=\"text-gray-400\" />\r\n            <input\r\n              type=\"date\"\r\n              value={filters.dateFrom}\r\n              onChange={(e) => setFilters({ ...filters, dateFrom: e.target.value })}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n              placeholder=\"From\"\r\n            />\r\n            <span className=\"text-gray-500\">to</span>\r\n            <input\r\n              type=\"date\"\r\n              value={filters.dateTo}\r\n              onChange={(e) => setFilters({ ...filters, dateTo: e.target.value })}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n              placeholder=\"To\"\r\n            />\r\n          </div>\r\n\r\n          {/* Account Filter */}\r\n          <div className=\"relative\">\r\n            <Filter className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n            <select\r\n              value={filters.accountId}\r\n              onChange={(e) => setFilters({ ...filters, accountId: e.target.value })}\r\n              className=\"pl-10 pr-8 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n            >\r\n              <option value=\"\">All Accounts</option>\r\n              \r\n              {/* Separate headers for better organization */}\r\n              {accounts.length > 0 && (\r\n                <>\r\n                  {/* Assets */}\r\n                  <optgroup label=\"Assets\">\r\n                    {accounts\r\n                      .filter(acc => acc.type === 'assets' || acc.type.toLowerCase() === 'assets')\r\n                      .map(account => (\r\n                        <option key={account.id} value={account.id}>\r\n                          {account.code} - {account.name}\r\n                        </option>\r\n                      ))}\r\n                  </optgroup>\r\n                  \r\n                  {/* Liabilities */}\r\n                  <optgroup label=\"Liabilities\">\r\n                    {accounts\r\n                      .filter(acc => acc.type === 'liabilities' || acc.type.toLowerCase() === 'liabilities')\r\n                      .map(account => (\r\n                        <option key={account.id} value={account.id}>\r\n                          {account.code} - {account.name}\r\n                        </option>\r\n                      ))}\r\n                  </optgroup>\r\n                  \r\n                  {/* Equity */}\r\n                  <optgroup label=\"Equity\">\r\n                    {accounts\r\n                      .filter(acc => acc.type === 'equity' || acc.type.toLowerCase() === 'equity')\r\n                      .map(account => (\r\n                        <option key={account.id} value={account.id}>\r\n                          {account.code} - {account.name}\r\n                        </option>\r\n                      ))}\r\n                  </optgroup>\r\n                  \r\n                  {/* Revenue */}\r\n                  <optgroup label=\"Revenue\">\r\n                    {accounts\r\n                      .filter(acc => acc.type === 'revenue' || acc.type.toLowerCase() === 'revenue')\r\n                      .map(account => (\r\n                        <option key={account.id} value={account.id}>\r\n                          {account.code} - {account.name}\r\n                        </option>\r\n                      ))}\r\n                  </optgroup>\r\n                  \r\n                  {/* Expenses */}\r\n                  <optgroup label=\"Expenses\">\r\n                    {accounts\r\n                      .filter(acc => acc.type === 'expenses' || acc.type.toLowerCase() === 'expenses')\r\n                      .map(account => (\r\n                        <option key={account.id} value={account.id}>\r\n                          {account.code} - {account.name}\r\n                        </option>\r\n                      ))}\r\n                  </optgroup>\r\n                  \r\n                  {/* Other - for any accounts that don't fit the main categories */}\r\n                  {accounts.filter(acc => \r\n                    !['assets', 'liabilities', 'equity', 'revenue', 'expenses'].includes(acc.type.toLowerCase())\r\n                  ).length > 0 && (\r\n                    <optgroup label=\"Other\">\r\n                      {accounts\r\n                        .filter(acc => \r\n                          !['assets', 'liabilities', 'equity', 'revenue', 'expenses'].includes(acc.type.toLowerCase())\r\n                        )\r\n                        .map(account => (\r\n                          <option key={account.id} value={account.id}>\r\n                            {account.code} - {account.name}\r\n                          </option>\r\n                        ))}\r\n                    </optgroup>\r\n                  )}\r\n                </>\r\n              )}\r\n              \r\n              {accounts.length === 0 && (\r\n                <option disabled>No accounts available</option>\r\n              )}\r\n            </select>\r\n          </div>\r\n\r\n          {/* Transaction Type Filter */}\r\n          <select\r\n            value={filters.transactionType}\r\n            onChange={(e) => setFilters({ ...filters, transactionType: e.target.value })}\r\n            className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n          >\r\n            <option value=\"all\">All Types</option>\r\n            <option value=\"automatic\">POS Sales</option>\r\n            <option value=\"manual\">Manual</option>\r\n          </select>\r\n\r\n          {/* Search */}\r\n          <div className=\"relative\">\r\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search entries...\"\r\n              value={filters.searchTerm}\r\n              onChange={(e) => setFilters({ ...filters, searchTerm: e.target.value })}\r\n              className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex space-x-3\">\r\n          <button\r\n            onClick={loadJournalEntriesFromAPI}\r\n            disabled={loading}\r\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2 disabled:bg-gray-400\"\r\n          >\r\n            {loading ? <RefreshCw className=\"animate-spin\" size={16} /> : <RefreshCw size={16} />}\r\n            <span>Refresh from API</span>\r\n          </button>\r\n          <button\r\n            onClick={loadChartsOfAccounts}\r\n            disabled={accountsLoading}\r\n            className=\"px-4 py-2 bg-teal-600 text-white rounded-lg hover:bg-teal-700 flex items-center space-x-2 disabled:bg-gray-400\"\r\n          >\r\n            {accountsLoading ? <RefreshCw className=\"animate-spin\" size={16} /> : <RefreshCw size={16} />}\r\n            <span>Refresh Accounts</span>\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              // Reset all filters\r\n              setFilters({\r\n                dateFrom: '',\r\n                dateTo: '',\r\n                accountId: '',\r\n                transactionType: 'all',\r\n                searchTerm: ''\r\n              });\r\n              // Re-apply filtering to show all entries\r\n              setFilteredEntries([...journalEntries]);\r\n            }}\r\n            className=\"px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 flex items-center space-x-2\"\r\n          >\r\n            <X size={16} />\r\n            <span>Clear Filters</span>\r\n          </button>\r\n          <button\r\n            onClick={() => setIsAddingEntry(true)}\r\n            className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 flex items-center space-x-2\"\r\n          >\r\n            <Plus size={16} />\r\n            <span>Add Entry</span>\r\n          </button>\r\n          <button\r\n            onClick={generateTrialBalance}\r\n            className=\"px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 flex items-center space-x-2\"\r\n          >\r\n            <FileText size={16} />\r\n            <span>Trial Balance</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Journal Entry Form */}\r\n      {isAddingEntry && (\r\n        <div className=\"mb-8 p-6 bg-gray-50 rounded-lg border\">\r\n          <h3 className=\"text-lg font-semibold mb-4\">Add Manual Journal Entry</h3>\r\n          \r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Date *</label>\r\n              <input\r\n                type=\"date\"\r\n                value={newEntry.date}\r\n                onChange={(e) => setNewEntry({ ...newEntry, date: e.target.value })}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Description *</label>\r\n              <input\r\n                type=\"text\"\r\n                value={newEntry.description}\r\n                onChange={(e) => setNewEntry({ ...newEntry, description: e.target.value })}\r\n                placeholder=\"Enter description\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Reference</label>\r\n              <input\r\n                type=\"text\"\r\n                value={newEntry.reference}\r\n                onChange={(e) => setNewEntry({ ...newEntry, reference: e.target.value })}\r\n                placeholder=\"Reference number\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Entry Lines */}\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Journal Entry Lines</label>\r\n            <div className=\"space-y-3\">\r\n              {newEntry.entries.map((entry, index) => (\r\n                <div key={index} className=\"grid grid-cols-12 gap-2 items-center bg-white p-3 rounded border\">\r\n                  <div className=\"col-span-4\">\r\n                    <select\r\n                      value={entry.accountId}\r\n                      onChange={(e) => updateEntryLine(index, 'accountId', e.target.value)}\r\n                      className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n                    >\r\n                      <option value=\"\">Select Account</option>\r\n                      \r\n                      {accounts.length > 0 && (\r\n                        <>\r\n                          {/* Assets */}\r\n                          <optgroup label=\"Assets\">\r\n                            {accounts\r\n                              .filter(acc => acc.type === 'assets' || acc.type.toLowerCase() === 'assets')\r\n                              .map(account => (\r\n                                <option key={account.id} value={account.id}>\r\n                                  {account.code} - {account.name}\r\n                                </option>\r\n                              ))}\r\n                          </optgroup>\r\n                          \r\n                          {/* Liabilities */}\r\n                          <optgroup label=\"Liabilities\">\r\n                            {accounts\r\n                              .filter(acc => acc.type === 'liabilities' || acc.type.toLowerCase() === 'liabilities')\r\n                              .map(account => (\r\n                                <option key={account.id} value={account.id}>\r\n                                  {account.code} - {account.name}\r\n                                </option>\r\n                              ))}\r\n                          </optgroup>\r\n                          \r\n                          {/* Equity */}\r\n                          <optgroup label=\"Equity\">\r\n                            {accounts\r\n                              .filter(acc => acc.type === 'equity' || acc.type.toLowerCase() === 'equity')\r\n                              .map(account => (\r\n                                <option key={account.id} value={account.id}>\r\n                                  {account.code} - {account.name}\r\n                                </option>\r\n                              ))}\r\n                          </optgroup>\r\n                          \r\n                          {/* Revenue */}\r\n                          <optgroup label=\"Revenue\">\r\n                            {accounts\r\n                              .filter(acc => acc.type === 'revenue' || acc.type.toLowerCase() === 'revenue')\r\n                              .map(account => (\r\n                                <option key={account.id} value={account.id}>\r\n                                  {account.code} - {account.name}\r\n                                </option>\r\n                              ))}\r\n                          </optgroup>\r\n                          \r\n                          {/* Expenses */}\r\n                          <optgroup label=\"Expenses\">\r\n                            {accounts\r\n                              .filter(acc => acc.type === 'expenses' || acc.type.toLowerCase() === 'expenses')\r\n                              .map(account => (\r\n                                <option key={account.id} value={account.id}>\r\n                                  {account.code} - {account.name}\r\n                                </option>\r\n                              ))}\r\n                          </optgroup>\r\n                        </>\r\n                      )}\r\n                      \r\n                      {accounts.length === 0 && (\r\n                        <option disabled>No accounts available</option>\r\n                      )}\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"col-span-3\">\r\n                    <input\r\n                      type=\"text\"\r\n                      value={entry.description}\r\n                      onChange={(e) => updateEntryLine(index, 'description', e.target.value)}\r\n                      placeholder=\"Description\"\r\n                      className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-span-2\">\r\n                    <input\r\n                      type=\"number\"\r\n                      step=\"0.01\"\r\n                      value={entry.debit}\r\n                      onChange={(e) => updateEntryLine(index, 'debit', e.target.value)}\r\n                      placeholder=\"Debit\"\r\n                      className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-span-2\">\r\n                    <input\r\n                      type=\"number\"\r\n                      step=\"0.01\"\r\n                      value={entry.credit}\r\n                      onChange={(e) => updateEntryLine(index, 'credit', e.target.value)}\r\n                      placeholder=\"Credit\"\r\n                      className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-emerald-500\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-span-1\">\r\n                    {newEntry.entries.length > 2 && (\r\n                      <button\r\n                        onClick={() => removeEntryLine(index)}\r\n                        className=\"p-1 text-red-600 hover:bg-red-100 rounded\"\r\n                      >\r\n                        <Trash2 size={14} />\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"flex justify-between items-center mt-3\">\r\n              <button\r\n                onClick={addEntryLine}\r\n                className=\"px-3 py-1 text-sm bg-gray-200 text-gray-700 rounded hover:bg-gray-300 flex items-center space-x-1\"\r\n              >\r\n                <Plus size={14} />\r\n                <span>Add Line</span>\r\n              </button>\r\n\r\n              <div className=\"flex items-center space-x-4\">\r\n                <div className=\"text-sm\">\r\n                  <span className=\"font-medium\">Total Debit: PKR {totalDebit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}</span>\r\n                  <span className=\"mx-2\">|</span>\r\n                  <span className=\"font-medium\">Total Credit: PKR {totalCredit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}</span>\r\n                </div>\r\n                {entryIsBalanced ? (\r\n                  <div className=\"flex items-center text-green-600\">\r\n                    <CheckCircle size={16} className=\"mr-1\" />\r\n                    <span className=\"text-sm\">Balanced</span>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"flex items-center text-red-600\">\r\n                    <AlertCircle size={16} className=\"mr-1\" />\r\n                    <span className=\"text-sm\">Not Balanced</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex space-x-3\">\r\n            <button\r\n              onClick={saveJournalEntry}\r\n              disabled={!entryIsBalanced}\r\n              className=\"px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 disabled:bg-gray-400 flex items-center space-x-2\"\r\n            >\r\n              <Save size={16} />\r\n              <span>Save Entry</span>\r\n            </button>\r\n            <button\r\n              onClick={() => setIsAddingEntry(false)}\r\n              className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 flex items-center space-x-2\"\r\n            >\r\n              <X size={16} />\r\n              <span>Cancel</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Journal Entries Table */}\r\n      <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n        <div className=\"px-6 py-4 border-b border-gray-200\">\r\n          <h2 className=\"text-lg font-semibold text-gray-900\">Journal Entries</h2>\r\n          <p className=\"text-sm text-gray-600 mt-1\">\r\n            Showing {filteredEntries.length} of {journalEntries.length} entries\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"w-full\">\r\n            <thead className=\"bg-gray-50\">\r\n              <tr>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Entry ID\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Date\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Description\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Reference\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Source\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Amount\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Status\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Actions\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n              {filteredEntries.map((entry) => (\r\n                <tr key={entry.id} className=\"hover:bg-gray-50\">\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                    {entry.id}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                    {entry.date}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 text-sm text-gray-900 max-w-xs truncate\">\r\n                    {entry.description}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                    {entry.reference}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n                      entry.source === 'POS Sales' ? 'bg-green-100 text-green-800' : \r\n                      entry.source === 'Manual' ? 'bg-orange-100 text-orange-800' :\r\n                      'bg-blue-100 text-blue-800'\r\n                    }`}>\r\n                      {entry.source}\r\n                    </span>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                    PKR {entry.totalDebit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n                      entry.status === 'posted' ? 'bg-blue-100 text-blue-800' : 'bg-yellow-100 text-yellow-800'\r\n                    }`}>\r\n                      {entry.status}\r\n                    </span>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                    <button\r\n                      onClick={() => setSelectedEntry(entry)}\r\n                      className=\"text-emerald-600 hover:text-emerald-900 mr-3\"\r\n                    >\r\n                      <Eye size={16} />\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Entry Details Modal */}\r\n      {selectedEntry && (\r\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n          <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n            <div className=\"px-6 py-4 border-b border-gray-200\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900\">\r\n                  Journal Entry Details - {selectedEntry.id}\r\n                </h3>\r\n                <button\r\n                  onClick={() => setSelectedEntry(null)}\r\n                  className=\"text-gray-400 hover:text-gray-600\"\r\n                >\r\n                  <X size={20} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"px-6 py-4\">\r\n              {/* Entry Header */}\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\r\n                <div>\r\n                  <label className=\"text-sm font-medium text-gray-500\">Date</label>\r\n                  <p className=\"text-sm text-gray-900\">{selectedEntry.date}</p>\r\n                </div>\r\n                <div>\r\n                  <label className=\"text-sm font-medium text-gray-500\">Reference</label>\r\n                  <p className=\"text-sm text-gray-900\">{selectedEntry.reference}</p>\r\n                </div>\r\n                <div>\r\n                  <label className=\"text-sm font-medium text-gray-500\">Description</label>\r\n                  <p className=\"text-sm text-gray-900\">{selectedEntry.description}</p>\r\n                </div>\r\n                <div>\r\n                  <label className=\"text-sm font-medium text-gray-500\">Source</label>\r\n                  <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n                    selectedEntry.source === 'POS Sales' ? 'bg-green-100 text-green-800' : 'bg-orange-100 text-orange-800'\r\n                  }`}>\r\n                    {selectedEntry.source}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Entry Lines */}\r\n              <div className=\"mb-6\">\r\n                <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Account Entries</h4>\r\n                <div className=\"overflow-x-auto\">\r\n                  <table className=\"w-full border border-gray-200 rounded\">\r\n                    <thead className=\"bg-gray-50\">\r\n                      <tr>\r\n                        <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Account</th>\r\n                        <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Description</th>\r\n                        <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Debit</th>\r\n                        <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500\">Credit</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody className=\"divide-y divide-gray-200\">\r\n                      {selectedEntry.entries.map((entryLine, index) => (\r\n                        <tr key={index}>\r\n                          <td className=\"px-4 py-2 text-sm text-gray-900\">\r\n                            {getAccountName(entryLine.accountId)}\r\n                           \r\n                          </td>\r\n                          <td className=\"px-4 py-2 text-sm text-gray-600\">\r\n                            {entryLine.description}\r\n                          </td>\r\n                          <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">\r\n                            {entryLine.debit > 0 ? `${entryLine.debit.toFixed(2)}` : '-'}\r\n                          </td>\r\n                          <td className=\"px-4 py-2 text-sm text-gray-900 text-right\">\r\n                            {entryLine.credit > 0 ? `${entryLine.credit.toFixed(2)}` : '-'}\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                    <tfoot className=\"bg-gray-50\">\r\n                      <tr>\r\n                        <td colSpan=\"2\" className=\"px-4 py-2 text-sm font-medium text-gray-900\">\r\n                          Totals:\r\n                        </td>\r\n                        <td className=\"px-4 py-2 text-sm font-bold text-gray-900 text-right\">\r\n                          PKR {selectedEntry.totalDebit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n                        </td>\r\n                        <td className=\"px-4 py-2 text-sm font-bold text-gray-900 text-right\">\r\n                          PKR {selectedEntry.totalCredit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n                        </td>\r\n                      </tr>\r\n                    </tfoot>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Original Order Info (if available) */}\r\n              {selectedEntry.originalOrder && (\r\n                <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\r\n                  <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Original Sales Order Details</h4>\r\n                  <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\r\n                    <div>\r\n                      <span className=\"font-medium text-gray-500\">Order ID:</span>\r\n                      <p className=\"text-gray-900\">{selectedEntry.originalOrder.orderId}</p>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"font-medium text-gray-500\">Status:</span>\r\n                      <p className=\"text-gray-900\">{selectedEntry.originalOrder.status}</p>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"font-medium text-gray-500\">Payment Status:</span>\r\n                      <p className=\"text-gray-900\">{selectedEntry.originalOrder.paid ? 'Paid' : 'Unpaid'}</p>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"font-medium text-gray-500\">Fulfilled:</span>\r\n                      <p className=\"text-gray-900\">{selectedEntry.originalOrder.fulfilled ? 'Yes' : 'No'}</p>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  {/* Line Items */}\r\n                  <div className=\"mt-4\">\r\n                    <span className=\"font-medium text-gray-500\">Line Items:</span>\r\n                    <div className=\"mt-2 space-y-2\">\r\n                      {selectedEntry.originalOrder.lineItems.map((item, index) => (\r\n                        <div key={index} className=\"text-sm bg-white p-2 rounded border\">\r\n                          <span className=\"font-medium\">{item.productName}</span> - \r\n                          Qty: {item.quantity}, Price: PKR {parseFloat(item.price).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}, \r\n                          Total: PKR {parseFloat(item.total).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n                          {item.taxAmount > 0 && <span className=\"text-gray-500\"> (Tax: PKR {parseFloat(item.taxAmount).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})})</span>}\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* Entry Metadata */}\r\n              <div className=\"text-xs text-gray-500\">\r\n                <p>Created: {new Date(selectedEntry.createdAt).toLocaleString()}</p>\r\n                <p>Status: {selectedEntry.status}</p>\r\n                <p>Type: {selectedEntry.transactionType}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n  {/* Trial Balance Modal */}\r\n{showTrialBalance && (\r\n  <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n    <div className=\"bg-white rounded-lg max-w-5xl w-full max-h-[90vh] overflow-y-auto\">\r\n      <div className=\"px-6 py-4 border-b border-gray-200\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900\">\r\n            Trial Balance - As of {new Date().toLocaleDateString()}\r\n          </h3>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <button\r\n              onClick={() => {\r\n                // Export functionality would go here\r\n                alert('Export functionality would be implemented here');\r\n              }}\r\n              className=\"px-3 py-1 bg-emerald-600 text-white rounded text-sm hover:bg-emerald-700 flex items-center space-x-1\"\r\n            >\r\n              <Download size={14} />\r\n              <span>Export</span>\r\n            </button>\r\n            <button\r\n              onClick={() => setShowTrialBalance(false)}\r\n              className=\"text-gray-400 hover:text-gray-600\"\r\n            >\r\n              <X size={20} />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"px-6 py-4\">\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"w-full\">\r\n            <thead className=\"bg-gray-50\">\r\n              <tr>\r\n                <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Account Code\r\n                </th>\r\n                <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Account Name\r\n                </th>\r\n                <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Type\r\n                </th>\r\n                <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Debit Total\r\n                </th>\r\n                <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Credit Total\r\n                </th>\r\n                <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Balance\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n              {trialBalance.map((item) => (\r\n                <tr key={item.accountId}>\r\n                  <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                    {item.accountCode}\r\n                  </td>\r\n                  <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                    {item.accountName}\r\n                  </td>\r\n                  <td className=\"px-4 py-4 whitespace-nowrap\">\r\n                    <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n                      item.accountType === 'assets' ? 'bg-green-100 text-green-800' :\r\n                      item.accountType === 'liabilities' ? 'bg-red-100 text-red-800' :\r\n                      item.accountType === 'equity' ? 'bg-blue-100 text-blue-800' :\r\n                      item.accountType === 'revenue' ? 'bg-purple-100 text-purple-800' :\r\n                      item.accountType === 'expenses' ? 'bg-orange-100 text-orange-800' :\r\n                      'bg-gray-100 text-gray-800'\r\n                    }`}>\r\n                      {typeof item.accountType === 'string' && item.accountType.length > 0 \r\n                        ? item.accountType.charAt(0).toUpperCase() + item.accountType.slice(1)\r\n                        : 'Unknown'}\r\n                    </span>\r\n                  </td>\r\n                  <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\r\n                    PKR {item.debit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n                  </td>\r\n                  <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\r\n                    PKR {item.credit.toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n                  </td>\r\n                  <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-right\">\r\n                    <span className={item.balance >= 0 ? 'text-green-600' : 'text-red-600'}>\r\n                      PKR {Math.abs(item.balance).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n                      {item.balance < 0 && ' (CR)'}\r\n                    </span>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n            <tfoot className=\"bg-gray-50\">\r\n              <tr>\r\n                <td colSpan=\"3\" className=\"px-4 py-3 text-sm font-bold text-gray-900\">\r\n                  TOTALS:\r\n                </td>\r\n                <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\r\n                  PKR {trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n                </td>\r\n                <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\r\n                  PKR {trialBalance.reduce((sum, acc) => sum + acc.credit, 0).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n                </td>\r\n                <td className=\"px-4 py-3 text-sm font-bold text-gray-900 text-right\">\r\n                  PKR {Math.abs(trialBalance.reduce((sum, acc) => sum + acc.balance, 0)).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n                </td>\r\n              </tr>\r\n            </tfoot>\r\n          </table>\r\n        </div>\r\n        \r\n        {/* Trial Balance Validation */}\r\n        <div className=\"mt-4 p-4 bg-green-50 border border-green-200 rounded-lg\">\r\n          <div className=\"flex items-center\">\r\n            <CheckCircle className=\"text-green-600 mr-2\" size={20} />\r\n            <div>\r\n              <h4 className=\"font-medium text-green-800\">Trial Balance is Balanced</h4>\r\n              <p className=\"text-sm text-green-700\">\r\n                Total Debits = Total Credits = PKR {trialBalance.reduce((sum, acc) => sum + acc.debit, 0).toLocaleString('en-PK', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)}\r\n\r\n      {/* Integration Status */}\r\n      <div className=\"mt-8 grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n        <div className=\"p-4 bg-green-50 border border-green-200 rounded-lg\">\r\n          <div className=\"flex items-center mb-2\">\r\n            <CheckCircle className=\"text-green-600 mr-2\" size={16} />\r\n            <h4 className=\"font-medium text-green-800\">POS API Integration</h4>\r\n          </div>\r\n          <p className=\"text-sm text-green-700\">\r\n            Sales orders automatically create journal entries from live API data\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"p-4 bg-blue-50 border border-blue-200 rounded-lg\">\r\n          <div className=\"flex items-center mb-2\">\r\n            <RefreshCw className=\"text-blue-600 mr-2\" size={16} />\r\n            <h4 className=\"font-medium text-blue-800\">Real-time Sync</h4>\r\n          </div>\r\n          <p className=\"text-sm text-blue-700\">\r\n            Journal entries updated automatically with each sales transaction\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"p-4 bg-orange-50 border border-orange-200 rounded-lg\">\r\n          <div className=\"flex items-center mb-2\">\r\n            <FileText className=\"text-orange-600 mr-2\" size={16} />\r\n            <h4 className=\"font-medium text-orange-800\">Manual Entries</h4>\r\n          </div>\r\n          <p className=\"text-sm text-orange-700\">\r\n            Add adjustments and corrections with full double-entry validation\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GeneralLedger;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}